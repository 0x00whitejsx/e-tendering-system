{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadata.SharedMetadataInfo",
          "name": "_metadata",
          "type": "tuple"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharedMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1546:8147:370:-:0;;;2563:28;;;;;;;;;-1:-1:-1;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:450;1713:19:476;:23;;;3387:66:450;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;216:2:821;3325:201:450;;;198:21:821;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:821;;;338:44;399:19;;3325:201:450;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3651:14;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;581:36:821;;3721:14:450;;569:2:821;554:18;3721:14:450;;;;;;;3647:99;3269:483;1546:8147:370;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102755760003560e01c80638da5cb5b1161014b5780638da5cb5b1461061b5780639010d07c1461063957806391d1485414610659578063938e3d7b1461067957806395d89b411461069957806399a2557a146106ae5780639bcf7a15146106ce578063a217fddf146106ee578063a22cb46514610703578063a2309ff814610723578063a32fa5b314610738578063a7d27d9d14610758578063ac9650d814610778578063acd083f814610444578063ad1eefc5146107a5578063b24f2d39146107e7578063b280f70314610812578063b88d4fde14610837578063c23dc68f1461084a578063c68907de146108b6578063c87b56dd146108cb578063ca15c873146108eb578063d547741f1461090b578063d637ed591461092b578063e6798baa1461095b578063e8a3d4851461096f578063e985e9c51461098457600080fd5b806301ffc9a71461027a57806306fdde03146102af578063079fe40e146102d1578063081812fc146102fe578063095ea7b31461031e57806313af40351461033357806318160ddd1461035357806323a2902b1461037657806323b872dd14610396578063248a9ca3146103a95780632a55205a146103d65780632f2ff15d1461040457806336568abe146104245780633b1475a71461044457806342842e0e1461045957806342966c681461046c57806349c5c5b61461048c5780634cc157df146104ac578063572b6c05146104ee578063600dd5ea1461050e5780636352211e1461052e5780636f4f28371461054e5780636f8934f41461056e57806370a082311461059b57806374bc7db7146105bb5780638462151c146105db57806384bb1e4214610608575b600080fd5b34801561028657600080fd5b5061029a6102953660046145a1565b6109a4565b60405190151581526020015b60405180910390f35b3480156102bb57600080fd5b506102c46109d0565b6040516102a6919061460e565b3480156102dd57600080fd5b506102e6610a6b565b6040516001600160a01b0390911681526020016102a6565b34801561030a57600080fd5b506102e6610319366004614621565b610a7a565b61033161032c36600461465a565b610abe565b005b34801561033f57600080fd5b5061033161034e366004614686565b610ace565b34801561035f57600080fd5b50610368610b07565b6040519081526020016102a6565b34801561038257600080fd5b5061029a6103913660046146b5565b610b27565b6103316103a4366004614732565b610eea565b3480156103b557600080fd5b506103686103c4366004614621565b6000908152600b602052604090205490565b3480156103e257600080fd5b506103f66103f1366004614773565b6110ad565b6040516102a6929190614795565b34801561041057600080fd5b5061033161041f3660046147ae565b6110ea565b34801561043057600080fd5b5061033161043f3660046147ae565b611180565b34801561045057600080fd5b506103686111df565b610331610467366004614732565b6111ee565b34801561047857600080fd5b50610331610487366004614621565b61120e565b34801561049857600080fd5b506103316104a7366004614927565b611219565b3480156104b857600080fd5b506104cc6104c7366004614621565b6114fc565b604080516001600160a01b03909316835261ffff9091166020830152016102a6565b3480156104fa57600080fd5b5061029a610509366004614686565b611567565b34801561051a57600080fd5b5061033161052936600461465a565b611585565b34801561053a57600080fd5b506102e6610549366004614621565b6115b3565b34801561055a57600080fd5b50610331610569366004614686565b6115be565b34801561057a57600080fd5b5061058e610589366004614621565b6115eb565b6040516102a69190614a16565b3480156105a757600080fd5b506103686105b6366004614686565b611748565b3480156105c757600080fd5b506103316105d6366004614adc565b6117a7565b3480156105e757600080fd5b506105fb6105f6366004614686565b611aca565b6040516102a69190614b32565b610331610616366004614b6a565b611af9565b34801561062757600080fd5b506005546001600160a01b03166102e6565b34801561064557600080fd5b506102e6610654366004614773565b611c11565b34801561066557600080fd5b5061029a6106743660046147ae565b611cff565b34801561068557600080fd5b50610331610694366004614bf7565b611d2a565b3480156106a557600080fd5b506102c4611d57565b3480156106ba57600080fd5b506105fb6106c9366004614c2b565b611d6f565b3480156106da57600080fd5b506103316106e9366004614c60565b611d7c565b3480156106fa57600080fd5b50610368600081565b34801561070f57600080fd5b5061033161071e366004614c87565b611dab565b34801561072f57600080fd5b50610368611e4d565b34801561074457600080fd5b5061029a6107533660046147ae565b611e5f565b34801561076457600080fd5b50610331610773366004614cb5565b611eb5565b34801561078457600080fd5b50610798610793366004614ce9565b611ee2565b6040516102a69190614d2a565b3480156107b157600080fd5b506103686107c03660046147ae565b60009182526010602090815260408084206001600160a01b03909316845291905290205490565b3480156107f357600080fd5b506002546001600160a01b03811690600160a01b900461ffff166104cc565b34801561081e57600080fd5b50610827612055565b6040516102a69493929190614d8e565b610331610845366004614ddb565b612291565b34801561085657600080fd5b5061086a610865366004614621565b6122d2565b6040516102a6919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b3480156108c257600080fd5b50610368612319565b3480156108d757600080fd5b506102c46108e6366004614621565b6123bc565b3480156108f757600080fd5b50610368610906366004614621565b612402565b34801561091757600080fd5b506103316109263660046147ae565b61248b565b34801561093757600080fd5b50600d54600e54610946919082565b604080519283526020830191909152016102a6565b34801561096757600080fd5b506001610368565b34801561097b57600080fd5b506102c46124a4565b34801561099057600080fd5b5061029a61099f366004614e46565b612532565b60006109af8261256f565b806109ca575063152a902d60e11b6001600160e01b03198316145b92915050565b60606109da6125bd565b60020180546109e890614e74565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1490614e74565b8015610a615780601f10610a3657610100808354040283529160200191610a61565b820191906000526020600020905b815481529060010190602001808311610a4457829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610a85826125e1565b610a9957610a996333d1c03960e21b61263f565b610aa16125bd565b60009283526006016020525060409020546001600160a01b031690565b610aca82826001612649565b5050565b610ad661270c565b610afb5760405162461bcd60e51b8152600401610af290614ea8565b60405180910390fd5b610b048161271a565b50565b60006001610b136125bd565b60010154610b1f6125bd565b540303919050565b6000868152600f60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610ba690614e74565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd290614e74565b8015610c1f5780601f10610bf457610100808354040283529160200191610c1f565b820191906000526020600020905b815481529060010190602001808311610c0257829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610cff57610cfb610c578780614ed0565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610cac908d0160608e01614686565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061276c565b5094505b8415610d86578560200135600003610d175782610d1d565b85602001355b9250600019866040013503610d325781610d38565b85604001355b9150600019866040013514158015610d6957506000610d5d6080880160608901614686565b6001600160a01b031614155b610d735780610d83565b610d836080870160608801614686565b90505b60008b81526010602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610dbe5750828814155b15610dfe5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610af2565b891580610e13575083610e11828c614f2f565b115b15610e495760405162461bcd60e51b8152600401610af2906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610e5e9190614f2f565b1115610e995760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610af2565b8451421015610edb5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610af2565b50505050509695505050505050565b6000610ef582612830565b6001600160a01b039485169490915081168414610f1b57610f1b62a1148160e81b61263f565b600080610f27846128f2565b91509150610f4d8187610f3861291a565b6001600160a01b039081169116811491141790565b610f7157610f5d8661099f61291a565b610f7157610f71632ce44b5f60e11b61263f565b610f7e8686866001612924565b8015610f8957600082555b610f916125bd565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610fbd6125bd565b6001600160a01b03861660009081526005919091016020526040902080546001019055610fee85600160e11b6129b3565b610ff66125bd565b60008681526004919091016020526040812091909155600160e11b8416900361106c57600184016110256125bd565b60008281526004919091016020526040812054900361106a576110466125bd565b54811461106a57836110566125bd565b600083815260049190910160205260409020555b505b6001600160a01b03851684818860008051602061593a833981519152600080a4806000036110a4576110a4633a954ecd60e21b61263f565b50505050505050565b6000806000806110bc866114fc565b90945084925061ffff1690506127106110d58287614f42565b6110df9190614f6f565b925050509250929050565b6000828152600b602052604090205461110390336129c8565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff16156111765760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610af2565b610aca8282612a48565b336001600160a01b038216146111d55760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610af2565b610aca8282612a5c565b60006111e9612ab3565b905090565b61120983838360405180602001604052806000815250612291565b505050565b610b04816001612ac3565b611221612c33565b54610100900460ff1661124057611236612c33565b5460ff1615611244565b303b155b6112b05760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604482015276081a5cc8185b1c9958591e481a5b9a5d1a585b1a5e9959604a1b6064820152608401610af2565b60006112ba612c33565b54610100900460ff1615905080156113065760016112d6612c33565b80549115156101000261ff001990921691909117905560016112f6612c33565b805460ff19169115159190911790555b600054610100900460ff16158080156113265750600054600160ff909116105b80611347575061133530612c57565b158015611347575060005460ff166001145b6113aa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610af2565b6000805460ff1916600117905580156113cd576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661141888612c66565b6114228b8b612c9e565b61142b89612cd5565b6114348c61271a565b61143f60008d612a48565b611449818d612a48565b611453828d612a48565b61145e826000612a48565b61147186866001600160801b0316612db1565b61147a87612e35565b60759190915560765580156114c9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5080156114f15760006114da612c33565b80549115156101000261ff00199092169190911790555b505050505050505050565b6000818152600360209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115611543578051602082015161155d565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526043602052604090205460ff1690565b61158d61270c565b6115a95760405162461bcd60e51b8152600401610af290614ea8565b610aca8282612db1565b60006109ca82612830565b6115c661270c565b6115e25760405162461bcd60e51b8152600401610af290614ea8565b610b0481612e35565b61163f60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600f6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906116bf90614e74565b80601f01602080910402602001604051908101604052809291908181526020018280546116eb90614e74565b80156117385780601f1061170d57610100808354040283529160200191611738565b820191906000526020600020905b81548152906001019060200180831161171b57829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216611768576117686323d3ad8160e21b61263f565b6001600160401b036117786125bd565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6117af61270c565b6117cb5760405162461bcd60e51b8152600401610af290614ea8565b600d54600e548183156117e5576117e28284614f2f565b90505b600e859055600d8190556000805b8681101561198d5780158061182b575087878281811061181557611815614f83565b90506020028101906118279190614f99565b3582105b61185c5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610af2565b6000600f8161186b8487614f2f565b815260200190815260200160002060020154905088888381811061189157611891614f83565b90506020028101906118a39190614f99565b602001358111156118eb5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610af2565b8888838181106118fd576118fd614f83565b905060200281019061190f9190614f99565b600f600061191d8588614f2f565b815260200190815260200160002081816119379190615115565b50819050600f60006119498588614f2f565b815260208101919091526040016000206002015588888381811061196f5761196f614f83565b90506020028101906119819190614f99565b359250506001016117f3565b508415611a0257835b828110156119fc576000818152600f6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119f26007830182614511565b5050600101611996565b50611a86565b85831115611a8657855b83811015611a8457600f6000611a228386614f2f565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611a7a6007830182614511565b5050600101611a0c565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611ab993929190615201565b60405180910390a150505050505050565b606060016000611ad8612ab3565b90506060818314611af157611aee858484612ec9565b90505b949350505050565b6000611b03612319565b9050611b1a81611b1161291a565b88888888610b27565b506000818152600f602052604081206002018054889290611b3c908490614f2f565b909155505060008181526010602052604081208791611b5961291a565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611b889190614f2f565b90915550611b9b90506000878787612fd9565b6000611ba788886130c5565b9050876001600160a01b0316611bbb61291a565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611bff929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600c602052604081205481805b82811015611cf6576000868152600c602090815260408083208484526001019091529020546001600160a01b031615611c9f57848203611c8d576000868152600c602090815260408083209383526001909301905220546001600160a01b031692506109ca915050565b611c98600183614f2f565b9150611ce4565b611caa866000611cff565b8015611cd157506000868152600c6020908152604080832083805260020190915290205481145b15611ce457611ce1600183614f2f565b91505b611cef600182614f2f565b9050611c23565b50505092915050565b6000918252600a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611d3261270c565b611d4e5760405162461bcd60e51b8152600401610af290614ea8565b610b0481612cd5565b6060611d616125bd565b60030180546109e890614e74565b6060611af1848484612ec9565b611d8461270c565b611da05760405162461bcd60e51b8152600401610af290614ea8565b6112098383836130db565b80611db46125bd565b6007016000611dc161291a565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611e0561291a565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611e41911515815260200190565b60405180910390a35050565b60006001611e59612ab3565b03905090565b6000828152600a6020908152604080832083805290915281205460ff16611eac57506000828152600a602090815260408083206001600160a01b038516845290915290205460ff166109ca565b50600192915050565b611ebd613182565b611ed95760405162461bcd60e51b8152600401610af290614ea8565b610b0481613192565b6060816001600160401b03811115611efc57611efc6147de565b604051908082528060200260200182016040528015611f2f57816020015b6060815260200190600190039081611f1a5790505b5090506000611f3c6133b4565b9050336001600160a01b038216141560005b84811015611cf6578115611fcd57611fab30878784818110611f7257611f72614f83565b9050602002810190611f849190614fb9565b86604051602001611f97939291906152e9565b6040516020818303038152906040526133be565b848281518110611fbd57611fbd614f83565b602002602001018190525061204d565b61202f30878784818110611fe357611fe3614f83565b9050602002810190611ff59190614fb9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506133be92505050565b84828151811061204157612041614f83565b60200260200101819052505b600101611f4e565b60068054819061206490614e74565b80601f016020809104026020016040519081016040528092919081815260200182805461209090614e74565b80156120dd5780601f106120b2576101008083540402835291602001916120dd565b820191906000526020600020905b8154815290600101906020018083116120c057829003601f168201915b5050505050908060010180546120f290614e74565b80601f016020809104026020016040519081016040528092919081815260200182805461211e90614e74565b801561216b5780601f106121405761010080835404028352916020019161216b565b820191906000526020600020905b81548152906001019060200180831161214e57829003601f168201915b50505050509080600201805461218090614e74565b80601f01602080910402602001604051908101604052809291908181526020018280546121ac90614e74565b80156121f95780601f106121ce576101008083540402835291602001916121f9565b820191906000526020600020905b8154815290600101906020018083116121dc57829003601f168201915b50505050509080600301805461220e90614e74565b80601f016020809104026020016040519081016040528092919081815260200182805461223a90614e74565b80156122875780601f1061225c57610100808354040283529160200191612287565b820191906000526020600020905b81548152906001019060200180831161226a57829003601f168201915b5050505050905084565b61229c848484610eea565b6001600160a01b0383163b156122cc576122b8848484846133ea565b6122cc576122cc6368d2bf6b60e11b61263f565b50505050565b6122da61454b565b60018210612314576122ea612ab3565b821015612314575b6122fb826134d2565b61230b57600019909101906122f2565b6109ca826134f2565b919050565b600e54600d54600091829161232e9190614f2f565b90505b600d5481111561238557600f600061234a60018461530a565b81526020019081526020016000206000015442106123735761236d60018261530a565b91505090565b8061237d8161531d565b915050612331565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610af2565b60606123c7826125e1565b6123f95760405162461bcd60e51b815260206004820152600360248201526208525160ea1b6044820152606401610af2565b6109ca8261351d565b6000818152600c6020526040812054815b81811015612466576000848152600c602090815260408083208484526001019091529020546001600160a01b03161561245457612451600184614f2f565b92505b61245f600182614f2f565b9050612413565b50612472836000611cff565b1561248557612482600183614f2f565b91505b50919050565b6000828152600b60205260409020546111d590336129c8565b600180546124b190614e74565b80601f01602080910402602001604051908101604052809291908181526020018280546124dd90614e74565b801561252a5780601f106124ff5761010080835404028352916020019161252a565b820191906000526020600020905b81548152906001019060200180831161250d57829003601f168201915b505050505081565b600061253c6125bd565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806125a057506380ac58cd60e01b6001600160e01b03198316145b806109ca5750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b600081600111612314576125f36125bd565b548210156123145760005b6126066125bd565b6000848152600491909101602052604081205491508190036126325761262b8361531d565b92506125fe565b600160e01b161592915050565b8060005260046000fd5b6000612654836115b3565b905081801561267c5750806001600160a01b031661267061291a565b6001600160a01b031614155b156126a15761268d8161099f61291a565b6126a1576126a16367d9dca160e11b61263f565b836126aa6125bd565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60006111e9816106746133b4565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000808281805b875181101561282457612787600283614f42565b9150600088828151811061279d5761279d614f83565b602002602001015190508084116127df57604080516020810186905290810182905260600160405160208183030381529060405280519060200120935061281b565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836128189190614f2f565b92505b50600101612773565b50941495939450505050565b6000816001116128e2576128426125bd565b6000838152600491909101602052604081205491508190036128cf576128666125bd565b54821061287d5761287d636f96cda160e11b61263f565b6128856125bd565b60001990920160008181526004939093016020526040909220549050801561287d57600160e01b81166000036128ba57919050565b6128ca636f96cda160e11b61263f565b61287d565b600160e01b81166000036128e257919050565b612314636f96cda160e11b61263f565b60008060006128ff6125bd565b60009485526006016020525050604090912080549092909150565b60006111e96133b4565b6129316075546000611cff565b15801561294657506001600160a01b03841615155b801561295a57506001600160a01b03831615155b156122cc5761296b60755485611cff565b158015612981575061297f60755484611cff565b155b156122cc5760405162461bcd60e51b8152602060048201526002602482015261085560f21b6044820152606401610af2565b4260a01b176001600160a01b03919091161790565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff16610aca57612a06816001600160a01b03166014613795565b612a11836020613795565b604051602001612a22929190615350565b60408051601f198184030181529082905262461bcd60e51b8252610af29160040161460e565b612a528282613930565b610aca828261398b565b612a6682826139f8565b6000828152600c602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612abd6125bd565b54919050565b6000612ace83612830565b905080600080612add866128f2565b915091508415612b1857612af48184610f3861291a565b612b1857612b048361099f61291a565b612b1857612b18632ce44b5f60e11b61263f565b612b26836000886001612924565b8015612b3157600082555b6001600160801b03612b416125bd565b6001600160a01b0385166000908152600591909101602052604090208054919091019055612b7383600360e01b6129b3565b612b7b6125bd565b60008881526004919091016020526040812091909155600160e11b85169003612bf15760018601612baa6125bd565b600082815260049190910160205260408120549003612bef57612bcb6125bd565b548114612bef5784612bdb6125bd565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b0386169060008051602061593a833981519152908390a4612c1f6125bd565b600190810180549091019055505050505050565b7fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f90565b6001600160a01b03163b151590565b600054610100900460ff16612c8d5760405162461bcd60e51b8152600401610af2906153bd565b612c95613a5a565b610b0481613a83565b612ca6612c33565b54610100900460ff16612ccb5760405162461bcd60e51b8152600401610af290615408565b610aca8282613b08565b600060018054612ce490614e74565b80601f0160208091040260200160405190810160405280929190818152602001828054612d1090614e74565b8015612d5d5780601f10612d3257610100808354040283529160200191612d5d565b820191906000526020600020905b815481529060010190602001808311612d4057829003601f168201915b505050505090508160019081612d73919061545c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612da5929190615515565b60405180910390a15050565b612710811115612dd35760405162461bcd60e51b8152600401610af290615543565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b038116612e7f5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610af2565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060818310612ee257612ee2631960ccad60e11b61263f565b6001831015612ef057600192505b6000612efa612ab3565b9050808310612f07578092505b60606000612f1487611748565b85871090810291508115612fc5578187870311612f315786860391505b60405192506001820160051b83016040526000612f4d886122d2565b905060008160400151612f5e575080515b60005b612f6a8a6134f2565b9250604083015160008114612f825760009250612fa7565b835115612f8e57835192505b8b831860601b612fa7576001820191508a8260051b8801525b5060018a019950888a1480612fbb57508481145b15612f6157855250505b50909695505050505050565b505050505050565b8060000361301d5734156130185760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610af2565b6122cc565b60006130298285614f42565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0385160161305b575034811461305f565b5034155b806130915760405162461bcd60e51b815260206004820152600260248201526110ab60f11b6044820152606401610af2565b60006001600160a01b038716156130a857866130b0565b6130b0610a6b565b90506110a4856130be6133b4565b8386613b74565b60006130cf612ab3565b90506109ca8383613bb5565b6127108111156130fd5760405162461bcd60e51b8152600401610af290615543565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b60006111e96076546106746133b4565b6040805160808101909152806131a88380614fb9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020908101906131f190840184614fb9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016132386040840184614fb9565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161327f6060840184614fb9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250805160069081906132c6908261545c565b50602082015160018201906132db908261545c565b50604082015160028201906132f0908261545c565b5060608201516003820190613305908261545c565b5050604080516000815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c92500160405180910390a17f8edd7f36d5f01bd45e59cf55b0a670dcf701fc20f678970a8c243b2346d6acaf61336e8280614fb9565b61337b6020850185614fb9565b6133886040870187614fb9565b6133956060890189614fb9565b6040516133a998979695949392919061556c565b60405180910390a150565b60006111e9613bcf565b60606133e3838360405180606001604052806027815260200161591360279139613bf1565b9392505050565b6000836001600160a01b031663150b7a0261340361291a565b8786866040518563ffffffff1660e01b815260040161342594939291906155cc565b6020604051808303816000875af1925050508015613460575060408051601f3d908101601f1916820190925261345d918101906155ff565b60015b6134b5573d80801561348e576040519150601f19603f3d011682016040523d82523d6000602084013e613493565b606091505b5080516000036134ad576134ad6368d2bf6b60e11b61263f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60006134dc6125bd565b6000928352600401602052506040902054151590565b6134fa61454b565b6109ca6135056125bd565b60008481526004919091016020526040902054613c69565b60606000600660405180608001604052908160008201805461353e90614e74565b80601f016020809104026020016040519081016040528092919081815260200182805461356a90614e74565b80156135b75780601f1061358c576101008083540402835291602001916135b7565b820191906000526020600020905b81548152906001019060200180831161359a57829003601f168201915b505050505081526020016001820180546135d090614e74565b80601f01602080910402602001604051908101604052809291908181526020018280546135fc90614e74565b80156136495780601f1061361e57610100808354040283529160200191613649565b820191906000526020600020905b81548152906001019060200180831161362c57829003601f168201915b5050505050815260200160028201805461366290614e74565b80601f016020809104026020016040519081016040528092919081815260200182805461368e90614e74565b80156136db5780601f106136b0576101008083540402835291602001916136db565b820191906000526020600020905b8154815290600101906020018083116136be57829003601f168201915b505050505081526020016003820180546136f490614e74565b80601f016020809104026020016040519081016040528092919081815260200182805461372090614e74565b801561376d5780601f106137425761010080835404028352916020019161376d565b820191906000526020600020905b81548152906001019060200180831161375057829003601f168201915b5050505050815250509050612482816000015182602001518360400151846060015187613cac565b606060006137a4836002614f42565b6137af906002614f2f565b6001600160401b038111156137c6576137c66147de565b6040519080825280601f01601f1916602001820160405280156137f0576020820181803683370190505b509050600360fc1b8160008151811061380b5761380b614f83565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061383a5761383a614f83565b60200101906001600160f81b031916908160001a905350600061385e846002614f42565b613869906001614f2f565b90505b60018111156138e1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061389d5761389d614f83565b1a60f81b8282815181106138b3576138b3614f83565b60200101906001600160f81b031916908160001a90535060049490941c936138da8161531d565b905061386c565b5083156133e35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610af2565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600c60205260408120805491600191906139aa8385614f2f565b90915550506000928352600c6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b613a0282826129c8565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff16613a815760405162461bcd60e51b8152600401610af2906153bd565b565b600054610100900460ff16613aaa5760405162461bcd60e51b8152600401610af2906153bd565b60005b8151811015610aca57600160436000848481518110613ace57613ace614f83565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101613aad565b613b10612c33565b54610100900460ff16613b355760405162461bcd60e51b8152600401610af290615408565b81613b3e6125bd565b60020190613b4c908261545c565b5080613b566125bd565b60030190613b64908261545c565b506001613b6f6125bd565b555050565b80156122cc5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601613ba9576130188282613ce1565b6122cc84848484613d83565b610aca828260405180602001604052806000815250613dd6565b6000613bda33611567565b15613bec575060131936013560601c90565b503390565b6060600080856001600160a01b031685604051613c0e919061561c565b600060405180830381855af49150503d8060008114613c49576040519150601f19603f3d011682016040523d82523d6000602084013e613c4e565b606091505b5091509150613c5f86838387613e4f565b9695505050505050565b613c7161454b565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b60606000613cba8585613ec6565b90506000613cca88888487613f53565b9050613cd581613f99565b98975050505050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613d2e576040519150601f19603f3d011682016040523d82523d6000602084013e613d33565b606091505b50509050806112095760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610af2565b816001600160a01b0316836001600160a01b031603156122cc57306001600160a01b03841603613dc1576130186001600160a01b0385168383613fca565b6122cc6001600160a01b038516848484614020565b613de08383614058565b6001600160a01b0383163b15611209576000613dfa6125bd565b5490508281035b613e1460008683806001019450866133ea565b613e2857613e286368d2bf6b60e11b61263f565b818110613e015781613e386125bd565b5414613e4857613e48600061263f565b5050505050565b60608315613ebc578251600003613eb557613e6985612c57565b613eb55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af2565b5081611af1565b611af1838361413e565b81518151606091158015911515908290613edd5750805b15613f0d578484604051602001613ef592919061562e565b604051602081830303815290604052925050506109ca565b8115613f245784604051602001613ef591906156a5565b8015613f3b5783604051602001613ef591906156e5565b50506040805160208101909152600081529392505050565b606084613f5f83614168565b8585613f6a86614168565b89604051602001613f809695949392919061572d565b6040516020818303038152906040529050949350505050565b6060613fa482614268565b604051602001613fb49190615843565b6040516020818303038152906040529050919050565b6112098363a9059cbb60e01b8484604051602401613fe9929190614795565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526143ba565b6040516001600160a01b03808516602483015283166044820152606481018290526122cc9085906323b872dd60e01b90608401613fe9565b60006140626125bd565b549050600082900361407e5761407e63b562e8dd60e01b61263f565b61408b6000848385612924565b61409b836001841460e11b6129b3565b6140a36125bd565b600083815260049190910160205260409020556001600160401b0182026140c86125bd565b6001600160a01b038516600081815260059290920160205260408220805490930190925581900361410257614102622e076360e81b61263f565b818301825b8083600060008051602061593a833981519152600080a481816001019150810361410757816141346125bd565b5550611209915050565b81511561414e5781518083602001fd5b8060405162461bcd60e51b8152600401610af2919061460e565b60608160000361418f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156141b957806141a381615888565b91506141b29050600a83614f6f565b9150614193565b6000816001600160401b038111156141d3576141d36147de565b6040519080825280601f01601f1916602001820160405280156141fd576020820181803683370190505b5090505b8415611af15761421260018361530a565b915061421f600a866158a1565b61422a906030614f2f565b60f81b81838151811061423f5761423f614f83565b60200101906001600160f81b031916908160001a905350614261600a86614f6f565b9450614201565b6060815160000361428757505060408051602081019091526000815290565b60006040518060600160405280604081526020016158d360409139905060006003845160026142b69190614f2f565b6142c09190614f6f565b6142cb906004614f42565b6001600160401b038111156142e2576142e26147de565b6040519080825280601f01601f19166020018201604052801561430c576020820181803683370190505b509050600182016020820185865187015b80821015614378576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184535060018301925061431d565b505060038651066001811461439457600281146143a7576143af565b603d6001830353603d60028303536143af565b603d60018303535b509195945050505050565b600061440f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661448c9092919063ffffffff16565b805190915015611209578080602001905181019061442d91906158b5565b6112095760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af2565b6060611af1848460008585600080866001600160a01b031685876040516144b3919061561c565b60006040518083038185875af1925050503d80600081146144f0576040519150601f19603f3d011682016040523d82523d6000602084013e6144f5565b606091505b509150915061450687838387613e4f565b979650505050505050565b50805461451d90614e74565b6000825580601f1061452d575050565b601f016020900490600052602060002090810190610b049190614572565b60408051608081018252600080825260208201819052918101829052606081019190915290565b5b808211156145875760008155600101614573565b5090565b6001600160e01b031981168114610b0457600080fd5b6000602082840312156145b357600080fd5b81356133e38161458b565b60005b838110156145d95781810151838201526020016145c1565b50506000910152565b600081518084526145fa8160208601602086016145be565b601f01601f19169290920160200192915050565b6020815260006133e360208301846145e2565b60006020828403121561463357600080fd5b5035919050565b6001600160a01b0381168114610b0457600080fd5b80356123148161463a565b6000806040838503121561466d57600080fd5b82356146788161463a565b946020939093013593505050565b60006020828403121561469857600080fd5b81356133e38161463a565b60006080828403121561248557600080fd5b60008060008060008060c087890312156146ce57600080fd5b8635955060208701356146e08161463a565b94506040870135935060608701356146f78161463a565b92506080870135915060a08701356001600160401b0381111561471957600080fd5b61472589828a016146a3565b9150509295509295509295565b60008060006060848603121561474757600080fd5b83356147528161463a565b925060208401356147628161463a565b929592945050506040919091013590565b6000806040838503121561478657600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b600080604083850312156147c157600080fd5b8235915060208301356147d38161463a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561481c5761481c6147de565b604052919050565b600082601f83011261483557600080fd5b81356001600160401b0381111561484e5761484e6147de565b614861601f8201601f19166020016147f4565b81815284602083860101111561487657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126148a457600080fd5b813560206001600160401b038211156148bf576148bf6147de565b8160051b6148ce8282016147f4565b92835284810182019282810190878511156148e857600080fd5b83870192505b848310156145065782356149018161463a565b825291830191908301906148ee565b80356001600160801b038116811461231457600080fd5b600080600080600080600080610100898b03121561494457600080fd5b61494d8961464f565b975060208901356001600160401b038082111561496957600080fd5b6149758c838d01614824565b985060408b013591508082111561498b57600080fd5b6149978c838d01614824565b975060608b01359150808211156149ad57600080fd5b6149b98c838d01614824565b965060808b01359150808211156149cf57600080fd5b506149dc8b828c01614893565b9450506149eb60a08a0161464f565b92506149f960c08a0161464f565b9150614a0760e08a01614910565b90509295985092959890939650565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250611af16101208401826145e2565b60008083601f840112614a9557600080fd5b5081356001600160401b03811115614aac57600080fd5b6020830191508360208260051b8501011115614ac757600080fd5b9250929050565b8015158114610b0457600080fd5b600080600060408486031215614af157600080fd5b83356001600160401b03811115614b0757600080fd5b614b1386828701614a83565b9094509250506020840135614b2781614ace565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612fc557835183529284019291840191600101614b4e565b60008060008060008060c08789031215614b8357600080fd5b8635614b8e8161463a565b9550602087013594506040870135614ba58161463a565b93506060870135925060808701356001600160401b0380821115614bc857600080fd5b614bd48a838b016146a3565b935060a0890135915080821115614bea57600080fd5b5061472589828a01614824565b600060208284031215614c0957600080fd5b81356001600160401b03811115614c1f57600080fd5b611af184828501614824565b600080600060608486031215614c4057600080fd5b8335614c4b8161463a565b95602085013595506040909401359392505050565b600080600060608486031215614c7557600080fd5b8335925060208401356147628161463a565b60008060408385031215614c9a57600080fd5b8235614ca58161463a565b915060208301356147d381614ace565b600060208284031215614cc757600080fd5b81356001600160401b03811115614cdd57600080fd5b611af1848285016146a3565b60008060208385031215614cfc57600080fd5b82356001600160401b03811115614d1257600080fd5b614d1e85828601614a83565b90969095509350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015614d8157603f19888603018452614d6f8583516145e2565b94509285019290850190600101614d53565b5092979650505050505050565b608081526000614da160808301876145e2565b8281036020840152614db381876145e2565b90508281036040840152614dc781866145e2565b9050828103606084015261450681856145e2565b60008060008060808587031215614df157600080fd5b8435614dfc8161463a565b93506020850135614e0c8161463a565b92506040850135915060608501356001600160401b03811115614e2e57600080fd5b614e3a87828801614824565b91505092959194509250565b60008060408385031215614e5957600080fd5b8235614e648161463a565b915060208301356147d38161463a565b600181811c90821680614e8857607f821691505b60208210810361248557634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614ee757600080fd5b8301803591506001600160401b03821115614f0157600080fd5b6020019150600581901b3603821315614ac757600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109ca576109ca614f19565b80820281158282048414176109ca576109ca614f19565b634e487b7160e01b600052601260045260246000fd5b600082614f7e57614f7e614f59565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112614faf57600080fd5b9190910192915050565b6000808335601e19843603018112614fd057600080fd5b8301803591506001600160401b03821115614fea57600080fd5b602001915036819003821315614ac757600080fd5b601f821115611209576000816000526020600020601f850160051c810160208610156150285750805b601f850160051c820191505b81811015612fd157828155600101615034565b600019600383901b1c191660019190911b1790565b6001600160401b03831115615073576150736147de565b615087836150818354614e74565b83614fff565b6000601f8411600181146150b557600085156150a35750838201355b6150ad8682615047565b845550613e48565b600083815260209020601f19861690835b828110156150e657868501358255602094850194600190920191016150c6565b50868210156151035760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c083013561515d8161463a565b81546001600160a01b0319166001600160a01b039190911617905561518560e0830183614fb9565b6122cc81836007860161505c565b6000808335601e198436030181126151aa57600080fd5b83016020810192503590506001600160401b038111156151c957600080fd5b803603821315614ac757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a8110156152d357888403605f190185528235368d900360fe19018112615246578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561528d8161463a565b6001600160a01b03169088015260e06152a884820185615193565b945083828a01526152bc848a0186836151d8565b998301999850505094909401935050600101615221565b50505086151560208701529350611af192505050565b8284823760609190911b6001600160601b0319169101908152601401919050565b818103818111156109ca576109ca614f19565b60008161532c5761532c614f19565b506000190190565b600081516153468185602086016145be565b9290920192915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516153808160158501602088016145be565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516153b18160268401602088016145be565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b81516001600160401b03811115615475576154756147de565b615489816154838454614e74565b84614fff565b602080601f8311600181146154b857600084156154a65750858301515b6154b08582615047565b865550612fd1565b600085815260208120601f198616915b828110156154e7578886015182559484019460019091019084016154c8565b50858210156155055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061552860408301856145e2565b828103602084015261553a81856145e2565b95945050505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b608081526000615580608083018a8c6151d8565b828103602084015261559381898b6151d8565b905082810360408401526155a88187896151d8565b905082810360608401526155bd8185876151d8565b9b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613c5f908301846145e2565b60006020828403121561561157600080fd5b81516133e38161458b565b60008251614faf8184602087016145be565b6834b6b0b3b2911d101160b91b815282516000906156538160098501602088016145be565b741116101130b734b6b0ba34b7b72fbab936111d101160591b600991840191820152835161568881601e8401602088016145be565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b815281516000906156ca8160098501602087016145be565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b815281516000906157128160118501602087016145be565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b8152865160009061575381600a850160208c016145be565b600160fd1b600a91840191820152875161577481600b840160208c016145be565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f83015287516157b381601e850160208c016145be565b601e92019182015285516157ce816022840160208a016145be565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b6022929091019182015261583661582761582161580a603a850189615334565b6a1610113730b6b2911d101160a91b8152600b0190565b86615334565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161587b81601d8501602087016145be565b91909101601d0192915050565b60006001820161589a5761589a614f19565b5060010190565b6000826158b0576158b0614f59565b500690565b6000602082840312156158c757600080fd5b81516133e381614ace56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b255ddf5ee3f2f8e238df733f24fa187c7fe7b8a7db015f584c4ac237b7580ae64736f6c63430008170033",
    "sourceMap": "1546:8147:370:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4304:271;;;;;;;;;;-1:-1:-1;4304:271:370;;;;;:::i;:::-;;:::i;:::-;;;661:14:821;;654:22;636:41;;624:2;609:18;4304:271:370;;;;;;;;9336:122:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1630:32:821;;;1612:51;;1600:2;1585:18;676:104:74;1466:203:821;16415:247:47;;;;;;;;;;-1:-1:-1;16415:247:47;;;;;:::i;:::-;;:::i;16143:122::-;;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;4918:365:47:-;;;;;;;;;;;;;:::i;:::-;;;2852:25:821;;;2840:2;2825:18;4918:365:47;2706:177:821;4800:2425:58;;;;;;;;;;-1:-1:-1;4800:2425:58;;;;;:::i;:::-;;:::i;20195:3561:47:-;;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;1421:325:77;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3253:271:71:-;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;8101:99:370:-;;;;;;;;;;;;;:::i;23847:157:47:-;;;;;;:::i;:::-;;:::i;8425:184:370:-;;;;;;;;;;-1:-1:-1;8425:184:370;;;;;:::i;:::-;;:::i;2656:1095::-;;;;;;;;;;-1:-1:-1;2656:1095:370;;;;;:::i;:::-;;:::i;1986:381:77:-;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;8978:32:821;;;8960:51;;9059:6;9047:19;;;9042:2;9027:18;;9020:47;8933:18;1986:381:77;8788:285:821;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;10745:150:47:-;;;;;;;;;;-1:-1:-1;10745:150:47;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;7745:177:58:-;;;;;;;;;;-1:-1:-1;7745:177:58;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:47:-;;;;;;;;;;-1:-1:-1;6165:263:47;;;;;:::i;:::-;;:::i;1949:2754:58:-;;;;;;;;;;-1:-1:-1;1949:2754:58;;;;;:::i;:::-;;:::i;2986:319:45:-;;;;;;;;;;-1:-1:-1;2986:319:45;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;699:1187:58:-;;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;9529:126:47:-;;;;;;;;;;;;;:::i;2334:217:45:-;;;;;;;;;;-1:-1:-1;2334:217:45;;;;;:::i;:::-;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;740:49:71:-;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;16989:255:47;;;;;;;;;;-1:-1:-1;16989:255:47;;;;;:::i;:::-;;:::i;7874:145:370:-;;;;;;;;;;;;;:::i;2204:211:71:-;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;414:217:78:-;;;;;;;;;;-1:-1:-1;414:217:78;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8004:249:58:-;;;;;;;;;;-1:-1:-1;8004:249:58;;;;;:::i;:::-;8121:29;8186:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;8186:60:58;;;;;;;;;;;;8004:249;2477:144:77;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;322:40:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;24585:405:47:-;;;;;;:::i;:::-;;:::i;1411:549:45:-;;;;;;;;;;-1:-1:-1;1411:549:45;;;;;:::i;:::-;;:::i;:::-;;;;;;18117:13:821;;-1:-1:-1;;;;;18113:39:821;18095:58;;18213:4;18201:17;;;18195:24;-1:-1:-1;;;;;18191:49:821;18169:20;;;18162:79;18311:4;18299:17;;;18293:24;18286:32;18279:40;18257:20;;;18250:70;18380:4;18368:17;;;18362:24;18388:8;18358:39;18336:20;;;18329:69;;;;18082:3;18067:19;;17882:522;7313:367:58;;;;;;;;;;;;;:::i;3998:275:370:-;;;;;;;;;;-1:-1:-1;3998:275:370;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;430:40:58:-;;;;;;;;;;-1:-1:-1;430:40:58;;;;;;;;;;;;;18583:25:821;;;18639:2;18624:18;;18617:34;;;;18556:18;430:40:58;18409:248:821;4728:93:370;;;;;;;;;;-1:-1:-1;4714:1:370;4728:93;8101:99;565:34:56;;;;;;;;;;;;;:::i;17394:186:47:-;;;;;;;;;;-1:-1:-1;17394:186:47;;;;;:::i;:::-;;:::i;4304:271:370:-;4453:4;4476:36;4500:11;4476:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4516:52:370;;;4476:92;4469:99;4304:271;-1:-1:-1;;4304:271:370:o;9336:122:47:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;16415:247:47:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:47;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:47;;;:54;-1:-1:-1;;;;;16601:54:47;;16415:247::o;16143:122::-;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;:::-;16143:122;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;4918:365:47:-;4979:7;4714:1:370;5212:23:47;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:47:o;4800:2425:58:-;5047:15;5116:39;;;:25;:39;;;;;;;;5074:81;;;;;;;;;;;;;;;;;;;;;;5116:25;5074:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5074:81:58;;;;;;;;;;5047:15;;5074:81;5116:39;5074:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5074:81:58;;;;-1:-1:-1;;;5186:40:58;;;;5257:31;;;;5322:26;;;;5558:28;;;;5074:81;;-1:-1:-1;5186:40:58;;5257:31;;5322:26;5558:42;5554:515;;5633:425;5669:21;:15;;:21;:::i;:::-;5633:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5708:28:58;;;;;;-1:-1:-1;5827:8:58;;5861:38;;;;;5925:29;;;;;5980:24;;;;;;;;:::i;:::-;5785:241;;-1:-1:-1;;;;;;20568:2:821;20604:15;;;20600:24;;5785:241:58;;;20588:37:821;20641:12;;;20634:28;;;;20678:12;;;20671:28;;;;20733:15;;;20729:24;20715:12;;;20708:46;20770:13;;5785:241:58;;;;;;;;;;;;5754:290;;;;;;5633:18;:425::i;:::-;-1:-1:-1;5616:442:58;-1:-1:-1;5554:515:58;6083:10;6079:534;;;6122:15;:38;;;6164:1;6122:43;:129;;6241:10;6122:129;;;6184:15;:38;;;6122:129;6109:142;;-1:-1:-1;;6278:15:58;:29;;;:50;:127;;6395:10;6278:127;;;6347:15;:29;;;6278:127;6265:140;;-1:-1:-1;;6435:15:58;:29;;;:50;;:92;;;;-1:-1:-1;6525:1:58;6489:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6489:38:58;;;6435:92;:167;;6589:13;6435:167;;;6546:24;;;;;;;;:::i;:::-;6419:183;;6079:534;6623:29;6655:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6655:60:58;;;;;;;;;;;;6730:26;;;;;;;;;:58;;;6778:10;6760:14;:28;;6730:58;6726:115;;;6804:26;;-1:-1:-1;;;6804:26:58;;20996:2:821;6804:26:58;;;20978:21:821;21035:2;21015:18;;;21008:30;-1:-1:-1;;;21054:18:821;;;21047:46;21110:18;;6804:26:58;20794:340:821;6726:115:58;6855:14;;;:66;;-1:-1:-1;6910:10:58;6874:33;6886:21;6874:9;:33;:::i;:::-;:46;6855:66;6851:111;;;6937:14;;-1:-1:-1;;;6937:14:58;;;;;;21603:2:821;21585:21;;;21642:1;21622:18;;;21615:29;-1:-1:-1;;;21675:2:821;21660:18;;21653:34;21719:2;21704:18;;21401:327;6851:111:58;7021:17;:36;;;7009:9;6975:17;:31;;;:43;;;;:::i;:::-;:82;6971:133;;;7073:20;;-1:-1:-1;;;7073:20:58;;21935:2:821;7073:20:58;;;21917:21:821;21974:2;21954:18;;;21947:30;-1:-1:-1;;;21993:18:821;;;21986:40;22043:18;;7073:20:58;21733:334:821;6971:133:58;7118:32;;7153:15;-1:-1:-1;7114:105:58;;;7184:24;;-1:-1:-1;;;7184:24:58;;22274:2:821;7184:24:58;;;22256:21:821;22313:2;22293:18;;;22286:30;-1:-1:-1;;;22332:18:821;;;22325:44;22386:18;;7184:24:58;22072:338:821;7114:105:58;5064:2161;;;;;4800:2425;;;;;;;;:::o;20195:3561:47:-;20302:27;20332;20351:7;20332:18;:27::i;:::-;-1:-1:-1;;;;;20484:22:47;;;;20302:57;;-1:-1:-1;20542:45:47;;;;20538:95;;20589:44;-1:-1:-1;;;20589:7:47;:44::i;:::-;20645:27;20674:23;20701:35;20728:7;20701:26;:35::i;:::-;20644:92;;;;20833:68;20858:15;20875:4;20881:19;:17;:19::i;:::-;-1:-1:-1;;;;;18791:32:47;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20833:68;20828:188;;20920:43;20937:4;20943:19;:17;:19::i;20920:43::-;20915:101;;20965:51;-1:-1:-1;;;20965:7:47;:51::i;:::-;21027:43;21049:4;21055:2;21059:7;21068:1;21027:21;:43::i;:::-;21159:15;21156:157;;;21297:1;21276:19;21269:30;21156:157;21685:23;:21;:23::i;:::-;-1:-1:-1;;;;;21685:48:47;;;;;;:42;;;;;:48;;;;;21683:50;;-1:-1:-1;;21683:50:47;;;21777:23;:21;:23::i;:::-;-1:-1:-1;;;;;21777:46:47;;;;;;:42;;;;;:46;;;;;21775:48;;;;;;22140:143;21777:46;-1:-1:-1;;;22140:18:47;:143::i;:::-;22087:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;;;;-1:-1:-1;;;22400:47:47;;:52;;22396:689;;22504:1;22494:11;;22625:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;22621:450;;22785:23;:21;:23::i;:::-;:37;22770:52;;22766:287;;23011:19;22954:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22766:287;22454:631;22396:689;-1:-1:-1;;;;;23213:20:47;;23584:7;23213:20;23516:4;-1:-1:-1;;;;;;;;;;;23194:16:47;;23327:292;23642:8;23654:1;23642:13;23638:58;;23657:39;-1:-1:-1;;;23657:7:47;:39::i;:::-;20292:3464;;;;20195:3561;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;23047:2:821;3433:39:71;;;23029:21:821;23086:2;23066:18;;;23059:30;23125:31;23105:18;;;23098:59;23174:18;;3433:39:71;22845:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;23405:2:821;4592:36:71;;;23387:21:821;23444:2;23424:18;;;23417:30;-1:-1:-1;;;23463:18:821;;;23456:56;23529:18;;4592:36:71;23203:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;8101:99:370:-;8153:7;8179:14;:12;:14::i;:::-;8172:21;;8101:99;:::o;23847:157:47:-;23958:39;23975:4;23981:2;23985:7;23958:39;;;;;;;;;;;;:16;:39::i;:::-;23847:157;;;:::o;8425:184:370:-;8582:20;8588:7;8597:4;8582:5;:20::i;2656:1095::-;1660:38:48;:36;:38::i;:::-;:52;;;;;;:158;;1767:38;:36;:38::i;:::-;:51;;;1766:52;1660:158;;;3233:4;3297:17;3340:7;1731:16;1639:260;;;;-1:-1:-1;;;1639:260:48;;23760:2:821;1639:260:48;;;23742:21:821;23799:2;23779:18;;;23772:30;23838:34;23818:18;;;23811:62;-1:-1:-1;;;23889:18:821;;;23882:53;23952:19;;1639:260:48;23558:419:821;1639:260:48;1910:19;1933:38;:36;:38::i;:::-;:52;;;;;;1932:53;;-1:-1:-1;1995:176:48;;;;2084:4;2029:38;:36;:38::i;:::-;:59;;;;;;;-1:-1:-1;;2029:59:48;;;;;;;;;:52;2102:38;:36;:38::i;:::-;:58;;-1:-1:-1;;2102:58:48;;;;;;;;;;1995:176;3279:19:450::1;3302:13:::0;::::1;::::0;::::1;;;3301:14;::::0;3347:34;::::1;;;-1:-1:-1::0;3365:12:450::1;::::0;3380:1:::1;3365:12;::::0;;::::1;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1::0;3436:12:450::1;::::0;::::1;;::::0;:17:::1;3387:66;3325:201;;;::::0;-1:-1:-1;;;3325:201:450;;24184:2:821;3325:201:450::1;::::0;::::1;24166:21:821::0;24223:2;24203:18;;;24196:30;24262:34;24242:18;;;24235:62;-1:-1:-1;;;24313:18:821;;;24306:44;24367:19;;3325:201:450::1;23982:410:821::0;3325:201:450::1;3536:12;:16:::0;;-1:-1:-1;;3536:16:450::1;3551:1;3536:16;::::0;;3562:65;::::1;;;3596:13;:20:::0;;-1:-1:-1;;3596:20:450::1;;;::::0;;3562:65:::1;3024:26:370::2;3082:24;3192:41;3214:18:::0;3192:21:::2;:41::i;:::-;3243:30;3258:5;3265:7;3243:14;:30::i;:::-;3284:31;3302:12;3284:17;:31::i;:::-;3325:26;3337:13;3325:11;:26::i;:::-;3362:45;785:4:71;3393:13:370::0;3362:10:::2;:45::i;:::-;3417:38;3428:11;3441:13;3417:10;:38::i;:::-;3465:40;3476:13;3491;3465:10;:40::i;:::-;3515:37;3526:13;3549:1;3515:10;:37::i;:::-;3563:56;3588:17;3607:11;-1:-1:-1::0;;;;;3563:56:370::2;:24;:56::i;:::-;3629:42;3656:14;3629:26;:42::i;:::-;3682:12;:28:::0;;;;3720:10:::2;:24:::0;3647:99:450;::::1;;;3697:5;3681:21:::0;;-1:-1:-1;;3681:21:450::1;::::0;;3721:14:::1;::::0;-1:-1:-1;24549:36:821;;3721:14:450::1;::::0;24537:2:821;24522:18;3721:14:450::1;;;;;;;3647:99;3269:483;2197:14:48::0;2193:105;;;2282:5;2227:38;:36;:38::i;:::-;:60;;;;;;;-1:-1:-1;;2227:60:48;;;;;;;;;2193:105;1358:946;2656:1095:370;;;;;;;;:::o;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3065:256:77:-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;10745:150:47:-;10817:7;10859:27;10878:7;10859:18;:27::i;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7745:177:58:-;7821:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7821:31:58;7876:39;;;;:25;:39;;;;;;;;;7864:51;;;;;;;;;;;;;;;;;;;;;;7876:25;7864:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7864:51:58;;;;;;;;;;;;7876:39;7864:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7745:177;;;:::o;6165:263:47:-;6237:7;-1:-1:-1;;;;;6260:19:47;;6256:69;;6281:44;-1:-1:-1;;;6281:7:47;:44::i;:::-;-1:-1:-1;;;;;6342:23:47;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:47;-1:-1:-1;;;;;6342:49:47;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;1949:2754:58:-;2108:24;:22;:24::i;:::-;2103:80;;2148:24;;-1:-1:-1;;;2148:24:58;;;;;;;:::i;2103:80::-;2222:14;:29;2290:20;;2222:29;2727:108;;;;2785:39;2806:18;2785;:39;:::i;:::-;2769:55;;2727:108;2845:20;:41;;;:14;2896:45;;;:29;;2997:643;3017:22;;;2997:643;;;3068:6;;;:69;;;3108:11;;3120:1;3108:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3078:59;;3068:69;3060:84;;;;-1:-1:-1;;;3060:84:58;;25268:2:821;3060:84:58;;;25250:21:821;25307:1;25287:18;;;25280:29;-1:-1:-1;;;25325:18:821;;;25318:32;25367:18;;3060:84:58;25066:325:821;3060:84:58;3159:28;3190:25;3159:28;3216:17;3232:1;3216:13;:17;:::i;:::-;3190:44;;;;;;;;;;;:58;;;3159:89;;3289:11;;3301:1;3289:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3266:20;:56;3262:123;;;3342:28;;-1:-1:-1;;;3342:28:58;;25598:2:821;3342:28:58;;;25580:21:821;25637:2;25617:18;;;25610:30;-1:-1:-1;;;25656:18:821;;;25649:48;25714:18;;3342:28:58;25396:342:821;3262:123:58;3446:11;;3458:1;3446:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3399:25;:44;3425:17;3441:1;3425:13;:17;:::i;:::-;3399:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3535:20:58;;-1:-1:-1;3474:25:58;:44;3500:17;3516:1;3500:13;:17;:::i;:::-;3474:44;;;;;;;;;;;-1:-1:-1;3474:44:58;:58;;:81;3600:11;;3612:1;3600:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;;3041:3:58;;2997:643;;;;4180:22;4176:446;;;4235:18;4218:129;4259:13;4255:1;:17;4218:129;;;4304:28;;;;:25;:28;;;;;4297:35;;;;;;;;;4304:25;4297:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4297:35:58;;;4304:28;4297:35;;;;4304:28;4297:35;:::i;:::-;-1:-1:-1;;4274:3:58;;4218:129;;;;4176:446;;;4381:39;;;4377:235;;;4457:11;4440:158;4481:18;4477:1;:22;4440:158;;;4535:25;:44;4561:17;4577:1;4561:13;:17;:::i;:::-;4535:44;;;;;;;;;;;-1:-1:-1;4535:44:58;;;4528:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4528:51:58;;;4535:44;4528:51;;;;-1:-1:-1;4528:51:58;:::i;:::-;-1:-1:-1;;4501:3:58;;4440:158;;;;4377:235;4637:59;4660:11;;4673:22;4637:59;;;;;;;;:::i;:::-;;;;;;;;2093:2610;;;;1949:2754;;;:::o;2986:319:45:-;3064:16;4714:1:370;3092:13:45;3148:14;:12;:14::i;:::-;3133:29;;3172:25;3220:4;3211:5;:13;3207:66;;3237:36;3254:5;3261;3268:4;3237:16;:36::i;:::-;3226:47;;3207:66;3290:8;2986:319;-1:-1:-1;;;;2986:319:45:o;699:1187:58:-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:58;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:58;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:58;-1:-1:-1;;;;;1343:73:58;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:58;;-1:-1:-1;1515:1:58;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:58;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:58;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;18583:25:821;;;18639:2;18624:18;;18617:34;18571:2;18556:18;;18409:248;1698:86:58;;;;;;;;942:944;;699:1187;;;;;;:::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;9529:126:47:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2334:217:45:-;2473:16;2508:36;2525:5;2532;2539:4;2508:16;:36::i;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;16989:255:47:-;17159:8;17083:23;:21;:23::i;:::-;:42;;:63;17126:19;:17;:19::i;:::-;-1:-1:-1;;;;;17083:63:47;;;;;;;;;;;;;;;;;-1:-1:-1;17083:63:47;;;:73;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:47;;;;;;;;;;;17197:19;:17;:19::i;:::-;-1:-1:-1;;;;;17182:55:47;;17228:8;17182:55;;;;661:14:821;654:22;636:41;;624:2;609:18;;496:187;17182:55:47;;;;;;;;16989:255;;:::o;7874:145:370:-;7920:7;4714:1;7970:14;:12;:14::i;:::-;:32;7963:39;;7874:145;:::o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;414:217:78:-;512:23;:21;:23::i;:::-;507:79;;551:24;;-1:-1:-1;;;551:24:78;;;;;;;:::i;507:79::-;595:29;614:9;595:18;:29::i;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;322:40:78;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24585:405:47:-;24754:31;24767:4;24773:2;24777:7;24754:12;:31::i;:::-;-1:-1:-1;;;;;24799:14:47;;;:19;24795:189;;24837:56;24868:4;24874:2;24878:7;24887:5;24837:30;:56::i;:::-;24832:152;;24913:56;-1:-1:-1;;;24913:7:47;:56::i;:::-;24585:405;;;;:::o;1411:549:45:-;1509:31;;:::i;:::-;4714:1:370;1580:7:45;:26;1576:368;;1640:14;:12;:14::i;:::-;1630:7;:24;1626:304;;;1810:51;1818:32;1842:7;1818:23;:32::i;:::-;1810:51;;-1:-1:-1;;1852:9:45;;;;1810:51;;;1890:21;1903:7;1890:12;:21::i;1626:304::-;1411:549;;;:::o;7313:367:58:-;7439:20;;:14;7407:29;7371:7;;;;7407:52;;7439:20;7407:52;:::i;:::-;7395:64;;7390:252;7465:14;:29;7461:33;;7390:252;;;7538:25;:32;7564:5;7568:1;7564;:5;:::i;:::-;7538:32;;;;;;;;;;;:47;;;7519:15;:66;7515:117;;7612:5;7616:1;7612;:5;:::i;:::-;7605:12;;;7313:367;:::o;7515:117::-;7496:3;;;;:::i;:::-;;;;7390:252;;;-1:-1:-1;7652:21:58;;-1:-1:-1;;;7652:21:58;;33464:2:821;7652:21:58;;;33446::821;33503:2;33483:18;;;33476:30;-1:-1:-1;;;33522:18:821;;;33515:41;33573:18;;7652:21:58;33262:335:821;3998:275:370;4127:13;4157:17;4165:8;4157:7;:17::i;:::-;4152:62;;4190:13;;-1:-1:-1;;;4190:13:370;;33804:2:821;4190:13:370;;;33786:21:821;33843:1;33823:18;;;33816:29;-1:-1:-1;;;33861:18:821;;;33854:33;33904:18;;4190:13:370;33602:326:821;4152:62:370;4231:35;4257:8;4231:25;:35::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17394:186:47:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:47;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:47;;;;;17394:186::o;8452:630::-;8537:4;-1:-1:-1;;;;;;;;;8855:25:47;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:47;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:47;-1:-1:-1;;;9007:25:47;;8452:630::o;1793:159:46:-;1740:46;;1793:159::o;17829:408:47:-;17894:11;17940:7;4714:1:370;17921:26:47;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:47;;;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:47;:29;;17829:408;-1:-1:-1;;17829:408:47:o;43384:160::-;43483:13;43477:4;43470:27;43523:4;43517;43510:18;34906:454;35000:13;35016:16;35024:7;35016;:16::i;:::-;35000:32;;35047:13;:45;;;;;35087:5;-1:-1:-1;;;;;35064:28:47;:19;:17;:19::i;:::-;-1:-1:-1;;;;;35064:28:47;;;35047:45;35043:198;;;35111:44;35128:5;35135:19;:17;:19::i;35111:44::-;35106:135;;35175:51;-1:-1:-1;;;35175:7:47;:51::i;:::-;35308:2;35251:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35251:59:47;-1:-1:-1;;;;;35251:59:47;;;;;;35325:28;35251:48;;35325:28;;;;;;;;;;35251:48;35325:28;34990:370;34906:454;;;:::o;6554:127:370:-;6610:4;6633:41;6610:4;6661:12;:10;:12::i;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;112:876:294:-;203:4;;251;203;;293:567;317:5;:12;313:1;:16;293:567;;;350:10;359:1;350:10;;:::i;:::-;;;374:20;397:5;403:1;397:8;;;;;;;;:::i;:::-;;;;;;;374:31;;440:12;424;:28;420:430;;575:44;;;;;;34090:19:821;;;34125:12;;;34118:28;;;34162:12;;575:44:294;;;;;;;;;;;;565:55;;;;;;550:70;;420:430;;;762:44;;;;;;34090:19:821;;;34125:12;;;34118:28;;;34162:12;;762:44:294;;;;;;;;;;;;752:55;;;;;;737:70;;834:1;825:10;;;;;:::i;:::-;;;420:430;-1:-1:-1;331:3:294;;293:567;;;-1:-1:-1;953:20:294;;;;;-1:-1:-1;;;;112:876:294:o;12282:2050:47:-;12349:14;12398:7;4714:1:370;12379:26:47;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:47;;;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:47;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:47;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13429:25:47;;13257:621;13429:25;-1:-1:-1;;;13480:6:47;:24;13508:1;13480:29;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:47;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:6:47;:24;14242:1;14214:29;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:47;:47::i;19095:499::-;19184:27;19213:23;19248:53;19304:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19304:48:47;;;;19552:26;;19304:48;;19552:26;;-1:-1:-1;19095:499:47:o;9349:114:370:-;9418:7;9444:12;:10;:12::i;8663:563::-;9010:33;9018:12;;9040:1;9010:7;:33::i;:::-;9009:34;:56;;;;-1:-1:-1;;;;;;9047:18:370;;;;9009:56;:76;;;;-1:-1:-1;;;;;;9069:16:370;;;;9009:76;9005:215;;;9106:27;9114:12;;9128:4;9106:7;:27::i;:::-;9105:28;:58;;;;;9138:25;9146:12;;9160:2;9138:7;:25::i;:::-;9137:26;9105:58;9101:109;;;9183:12;;-1:-1:-1;;;9183:12:370;;34387:2:821;9183:12:370;;;34369:21:821;34426:1;34406:18;;;34399:29;-1:-1:-1;;;34444:18:821;;;34437:32;34486:18;;9183:12:370;34185:325:821;14865:443:47;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:47;;;;15229:63;;14865:443::o;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;16143:122:47;;:::o;4590:125::-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:47:o;35922:3168::-;36001:27;36031;36050:7;36031:18;:27::i;:::-;36001:57;-1:-1:-1;36001:57:47;36069:12;;36189:35;36216:7;36189:26;:35::i;:::-;36132:92;;;;36239:13;36235:321;;;36358:68;36383:15;36400:4;36406:19;:17;:19::i;36358:68::-;36353:192;;36449:43;36466:4;36472:19;:17;:19::i;36449:43::-;36444:101;;36494:51;-1:-1:-1;;;36494:7:47;:51::i;:::-;36566;36588:4;36602:1;36606:7;36615:1;36566:21;:51::i;:::-;36706:15;36703:157;;;36844:1;36823:19;36816:30;36703:157;-1:-1:-1;;;;;37449:23:47;:21;:23::i;:::-;-1:-1:-1;;;;;37449:48:47;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;37817:173;37449:48;-1:-1:-1;;;37817:18:47;:173::i;:::-;37764:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;;;;-1:-1:-1;;;38107:47:47;;:52;;38103:689;;38211:1;38201:11;;38332:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;38328:450;;38492:23;:21;:23::i;:::-;:37;38477:52;;38473:287;;38718:19;38661:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38473:287;38161:631;38103:689;38817:35;;38844:7;;38840:1;;-1:-1:-1;;;;;38817:35:47;;;-1:-1:-1;;;;;;;;;;;38817:35:47;38840:1;;38817:35;39035:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;35922:3168:47:o;590:159:49:-;525:58;;590:159::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;3655:158:47:-:0;2559:38:48;:36;:38::i;:::-;:52;;;;;;2538:151;;;;-1:-1:-1;;;2538:151:48;;;;;;;:::i;:::-;3766:40:47::1;3791:5;3798:7;3766:24;:40::i;1273:185:56:-:0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;2852:25:821;;;3689:46:77;;2840:2:821;2825:18;3689:46:77;;;;;;;3408:334;;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;38672:2:821;1626:27:74;;;38654:21:821;38711:2;38691:18;;;38684:30;-1:-1:-1;;;38730:18:821;;;38723:47;38787:18;;1626:27:74;38470:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;3553:4233:45:-;3645:16;3710:4;3701:5;:13;3697:54;;3716:35;-1:-1:-1;;;3716:7:45;:35::i;:::-;4714:1:370;3827:5:45;:23;3823:85;;;4714:1:370;3870:23:45;;3823:85;3921:17;3941:14;:12;:14::i;:::-;3921:34;;4031:9;4023:4;:17;4019:72;;4067:9;4060:16;;4019:72;4104:25;4143;4171:16;4181:5;4171:9;:16::i;:::-;4220:12;;;4377:35;;;;-1:-1:-1;4443:22:45;;4439:3302;;4662:17;4653:5;4646:4;:12;:33;4642:112;;4730:5;4723:4;:12;4703:32;;4642:112;4873:4;4867:11;4855:23;;5123:1;5104:17;5100:25;5097:1;5093:33;5083:8;5079:48;5073:4;5066:62;5299:31;5333:26;5353:5;5333:19;:26::i;:::-;5299:60;;5377:25;5669:9;:16;;;5664:98;;-1:-1:-1;5729:14:45;;5664:98;5779:19;5966:1616;6003:19;6016:5;6003:12;:19::i;:::-;5991:31;;6107:4;6096:9;6092:20;6086:27;6202:1;6197:893;;;;7406:1;7385:22;;6079:1354;;6197:893;6476:9;6470:16;6467:121;;;6548:9;6542:16;6521:37;;6467:121;6875:5;6856:17;6852:29;6848:2;6844:38;6834:230;;6950:1;6937:11;6933:19;6918:34;;7028:5;7013:11;7010:1;7006:19;6996:8;6992:34;6985:49;6834:230;6079:1354;7478:1;7471:5;7467:13;7458:22;;7539:4;7530:5;:13;:49;;;;7562:17;7547:11;:32;7530:49;7528:52;5966:1616;;7680:29;;-1:-1:-1;;4439:3302:45;-1:-1:-1;7761:8:45;;3553:4233;-1:-1:-1;;;;;;3553:4233:45:o;8696:237:58:-;;;;;;;:::o;5094:840:370:-;5294:14;5312:1;5294:19;5290:103;;5337:9;:14;5329:33;;;;-1:-1:-1;;;5329:33:370;;39018:2:821;5329:33:370;;;39000:21:821;39057:1;39037:18;;;39030:29;-1:-1:-1;;;39075:18:821;;;39068:36;39121:18;;5329:33:370;38816:329:821;5329:33:370;5376:7;;5290:103;5403:18;5424:33;5443:14;5424:16;:33;:::i;:::-;5403:54;-1:-1:-1;5468:18:370;-1:-1:-1;;;;;;;5500:45:370;;;5496:176;;-1:-1:-1;5577:9:370;:23;;5496:176;;;-1:-1:-1;5647:9:370;:14;5496:176;5689:13;5681:28;;;;-1:-1:-1;;;5681:28:370;;39352:2:821;5681:28:370;;;39334:21:821;39391:1;39371:18;;;39364:29;-1:-1:-1;;;39409:18:821;;;39402:32;39451:18;;5681:28:370;39150:325:821;5681:28:370;5720:21;-1:-1:-1;;;;;5744:35:370;;;:84;;5807:21;5744:84;;;5782:22;:20;:22::i;:::-;5720:108;;5839:88;5876:9;5887:12;:10;:12::i;:::-;5901:13;5916:10;5839:36;:88::i;5987:242::-;6112:21;6161:14;:12;:14::i;:::-;6145:30;;6185:37;6195:3;6200:21;6185:9;:37::i;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;2852:25:821;;;4836:49:77;;4804:29;;4901:43;;2825:18:821;4901:43:77;;;;;;;4619:332;;;:::o;7472:136:370:-;7545:4;7568:33;7576:10;;7588:12;:10;:12::i;753:594:78:-;856:204;;;;;;;;;;895:14;:9;;:14;:::i;:::-;856:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;856:204:78;;;-1:-1:-1;856:204:78;;;;;936:21;;;;:9;:21;:::i;:::-;856:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;856:204:78;;;-1:-1:-1;856:204:78;;981:18;;;;:9;:18;:::i;:::-;856:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;856:204:78;;;-1:-1:-1;856:204:78;;1027:22;;;;:9;:22;:::i;:::-;856:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;856:204:78;;-1:-1:-1;839:221:78;;:14;;;;:221;;:14;:221;:::i;:::-;-1:-1:-1;839:221:78;;;;;;;;;;;;:::i;:::-;-1:-1:-1;839:221:78;;;;;;;;;;;;:::i;:::-;-1:-1:-1;839:221:78;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1076:41:78;;;1096:1;18583:25:821;;-1:-1:-1;;18639:2:821;18624:18;;18617:34;1076:41:78;;-1:-1:-1;18556:18:821;1076:41:78;;;;;;;1133:207;1175:14;:9;;:14;:::i;:::-;1216:21;;;;:9;:21;:::i;:::-;1261:18;;;;:9;:18;:::i;:::-;1307:22;;;;:9;:22;:::i;:::-;1133:207;;;;;;;;;;;;;:::i;:::-;;;;;;;;753:594;:::o;9469:222:370:-;9609:14;9646:38;:36;:38::i;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;26940:693:47:-;27098:4;27166:2;-1:-1:-1;;;;;27130:56:47;;27187:19;:17;:19::i;:::-;27208:4;27214:7;27223:5;27130:99;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27130:99:47;;;;;;;;-1:-1:-1;;27130:99:47;;;;;;;;;;;;:::i;:::-;;;27114:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27416:6;:13;27433:1;27416:18;27412:113;;27454:56;-1:-1:-1;;;27454:7:47;:56::i;:::-;27595:6;27589:13;27580:6;27576:2;27572:15;27565:38;27114:513;-1:-1:-1;;;;;;27283:75:47;-1:-1:-1;;;27283:75:47;;-1:-1:-1;26940:693:47;;;;;;:::o;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:47;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;1458:452:78:-;1533:13;1558:30;1591:14;1558:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:268;1701:4;:9;;;1741:4;:16;;;1785:4;:13;;;1830:4;:17;;;1881:7;1635:41;:268::i;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;41526:2:821;1911:55:298;;;41508:21:821;;;41545:18;;;41538:30;41604:34;41584:18;;;41577:62;41656:18;;1911:55:298;41324:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;776:69:478:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;776::478:o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;3819:281:47::0;2559:38:48;:36;:38::i;:::-;:52;;;;;;2538:151;;;;-1:-1:-1;;;2538:151:48;;;;;;;:::i;:::-;3972:5:47::1;3940:23;:21;:23::i;:::-;:29;;::::0;:37:::1;::::0;:29;:37:::1;:::i;:::-;;4021:7;3987:23;:21;:23::i;:::-;:31;;::::0;:41:::1;::::0;:31;:41:::1;:::i;:::-;-1:-1:-1::0;4714:1:370;4038:23:47::1;:21;:23::i;:::-;:55:::0;-1:-1:-1;;3819:281:47:o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;702:173::-;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;34016:110:47:-;34092:27;34102:2;34106:8;34092:27;;;;;;;;;;;;:9;:27::i;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;8101:99:370:o;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;14426:361:47:-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:47;;;;-1:-1:-1;;;;;2074:3:47;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:47;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;757:466:295:-;980:13;1005:29;1037:38;1052:8;1062:12;1037:14;:38::i;:::-;1005:70;;1085:17;1105:70;1124:4;1130:11;1143:15;1160:14;1105:18;:70::i;:::-;1085:90;;1192:24;1211:4;1192:18;:24::i;:::-;1185:31;757:466;-1:-1:-1;;;;;;;;757:466:295:o;2482:292:292:-;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;42389:2:821;2719:48:292;;;42371:21:821;42428:2;42408:18;;;42401:30;-1:-1:-1;;;42447:18:821;;;42440:58;42515:18;;2719:48:292;42187:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;33231:706:47:-;33327:19;33333:2;33337:8;33327:5;:19::i;:::-;-1:-1:-1;;;;;33385:14:47;;;:19;33381:540;;33424:11;33438:23;:21;:23::i;:::-;:37;;-1:-1:-1;33509:14:47;;;33541:238;33571:62;33610:1;33614:2;33618:7;;;;;;33627:5;33571:30;:62::i;:::-;33566:174;;33661:56;-1:-1:-1;;;33661:7:47;:56::i;:::-;33774:3;33766:5;:11;33541:238;;33883:3;33842:23;:21;:23::i;:::-;:37;:44;33838:68;;33888:18;33903:1;33888:7;:18::i;:::-;33406:515;;33231:706;;;:::o;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;42746:2:821;8110:60:289;;;42728:21:821;42785:2;42765:18;;;42758:30;42824:31;42804:18;;;42797:59;42873:18;;8110:60:289;42544:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;2746:654:295:-;2886:22;;2942:26;;2845:13;;2886:26;;;;2942:30;;;2886:26;;2986:24;;;2998:12;2986:24;2982:156;;;3070:8;3105:12;3040:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3026:101;;;;;;2982:156;3151:8;3147:101;;;3219:8;3189:47;;;;;;;;:::i;3147:101::-;3261:12;3257:117;;;3341:12;3303:59;;;;;;;;:::i;3257:117::-;-1:-1:-1;;3384:9:295;;;;;;;;;-1:-1:-1;3384:9:295;;;2746:654;-1:-1:-1;;;2746:654:295:o;1467:697::-;1652:12;1759:4;1802:32;1819:14;1802:16;:32::i;:::-;1911:11;1964:9;2035:32;2052:14;2035:16;:32::i;:::-;2116:4;1695:462;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1676:481;;1467:697;;;;;;:::o;2302:187::-;2372:13;2461:19;2475:4;2461:13;:19::i;:::-;2411:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2397:85;;2302:187;;;:::o;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;48549:15:821;;;1067:68:228;;;48531:34:821;48601:15;;48581:18;;;48574:43;48633:18;;;48626:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;48466:18:821;;1067:68:228;48291:375:821;28079:2347:47;28151:20;28174:23;:21;:23::i;:::-;:37;;-1:-1:-1;28174:37:47;28225:13;;;28221:53;;28240:34;-1:-1:-1;;;28240:7:47;:34::i;:::-;28285:61;28315:1;28319:2;28323:12;28337:8;28285:21;:61::i;:::-;28832:136;28868:2;15704:1;15691:15;;15665:24;15661:46;28832:18;:136::i;:::-;28774:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29229:45:47;;29179:23;:21;:23::i;:::-;-1:-1:-1;;;;;29179:46:47;;;;;;:42;;;;;:46;;;;;:95;;;;;;;;29459:13;;;29455:54;;29474:35;-1:-1:-1;;;29474:7:47;:35::i;:::-;29538:23;;;:12;29620:662;30030:7;29987:8;29943:1;-1:-1:-1;;;;;;;;;;;29816:1:47;29752;29722:351;30277:3;30264:9;;;;;;:16;29620:662;;30336:3;30296:23;:21;:23::i;:::-;:43;-1:-1:-1;30359:60:47;;-1:-1:-1;;24585:405:47;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;303:703:298:-;359:13;576:5;585:1;576:10;572:51;;-1:-1:-1;;602:10:298;;;;;;;;;;;;-1:-1:-1;;;602:10:298;;;;;303:703::o;572:51::-;647:5;632:12;686:75;693:9;;686:75;;718:8;;;;:::i;:::-;;-1:-1:-1;740:10:298;;-1:-1:-1;748:2:298;740:10;;:::i;:::-;;;686:75;;;770:19;802:6;-1:-1:-1;;;;;792:17:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;792:17:298;;770:39;;819:150;826:10;;819:150;;852:11;862:1;852:11;;:::i;:::-;;-1:-1:-1;920:10:298;928:2;920:5;:10;:::i;:::-;907:24;;:2;:24;:::i;:::-;894:39;;877:6;884;877:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;877:56:298;;;;;;;;-1:-1:-1;947:11:298;956:2;947:11;;:::i;:::-;;;819:150;;505:3026:231;563:13;795:4;:11;810:1;795:16;791:31;;-1:-1:-1;;813:9:231;;;;;;;;;-1:-1:-1;813:9:231;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:231;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:231;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:231;;505:3026;-1:-1:-1;;;;;505:3026:231:o;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;49380:2:821;3711:85:228;;;49362:21:821;49419:2;49399:18;;;49392:30;49458:34;49438:18;;;49431:62;-1:-1:-1;;;49509:18:821;;;49502:40;49559:19;;3711:85:228;49178:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:131:821:-;-1:-1:-1;;;;;;88:32:821;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:250::-;773:1;783:113;797:6;794:1;791:13;783:113;;;873:11;;;867:18;854:11;;;847:39;819:2;812:10;783:113;;;-1:-1:-1;;930:1:821;912:16;;905:27;688:250::o;943:282::-;996:3;1034:5;1028:12;1061:6;1056:3;1049:19;1077:76;1146:6;1139:4;1134:3;1130:14;1123:4;1116:5;1112:16;1077:76;:::i;:::-;1207:2;1186:15;-1:-1:-1;;1182:29:821;1173:39;;;;1214:4;1169:50;;943:282;-1:-1:-1;;943:282:821:o;1230:231::-;1379:2;1368:9;1361:21;1342:4;1399:56;1451:2;1440:9;1436:18;1428:6;1399:56;:::i;1674:180::-;1733:6;1786:2;1774:9;1765:7;1761:23;1757:32;1754:52;;;1802:1;1799;1792:12;1754:52;-1:-1:-1;1825:23:821;;1674:180;-1:-1:-1;1674:180:821:o;1859:131::-;-1:-1:-1;;;;;1934:31:821;;1924:42;;1914:70;;1980:1;1977;1970:12;1995:134;2063:20;;2092:31;2063:20;2092:31;:::i;2134:315::-;2202:6;2210;2263:2;2251:9;2242:7;2238:23;2234:32;2231:52;;;2279:1;2276;2269:12;2231:52;2318:9;2305:23;2337:31;2362:5;2337:31;:::i;:::-;2387:5;2439:2;2424:18;;;;2411:32;;-1:-1:-1;;;2134:315:821:o;2454:247::-;2513:6;2566:2;2554:9;2545:7;2541:23;2537:32;2534:52;;;2582:1;2579;2572:12;2534:52;2621:9;2608:23;2640:31;2665:5;2640:31;:::i;2888:163::-;2955:5;3000:3;2991:6;2986:3;2982:16;2978:26;2975:46;;;3017:1;3014;3007:12;3056:854;3195:6;3203;3211;3219;3227;3235;3288:3;3276:9;3267:7;3263:23;3259:33;3256:53;;;3305:1;3302;3295:12;3256:53;3341:9;3328:23;3318:33;;3401:2;3390:9;3386:18;3373:32;3414:31;3439:5;3414:31;:::i;:::-;3464:5;-1:-1:-1;3516:2:821;3501:18;;3488:32;;-1:-1:-1;3572:2:821;3557:18;;3544:32;3585:33;3544:32;3585:33;:::i;:::-;3637:7;-1:-1:-1;3691:3:821;3676:19;;3663:33;;-1:-1:-1;3747:3:821;3732:19;;3719:33;-1:-1:-1;;;;;3764:30:821;;3761:50;;;3807:1;3804;3797:12;3761:50;3830:74;3896:7;3887:6;3876:9;3872:22;3830:74;:::i;:::-;3820:84;;;3056:854;;;;;;;;:::o;3915:456::-;3992:6;4000;4008;4061:2;4049:9;4040:7;4036:23;4032:32;4029:52;;;4077:1;4074;4067:12;4029:52;4116:9;4103:23;4135:31;4160:5;4135:31;:::i;:::-;4185:5;-1:-1:-1;4242:2:821;4227:18;;4214:32;4255:33;4214:32;4255:33;:::i;:::-;3915:456;;4307:7;;-1:-1:-1;;;4361:2:821;4346:18;;;;4333:32;;3915:456::o;4743:248::-;4811:6;4819;4872:2;4860:9;4851:7;4847:23;4843:32;4840:52;;;4888:1;4885;4878:12;4840:52;-1:-1:-1;;4911:23:821;;;4981:2;4966:18;;;4953:32;;-1:-1:-1;4743:248:821:o;4996:274::-;-1:-1:-1;;;;;5188:32:821;;;;5170:51;;5252:2;5237:18;;5230:34;5158:2;5143:18;;4996:274::o;5275:315::-;5343:6;5351;5404:2;5392:9;5383:7;5379:23;5375:32;5372:52;;;5420:1;5417;5410:12;5372:52;5456:9;5443:23;5433:33;;5516:2;5505:9;5501:18;5488:32;5529:31;5554:5;5529:31;:::i;:::-;5579:5;5569:15;;;5275:315;;;;;:::o;5595:127::-;5656:10;5651:3;5647:20;5644:1;5637:31;5687:4;5684:1;5677:15;5711:4;5708:1;5701:15;5727:275;5798:2;5792:9;5863:2;5844:13;;-1:-1:-1;;5840:27:821;5828:40;;-1:-1:-1;;;;;5883:34:821;;5919:22;;;5880:62;5877:88;;;5945:18;;:::i;:::-;5981:2;5974:22;5727:275;;-1:-1:-1;5727:275:821:o;6007:531::-;6050:5;6103:3;6096:4;6088:6;6084:17;6080:27;6070:55;;6121:1;6118;6111:12;6070:55;6157:6;6144:20;-1:-1:-1;;;;;6179:2:821;6176:26;6173:52;;;6205:18;;:::i;:::-;6249:55;6292:2;6273:13;;-1:-1:-1;;6269:27:821;6298:4;6265:38;6249:55;:::i;:::-;6329:2;6320:7;6313:19;6375:3;6368:4;6363:2;6355:6;6351:15;6347:26;6344:35;6341:55;;;6392:1;6389;6382:12;6341:55;6457:2;6450:4;6442:6;6438:17;6431:4;6422:7;6418:18;6405:55;6505:1;6480:16;;;6498:4;6476:27;6469:38;;;;6484:7;6007:531;-1:-1:-1;;;6007:531:821:o;6543:787::-;6597:5;6650:3;6643:4;6635:6;6631:17;6627:27;6617:55;;6668:1;6665;6658:12;6617:55;6704:6;6691:20;6730:4;-1:-1:-1;;;;;6749:2:821;6746:26;6743:52;;;6775:18;;:::i;:::-;6821:2;6818:1;6814:10;6844:28;6868:2;6864;6860:11;6844:28;:::i;:::-;6906:15;;;6976;;;6972:24;;;6937:12;;;;7008:15;;;7005:35;;;7036:1;7033;7026:12;7005:35;7072:2;7064:6;7060:15;7049:26;;7084:217;7100:6;7095:3;7092:15;7084:217;;;7180:3;7167:17;7197:31;7222:5;7197:31;:::i;:::-;7241:18;;7117:12;;;;7279;;;;7084:217;;7335:173;7403:20;;-1:-1:-1;;;;;7452:31:821;;7442:42;;7432:70;;7498:1;7495;7488:12;7513:1270;7690:6;7698;7706;7714;7722;7730;7738;7746;7799:3;7787:9;7778:7;7774:23;7770:33;7767:53;;;7816:1;7813;7806:12;7767:53;7839:29;7858:9;7839:29;:::i;:::-;7829:39;;7919:2;7908:9;7904:18;7891:32;-1:-1:-1;;;;;7983:2:821;7975:6;7972:14;7969:34;;;7999:1;7996;7989:12;7969:34;8022:50;8064:7;8055:6;8044:9;8040:22;8022:50;:::i;:::-;8012:60;;8125:2;8114:9;8110:18;8097:32;8081:48;;8154:2;8144:8;8141:16;8138:36;;;8170:1;8167;8160:12;8138:36;8193:52;8237:7;8226:8;8215:9;8211:24;8193:52;:::i;:::-;8183:62;;8298:2;8287:9;8283:18;8270:32;8254:48;;8327:2;8317:8;8314:16;8311:36;;;8343:1;8340;8333:12;8311:36;8366:52;8410:7;8399:8;8388:9;8384:24;8366:52;:::i;:::-;8356:62;;8471:3;8460:9;8456:19;8443:33;8427:49;;8501:2;8491:8;8488:16;8485:36;;;8517:1;8514;8507:12;8485:36;;8540:63;8595:7;8584:8;8573:9;8569:24;8540:63;:::i;:::-;8530:73;;;8622:39;8656:3;8645:9;8641:19;8622:39;:::i;:::-;8612:49;;8680:39;8714:3;8703:9;8699:19;8680:39;:::i;:::-;8670:49;;8738:39;8772:3;8761:9;8757:19;8738:39;:::i;:::-;8728:49;;7513:1270;;;;;;;;;;;:::o;9078:837::-;9273:2;9262:9;9255:21;9318:6;9312:13;9307:2;9296:9;9292:18;9285:41;9380:2;9372:6;9368:15;9362:22;9357:2;9346:9;9342:18;9335:50;9439:2;9431:6;9427:15;9421:22;9416:2;9405:9;9401:18;9394:50;9499:2;9491:6;9487:15;9481:22;9475:3;9464:9;9460:19;9453:51;9559:3;9551:6;9547:16;9541:23;9535:3;9524:9;9520:19;9513:52;9620:3;9612:6;9608:16;9602:23;9596:3;9585:9;9581:19;9574:52;9709:1;9705;9700:3;9696:11;9692:19;9685:3;9677:6;9673:16;9667:23;9663:49;9657:3;9646:9;9642:19;9635:78;9236:4;9760:3;9752:6;9748:16;9742:23;9784:6;9826:2;9821;9810:9;9806:18;9799:30;;9846:63;9904:3;9893:9;9889:19;9875:12;9846:63;:::i;9920:390::-;10006:8;10016:6;10070:3;10063:4;10055:6;10051:17;10047:27;10037:55;;10088:1;10085;10078:12;10037:55;-1:-1:-1;10111:20:821;;-1:-1:-1;;;;;10143:30:821;;10140:50;;;10186:1;10183;10176:12;10140:50;10223:4;10215:6;10211:17;10199:29;;10283:3;10276:4;10266:6;10263:1;10259:14;10251:6;10247:27;10243:38;10240:47;10237:67;;;10300:1;10297;10290:12;10237:67;9920:390;;;;;:::o;10315:118::-;10401:5;10394:13;10387:21;10380:5;10377:32;10367:60;;10423:1;10420;10413:12;10438:624;10565:6;10573;10581;10634:2;10622:9;10613:7;10609:23;10605:32;10602:52;;;10650:1;10647;10640:12;10602:52;10690:9;10677:23;-1:-1:-1;;;;;10715:6:821;10712:30;10709:50;;;10755:1;10752;10745:12;10709:50;10794:93;10879:7;10870:6;10859:9;10855:22;10794:93;:::i;:::-;10906:8;;-1:-1:-1;10768:119:821;-1:-1:-1;;10991:2:821;10976:18;;10963:32;11004:28;10963:32;11004:28;:::i;:::-;11051:5;11041:15;;;10438:624;;;;;:::o;11067:632::-;11238:2;11290:21;;;11360:13;;11263:18;;;11382:22;;;11209:4;;11238:2;11461:15;;;;11435:2;11420:18;;;11209:4;11504:169;11518:6;11515:1;11512:13;11504:169;;;11579:13;;11567:26;;11648:15;;;;11613:12;;;;11540:1;11533:9;11504:169;;11704:1006;11852:6;11860;11868;11876;11884;11892;11945:3;11933:9;11924:7;11920:23;11916:33;11913:53;;;11962:1;11959;11952:12;11913:53;12001:9;11988:23;12020:31;12045:5;12020:31;:::i;:::-;12070:5;-1:-1:-1;12122:2:821;12107:18;;12094:32;;-1:-1:-1;12178:2:821;12163:18;;12150:32;12191:33;12150:32;12191:33;:::i;:::-;12243:7;-1:-1:-1;12297:2:821;12282:18;;12269:32;;-1:-1:-1;12352:3:821;12337:19;;12324:33;-1:-1:-1;;;;;12406:14:821;;;12403:34;;;12433:1;12430;12423:12;12403:34;12456:74;12522:7;12513:6;12502:9;12498:22;12456:74;:::i;:::-;12446:84;;12583:3;12572:9;12568:19;12555:33;12539:49;;12613:2;12603:8;12600:16;12597:36;;;12629:1;12626;12619:12;12597:36;;12652:52;12696:7;12685:8;12674:9;12670:24;12652:52;:::i;12968:322::-;13037:6;13090:2;13078:9;13069:7;13065:23;13061:32;13058:52;;;13106:1;13103;13096:12;13058:52;13146:9;13133:23;-1:-1:-1;;;;;13171:6:821;13168:30;13165:50;;;13211:1;13208;13201:12;13165:50;13234;13276:7;13267:6;13256:9;13252:22;13234:50;:::i;13295:383::-;13372:6;13380;13388;13441:2;13429:9;13420:7;13416:23;13412:32;13409:52;;;13457:1;13454;13447:12;13409:52;13496:9;13483:23;13515:31;13540:5;13515:31;:::i;:::-;13565:5;13617:2;13602:18;;13589:32;;-1:-1:-1;13668:2:821;13653:18;;;13640:32;;13295:383;-1:-1:-1;;;13295:383:821:o;13683:::-;13760:6;13768;13776;13829:2;13817:9;13808:7;13804:23;13800:32;13797:52;;;13845:1;13842;13835:12;13797:52;13881:9;13868:23;13858:33;;13941:2;13930:9;13926:18;13913:32;13954:31;13979:5;13954:31;:::i;14071:382::-;14136:6;14144;14197:2;14185:9;14176:7;14172:23;14168:32;14165:52;;;14213:1;14210;14203:12;14165:52;14252:9;14239:23;14271:31;14296:5;14271:31;:::i;:::-;14321:5;-1:-1:-1;14378:2:821;14363:18;;14350:32;14391:30;14350:32;14391:30;:::i;14458:375::-;14556:6;14609:2;14597:9;14588:7;14584:23;14580:32;14577:52;;;14625:1;14622;14615:12;14577:52;14665:9;14652:23;-1:-1:-1;;;;;14690:6:821;14687:30;14684:50;;;14730:1;14727;14720:12;14684:50;14753:74;14819:7;14810:6;14799:9;14795:22;14753:74;:::i;14838:471::-;14935:6;14943;14996:2;14984:9;14975:7;14971:23;14967:32;14964:52;;;15012:1;15009;15002:12;14964:52;15052:9;15039:23;-1:-1:-1;;;;;15077:6:821;15074:30;15071:50;;;15117:1;15114;15107:12;15071:50;15156:93;15241:7;15232:6;15221:9;15217:22;15156:93;:::i;:::-;15268:8;;15130:119;;-1:-1:-1;14838:471:821;-1:-1:-1;;;;14838:471:821:o;15314:812::-;15474:4;15503:2;15543;15532:9;15528:18;15573:2;15562:9;15555:21;15596:6;15631;15625:13;15662:6;15654;15647:22;15700:2;15689:9;15685:18;15678:25;;15762:2;15752:6;15749:1;15745:14;15734:9;15730:30;15726:39;15712:53;;15800:2;15792:6;15788:15;15821:1;15831:266;15845:6;15842:1;15839:13;15831:266;;;15938:2;15934:7;15922:9;15914:6;15910:22;15906:36;15901:3;15894:49;15966:51;16010:6;16001;15995:13;15966:51;:::i;:::-;15956:61;-1:-1:-1;16075:12:821;;;;16040:15;;;;15867:1;15860:9;15831:266;;;-1:-1:-1;16114:6:821;;15314:812;-1:-1:-1;;;;;;;15314:812:821:o;16451:755::-;16744:3;16733:9;16726:22;16707:4;16771:57;16823:3;16812:9;16808:19;16800:6;16771:57;:::i;:::-;16876:9;16868:6;16864:22;16859:2;16848:9;16844:18;16837:50;16910:44;16947:6;16939;16910:44;:::i;:::-;16896:58;;17002:9;16994:6;16990:22;16985:2;16974:9;16970:18;16963:50;17036:44;17073:6;17065;17036:44;:::i;:::-;17022:58;;17128:9;17120:6;17116:22;17111:2;17100:9;17096:18;17089:50;17156:44;17193:6;17185;17156:44;:::i;17211:666::-;17306:6;17314;17322;17330;17383:3;17371:9;17362:7;17358:23;17354:33;17351:53;;;17400:1;17397;17390:12;17351:53;17439:9;17426:23;17458:31;17483:5;17458:31;:::i;:::-;17508:5;-1:-1:-1;17565:2:821;17550:18;;17537:32;17578:33;17537:32;17578:33;:::i;:::-;17630:7;-1:-1:-1;17684:2:821;17669:18;;17656:32;;-1:-1:-1;17739:2:821;17724:18;;17711:32;-1:-1:-1;;;;;17755:30:821;;17752:50;;;17798:1;17795;17788:12;17752:50;17821;17863:7;17854:6;17843:9;17839:22;17821:50;:::i;:::-;17811:60;;;17211:666;;;;;;;:::o;18662:388::-;18730:6;18738;18791:2;18779:9;18770:7;18766:23;18762:32;18759:52;;;18807:1;18804;18797:12;18759:52;18846:9;18833:23;18865:31;18890:5;18865:31;:::i;:::-;18915:5;-1:-1:-1;18972:2:821;18957:18;;18944:32;18985:33;18944:32;18985:33;:::i;19055:380::-;19134:1;19130:12;;;;19177;;;19198:61;;19252:4;19244:6;19240:17;19230:27;;19198:61;19305:2;19297:6;19294:14;19274:18;19271:38;19268:161;;19351:10;19346:3;19342:20;19339:1;19332:31;19386:4;19383:1;19376:15;19414:4;19411:1;19404:15;19440:338;19642:2;19624:21;;;19681:2;19661:18;;;19654:30;-1:-1:-1;;;19715:2:821;19700:18;;19693:44;19769:2;19754:18;;19440:338::o;19783:545::-;19876:4;19882:6;19942:11;19929:25;20036:2;20032:7;20021:8;20005:14;20001:29;19997:43;19977:18;19973:68;19963:96;;20055:1;20052;20045:12;19963:96;20082:33;;20134:20;;;-1:-1:-1;;;;;;20166:30:821;;20163:50;;;20209:1;20206;20199:12;20163:50;20242:4;20230:17;;-1:-1:-1;20293:1:821;20289:14;;;20273;20269:35;20259:46;;20256:66;;;20318:1;20315;20308:12;21139:127;21200:10;21195:3;21191:20;21188:1;21181:31;21231:4;21228:1;21221:15;21255:4;21252:1;21245:15;21271:125;21336:9;;;21357:10;;;21354:36;;;21370:18;;:::i;22415:168::-;22488:9;;;22519;;22536:15;;;22530:22;;22516:37;22506:71;;22557:18;;:::i;22588:127::-;22649:10;22644:3;22640:20;22637:1;22630:31;22680:4;22677:1;22670:15;22704:4;22701:1;22694:15;22720:120;22760:1;22786;22776:35;;22791:18;;:::i;:::-;-1:-1:-1;22825:9:821;;22720:120::o;24596:127::-;24657:10;24652:3;24648:20;24645:1;24638:31;24688:4;24685:1;24678:15;24712:4;24709:1;24702:15;24728:333;24829:4;24887:11;24874:25;24981:3;24977:8;24966;24950:14;24946:29;24942:44;24922:18;24918:69;24908:97;;25001:1;24998;24991:12;24908:97;25022:33;;;;;24728:333;-1:-1:-1;;24728:333:821:o;25743:522::-;25821:4;25827:6;25887:11;25874:25;25981:2;25977:7;25966:8;25950:14;25946:29;25942:43;25922:18;25918:68;25908:96;;26000:1;25997;25990:12;25908:96;26027:33;;26079:20;;;-1:-1:-1;;;;;;26111:30:821;;26108:50;;;26154:1;26151;26144:12;26108:50;26187:4;26175:17;;-1:-1:-1;26218:14:821;26214:27;;;26204:38;;26201:58;;;26255:1;26252;26245:12;26396:543;26498:2;26493:3;26490:11;26487:446;;;26534:1;26558:5;26555:1;26548:16;26602:4;26599:1;26589:18;26672:2;26660:10;26656:19;26653:1;26649:27;26643:4;26639:38;26708:4;26696:10;26693:20;26690:47;;;-1:-1:-1;26731:4:821;26690:47;26786:2;26781:3;26777:12;26774:1;26770:20;26764:4;26760:31;26750:41;;26841:82;26859:2;26852:5;26849:13;26841:82;;;26904:17;;;26885:1;26874:13;26841:82;;26944:166;-1:-1:-1;;27072:1:821;27068:11;;;27064:24;27060:29;27050:40;27096:1;27092:11;;;;27047:57;;26944:166::o;27115:1190::-;-1:-1:-1;;;;;27218:3:821;27215:27;27212:53;;;27245:18;;:::i;:::-;27274:94;27364:3;27324:38;27356:4;27350:11;27324:38;:::i;:::-;27318:4;27274:94;:::i;:::-;27394:1;27419:2;27414:3;27411:11;27436:1;27431:616;;;;28091:1;28108:3;28105:93;;;-1:-1:-1;28164:19:821;;;28151:33;28105:93;28224:64;28284:3;28277:5;28224:64;:::i;:::-;28218:4;28211:78;;27404:895;;27431:616;26343:1;26336:14;;;26380:4;26367:18;;-1:-1:-1;;27467:17:821;;;27568:9;27590:229;27604:7;27601:1;27598:14;27590:229;;;27693:19;;;27680:33;27665:49;;27800:4;27785:20;;;;27753:1;27741:14;;;;27620:12;27590:229;;;27594:3;27847;27838:7;27835:16;27832:159;;;27971:1;27967:6;27961:3;27955;27952:1;27948:11;27944:21;27940:34;27936:39;27923:9;27918:3;27914:19;27901:33;27897:79;27889:6;27882:95;27832:159;;;28034:1;28028:3;28025:1;28021:11;28017:19;28011:4;28004:33;27404:895;;27115:1190;;;:::o;28310:956::-;28489:5;28476:19;28470:4;28463:33;28550:2;28543:5;28539:14;28526:28;28522:1;28516:4;28512:12;28505:50;28609:2;28602:5;28598:14;28585:28;28581:1;28575:4;28571:12;28564:50;28668:2;28661:5;28657:14;28644:28;28640:1;28634:4;28630:12;28623:50;28727:3;28720:5;28716:15;28703:29;28699:1;28693:4;28689:12;28682:51;28787:3;28780:5;28776:15;28763:29;28759:1;28753:4;28749:12;28742:51;28830:1;28824:4;28820:12;28880:3;28873:5;28869:15;28856:29;28894:33;28919:7;28894:33;:::i;:::-;28962:17;;-1:-1:-1;;;;;;28958:48:821;-1:-1:-1;;;;;29008:33:821;;;;28955:87;28936:107;;29086:66;29147:3;29136:15;;29140:5;29086:66;:::i;:::-;29161:99;29246:13;29233:11;29229:1;29223:4;29219:12;29161:99;:::i;29271:501::-;29330:5;29337:6;29397:3;29384:17;29483:2;29479:7;29468:8;29452:14;29448:29;29444:43;29424:18;29420:68;29410:96;;29502:1;29499;29492:12;29410:96;29530:33;;29634:4;29621:18;;;-1:-1:-1;29582:21:821;;-1:-1:-1;;;;;;29651:30:821;;29648:50;;;29694:1;29691;29684:12;29648:50;29741:6;29725:14;29721:27;29714:5;29710:39;29707:59;;;29762:1;29759;29752:12;29777:267;29866:6;29861:3;29854:19;29918:6;29911:5;29904:4;29899:3;29895:14;29882:43;-1:-1:-1;29970:1:821;29945:16;;;29963:4;29941:27;;;29934:38;;;;30026:2;30005:15;;;-1:-1:-1;;30001:29:821;29992:39;;;29988:50;;29777:267::o;30049:2051::-;30320:2;30372:21;;;30345:18;;;30428:22;;;30291:4;;30469:2;30487:18;;;30551:1;30547:14;;;30532:30;;30528:39;;30590:6;30291:4;;30645:1372;30661:6;30656:3;30653:15;30645:1372;;;30730:22;;;-1:-1:-1;;30726:36:821;30714:49;;30802:20;;30877:14;30873:27;;;-1:-1:-1;;30869:42:821;30845:67;;30835:95;;30926:1;30923;30916:12;30835:95;30956:31;;31044:19;;31029:35;;31087:4;31141:14;;;31128:28;31111:15;;;31104:53;31207:14;;;31194:28;31177:15;;;31170:53;31273:14;;;31260:28;31243:15;;;31236:53;31312:4;31366:14;;;31353:28;31336:15;;;31329:53;31405:4;31459:14;;;31446:28;31429:15;;;31422:53;31010:6;;31498:4;31543:14;;;31530:28;31571:33;31530:28;31571:33;:::i;:::-;-1:-1:-1;;;;;31641:33:821;31624:15;;;31617:58;31698:4;31749:54;31788:14;;;31792:5;31749:54;:::i;:::-;31715:88;;31840:2;31835;31827:6;31823:15;31816:27;31866:71;31933:2;31925:6;31921:15;31907:12;31893;31866:71;:::i;:::-;31995:12;;;;31856:81;-1:-1:-1;;;31960:15:821;;;;;-1:-1:-1;;30687:1:821;30678:11;30645:1372;;;-1:-1:-1;;;470:13:821;;463:21;32088:4;32073:20;;451:34;32034:6;-1:-1:-1;32049:45:821;;-1:-1:-1;;;400:91:821;32631:352;32842:6;32834;32829:3;32816:33;32937:2;32908:15;;;;-1:-1:-1;;;;;;32904:45:821;32868:16;;32893:57;;;32974:2;32966:11;;32631:352;-1:-1:-1;32631:352:821:o;32988:128::-;33055:9;;;33076:11;;;33073:37;;;33090:18;;:::i;33121:136::-;33160:3;33188:5;33178:39;;33197:18;;:::i;:::-;-1:-1:-1;;;33233:18:821;;33121:136::o;34515:198::-;34557:3;34595:5;34589:12;34610:65;34668:6;34663:3;34656:4;34649:5;34645:16;34610:65;:::i;:::-;34691:16;;;;;34515:198;-1:-1:-1;;34515:198:821:o;34718:810::-;-1:-1:-1;;;35124:3:821;35117:36;35099:3;35182:6;35176:13;35198:75;35266:6;35261:2;35256:3;35252:12;35245:4;35237:6;35233:17;35198:75;:::i;:::-;-1:-1:-1;;;35332:2:821;35292:16;;;35324:11;;;35317:40;35382:13;;35404:76;35382:13;35466:2;35458:11;;35451:4;35439:17;;35404:76;:::i;:::-;35500:17;35519:2;35496:26;;34718:810;-1:-1:-1;;;;34718:810:821:o;35533:407::-;35735:2;35717:21;;;35774:2;35754:18;;;35747:30;35813:34;35808:2;35793:18;;35786:62;-1:-1:-1;;;35879:2:821;35864:18;;35857:41;35930:3;35915:19;;35533:407::o;35945:416::-;36147:2;36129:21;;;36186:2;36166:18;;;36159:30;36225:34;36220:2;36205:18;;36198:62;-1:-1:-1;;;36291:2:821;36276:18;;36269:50;36351:3;36336:19;;35945:416::o;36366:1345::-;36492:3;36486:10;-1:-1:-1;;;;;36511:6:821;36508:30;36505:56;;;36541:18;;:::i;:::-;36570:97;36660:6;36620:38;36652:4;36646:11;36620:38;:::i;:::-;36614:4;36570:97;:::i;:::-;36722:4;;36779:2;36768:14;;36796:1;36791:663;;;;37498:1;37515:6;37512:89;;;-1:-1:-1;37567:19:821;;;37561:26;37512:89;37627:67;37687:6;37680:5;37627:67;:::i;:::-;37621:4;37614:81;;36761:944;;36791:663;26343:1;26336:14;;;26380:4;26367:18;;-1:-1:-1;;36827:20:821;;;36945:236;36959:7;36956:1;36953:14;36945:236;;;37048:19;;;37042:26;37027:42;;37140:27;;;;37108:1;37096:14;;;;36975:19;;36945:236;;;36949:3;37209:6;37200:7;37197:19;37194:201;;;37270:19;;;37264:26;-1:-1:-1;;37353:1:821;37349:14;;;37365:3;37345:24;37341:37;37337:42;37322:58;37307:74;;37194:201;-1:-1:-1;;;;;37441:1:821;37425:14;;;37421:22;37408:36;;-1:-1:-1;36366:1345:821:o;37716:405::-;37913:2;37902:9;37895:21;37876:4;37939:56;37991:2;37980:9;37976:18;37968:6;37939:56;:::i;:::-;38043:9;38035:6;38031:22;38026:2;38015:9;38011:18;38004:50;38071:44;38108:6;38100;38071:44;:::i;:::-;38063:52;37716:405;-1:-1:-1;;;;;37716:405:821:o;38126:339::-;38328:2;38310:21;;;38367:2;38347:18;;;38340:30;-1:-1:-1;;;38401:2:821;38386:18;;38379:45;38456:2;38441:18;;38126:339::o;39741:819::-;40074:3;40063:9;40056:22;40037:4;40101:63;40159:3;40148:9;40144:19;40136:6;40128;40101:63;:::i;:::-;40212:9;40204:6;40200:22;40195:2;40184:9;40180:18;40173:50;40246;40289:6;40281;40273;40246:50;:::i;:::-;40232:64;;40344:9;40336:6;40332:22;40327:2;40316:9;40312:18;40305:50;40378;40421:6;40413;40405;40378:50;:::i;:::-;40364:64;;40476:9;40468:6;40464:22;40459:2;40448:9;40444:18;40437:50;40504;40547:6;40539;40531;40504:50;:::i;:::-;40496:58;39741:819;-1:-1:-1;;;;;;;;;;;39741:819:821:o;40565:500::-;-1:-1:-1;;;;;40834:15:821;;;40816:34;;40886:15;;40881:2;40866:18;;40859:43;40933:2;40918:18;;40911:34;;;40981:3;40976:2;40961:18;;40954:31;;;40759:4;;41002:57;;41039:19;;41031:6;41002:57;:::i;41070:249::-;41139:6;41192:2;41180:9;41171:7;41167:23;41163:32;41160:52;;;41208:1;41205;41198:12;41160:52;41240:9;41234:16;41259:30;41283:5;41259:30;:::i;41685:287::-;41814:3;41852:6;41846:13;41868:66;41927:6;41922:3;41915:4;41907:6;41903:17;41868:66;:::i;42902:1021::-;-1:-1:-1;;;43402:43:821;;43468:13;;43384:3;;43490:74;43468:13;43553:1;43544:11;;43537:4;43525:17;;43490:74;:::i;:::-;-1:-1:-1;;;43623:1:821;43583:16;;;43615:10;;;43608:73;43706:13;;43728:76;43706:13;43790:2;43782:11;;43775:4;43763:17;;43728:76;:::i;:::-;-1:-1:-1;;;43864:2:821;43823:17;;;;43856:11;;;43849:41;43914:2;43906:11;;42902:1021;-1:-1:-1;;;;42902:1021:821:o;43928:630::-;-1:-1:-1;;;44279:43:821;;44345:13;;44261:3;;44367:74;44345:13;44430:1;44421:11;;44414:4;44402:17;;44367:74;:::i;:::-;-1:-1:-1;;;44500:1:821;44460:16;;;;44492:10;;;44485:40;-1:-1:-1;44549:2:821;44541:11;;43928:630;-1:-1:-1;43928:630:821:o;44563:648::-;-1:-1:-1;;;44914:59:821;;44996:13;;44896:3;;45018:75;44996:13;45081:2;45072:12;;45065:4;45053:17;;45018:75;:::i;:::-;-1:-1:-1;;;45152:2:821;45112:16;;;;45144:11;;;45137:41;-1:-1:-1;45202:2:821;45194:11;;44563:648;-1:-1:-1;44563:648:821:o;45500:2320::-;-1:-1:-1;;;46697:45:821;;46765:13;;46679:3;;46787:75;46765:13;46850:2;46841:12;;46834:4;46822:17;;46787:75;:::i;:::-;-1:-1:-1;;;46921:2:821;46881:16;;;46913:11;;;46906:24;46955:13;;46977:76;46955:13;47039:2;47031:11;;47024:4;47012:17;;46977:76;:::i;:::-;-1:-1:-1;;;47152:2:821;47072:17;;;;47144:11;;;47137:23;;;-1:-1:-1;;;47184:2:821;47176:11;;47169:63;47257:13;;47279:76;47257:13;47341:2;47333:11;;47326:4;47314:17;;47279:76;:::i;:::-;47415:2;47374:17;;47407:11;;;47400:23;47448:13;;47470:76;47448:13;47532:2;47524:11;;47517:4;47505:17;;47470:76;:::i;:::-;-1:-1:-1;;;47606:2:821;47565:17;;;;47598:11;;;47591:80;47687:127;47717:96;47743:69;47773:38;47807:2;47799:11;;47791:6;47773:38;:::i;:::-;-1:-1:-1;;;45281:47:821;;45353:2;45344:12;;45216:146;47743:69;47735:6;47717:96;:::i;:::-;-1:-1:-1;;;45432:30:821;;45487:1;45478:11;;45367:128;47687:127;47680:134;45500:2320;-1:-1:-1;;;;;;;;;45500:2320:821:o;47825:461::-;48087:31;48082:3;48075:44;48057:3;48148:6;48142:13;48164:75;48232:6;48227:2;48222:3;48218:12;48211:4;48203:6;48199:17;48164:75;:::i;:::-;48259:16;;;;48277:2;48255:25;;47825:461;-1:-1:-1;;47825:461:821:o;48671:135::-;48710:3;48731:17;;;48728:43;;48751:18;;:::i;:::-;-1:-1:-1;48798:1:821;48787:13;;48671:135::o;48811:112::-;48843:1;48869;48859:35;;48874:18;;:::i;:::-;-1:-1:-1;48908:9:821;;48811:112::o;48928:245::-;48995:6;49048:2;49036:9;49027:7;49023:23;49019:32;49016:52;;;49064:1;49061;49054:12;49016:52;49096:9;49090:16;49115:28;49137:5;49115:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128)": "49c5c5b6",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string))": "a7d27d9d",
    "sharedMetadata()": "b280f703",
    "startTokenId()": "e6798baa",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadata.SharedMetadataInfo\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharedMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can update the shared metadata of tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataUpdated(string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string))\":{\"notice\":\"Set shared metadata for NFTs\"},\"sharedMetadata()\":{\"notice\":\"Token metadata information\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/open-edition/OpenEditionERC721.sol\":\"OpenEditionERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/eip/interface/IERC4906.sol\":{\"keccak256\":\"0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4\",\"dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf\",\"dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x1dd88efbb5c330aef09d2a098b0ab8e0e1174d90868feb99b03853a09c74ed98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21316bcbd9ae85aa41d7d54e1b54affad9abb94c0b19857301ead1da53c51859\",\"dweb:/ipfs/QmdD1VHqquTXuw2N3WAZGiUtUP3kStgTHtVfc1fixUXmhB\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xeb356818f473d40b4b056949761753afbdd54e73d96c66bf55efb16a5de8901a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10f33e9ebfd69ea56dd8d9d1537f29daa8177e48d5fe11ddf4f62d1e08b75c56\",\"dweb:/ipfs/Qmb2XeAGtzqR8ve9qjEGwfNSKpknbM5GhgYES84xF7fVQQ\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xe560b4168680e42f0639002e13e1623b9aa35221275d45352b61d71ae0a3a1cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6adaf9ced97b7982ac08fe5c28b3e9d45b0938766ef2901620cff0ad352f99a0\",\"dweb:/ipfs/QmafJp5i5m66ZERXVHS4tSfiJN8qdUQ9HJF4pEe4e7LTie\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x1db4d8a0604002f8cd30668ddd3012ab625b4c3d0a0bf313a2aeb196ebb3955d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://240a5179644892c5553fff1a81a41972dd42dd6f2e8357babe172f16c3f32392\",\"dweb:/ipfs/QmZYHxsJ27xigoDp7NsRJP9yW6gYduQ1D16xHS6eRcbAcr\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0xac9e5863e0f7832c812832d0733f1caa55f974164f9fc55478e88a2294689a7e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6913508ea60948ca7441e4c008b4450b013b8b409eb74037c6b4dad70702686c\",\"dweb:/ipfs/QmdCgrdkR8cTLBkGawxbBwQLRNQfSdAxQ1YSJDwzctU3Wj\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/SharedMetadata.sol\":{\"keccak256\":\"0xdd8162e6a1c14d024a70858566d7b83781fe0c2fadd3e6a8a1451b864d311e26\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://06429b018034e6da1b44290e7253c4012b4be2d265f57dc14a1ca70f8c27ae24\",\"dweb:/ipfs/QmbzGz3iLQkAyKwrkmeqY16G6VTn9m1oiYgDaU3G31DNYV\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/extension/interface/ISharedMetadata.sol\":{\"keccak256\":\"0x854451e0d70760c7fbe438aa6f09e3c310fd501567e78ae7d37ab19dd82e0499\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://e5df37ec2be0af127bb0fd549cdf2599e55f5eeceed841953939309eb81e2a15\",\"dweb:/ipfs/QmVc3TgdN9MJU5HL8G9Tdx3ThzYtmLRtBrF9QrM3WDdMm7\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732\",\"dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU\"]},\"contracts/lib/NFTMetadataRenderer.sol\":{\"keccak256\":\"0x08f940499add1fb67459e6fda2887ab5b826554388423d6d5351385950addf7f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f30a9a833ac206381f80e19005d40e90f8c59ae739dbb083bbc9926f99b9c4f\",\"dweb:/ipfs/QmVUSSeHgpXYRQtgQSqT1Fg9PeFiwd8zuaGjRgvmhvK8aq\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/open-edition/OpenEditionERC721.sol\":{\"keccak256\":\"0xa01da413dd54bf83a3bdba82c398adb48063dedf0ba346d2b9a993b5a0ecce6f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e8cba80a8e48a57666ef72971d42adc47d1f63110edd0a8ab507725aa5a9419\",\"dweb:/ipfs/QmWKKcRAdqfgyMussoCkmgetdLWL6a9eCGXtsMaXnGMbUh\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b\",\"dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadata.SharedMetadataInfo",
              "name": "_metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sharedMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string))": {
            "notice": "Set shared metadata for NFTs"
          },
          "sharedMetadata()": {
            "notice": "Token metadata information"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/open-edition/OpenEditionERC721.sol": "OpenEditionERC721"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC4906.sol": {
        "keccak256": "0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392",
        "urls": [
          "bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4",
          "dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea",
        "urls": [
          "bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf",
          "dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x1dd88efbb5c330aef09d2a098b0ab8e0e1174d90868feb99b03853a09c74ed98",
        "urls": [
          "bzz-raw://21316bcbd9ae85aa41d7d54e1b54affad9abb94c0b19857301ead1da53c51859",
          "dweb:/ipfs/QmdD1VHqquTXuw2N3WAZGiUtUP3kStgTHtVfc1fixUXmhB"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xeb356818f473d40b4b056949761753afbdd54e73d96c66bf55efb16a5de8901a",
        "urls": [
          "bzz-raw://10f33e9ebfd69ea56dd8d9d1537f29daa8177e48d5fe11ddf4f62d1e08b75c56",
          "dweb:/ipfs/Qmb2XeAGtzqR8ve9qjEGwfNSKpknbM5GhgYES84xF7fVQQ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xe560b4168680e42f0639002e13e1623b9aa35221275d45352b61d71ae0a3a1cb",
        "urls": [
          "bzz-raw://6adaf9ced97b7982ac08fe5c28b3e9d45b0938766ef2901620cff0ad352f99a0",
          "dweb:/ipfs/QmafJp5i5m66ZERXVHS4tSfiJN8qdUQ9HJF4pEe4e7LTie"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0x1db4d8a0604002f8cd30668ddd3012ab625b4c3d0a0bf313a2aeb196ebb3955d",
        "urls": [
          "bzz-raw://240a5179644892c5553fff1a81a41972dd42dd6f2e8357babe172f16c3f32392",
          "dweb:/ipfs/QmZYHxsJ27xigoDp7NsRJP9yW6gYduQ1D16xHS6eRcbAcr"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0xac9e5863e0f7832c812832d0733f1caa55f974164f9fc55478e88a2294689a7e",
        "urls": [
          "bzz-raw://6913508ea60948ca7441e4c008b4450b013b8b409eb74037c6b4dad70702686c",
          "dweb:/ipfs/QmdCgrdkR8cTLBkGawxbBwQLRNQfSdAxQ1YSJDwzctU3Wj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SharedMetadata.sol": {
        "keccak256": "0xdd8162e6a1c14d024a70858566d7b83781fe0c2fadd3e6a8a1451b864d311e26",
        "urls": [
          "bzz-raw://06429b018034e6da1b44290e7253c4012b4be2d265f57dc14a1ca70f8c27ae24",
          "dweb:/ipfs/QmbzGz3iLQkAyKwrkmeqY16G6VTn9m1oiYgDaU3G31DNYV"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadata.sol": {
        "keccak256": "0x854451e0d70760c7fbe438aa6f09e3c310fd501567e78ae7d37ab19dd82e0499",
        "urls": [
          "bzz-raw://e5df37ec2be0af127bb0fd549cdf2599e55f5eeceed841953939309eb81e2a15",
          "dweb:/ipfs/QmVc3TgdN9MJU5HL8G9Tdx3ThzYtmLRtBrF9QrM3WDdMm7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad",
        "urls": [
          "bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732",
          "dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRenderer.sol": {
        "keccak256": "0x08f940499add1fb67459e6fda2887ab5b826554388423d6d5351385950addf7f",
        "urls": [
          "bzz-raw://9f30a9a833ac206381f80e19005d40e90f8c59ae739dbb083bbc9926f99b9c4f",
          "dweb:/ipfs/QmVUSSeHgpXYRQtgQSqT1Fg9PeFiwd8zuaGjRgvmhvK8aq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/open-edition/OpenEditionERC721.sol": {
        "keccak256": "0xa01da413dd54bf83a3bdba82c398adb48063dedf0ba346d2b9a993b5a0ecce6f",
        "urls": [
          "bzz-raw://2e8cba80a8e48a57666ef72971d42adc47d1f63110edd0a8ab507725aa5a9419",
          "dweb:/ipfs/QmWKKcRAdqfgyMussoCkmgetdLWL6a9eCGXtsMaXnGMbUh"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf",
        "urls": [
          "bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b",
          "dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/open-edition/OpenEditionERC721.sol",
    "id": 87688,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "Base64": [
        49257
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "Drop": [
        18899
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "ERC721AQueryableUpgradeable": [
        14996
      ],
      "ERC721AStorage": [
        15047
      ],
      "ERC721AUpgradeable": [
        17024
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        15068
      ],
      "ERC721A__Initializable": [
        17127
      ],
      "ERC721A__InitializableStorage": [
        17153
      ],
      "IClaimCondition": [
        32931
      ],
      "IClaimConditionMultiPhase": [
        32955
      ],
      "IContractMetadata": [
        33084
      ],
      "IDrop": [
        33221
      ],
      "IERC165": [
        13945
      ],
      "IERC165Upgradeable": [
        162704
      ],
      "IERC20": [
        14015
      ],
      "IERC2981": [
        14089
      ],
      "IERC2981Upgradeable": [
        153941
      ],
      "IERC4906": [
        14108
      ],
      "IERC721": [
        14221
      ],
      "IERC721AQueryableUpgradeable": [
        17246
      ],
      "IERC721AUpgradeable": [
        17452
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IPrimarySale": [
        33997
      ],
      "IRoyalty": [
        34061
      ],
      "ISharedMetadata": [
        34277
      ],
      "IWETH": [
        55358
      ],
      "Initializable": [
        154159
      ],
      "MathUpgradeable": [
        163570
      ],
      "MerkleProof": [
        65274
      ],
      "Multicall": [
        21206
      ],
      "NFTMetadataRenderer": [
        65453
      ],
      "OpenEditionERC721": [
        87687
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "PrimarySale": [
        22703
      ],
      "Royalty": [
        23031
      ],
      "SafeERC20": [
        49165
      ],
      "SharedMetadata": [
        23140
      ],
      "SignedMathUpgradeable": [
        165216
      ],
      "Strings": [
        66084
      ],
      "StringsUpgradeable": [
        161995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9655:370",
    "nodes": [
      {
        "id": 87132,
        "nodeType": "PragmaDirective",
        "src": "39:24:370",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 87133,
        "nodeType": "ImportDirective",
        "src": "775:74:370",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 161996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87134,
        "nodeType": "ImportDirective",
        "src": "850:80:370",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 153942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87135,
        "nodeType": "ImportDirective",
        "src": "932:61:370",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "../../eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 14997,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87136,
        "nodeType": "ImportDirective",
        "src": "1043:79:370",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87137,
        "nodeType": "ImportDirective",
        "src": "1123:43:370",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 65176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87138,
        "nodeType": "ImportDirective",
        "src": "1208:39:370",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87139,
        "nodeType": "ImportDirective",
        "src": "1248:46:370",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87140,
        "nodeType": "ImportDirective",
        "src": "1295:37:370",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 23032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87141,
        "nodeType": "ImportDirective",
        "src": "1333:41:370",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87142,
        "nodeType": "ImportDirective",
        "src": "1375:37:370",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87143,
        "nodeType": "ImportDirective",
        "src": "1413:44:370",
        "nodes": [],
        "absolutePath": "contracts/extension/SharedMetadata.sol",
        "file": "../../extension/SharedMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 23141,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87144,
        "nodeType": "ImportDirective",
        "src": "1458:51:370",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87145,
        "nodeType": "ImportDirective",
        "src": "1510:34:370",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87688,
        "sourceUnit": 18900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87687,
        "nodeType": "ContractDefinition",
        "src": "1546:8147:370",
        "nodes": [
          {
            "id": 87170,
            "nodeType": "UsingForDirective",
            "src": "1801:37:370",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 87168,
              "name": "StringsUpgradeable",
              "nameLocations": [
                "1807:18:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161995,
              "src": "1807:18:370"
            },
            "typeName": {
              "id": 87169,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1830:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 87173,
            "nodeType": "VariableDeclaration",
            "src": "2131:28:370",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 87171,
              "nodeType": "StructuredDocumentation",
              "src": "2028:98:370",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2147:12:370",
            "scope": 87687,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 87172,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2131:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 87176,
            "nodeType": "VariableDeclaration",
            "src": "2245:26:370",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 87174,
              "nodeType": "StructuredDocumentation",
              "src": "2165:75:370",
              "text": "@dev Only MINTER_ROLE holders can update the shared metadata of tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2261:10:370",
            "scope": 87687,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 87175,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2245:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 87180,
            "nodeType": "VariableDeclaration",
            "src": "2323:41:370",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 87177,
              "nodeType": "StructuredDocumentation",
              "src": "2278:40:370",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2348:7:370",
            "scope": 87687,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87178,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2323:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 87179,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2358:6:370",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 87186,
            "nodeType": "FunctionDefinition",
            "src": "2563:28:370",
            "nodes": [],
            "body": {
              "id": 87185,
              "nodeType": "Block",
              "src": "2589:2:370",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 87183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87182,
                  "name": "initializer",
                  "nameLocations": [
                    "2577:11:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2577:11:370"
                },
                "nodeType": "ModifierInvocation",
                "src": "2577:11:370"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 87181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2574:2:370"
            },
            "returnParameters": {
              "id": 87184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2589:0:370"
            },
            "scope": 87687,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87281,
            "nodeType": "FunctionDefinition",
            "src": "2656:1095:370",
            "nodes": [],
            "body": {
              "id": 87280,
              "nodeType": "Block",
              "src": "2990:761:370",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87212,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3008:13:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 87280,
                      "src": "3000:21:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 87211,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3000:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87216,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 87214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3034:15:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 87213,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3024:9:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 87215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3024:26:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3000:50:370"
                },
                {
                  "assignments": [
                    87218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87218,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3068:11:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 87280,
                      "src": "3060:19:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 87217,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87222,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 87220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3092:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 87219,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3082:9:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 87221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:24:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3060:46:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87224,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87198,
                        "src": "3214:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 87223,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "3192:21:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 87225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87226,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:41:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87228,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87191,
                        "src": "3258:5:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 87229,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87193,
                        "src": "3265:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 87227,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15158,
                      "src": "3243:14:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 87230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:30:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87231,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:30:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87233,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87195,
                        "src": "3302:12:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 87232,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "3284:17:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 87234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:31:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87235,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:31:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87237,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87189,
                        "src": "3337:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87236,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "3325:11:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:26:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87239,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:26:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87241,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3373:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 87242,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87189,
                        "src": "3393:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87240,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3362:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 87243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3362:45:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87244,
                  "nodeType": "ExpressionStatement",
                  "src": "3362:45:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87246,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87218,
                        "src": "3428:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 87247,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87189,
                        "src": "3441:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87245,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3417:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 87248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3417:38:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87249,
                  "nodeType": "ExpressionStatement",
                  "src": "3417:38:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87251,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87212,
                        "src": "3476:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 87252,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87189,
                        "src": "3491:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87250,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3465:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 87253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3465:40:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87254,
                  "nodeType": "ExpressionStatement",
                  "src": "3465:40:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87256,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87212,
                        "src": "3526:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3549:1:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3541:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3541:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:10:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87255,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3515:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 87261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:37:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87262,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:37:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87264,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87202,
                        "src": "3588:17:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87265,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87204,
                        "src": "3607:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87263,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "3563:24:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 87266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:56:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87267,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:56:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87269,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87200,
                        "src": "3656:14:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87268,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "3629:26:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:42:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87271,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:42:370"
                },
                {
                  "expression": {
                    "id": 87274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87272,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87173,
                      "src": "3682:12:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87273,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87212,
                      "src": "3697:13:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3682:28:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87275,
                  "nodeType": "ExpressionStatement",
                  "src": "3682:28:370"
                },
                {
                  "expression": {
                    "id": 87278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87276,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87176,
                      "src": "3720:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87277,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87218,
                      "src": "3733:11:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3720:24:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87279,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:24:370"
                }
              ]
            },
            "documentation": {
              "id": 87187,
              "nodeType": "StructuredDocumentation",
              "src": "2597:54:370",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "49c5c5b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87207,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87206,
                  "name": "initializerERC721A",
                  "nameLocations": [
                    "2959:18:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17091,
                  "src": "2959:18:370"
                },
                "nodeType": "ModifierInvocation",
                "src": "2959:18:370"
              },
              {
                "id": 87209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87208,
                  "name": "initializer",
                  "nameLocations": [
                    "2978:11:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2978:11:370"
                },
                "nodeType": "ModifierInvocation",
                "src": "2978:11:370"
              }
            ],
            "name": "initialize",
            "nameLocation": "2665:10:370",
            "parameters": {
              "id": 87205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87189,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2693:13:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2685:21:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87191,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2730:5:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2716:19:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87193,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2759:7:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2745:21:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87195,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2790:12:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2776:26:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87198,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2829:18:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2812:35:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87196,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2812:7:370",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87197,
                    "nodeType": "ArrayTypeName",
                    "src": "2812:9:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87200,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2865:14:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2857:22:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2857:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87202,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2897:17:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2889:25:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87204,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "2932:11:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87281,
                  "src": "2924:19:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87203,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:274:370"
            },
            "returnParameters": {
              "id": 87210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:0:370"
            },
            "scope": 87687,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87307,
            "nodeType": "FunctionDefinition",
            "src": "3998:275:370",
            "nodes": [],
            "body": {
              "id": 87306,
              "nodeType": "Block",
              "src": "4142:131:370",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 87295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4156:18:370",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 87293,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87284,
                          "src": "4165:8:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 87292,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15911,
                        "src": "4157:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 87294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4157:17:370",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87301,
                  "nodeType": "IfStatement",
                  "src": "4152:62:370",
                  "trueBody": {
                    "id": 87300,
                    "nodeType": "Block",
                    "src": "4176:38:370",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 87297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4197:5:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 87296,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "4190:6:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 87298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4190:13:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87299,
                        "nodeType": "ExpressionStatement",
                        "src": "4190:13:370"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87303,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87284,
                        "src": "4257:8:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87302,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23133,
                      "src": "4231:25:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 87304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:35:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 87291,
                  "id": 87305,
                  "nodeType": "Return",
                  "src": "4224:42:370"
                }
              ]
            },
            "baseFunctions": [
              15495,
              17440
            ],
            "documentation": {
              "id": 87282,
              "nodeType": "StructuredDocumentation",
              "src": "3948:45:370",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4007:8:370",
            "overrides": {
              "id": 87288,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 87286,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": [
                    "4077:18:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17024,
                  "src": "4077:18:370"
                },
                {
                  "id": 87287,
                  "name": "IERC721AUpgradeable",
                  "nameLocations": [
                    "4097:19:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17452,
                  "src": "4097:19:370"
                }
              ],
              "src": "4068:49:370"
            },
            "parameters": {
              "id": 87285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87284,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4033:8:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87307,
                  "src": "4025:16:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4015:32:370"
            },
            "returnParameters": {
              "id": 87291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87307,
                  "src": "4127:13:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4127:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4126:15:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87332,
            "nodeType": "FunctionDefinition",
            "src": "4304:271:370",
            "nodes": [],
            "body": {
              "id": 87331,
              "nodeType": "Block",
              "src": "4459:116:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 87321,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87310,
                          "src": "4500:11:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 87319,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4476:5:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$87687_$",
                            "typeString": "type(contract super OpenEditionERC721)"
                          }
                        },
                        "id": 87320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4482:17:370",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15424,
                        "src": "4476:23:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 87322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4476:36:370",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 87328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87324,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153941,
                              "src": "4521:19:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 87323,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4516:4:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4516:25:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$153941",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 87326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4542:11:370",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4516:37:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 87327,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87310,
                        "src": "4557:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4516:52:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4476:92:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87318,
                  "id": 87330,
                  "nodeType": "Return",
                  "src": "4469:99:370"
                }
              ]
            },
            "baseFunctions": [
              13944,
              15424,
              17311
            ],
            "documentation": {
              "id": 87308,
              "nodeType": "StructuredDocumentation",
              "src": "4279:20:370",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4313:17:370",
            "overrides": {
              "id": 87315,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 87312,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": [
                    "4394:18:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17024,
                  "src": "4394:18:370"
                },
                {
                  "id": 87313,
                  "name": "IERC165",
                  "nameLocations": [
                    "4414:7:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "4414:7:370"
                },
                {
                  "id": 87314,
                  "name": "IERC721AUpgradeable",
                  "nameLocations": [
                    "4423:19:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17452,
                  "src": "4423:19:370"
                }
              ],
              "src": "4385:58:370"
            },
            "parameters": {
              "id": 87311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87310,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4347:11:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87332,
                  "src": "4340:18:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 87309,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4340:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4330:34:370"
            },
            "returnParameters": {
              "id": 87318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87332,
                  "src": "4453:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87316,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4452:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87342,
            "nodeType": "FunctionDefinition",
            "src": "4631:91:370",
            "nodes": [],
            "body": {
              "id": 87341,
              "nodeType": "Block",
              "src": "4697:25:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 87339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4714:1:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 87338,
                  "id": 87340,
                  "nodeType": "Return",
                  "src": "4707:8:370"
                }
              ]
            },
            "baseFunctions": [
              15202
            ],
            "documentation": {
              "id": 87333,
              "nodeType": "StructuredDocumentation",
              "src": "4581:45:370",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4640:13:370",
            "overrides": {
              "id": 87335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4670:8:370"
            },
            "parameters": {
              "id": 87334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4653:2:370"
            },
            "returnParameters": {
              "id": 87338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87342,
                  "src": "4688:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4688:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4687:9:370"
            },
            "scope": 87687,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87351,
            "nodeType": "FunctionDefinition",
            "src": "4728:93:370",
            "nodes": [],
            "body": {
              "id": 87350,
              "nodeType": "Block",
              "src": "4782:39:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87347,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        87342
                      ],
                      "referencedDeclaration": 87342,
                      "src": "4799:13:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 87348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4799:15:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87346,
                  "id": 87349,
                  "nodeType": "Return",
                  "src": "4792:22:370"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4737:12:370",
            "parameters": {
              "id": 87343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4749:2:370"
            },
            "returnParameters": {
              "id": 87346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87351,
                  "src": "4773:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4772:9:370"
            },
            "scope": 87687,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87437,
            "nodeType": "FunctionDefinition",
            "src": "5094:840:370",
            "nodes": [],
            "body": {
              "id": 87436,
              "nodeType": "Block",
              "src": "5280:654:370",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87364,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87360,
                      "src": "5294:14:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5312:1:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5294:19:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87377,
                  "nodeType": "IfStatement",
                  "src": "5290:103:370",
                  "trueBody": {
                    "id": 87376,
                    "nodeType": "Block",
                    "src": "5315:78:370",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 87371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 87368,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5337:3:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 87369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5341:5:370",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5337:9:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 87370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5350:1:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5337:14:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 87372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5353:8:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 87367,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5329:7:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 87373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5329:33:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87374,
                        "nodeType": "ExpressionStatement",
                        "src": "5329:33:370"
                      },
                      {
                        "functionReturnParameters": 87363,
                        "id": 87375,
                        "nodeType": "Return",
                        "src": "5376:7:370"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87379,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5411:10:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 87436,
                      "src": "5403:18:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87378,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5403:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87383,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87380,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87356,
                      "src": "5424:16:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 87381,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87360,
                      "src": "5443:14:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5424:33:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5403:54:370"
                },
                {
                  "assignments": [
                    87385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87385,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5473:13:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 87436,
                      "src": "5468:18:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87384,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5468:4:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87386,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5468:18:370"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87387,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87358,
                      "src": "5500:9:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 87388,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "5513:19:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 87389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5533:12:370",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "5513:32:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5500:45:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 87406,
                    "nodeType": "Block",
                    "src": "5617:55:370",
                    "statements": [
                      {
                        "expression": {
                          "id": 87404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87399,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87385,
                            "src": "5631:13:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 87400,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5647:3:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 87401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5651:5:370",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5647:9:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 87402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5660:1:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5647:14:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5631:30:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87405,
                        "nodeType": "ExpressionStatement",
                        "src": "5631:30:370"
                      }
                    ]
                  },
                  "id": 87407,
                  "nodeType": "IfStatement",
                  "src": "5496:176:370",
                  "trueBody": {
                    "id": 87398,
                    "nodeType": "Block",
                    "src": "5547:64:370",
                    "statements": [
                      {
                        "expression": {
                          "id": 87396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87391,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87385,
                            "src": "5561:13:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 87392,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5577:3:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 87393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5581:5:370",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5577:9:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 87394,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87379,
                              "src": "5590:10:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5577:23:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5561:39:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87397,
                        "nodeType": "ExpressionStatement",
                        "src": "5561:39:370"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87409,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87385,
                        "src": "5689:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 87410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5704:4:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 87408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5681:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5681:28:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87412,
                  "nodeType": "ExpressionStatement",
                  "src": "5681:28:370"
                },
                {
                  "assignments": [
                    87414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87414,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5728:13:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 87436,
                      "src": "5720:21:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87413,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5720:7:370",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87425,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 87420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87415,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87354,
                        "src": "5744:21:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5777:1:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5769:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5769:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5769:10:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5744:35:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 87423,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87354,
                      "src": "5807:21:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5744:84:370",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 87421,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "5782:20:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 87422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5782:22:370",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5720:108:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87429,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87358,
                        "src": "5876:9:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87430,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "5887:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5887:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87432,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87414,
                        "src": "5901:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87433,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87379,
                        "src": "5916:10:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87426,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "5839:19:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 87428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5859:16:370",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "5839:36:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 87434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5839:88:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87435,
                  "nodeType": "ExpressionStatement",
                  "src": "5839:88:370"
                }
              ]
            },
            "baseFunctions": [
              18882
            ],
            "documentation": {
              "id": 87352,
              "nodeType": "StructuredDocumentation",
              "src": "5010:79:370",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5103:20:370",
            "overrides": {
              "id": 87362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5271:8:370"
            },
            "parameters": {
              "id": 87361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87354,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5141:21:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87437,
                  "src": "5133:29:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5133:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87356,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5180:16:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87437,
                  "src": "5172:24:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87358,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5214:9:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87437,
                  "src": "5206:17:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5206:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87360,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5241:14:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87437,
                  "src": "5233:22:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5233:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5123:138:370"
            },
            "returnParameters": {
              "id": 87363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5280:0:370"
            },
            "scope": 87687,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87459,
            "nodeType": "FunctionDefinition",
            "src": "5987:242:370",
            "nodes": [],
            "body": {
              "id": 87458,
              "nodeType": "Block",
              "src": "6135:94:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87448,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87446,
                      "src": "6145:13:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 87449,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15214,
                        "src": "6161:12:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 87450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6161:14:370",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6145:30:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87452,
                  "nodeType": "ExpressionStatement",
                  "src": "6145:30:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87454,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87440,
                        "src": "6195:3:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87455,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87442,
                        "src": "6200:21:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87453,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16624,
                        16639
                      ],
                      "referencedDeclaration": 16639,
                      "src": "6185:9:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 87456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:37:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87457,
                  "nodeType": "ExpressionStatement",
                  "src": "6185:37:370"
                }
              ]
            },
            "baseFunctions": [
              18892
            ],
            "documentation": {
              "id": 87438,
              "nodeType": "StructuredDocumentation",
              "src": "5940:42:370",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "5996:22:370",
            "overrides": {
              "id": 87444,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6094:8:370"
            },
            "parameters": {
              "id": 87443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87440,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6036:3:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87459,
                  "src": "6028:11:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6028:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87442,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6057:21:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87459,
                  "src": "6049:29:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6049:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6018:66:370"
            },
            "returnParameters": {
              "id": 87447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87446,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "6120:13:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87459,
                  "src": "6112:21:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6111:23:370"
            },
            "scope": 87687,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87473,
            "nodeType": "FunctionDefinition",
            "src": "6329:142:370",
            "nodes": [],
            "body": {
              "id": 87472,
              "nodeType": "Block",
              "src": "6406:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87467,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6431:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87468,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "6451:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6451:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87466,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6423:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6423:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87465,
                  "id": 87471,
                  "nodeType": "Return",
                  "src": "6416:48:370"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 87460,
              "nodeType": "StructuredDocumentation",
              "src": "6235:89:370",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6338:27:370",
            "overrides": {
              "id": 87462,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6382:8:370"
            },
            "parameters": {
              "id": 87461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6365:2:370"
            },
            "returnParameters": {
              "id": 87465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87464,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87473,
                  "src": "6400:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87463,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6400:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6399:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87487,
            "nodeType": "FunctionDefinition",
            "src": "6554:127:370",
            "nodes": [],
            "body": {
              "id": 87486,
              "nodeType": "Block",
              "src": "6616:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87481,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6641:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87482,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "6661:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6661:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87480,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6633:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6633:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87479,
                  "id": 87485,
                  "nodeType": "Return",
                  "src": "6626:48:370"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 87474,
              "nodeType": "StructuredDocumentation",
              "src": "6477:72:370",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6563:12:370",
            "overrides": {
              "id": 87476,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6592:8:370"
            },
            "parameters": {
              "id": 87475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6575:2:370"
            },
            "returnParameters": {
              "id": 87479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87478,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87487,
                  "src": "6610:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87477,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6610:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6609:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87501,
            "nodeType": "FunctionDefinition",
            "src": "6771:133:370",
            "nodes": [],
            "body": {
              "id": 87500,
              "nodeType": "Block",
              "src": "6839:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87495,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6864:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87496,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "6884:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6884:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87494,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6856:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6856:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87493,
                  "id": 87499,
                  "nodeType": "Return",
                  "src": "6849:48:370"
                }
              ]
            },
            "baseFunctions": [
              23030
            ],
            "documentation": {
              "id": 87488,
              "nodeType": "StructuredDocumentation",
              "src": "6687:79:370",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "6780:18:370",
            "overrides": {
              "id": 87490,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6815:8:370"
            },
            "parameters": {
              "id": 87489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6798:2:370"
            },
            "returnParameters": {
              "id": 87493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87501,
                  "src": "6833:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87491,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6832:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87515,
            "nodeType": "FunctionDefinition",
            "src": "6999:133:370",
            "nodes": [],
            "body": {
              "id": 87514,
              "nodeType": "Block",
              "src": "7067:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87509,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "7092:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87510,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "7112:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7112:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87508,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "7084:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7084:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87507,
                  "id": 87513,
                  "nodeType": "Return",
                  "src": "7077:48:370"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 87502,
              "nodeType": "StructuredDocumentation",
              "src": "6910:84:370",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7008:18:370",
            "overrides": {
              "id": 87504,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7043:8:370"
            },
            "parameters": {
              "id": 87503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7026:2:370"
            },
            "returnParameters": {
              "id": 87507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87515,
                  "src": "7061:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87505,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7061:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7060:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87529,
            "nodeType": "FunctionDefinition",
            "src": "7227:137:370",
            "nodes": [],
            "body": {
              "id": 87528,
              "nodeType": "Block",
              "src": "7299:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87523,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "7324:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87524,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "7344:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7344:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87522,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "7316:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7316:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87521,
                  "id": 87527,
                  "nodeType": "Return",
                  "src": "7309:48:370"
                }
              ]
            },
            "baseFunctions": [
              18898
            ],
            "documentation": {
              "id": 87516,
              "nodeType": "StructuredDocumentation",
              "src": "7138:84:370",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7236:22:370",
            "overrides": {
              "id": 87518,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7275:8:370"
            },
            "parameters": {
              "id": 87517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7258:2:370"
            },
            "returnParameters": {
              "id": 87521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87529,
                  "src": "7293:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7293:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7292:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87543,
            "nodeType": "FunctionDefinition",
            "src": "7472:136:370",
            "nodes": [],
            "body": {
              "id": 87542,
              "nodeType": "Block",
              "src": "7551:57:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87537,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87176,
                        "src": "7576:10:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87538,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87686
                          ],
                          "referencedDeclaration": 87686,
                          "src": "7588:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7588:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87536,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "7568:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7568:33:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87535,
                  "id": 87541,
                  "nodeType": "Return",
                  "src": "7561:40:370"
                }
              ]
            },
            "baseFunctions": [
              23139
            ],
            "documentation": {
              "id": 87530,
              "nodeType": "StructuredDocumentation",
              "src": "7370:97:370",
              "text": "@dev Returns whether the shared metadata of tokens can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7481:21:370",
            "overrides": {
              "id": 87532,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7527:8:370"
            },
            "parameters": {
              "id": 87531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7502:2:370"
            },
            "returnParameters": {
              "id": 87535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87543,
                  "src": "7545:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87533,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7545:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7544:6:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 87557,
            "nodeType": "FunctionDefinition",
            "src": "7874:145:370",
            "nodes": [],
            "body": {
              "id": 87556,
              "nodeType": "Block",
              "src": "7929:90:370",
              "nodes": [],
              "statements": [
                {
                  "id": 87555,
                  "nodeType": "UncheckedBlock",
                  "src": "7939:74:370",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87549,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15214,
                            "src": "7970:12:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 87550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7970:14:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87551,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              87342
                            ],
                            "referencedDeclaration": 87342,
                            "src": "7987:13:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 87552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7987:15:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7970:32:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 87548,
                      "id": 87554,
                      "nodeType": "Return",
                      "src": "7963:39:370"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 87544,
              "nodeType": "StructuredDocumentation",
              "src": "7792:77:370",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "7883:11:370",
            "parameters": {
              "id": 87545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7894:2:370"
            },
            "returnParameters": {
              "id": 87548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87557,
                  "src": "7920:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7920:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7919:9:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87567,
            "nodeType": "FunctionDefinition",
            "src": "8101:99:370",
            "nodes": [],
            "body": {
              "id": 87566,
              "nodeType": "Block",
              "src": "8162:38:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87563,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15214,
                      "src": "8179:12:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 87564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8179:14:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87562,
                  "id": 87565,
                  "nodeType": "Return",
                  "src": "8172:21:370"
                }
              ]
            },
            "documentation": {
              "id": 87558,
              "nodeType": "StructuredDocumentation",
              "src": "8025:71:370",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8110:17:370",
            "parameters": {
              "id": 87559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8127:2:370"
            },
            "returnParameters": {
              "id": 87562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87567,
                  "src": "8153:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8153:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8152:9:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87577,
            "nodeType": "FunctionDefinition",
            "src": "8269:100:370",
            "nodes": [],
            "body": {
              "id": 87576,
              "nodeType": "Block",
              "src": "8331:38:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87573,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15214,
                      "src": "8348:12:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 87574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:14:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87572,
                  "id": 87575,
                  "nodeType": "Return",
                  "src": "8341:21:370"
                }
              ]
            },
            "documentation": {
              "id": 87568,
              "nodeType": "StructuredDocumentation",
              "src": "8206:58:370",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8278:18:370",
            "parameters": {
              "id": 87569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8296:2:370"
            },
            "returnParameters": {
              "id": 87572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87577,
                  "src": "8322:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8322:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8321:9:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87589,
            "nodeType": "FunctionDefinition",
            "src": "8425:184:370",
            "nodes": [],
            "body": {
              "id": 87588,
              "nodeType": "Block",
              "src": "8473:136:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87584,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87580,
                        "src": "8588:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 87585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8597:4:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 87583,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16720,
                        16896
                      ],
                      "referencedDeclaration": 16896,
                      "src": "8582:5:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 87586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8582:20:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87587,
                  "nodeType": "ExpressionStatement",
                  "src": "8582:20:370"
                }
              ]
            },
            "documentation": {
              "id": 87578,
              "nodeType": "StructuredDocumentation",
              "src": "8375:45:370",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8434:4:370",
            "parameters": {
              "id": 87581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87580,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8447:7:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87589,
                  "src": "8439:15:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8438:17:370"
            },
            "returnParameters": {
              "id": 87582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8473:0:370"
            },
            "scope": 87687,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 87653,
            "nodeType": "FunctionDefinition",
            "src": "8663:563:370",
            "nodes": [],
            "body": {
              "id": 87652,
              "nodeType": "Block",
              "src": "8825:401:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87605,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87592,
                        "src": "8863:4:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87606,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87594,
                        "src": "8869:2:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87607,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87596,
                        "src": "8873:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87608,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87598,
                        "src": "8888:8:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87602,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8835:5:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$87687_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 87604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8841:21:370",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16214,
                      "src": "8835:27:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 87609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8835:62:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87610,
                  "nodeType": "ExpressionStatement",
                  "src": "8835:62:370"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 87625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9009:34:370",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 87612,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87173,
                              "src": "9018:12:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 87615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9040:1:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 87614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9032:7:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87613,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9032:7:370",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9032:10:370",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87611,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21818,
                            "src": "9010:7:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 87617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9010:33:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87619,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87592,
                          "src": "9047:4:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 87622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9063:1:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 87621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9055:7:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87620,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9055:7:370",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9055:10:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9047:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9009:56:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 87631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87626,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87594,
                        "src": "9069:2:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9083:1:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9075:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87627,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9075:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9075:10:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9069:16:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9009:76:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87651,
                  "nodeType": "IfStatement",
                  "src": "9005:215:370",
                  "trueBody": {
                    "id": 87650,
                    "nodeType": "Block",
                    "src": "9087:133:370",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 87643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9105:28:370",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 87634,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87173,
                                  "src": "9114:12:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 87635,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87592,
                                  "src": "9128:4:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87633,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21818,
                                "src": "9106:7:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 87636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9106:27:370",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 87642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9137:26:370",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 87639,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87173,
                                  "src": "9146:12:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 87640,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87594,
                                  "src": "9160:2:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87638,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21818,
                                "src": "9138:7:370",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 87641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9138:25:370",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9105:58:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87649,
                        "nodeType": "IfStatement",
                        "src": "9101:109:370",
                        "trueBody": {
                          "id": 87648,
                          "nodeType": "Block",
                          "src": "9165:45:370",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 87645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9190:4:370",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 87644,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9183:6:370",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 87646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9183:12:370",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 87647,
                              "nodeType": "ExpressionStatement",
                              "src": "9183:12:370"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              16214
            ],
            "documentation": {
              "id": 87590,
              "nodeType": "StructuredDocumentation",
              "src": "8615:43:370",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "8672:21:370",
            "overrides": {
              "id": 87600,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8816:8:370"
            },
            "parameters": {
              "id": 87599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87592,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8711:4:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87653,
                  "src": "8703:12:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8703:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87594,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8733:2:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87653,
                  "src": "8725:10:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8725:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87596,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "8753:13:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87653,
                  "src": "8745:21:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8745:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87598,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "8784:8:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87653,
                  "src": "8776:16:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8693:105:370"
            },
            "returnParameters": {
              "id": 87601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8825:0:370"
            },
            "scope": 87687,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 87663,
            "nodeType": "FunctionDefinition",
            "src": "9232:111:370",
            "nodes": [],
            "body": {
              "id": 87662,
              "nodeType": "Block",
              "src": "9307:36:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87659,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        87686
                      ],
                      "referencedDeclaration": 87686,
                      "src": "9324:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 87660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9324:12:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 87658,
                  "id": 87661,
                  "nodeType": "Return",
                  "src": "9317:19:370"
                }
              ]
            },
            "baseFunctions": [
              18834
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "9241:14:370",
            "overrides": {
              "id": 87655,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9280:8:370"
            },
            "parameters": {
              "id": 87654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9255:2:370"
            },
            "returnParameters": {
              "id": 87658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87663,
                  "src": "9298:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9298:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9297:9:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 87673,
            "nodeType": "FunctionDefinition",
            "src": "9349:114:370",
            "nodes": [],
            "body": {
              "id": 87672,
              "nodeType": "Block",
              "src": "9427:36:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87669,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        87686
                      ],
                      "referencedDeclaration": 87686,
                      "src": "9444:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 87670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9444:12:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 87668,
                  "id": 87671,
                  "nodeType": "Return",
                  "src": "9437:19:370"
                }
              ]
            },
            "baseFunctions": [
              17005
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderERC721A",
            "nameLocation": "9358:17:370",
            "overrides": {
              "id": 87665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9400:8:370"
            },
            "parameters": {
              "id": 87664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9375:2:370"
            },
            "returnParameters": {
              "id": 87668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87673,
                  "src": "9418:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9418:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9417:9:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 87686,
            "nodeType": "FunctionDefinition",
            "src": "9469:222:370",
            "nodes": [],
            "body": {
              "id": 87685,
              "nodeType": "Block",
              "src": "9629:62:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87681,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "9646:25:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 87682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9672:10:370",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "9646:36:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 87683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9646:38:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 87680,
                  "id": 87684,
                  "nodeType": "Return",
                  "src": "9639:45:370"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9478:10:370",
            "overrides": {
              "id": 87677,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 87675,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "9554:25:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "9554:25:370"
                },
                {
                  "id": 87676,
                  "name": "Multicall",
                  "nameLocations": [
                    "9581:9:370"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "9581:9:370"
                }
              ],
              "src": "9545:46:370"
            },
            "parameters": {
              "id": 87674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:2:370"
            },
            "returnParameters": {
              "id": 87680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87679,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9617:6:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 87686,
                  "src": "9609:14:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9609:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9608:16:370"
            },
            "scope": 87687,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 87146,
              "name": "Initializable",
              "nameLocations": [
                "1580:13:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1580:13:370"
            },
            "id": 87147,
            "nodeType": "InheritanceSpecifier",
            "src": "1580:13:370"
          },
          {
            "baseName": {
              "id": 87148,
              "name": "ContractMetadata",
              "nameLocations": [
                "1599:16:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1599:16:370"
            },
            "id": 87149,
            "nodeType": "InheritanceSpecifier",
            "src": "1599:16:370"
          },
          {
            "baseName": {
              "id": 87150,
              "name": "Royalty",
              "nameLocations": [
                "1621:7:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23031,
              "src": "1621:7:370"
            },
            "id": 87151,
            "nodeType": "InheritanceSpecifier",
            "src": "1621:7:370"
          },
          {
            "baseName": {
              "id": 87152,
              "name": "PrimarySale",
              "nameLocations": [
                "1634:11:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "1634:11:370"
            },
            "id": 87153,
            "nodeType": "InheritanceSpecifier",
            "src": "1634:11:370"
          },
          {
            "baseName": {
              "id": 87154,
              "name": "Ownable",
              "nameLocations": [
                "1651:7:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1651:7:370"
            },
            "id": 87155,
            "nodeType": "InheritanceSpecifier",
            "src": "1651:7:370"
          },
          {
            "baseName": {
              "id": 87156,
              "name": "SharedMetadata",
              "nameLocations": [
                "1664:14:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23140,
              "src": "1664:14:370"
            },
            "id": 87157,
            "nodeType": "InheritanceSpecifier",
            "src": "1664:14:370"
          },
          {
            "baseName": {
              "id": 87158,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1684:21:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1684:21:370"
            },
            "id": 87159,
            "nodeType": "InheritanceSpecifier",
            "src": "1684:21:370"
          },
          {
            "baseName": {
              "id": 87160,
              "name": "Drop",
              "nameLocations": [
                "1711:4:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18899,
              "src": "1711:4:370"
            },
            "id": 87161,
            "nodeType": "InheritanceSpecifier",
            "src": "1711:4:370"
          },
          {
            "baseName": {
              "id": 87162,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1721:25:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1721:25:370"
            },
            "id": 87163,
            "nodeType": "InheritanceSpecifier",
            "src": "1721:25:370"
          },
          {
            "baseName": {
              "id": 87164,
              "name": "Multicall",
              "nameLocations": [
                "1752:9:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1752:9:370"
            },
            "id": 87165,
            "nodeType": "InheritanceSpecifier",
            "src": "1752:9:370"
          },
          {
            "baseName": {
              "id": 87166,
              "name": "ERC721AQueryableUpgradeable",
              "nameLocations": [
                "1767:27:370"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14996,
              "src": "1767:27:370"
            },
            "id": 87167,
            "nodeType": "InheritanceSpecifier",
            "src": "1767:27:370"
          }
        ],
        "canonicalName": "OpenEditionERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87687,
          14996,
          17246,
          17024,
          17452,
          17127,
          21206,
          33577,
          46402,
          161692,
          18899,
          33221,
          32955,
          32931,
          22411,
          22111,
          33932,
          33907,
          23140,
          14108,
          21764,
          33834,
          22703,
          33997,
          23031,
          34061,
          14089,
          13945,
          34277,
          18093,
          154159,
          33084
        ],
        "name": "OpenEditionERC721",
        "nameLocation": "1555:17:370",
        "scope": 87688,
        "usedErrors": [
          17214,
          17252,
          17255,
          17258,
          17261,
          17264,
          17267,
          17270,
          17273,
          17276,
          17279,
          17282,
          17285,
          17288
        ],
        "usedEvents": [
          14100,
          14107,
          17320,
          17329,
          17338,
          17451,
          33083,
          33184,
          33193,
          33833,
          33846,
          33855,
          33864,
          33996,
          34051,
          34060,
          34259,
          154005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 370
}