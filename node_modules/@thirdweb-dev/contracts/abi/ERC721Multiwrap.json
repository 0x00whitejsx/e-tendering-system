{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedContents",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        }
      ],
      "name": "TokensUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ITokenBundle.Token[]",
          "name": "wrappedContents",
          "type": "tuple[]"
        }
      ],
      "name": "TokensWrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "TransfersRestricted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getTokenCountOfBundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTokenOfBundle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getUriOfBundle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_toRestrict",
          "type": "bool"
        }
      ],
      "name": "restrictTransfers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "_tokensToWrap",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "_uriForWrappedToken",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162004dcc38038062004dcc833981016040819052620000349162000768565b6001600160a01b03811660805284846006620000518382620008bb565b506007620000608282620008bb565b505060006004555062000073866200014e565b62000088836001600160801b038416620001a0565b620000956000876200024c565b620000c17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6876200024c565b620000dc60008051602062004dac833981519152876200024c565b620001097f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae660006200024c565b620001367fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054360006200024c565b62000142600062000268565b50505050505062000aab565b600d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620001ea5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064015b60405180910390fd5b600e80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b620002588282620002aa565b62000264828262000307565b5050565b80156200028e576200028b60008051602062004dac833981519152600062000376565b50565b6200028b60008051602062004dac83398151915260006200024c565b60008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600360205260408120805491600191906200032883856200099d565b9091555050600092835260036020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b620003828282620003cf565b60008281526003602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b620003db828262000433565b60008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff166200026457620004746001600160a01b0382166014620004bc565b62000481836020620004bc565b60405160200162000494929190620009b3565b60408051601f198184030181529082905262461bcd60e51b8252620001e19160040162000a2c565b60606000620004cd83600262000a61565b620004da9060026200099d565b6001600160401b03811115620004f457620004f46200069b565b6040519080825280601f01601f1916602001820160405280156200051f576020820181803683370190505b509050600360fc1b816000815181106200053d576200053d62000a7b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200056f576200056f62000a7b565b60200101906001600160f81b031916908160001a90535060006200059584600262000a61565b620005a29060016200099d565b90505b600181111562000624576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620005da57620005da62000a7b565b1a60f81b828281518110620005f357620005f362000a7b565b60200101906001600160f81b031916908160001a90535060049490941c936200061c8162000a91565b9050620005a5565b508315620006755760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401620001e1565b90505b92915050565b80516001600160a01b03811681146200069657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620006ce578181015183820152602001620006b4565b50506000910152565b600082601f830112620006e957600080fd5b81516001600160401b03808211156200070657620007066200069b565b604051601f8301601f19908116603f011681019082821181831017156200073157620007316200069b565b816040528381528660208588010111156200074b57600080fd5b6200075e846020830160208901620006b1565b9695505050505050565b60008060008060008060c087890312156200078257600080fd5b6200078d876200067e565b60208801519096506001600160401b0380821115620007ab57600080fd5b620007b98a838b01620006d7565b96506040890151915080821115620007d057600080fd5b50620007df89828a01620006d7565b945050620007f0606088016200067e565b60808801519093506001600160801b03811681146200080e57600080fd5b91506200081e60a088016200067e565b90509295509295509295565b600181811c908216806200083f57607f821691505b6020821081036200086057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620008b6576000816000526020600020601f850160051c81016020861015620008915750805b601f850160051c820191505b81811015620008b2578281556001016200089d565b5050505b505050565b81516001600160401b03811115620008d757620008d76200069b565b620008ef81620008e884546200082a565b8462000866565b602080601f8311600181146200092757600084156200090e5750858301515b600019600386901b1c1916600185901b178555620008b2565b600085815260208120601f198616915b82811015620009585788860151825594840194600190910190840162000937565b5085821015620009775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111562000678576200067862000987565b7f5065726d697373696f6e733a206163636f756e74200000000000000000000000815260008351620009ed816015850160208801620006b1565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835162000a20816026840160208801620006b1565b01602601949350505050565b602081526000825180602084015262000a4d816040850160208701620006b1565b601f01601f19169190910160400192915050565b808202811582820484141762000678576200067862000987565b634e487b7160e01b600052603260045260246000fd5b60008162000aa35762000aa362000987565b506000190190565b6080516142e562000ac76000396000612dfb01526142e56000f3fe6080604052600436106102125760003560e01c806370a082311161011f57806370a082311461055857806373fa563f146105785780637647691d146105985780638da5cb5b146105b85780639010d07c146105cd57806391d14854146105ed578063938e3d7b1461060d57806395d89b411461062d5780639bcf7a1514610642578063a217fddf14610662578063a22cb46514610677578063a32fa5b314610697578063ac9650d8146106b7578063b24f2d39146106e4578063b88d4fde1461070f578063bc197c811461072f578063c87b56dd1461075b578063ca15c8731461077b578063d0d2fe251461079b578063d547741f146107c8578063e8a3d485146107e8578063e985e9c5146107fd578063f23a6e611461081d57600080fd5b806301ffc9a71461021757806306fdde031461024c578063081812fc1461026e578063095ea7b3146102a657806313af4035146102c8578063150b7a02146102e857806318160ddd146103215780631da799c914610344578063206b60f91461037157806323b872dd14610393578063248a9ca3146103b357806329e471dd146103e05780632a55205a146103f35780632f2ff15d1461042157806336568abe146104415780633b1475a71461046157806342842e0e14610476578063430c2081146104965780634cc157df146104b6578063600dd5ea146104f857806361195e94146105185780636352211e14610538575b600080fd5b34801561022357600080fd5b5061023761023236600461345c565b610849565b60405190151581526020015b60405180910390f35b34801561025857600080fd5b506102616108e1565b60405161024391906134c9565b34801561027a57600080fd5b5061028e6102893660046134dc565b610973565b6040516001600160a01b039091168152602001610243565b3480156102b257600080fd5b506102c66102c136600461351a565b6109b7565b005b3480156102d457600080fd5b506102c66102e3366004613546565b610a3d565b3480156102f457600080fd5b50610308610303366004613622565b610a76565b6040516001600160e01b03199091168152602001610243565b34801561032d57600080fd5b50600554600454035b604051908152602001610243565b34801561035057600080fd5b5061036461035f36600461368d565b610a87565b60405161024391906136e7565b34801561037d57600080fd5b5061033660008051602061424983398151915281565b34801561039f57600080fd5b506102c66103ae366004613726565b610b14565b3480156103bf57600080fd5b506103366103ce3660046134dc565b60009081526002602052604090205490565b6103366103ee3660046137af565b610b1f565b3480156103ff57600080fd5b5061041361040e36600461368d565b610c97565b60405161024392919061385d565b34801561042d57600080fd5b506102c661043c366004613876565b610cd4565b34801561044d57600080fd5b506102c661045c366004613876565b610d6e565b34801561046d57600080fd5b50600454610336565b34801561048257600080fd5b506102c6610491366004613726565b610dcd565b3480156104a257600080fd5b506102376104b136600461351a565b610de8565b3480156104c257600080fd5b506104d66104d13660046134dc565b610e46565b604080516001600160a01b03909316835261ffff909116602083015201610243565b34801561050457600080fd5b506102c661051336600461351a565b610eb1565b34801561052457600080fd5b506102616105333660046134dc565b610edf565b34801561054457600080fd5b5061028e6105533660046134dc565b610f84565b34801561056457600080fd5b50610336610573366004613546565b610f96565b34801561058457600080fd5b506102c66105933660046138b4565b610fe4565b3480156105a457600080fd5b506102c66105b3366004613876565b61101c565b3480156105c457600080fd5b5061028e61113d565b3480156105d957600080fd5b5061028e6105e836600461368d565b61114c565b3480156105f957600080fd5b50610237610608366004613876565b61123a565b34801561061957600080fd5b506102c66106283660046138d1565b611265565b34801561063957600080fd5b50610261611292565b34801561064e57600080fd5b506102c661065d366004613919565b6112a1565b34801561066e57600080fd5b50610336600081565b34801561068357600080fd5b506102c6610692366004613940565b6112d0565b3480156106a357600080fd5b506102376106b2366004613876565b611365565b3480156106c357600080fd5b506106d76106d236600461396e565b6113bb565b60405161024391906139e2565b3480156106f057600080fd5b50600e546001600160a01b03811690600160a01b900461ffff166104d6565b34801561071b57600080fd5b506102c661072a366004613622565b611517565b34801561073b57600080fd5b5061030861074a366004613ac6565b63bc197c8160e01b95945050505050565b34801561076757600080fd5b506102616107763660046134dc565b611568565b34801561078757600080fd5b506103366107963660046134dc565b611573565b3480156107a757600080fd5b506103366107b63660046134dc565b60009081526020819052604090205490565b3480156107d457600080fd5b506102c66107e3366004613876565b6115fc565b3480156107f457600080fd5b50610261611615565b34801561080957600080fd5b50610237610818366004613b73565b6116a3565b34801561082957600080fd5b50610308610838366004613ba1565b63f23a6e6160e01b95945050505050565b6000610854826116d1565b8061086f57506301ffc9a760e01b6001600160e01b03198316145b8061088a57506380ac58cd60e01b6001600160e01b03198316145b806108a55750635b5e139f60e01b6001600160e01b03198316145b806108c057506001600160e01b0319821663152a902d60e11b145b806108db57506001600160e01b03198216630271189760e51b145b92915050565b6060600680546108f090613c09565b80601f016020809104026020016040519081016040528092919081815260200182805461091c90613c09565b80156109695780601f1061093e57610100808354040283529160200191610969565b820191906000526020600020905b81548152906001019060200180831161094c57829003601f168201915b5050505050905090565b600061097e82611711565b61099b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600a60205260409020546001600160a01b031690565b60006109c282610f84565b9050806001600160a01b0316836001600160a01b0316036109f65760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610a2d57610a1081336116a3565b610a2d576040516367d9dca160e11b815260040160405180910390fd5b610a3883838361173d565b505050565b610a45611799565b610a6a5760405162461bcd60e51b8152600401610a6190613c3d565b60405180910390fd5b610a73816117bc565b50565b630a85bd0160e11b5b949350505050565b610a8f61341d565b600083815260208181526040808320858452600290810183529281902081516080810190925280546001600160a01b038116835291939092840191600160a01b900460ff1690811115610ae457610ae46136af565b6002811115610af557610af56136af565b8152600182015460208201526002909101546040909101529392505050565b610a3883838361180e565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b4c81336119f6565b610b777f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6600061123a565b610beb5760005b86811015610be957610bd77f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6898984818110610bbc57610bbc613c65565b610bd29260206080909202019081019150613546565b611a5a565b610be2600182613c91565b9050610b7e565b505b6004549150610c3433888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250611a98915050565b610c3f836001611b0a565b81836001600160a01b0316336001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a604051610c85929190613cb1565b60405180910390a45095945050505050565b600080600080610ca686610e46565b90945084925061ffff169050612710610cbf8287613d30565b610cc99190613d47565b925050509250929050565b600082815260026020526040902054610ced9033611a5a565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff1615610d605760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610a61565b610d6a8282611b24565b5050565b336001600160a01b03821614610dc35760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610a61565b610d6a8282611b38565b610a3883838360405180602001604052806000815250611517565b600080610df483610f84565b9050806001600160a01b0316846001600160a01b03161480610e1b5750610e1b81856116a3565b80610a7f5750836001600160a01b0316610e3484610973565b6001600160a01b031614949350505050565b6000818152600f60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610e8d5780516020820151610ea7565b600e546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610eb9611799565b610ed55760405162461bcd60e51b8152600401610a6190613c3d565b610d6a8282611b8f565b6000818152602081905260409020600101805460609190610eff90613c09565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2b90613c09565b8015610f785780601f10610f4d57610100808354040283529160200191610f78565b820191906000526020600020905b815481529060010190602001808311610f5b57829003601f168201915b50505050509050919050565b6000610f8f82611c13565b5192915050565b60006001600160a01b038216610fbf576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600960205260409020546001600160401b031690565b801561100357610a736000805160206142498339815191526000611b38565b610a736000805160206142498339815191526000611b24565b7fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054361104781336119f6565b600454831061108b5760405162461bcd60e51b815260206004820152601060248201526f3bb930b83832b21027232a102227229760811b6044820152606401610a61565b6110953384610de8565b6110ed5760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b6064820152608401610a61565b6110f683611d2d565b6111008284611d38565b60405183906001600160a01b0384169033907fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7390600090a4505050565b600d546001600160a01b031690565b60008281526003602052604081205481805b828110156112315760008681526003602090815260408083208484526001019091529020546001600160a01b0316156111da578482036111c85760008681526003602090815260408083209383526001909301905220546001600160a01b031692506108db915050565b6111d3600183613c91565b915061121f565b6111e586600061123a565b801561120c5750600086815260036020908152604080832083805260020190915290205481145b1561121f5761121c600183613c91565b91505b61122a600182613c91565b905061115e565b50505092915050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61126d611799565b6112895760405162461bcd60e51b8152600401610a6190613c3d565b610a7381611df5565b6060600780546108f090613c09565b6112a9611799565b6112c55760405162461bcd60e51b8152600401610a6190613c3d565b610a38838383611ed1565b336001600160a01b038316036112f95760405163b06307db60e01b815260040160405180910390fd5b336000818152600b602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600082815260016020908152604080832083805290915281205460ff166113b2575060008281526001602090815260408083206001600160a01b038516845290915290205460ff166108db565b50600192915050565b6060816001600160401b038111156113d5576113d5613563565b60405190808252806020026020018201604052801561140857816020015b60608152602001906001900390816113f35790505b509050336000805b8481101561123157811561148f5761146d3087878481811061143457611434613c65565b90506020028101906114469190613d69565b8660405160200161145993929190613daf565b604051602081830303815290604052611f78565b84828151811061147f5761147f613c65565b602002602001018190525061150f565b6114f1308787848181106114a5576114a5613c65565b90506020028101906114b79190613d69565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f7892505050565b84828151811061150357611503613c65565b60200260200101819052505b600101611410565b61152284848461180e565b611534836001600160a01b0316611fa4565b156115625761154584848484611fb3565b611562576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606108db82610edf565b600081815260036020526040812054815b818110156115d75760008481526003602090815260408083208484526001019091529020546001600160a01b0316156115c5576115c2600184613c91565b92505b6115d0600182613c91565b9050611584565b506115e383600061123a565b156115f6576115f3600183613c91565b91505b50919050565b600082815260026020526040902054610dc39033611a5a565b600c805461162290613c09565b80601f016020809104026020016040519081016040528092919081815260200182805461164e90613c09565b801561169b5780601f106116705761010080835404028352916020019161169b565b820191906000526020600020905b81548152906001019060200180831161167e57829003601f168201915b505050505081565b6001600160a01b039182166000908152600b6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061170257506001600160e01b03198216635b5e139f60e01b145b806108db57506108db8261209b565b6000600454821080156108db575050600090815260086020526040902054600160e01b900460ff161590565b6000828152600a602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006117a361113d565b6001600160a01b0316336001600160a01b031614905090565b600d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600061181982611c13565b9050836001600160a01b031681600001516001600160a01b0316146118505760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061186e575061186e85336116a3565b8061188957503361187e84610973565b6001600160a01b0316145b9050806118a957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166118d057604051633a954ecd60e21b815260040160405180910390fd5b6118dd85858560016120d0565b6118e96000848761173d565b6001600160a01b03858116600090815260096020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600890945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166119bc5760045482146119bc57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061429083398151915260405160405180910390a45b5050505050565b611a008282611365565b610d6a57611a18816001600160a01b031660146120dc565b611a238360206120dc565b604051602001611a34929190613dd0565b60408051601f198184030181529082905262461bcd60e51b8252610a61916004016134c9565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610d6a57611a18816001600160a01b031660146120dc565b611aa3848483612277565b611aad828261239e565b6119ef85308686808060200260200160405190810160405280939291908181526020016000905b82821015611b0057611af160808302860136819003810190613e3d565b81526020019060010190611ad4565b50505050506123b9565b610d6a8282604051806020016040528060008152506124d5565b611b2e828261267d565b610d6a82826126da565b611b428282612747565b60008281526003602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b612710811115611bb15760405162461bcd60e51b8152600401610a6190613eb1565b600e80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b604080516060810182526000808252602082018190529181019190915281600454811015611d1457600081815260086020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611d125780516001600160a01b031615611ca9579392505050565b5060001901600081815260086020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611d0d579392505050565b611ca9565b505b604051636f96cda160e11b815260040160405180910390fd5b610a738160006127a9565b60008181526020819052604081205490816001600160401b03811115611d6057611d60613563565b604051908082528060200260200182016040528015611d9957816020015b611d8661341d565b815260200190600190039081611d7e5790505b50905060005b82811015611de057611db18482610a87565b828281518110611dc357611dc3613c65565b6020908102919091010152611dd9600182613c91565b9050611d9f565b50611dea83612967565b6115623085836123b9565b6000600c8054611e0490613c09565b80601f0160208091040260200160405190810160405280929190818152602001828054611e3090613c09565b8015611e7d5780601f10611e5257610100808354040283529160200191611e7d565b820191906000526020600020905b815481529060010190602001808311611e6057829003601f168201915b5050505050905081600c9081611e939190613f2a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611ec5929190613fe9565b60405180910390a15050565b612710811115611ef35760405162461bcd60e51b8152600401610a6190613eb1565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600f8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6060611f9d8383604051806060016040528060278152602001614269602791396129db565b9392505050565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611fe8903390899088908890600401614017565b6020604051808303816000875af1925050508015612023575060408051601f3d908101601f191682019092526120209181019061404a565b60015b612081573d808015612051576040519150601f19603f3d011682016040523d82523d6000602084013e612056565b606091505b508051600003612079576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a7f565b60006001600160e01b03198216630271189760e51b14806108db57506301ffc9a760e01b6001600160e01b03198316146108db565b61156284848484612a53565b606060006120eb836002613d30565b6120f6906002613c91565b6001600160401b0381111561210d5761210d613563565b6040519080825280601f01601f191660200182016040528015612137576020820181803683370190505b509050600360fc1b8160008151811061215257612152613c65565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061218157612181613c65565b60200101906001600160f81b031916908160001a90535060006121a5846002613d30565b6121b0906001613c91565b90505b6001811115612228576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106121e4576121e4613c65565b1a60f81b8282815181106121fa576121fa613c65565b60200101906001600160f81b031916908160001a90535060049490941c9361222181614067565b90506121b3565b508315611f9d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610a61565b81806122af5760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610a61565b600082815260208190526040902054156122f75760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b6044820152606401610a61565b60005b818110156123895761233285858381811061231757612317613c65565b90506080020180360381019061232d9190613e3d565b612b12565b84848281811061234457612344613c65565b6000868152602081815260408083208784526002019091529020608090910292909201919050612374828261407e565b506123829050600182613c91565b90506122fa565b50600091825260208290526040909120555050565b6000818152602081905260409020600101610a388382613f2a565b6000805b825181101561248b5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b03168382815181106123f6576123f6613c65565b6020026020010151600001516001600160a01b031614801561242057506001600160a01b03841630145b156124555782818151811061243757612437613c65565b6020026020010151606001518261244e9190613c91565b9150612479565b612479858585848151811061246c5761246c613c65565b6020026020010151612dcd565b612484600182613c91565b90506123bd565b508015611562576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee815260006020820181905291810191909152606081018290526119ef858583612dcd565b6004546001600160a01b0384166124fe57604051622e076360e81b815260040160405180910390fd5b8260000361251f5760405163b562e8dd60e01b815260040160405180910390fd5b61252c60008583866120d0565b6001600160a01b038416600081815260096020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600890925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906125c590611fa4565b1561263b575b60405182906001600160a01b03881690600090600080516020614290833981519152908290a46126046000878480600101955087611fb3565b612621576040516368d2bf6b60e11b815260040160405180910390fd5b8082106125cb57826004541461263657600080fd5b61266e565b5b6040516001830192906001600160a01b03881690600090600080516020614290833981519152908290a480821061263c575b50600455611562600085838684565b60008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600360205260408120805491600191906126f98385613c91565b9091555050600092835260036020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6127518282611a5a565b60008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006127b483611c13565b8051909150821561281a576000336001600160a01b03831614806127dd57506127dd82336116a3565b806127f85750336127ed86610973565b6001600160a01b0316145b90508061281857604051632ce44b5f60e11b815260040160405180910390fd5b505b6128288160008660016120d0565b6128346000858361173d565b6001600160a01b0380821660008181526009602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526008909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661292e57600454821461292e57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020614290833981519152908390a450506005805460010190555050565b60005b6000828152602081905260409020548110156129c9576000828152602081815260408083208484526002908101909252822080546001600160a81b031916815560018082018490559101919091556129c29082613c91565b905061296a565b50600090815260208190526040812055565b6060600080856001600160a01b0316856040516129f8919061410a565b600060405180830381855af49150503d8060008114612a33576040519150601f19603f3d011682016040523d82523d6000602084013e612a38565b606091505b5091509150612a4986838387612f27565b9695505050505050565b612a6c600080516020614249833981519152600061123a565b158015612a8157506001600160a01b03841615155b8015612a9557506001600160a01b03831615155b1561156257612ab26000805160206142498339815191528561123a565b158015612ad45750612ad26000805160206142498339815191528461123a565b155b156115625760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b6044820152606401610a61565b600181602001516002811115612b2a57612b2a6136af565b03612bd45780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612b62906380ac58cd90600401614126565b602060405180830381865afa925050508015612b9b575060408051601f3d908101601f19168201909252612b989181019061413e565b60015b612bb75760405162461bcd60e51b8152600401610a619061415b565b80610d6a5760405162461bcd60e51b8152600401610a619061415b565b600281602001516002811115612bec57612bec6136af565b03612c245780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612b629063d9b67a2690600401614126565b600081602001516002811115612c3c57612c3c6136af565b03610a735780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610a735780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612c99906380ac58cd90600401614126565b602060405180830381865afa925050508015612cd2575060408051601f3d908101601f19168201909252612ccf9181019061413e565b60015b612cfb57612cde61417f565b806308c379a003610d6a5750612cf261419b565b80610d6a575050565b8015612d195760405162461bcd60e51b8152600401610a619061415b565b81516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612d4c9063d9b67a2690600401614126565b602060405180830381865afa925050508015612d85575060408051601f3d908101601f19168201909252612d829181019061413e565b60015b612daf57612d9161417f565b806308c379a003610a385750612da561419b565b80610a3857505050565b8015610a385760405162461bcd60e51b8152600401610a619061415b565b600081602001516002811115612de557612de56136af565b03612e1f57610a388160000151848484606001517f0000000000000000000000000000000000000000000000000000000000000000612f9e565b600181602001516002811115612e3757612e376136af565b03612ea95780516040808301519051632142170760e11b81526001600160a01b03909216916342842e0e91612e729187918791600401614224565b600060405180830381600087803b158015612e8c57600080fd5b505af1158015612ea0573d6000803e3d6000fd5b50505050505050565b600281602001516002811115612ec157612ec16136af565b03610a3857805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c401612e72565b60608315612f94578251600003612f8d57612f4185611fa4565b612f8d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a61565b5081610a7f565b610a7f8383613108565b81156119ef5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038616016130fc57306001600160a01b0385160361304357604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b15801561301b57600080fd5b505af115801561302f573d6000803e3d6000fd5b5050505061303e838383613132565b6119ef565b306001600160a01b038416036130f1573482146130985760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610a61565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156130d357600080fd5b505af11580156130e7573d6000803e3d6000fd5b50505050506119ef565b61303e838383613132565b6119ef858585856131f7565b8151156131185781518083602001fd5b8060405162461bcd60e51b8152600401610a6191906134c9565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461317f576040519150601f19603f3d011682016040523d82523d6000602084013e613184565b606091505b505090508061156257816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156131c857600080fd5b505af11580156131dc573d6000803e3d6000fd5b50611562935050506001600160a01b0384169050858561324f565b816001600160a01b0316836001600160a01b0316031561156257306001600160a01b0384160361323a576132356001600160a01b038516838361324f565b611562565b6115626001600160a01b0385168484846132a5565b610a388363a9059cbb60e01b848460405160240161326e92919061385d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526132c6565b611562846323b872dd60e01b85858560405160240161326e93929190614224565b600061331b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133989092919063ffffffff16565b805190915015610a385780806020019051810190613339919061413e565b610a385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a61565b6060610a7f848460008585600080866001600160a01b031685876040516133bf919061410a565b60006040518083038185875af1925050503d80600081146133fc576040519150601f19603f3d011682016040523d82523d6000602084013e613401565b606091505b509150915061341287838387612f27565b979650505050505050565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b6001600160e01b031981168114610a7357600080fd5b60006020828403121561346e57600080fd5b8135611f9d81613446565b60005b8381101561349457818101518382015260200161347c565b50506000910152565b600081518084526134b5816020860160208601613479565b601f01601f19169290920160200192915050565b602081526000611f9d602083018461349d565b6000602082840312156134ee57600080fd5b5035919050565b6001600160a01b0381168114610a7357600080fd5b8035613515816134f5565b919050565b6000806040838503121561352d57600080fd5b8235613538816134f5565b946020939093013593505050565b60006020828403121561355857600080fd5b8135611f9d816134f5565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561359e5761359e613563565b6040525050565b60006001600160401b038311156135be576135be613563565b6040516135d5601f8501601f191660200182613579565b8091508381528484840111156135ea57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261361357600080fd5b611f9d838335602085016135a5565b6000806000806080858703121561363857600080fd5b8435613643816134f5565b93506020850135613653816134f5565b92506040850135915060608501356001600160401b0381111561367557600080fd5b61368187828801613602565b91505092959194509250565b600080604083850312156136a057600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b600381106136e357634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b03168152602080830151608083019161370b908401826136c5565b50604083015160408301526060830151606083015292915050565b60008060006060848603121561373b57600080fd5b8335613746816134f5565b92506020840135613756816134f5565b929592945050506040919091013590565b60008083601f84011261377957600080fd5b5081356001600160401b0381111561379057600080fd5b6020830191508360208285010111156137a857600080fd5b9250929050565b6000806000806000606086880312156137c757600080fd5b85356001600160401b03808211156137de57600080fd5b818801915088601f8301126137f257600080fd5b81358181111561380157600080fd5b8960208260071b850101111561381657600080fd5b60209283019750955090870135908082111561383157600080fd5b5061383e88828901613767565b909450925061385190506040870161350a565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561388957600080fd5b82359150602083013561389b816134f5565b809150509250929050565b8015158114610a7357600080fd5b6000602082840312156138c657600080fd5b8135611f9d816138a6565b6000602082840312156138e357600080fd5b81356001600160401b038111156138f957600080fd5b8201601f8101841361390a57600080fd5b610a7f848235602084016135a5565b60008060006060848603121561392e57600080fd5b833592506020840135613756816134f5565b6000806040838503121561395357600080fd5b823561395e816134f5565b9150602083013561389b816138a6565b6000806020838503121561398157600080fd5b82356001600160401b038082111561399857600080fd5b818501915085601f8301126139ac57600080fd5b8135818111156139bb57600080fd5b8660208260051b85010111156139d057600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015613a3957603f19888603018452613a2785835161349d565b94509285019290850190600101613a0b565b5092979650505050505050565b600082601f830112613a5757600080fd5b813560206001600160401b03821115613a7257613a72613563565b8160051b604051613a8583830182613579565b92835284810182019282810187851115613a9e57600080fd5b83870192505b84831015613abb5782358152918301918301613aa4565b509695505050505050565b600080600080600060a08688031215613ade57600080fd5b8535613ae9816134f5565b94506020860135613af9816134f5565b935060408601356001600160401b0380821115613b1557600080fd5b613b2189838a01613a46565b94506060880135915080821115613b3757600080fd5b613b4389838a01613a46565b93506080880135915080821115613b5957600080fd5b50613b6688828901613602565b9150509295509295909350565b60008060408385031215613b8657600080fd5b8235613b91816134f5565b9150602083013561389b816134f5565b600080600080600060a08688031215613bb957600080fd5b8535613bc4816134f5565b94506020860135613bd4816134f5565b9350604086013592506060860135915060808601356001600160401b03811115613bfd57600080fd5b613b6688828901613602565b600181811c90821680613c1d57607f821691505b6020821081036115f657634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156108db576108db613c7b565b60038110610a7357600080fd5b6020808252818101839052600090604080840186845b87811015613d23578135613cda816134f5565b6001600160a01b0316835281850135613cf281613ca4565b613cfe868501826136c5565b5081840135838501526060808301359084015260809283019290910190600101613cc7565b5090979650505050505050565b80820281158282048414176108db576108db613c7b565b600082613d6457634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e19843603018112613d8057600080fd5b8301803591506001600160401b03821115613d9a57600080fd5b6020019150368190038213156137a857600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613e00816015850160208801613479565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613e31816026840160208801613479565b01602601949350505050565b600060808284031215613e4f57600080fd5b604051608081018181106001600160401b0382111715613e7157613e71613563565b6040528235613e7f816134f5565b81526020830135613e8f81613ca4565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b601f821115610a38576000816000526020600020601f850160051c81016020861015613f035750805b601f850160051c820191505b81811015613f2257828155600101613f0f565b505050505050565b81516001600160401b03811115613f4357613f43613563565b613f5781613f518454613c09565b84613eda565b602080601f831160018114613f8c5760008415613f745750858301515b600019600386901b1c1916600185901b178555613f22565b600085815260208120601f198616915b82811015613fbb57888601518255948401946001909101908401613f9c565b5085821015613fd95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000613ffc604083018561349d565b828103602084015261400e818561349d565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a499083018461349d565b60006020828403121561405c57600080fd5b8151611f9d81613446565b60008161407657614076613c7b565b506000190190565b8135614089816134f5565b81546001600160a01b031981166001600160a01b0392909216918217835560208401356140b581613ca4565b600381106140d357634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b6000825161411c818460208701613479565b9190910192915050565b60e09190911b6001600160e01b031916815260200190565b60006020828403121561415057600080fd5b8151611f9d816138a6565b6020808252600a908201526921546f6b656e5479706560b01b604082015260600190565b600060033d11156141985760046000803e5060005160e01c5b90565b600060443d10156141a95790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156141d857505050505090565b82850191508151818111156141f05750505050505090565b843d870101602082850101111561420a5750505050505090565b61421960208286010187613579565b509095945050505050565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206be978c53209547c78386ce20198bf5b94b94eebf5d6a7e8631bd0d7c33b13dd64736f6c634300081700338502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
    "sourceMap": "859:9072:15:-:0;;;3389:654;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1067:40:95;;;;3607:5:15;3614:7;1883:5:25;:13;3607:5:15;1883::25;:13;:::i;:::-;-1:-1:-1;1906:7:25;:17;1916:7;1906;:17;:::i;:::-;-1:-1:-1;;2119:7:25;1933:13;:31;-1:-1:-1;3665:26:15::2;3677:13:::0;3665:11:::2;:26::i;:::-;3701:56;3726:17:::0;-1:-1:-1;;;;;3701:56:15;::::2;:24;:56::i;:::-;3768:45;785:4:71;3799:13:15::0;3768:10:::2;:45::i;:::-;3823:38;1285:24;3847:13:::0;3823:10:::2;:38::i;:::-;3871:40;-1:-1:-1::0;;;;;;;;;;;3897:13:15;3871:10:::2;:40::i;:::-;3922:34;1617:23;3953:1;3922:10;:34::i;:::-;3966:35;1442:24;3998:1;3966:10;:35::i;:::-;4012:24;4030:5;4012:17;:24::i;:::-;3389:654:::0;;;;;;859:9072;;1421:172:70;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;5061:2:821;3549:25:77;;;5043:21:821;5100:2;5080:18;;;5073:30;-1:-1:-1;;;5119:18:821;;;5112:45;5174:18;;3549:25:77;;;;;;;;3509:76;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;5349:25:821;;;3689:46:77;;5337:2:821;5322:18;3689:46:77;;;;;;;3408:334;;:::o;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;:::-;3475:152;;:::o;1299:224:87:-;1373:11;1369:148;;;1400:38;-1:-1:-1;;;;;;;;;;;1435:1:87;1400:11;:38::i;:::-;1299:224;:::o;1369:148::-;1469:37;-1:-1:-1;;;;;;;;;;;1503:1:87;1469:10;:37::i;5034:168:71:-;5112:14;;;;5138:4;5112:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;;;;;;;5157:38;;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;3475:152;;:::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;5555:491::-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;-1:-1:-1;;;;;5825:41:71;;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;7511:2:821;1911:55:298;;;7493:21:821;;;7530:18;;;7523:30;7589:34;7569:18;;;7562:62;7641:18;;1911:55:298;7309:356:821;1911:55:298;1990:6;-1:-1:-1;1563:441:298;;;;;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:821;552:16;;545:27;328:250::o;583:699::-;637:5;690:3;683:4;675:6;671:17;667:27;657:55;;708:1;705;698:12;657:55;731:13;;-1:-1:-1;;;;;793:10:821;;;790:36;;;806:18;;:::i;:::-;881:2;875:9;849:2;935:13;;-1:-1:-1;;931:22:821;;;955:2;927:31;923:40;911:53;;;979:18;;;999:22;;;976:46;973:72;;;1025:18;;:::i;:::-;1065:10;1061:2;1054:22;1100:2;1092:6;1085:18;1146:3;1139:4;1134:2;1126:6;1122:15;1118:26;1115:35;1112:55;;;1163:1;1160;1153:12;1112:55;1176:76;1249:2;1242:4;1234:6;1230:17;1223:4;1215:6;1211:17;1176:76;:::i;:::-;1270:6;583:699;-1:-1:-1;;;;;;583:699:821:o;1287:987::-;1422:6;1430;1438;1446;1454;1462;1515:3;1503:9;1494:7;1490:23;1486:33;1483:53;;;1532:1;1529;1522:12;1483:53;1555:40;1585:9;1555:40;:::i;:::-;1639:2;1624:18;;1618:25;1545:50;;-1:-1:-1;;;;;;1692:14:821;;;1689:34;;;1719:1;1716;1709:12;1689:34;1742:61;1795:7;1786:6;1775:9;1771:22;1742:61;:::i;:::-;1732:71;;1849:2;1838:9;1834:18;1828:25;1812:41;;1878:2;1868:8;1865:16;1862:36;;;1894:1;1891;1884:12;1862:36;;1917:63;1972:7;1961:8;1950:9;1946:24;1917:63;:::i;:::-;1907:73;;;1999:49;2044:2;2033:9;2029:18;1999:49;:::i;:::-;2091:3;2076:19;;2070:26;1989:59;;-1:-1:-1;;;;;;2125:31:821;;2115:42;;2105:70;;2171:1;2168;2161:12;2105:70;2194:5;-1:-1:-1;2218:50:821;2263:3;2248:19;;2218:50;:::i;:::-;2208:60;;1287:987;;;;;;;;:::o;2279:380::-;2358:1;2354:12;;;;2401;;;2422:61;;2476:4;2468:6;2464:17;2454:27;;2422:61;2529:2;2521:6;2518:14;2498:18;2495:38;2492:161;;2575:10;2570:3;2566:20;2563:1;2556:31;2610:4;2607:1;2600:15;2638:4;2635:1;2628:15;2492:161;;2279:380;;;:::o;2790:543::-;2892:2;2887:3;2884:11;2881:446;;;2928:1;2952:5;2949:1;2942:16;2996:4;2993:1;2983:18;3066:2;3054:10;3050:19;3047:1;3043:27;3037:4;3033:38;3102:4;3090:10;3087:20;3084:47;;;-1:-1:-1;3125:4:821;3084:47;3180:2;3175:3;3171:12;3168:1;3164:20;3158:4;3154:31;3144:41;;3235:82;3253:2;3246:5;3243:13;3235:82;;;3298:17;;;3279:1;3268:13;3235:82;;;3239:3;;;2881:446;2790:543;;;:::o;3509:1345::-;3629:10;;-1:-1:-1;;;;;3651:30:821;;3648:56;;;3684:18;;:::i;:::-;3713:97;3803:6;3763:38;3795:4;3789:11;3763:38;:::i;:::-;3757:4;3713:97;:::i;:::-;3865:4;;3922:2;3911:14;;3939:1;3934:663;;;;4641:1;4658:6;4655:89;;;-1:-1:-1;4710:19:821;;;4704:26;4655:89;-1:-1:-1;;3466:1:821;3462:11;;;3458:24;3454:29;3444:40;3490:1;3486:11;;;3441:57;4757:81;;3904:944;;3934:663;2737:1;2730:14;;;2774:4;2761:18;;-1:-1:-1;;3970:20:821;;;4088:236;4102:7;4099:1;4096:14;4088:236;;;4191:19;;;4185:26;4170:42;;4283:27;;;;4251:1;4239:14;;;;4118:19;;4088:236;;;4092:3;4352:6;4343:7;4340:19;4337:201;;;4413:19;;;4407:26;-1:-1:-1;;4496:1:821;4492:14;;;4508:3;4488:24;4484:37;4480:42;4465:58;4450:74;;4337:201;-1:-1:-1;;;;;4584:1:821;4568:14;;;4564:22;4551:36;;-1:-1:-1;3509:1345:821:o;5385:127::-;5446:10;5441:3;5437:20;5434:1;5427:31;5477:4;5474:1;5467:15;5501:4;5498:1;5491:15;5517:125;5582:9;;;5603:10;;;5600:36;;;5616:18;;:::i;5647:810::-;6058:23;6053:3;6046:36;6028:3;6111:6;6105:13;6127:75;6195:6;6190:2;6185:3;6181:12;6174:4;6166:6;6162:17;6127:75;:::i;:::-;-1:-1:-1;;;6261:2:821;6221:16;;;6253:11;;;6246:40;6311:13;;6333:76;6311:13;6395:2;6387:11;;6380:4;6368:17;;6333:76;:::i;:::-;6429:17;6448:2;6425:26;;5647:810;-1:-1:-1;;;;5647:810:821:o;6462:396::-;6611:2;6600:9;6593:21;6574:4;6643:6;6637:13;6686:6;6681:2;6670:9;6666:18;6659:34;6702:79;6774:6;6769:2;6758:9;6754:18;6749:2;6741:6;6737:15;6702:79;:::i;:::-;6842:2;6821:15;-1:-1:-1;;6817:29:821;6802:45;;;;6849:2;6798:54;;6462:396;-1:-1:-1;;6462:396:821:o;6863:168::-;6936:9;;;6967;;6984:15;;;6978:22;;6964:37;6954:71;;7005:18;;:::i;7036:127::-;7097:10;7092:3;7088:20;7085:1;7078:31;7128:4;7125:1;7118:15;7152:4;7149:1;7142:15;7168:136;7207:3;7235:5;7225:39;;7244:18;;:::i;:::-;-1:-1:-1;;;7280:18:821;;7168:136::o;7309:356::-;859:9072:15;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "859:9072:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4342:592;;;;;;;;;;-1:-1:-1;4342:592:15;;;;;:::i;:::-;;:::i;:::-;;;565:14:821;;558:22;540:41;;528:2;513:18;4342:592:15;;;;;;;;6129:98:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7615:200::-;;;;;;;;;;-1:-1:-1;7615:200:25;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:821;;;1679:51;;1667:2;1652:18;7615:200:25;1533:203:821;7162:392:25;;;;;;;;;;-1:-1:-1;7162:392:25;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;611:162:237:-;;;;;;;;;;-1:-1:-1;611:162:237;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4504:33:821;;;4486:52;;4474:2;4459:18;611:162:237;4342:202:821;2282:306:25;;;;;;;;;;-1:-1:-1;2541:12:25;;2525:13;;:28;2282:306;;;4695:25:821;;;4683:2;4668:18;2282:306:25;4549:177:821;1036:150:94;;;;;;;;;;-1:-1:-1;1036:150:94;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;831:66:87:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;831:66:87;;8454:134:25;;;;;;;;;;-1:-1:-1;8454:134:25;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;5881:665:15;;;;;;:::i;:::-;;:::i;1421:325:77:-;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3253:271:71:-;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;7509:104:15:-;;;;;;;;;;-1:-1:-1;7593:13:15;;7509:104;;8654:149:25;;;;;;;;;;-1:-1:-1;8654:149:25;;;;;:::i;:::-;;:::i;7924:343:15:-;;;;;;;;;;-1:-1:-1;7924:343:15;;;;;:::i;:::-;;:::i;1986:381:77:-;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;8856:32:821;;;8838:51;;8937:6;8925:19;;;8920:2;8905:18;;8898:47;8811:18;1986:381:77;8666:285:821;3065:256:77;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;1245:124:94:-;;;;;;;;;;-1:-1:-1;1245:124:94;;;;;:::i;:::-;;:::i;5944:123:25:-;;;;;;;;;;-1:-1:-1;5944:123:25;;;;;:::i;:::-;;:::i;3370:203::-;;;;;;;;;;-1:-1:-1;3370:203:25;;;;;:::i;:::-;;:::i;1299:224:87:-;;;;;;;;;;-1:-1:-1;1299:224:87;;;;;:::i;:::-;;:::i;6843:411:15:-;;;;;;;;;;-1:-1:-1;6843:411:15;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;;;;:::i;1643:633:72:-;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;6291:102:25:-;;;;;;;;;;;;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;740:49:71:-;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;7882:282:25;;;;;;;;;;-1:-1:-1;7882:282:25;;;;;:::i;:::-;;:::i;2204:211:71:-;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2477:144:77:-;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;8869:343:25;;;;;;;;;;-1:-1:-1;8869:343:25;;;;;:::i;:::-;;:::i;724:247:235:-;;;;;;;;;;-1:-1:-1;724:247:235;;;;;:::i;:::-;-1:-1:-1;;;724:247:235;;;;;;;;5176:137:15;;;;;;;;;;-1:-1:-1;5176:137:15;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;816:127:94:-;;;;;;;;;;-1:-1:-1;816:127:94;;;;;:::i;:::-;887:7;913:17;;;;;;;;;;:23;;816:127;3895:171:71;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;8230:162:25:-;;;;;;;;;;-1:-1:-1;8230:162:25;;;;;:::i;:::-;;:::i;499:219:235:-;;;;;;;;;;-1:-1:-1;499:219:235;;;;;:::i;:::-;-1:-1:-1;;;499:219:235;;;;;;;;4342:592:15;4476:4;4511:36;4535:11;4511:23;:36::i;:::-;:77;;;-1:-1:-1;;;;;;;;;;4563:25:15;;;4511:77;:152;;;-1:-1:-1;;;;;;;;;;4638:25:15;;;4511:152;:227;;;-1:-1:-1;;;;;;;;;;4713:25:15;;;4511:227;:326;;;-1:-1:-1;;;;;;;4796:41:15;;-1:-1:-1;;;4796:41:15;4511:326;:416;;;-1:-1:-1;;;;;;;4878:49:15;;-1:-1:-1;;;4878:49:15;4511:416;4492:435;4342:592;-1:-1:-1;;4342:592:15:o;6129:98:25:-;6183:13;6215:5;6208:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6129:98;:::o;7615:200::-;7683:7;7707:16;7715:7;7707;:16::i;:::-;7702:64;;7732:34;;-1:-1:-1;;;7732:34:25;;;;;;;;;;;7702:64;-1:-1:-1;7784:24:25;;;;:15;:24;;;;;;-1:-1:-1;;;;;7784:24:25;;7615:200::o;7162:392::-;7242:13;7258:24;7274:7;7258:15;:24::i;:::-;7242:40;;7302:5;-1:-1:-1;;;;;7296:11:25;:2;-1:-1:-1;;;;;7296:11:25;;7292:48;;7316:24;;-1:-1:-1;;;7316:24:25;;;;;;;;;;;7292:48;9912:10:15;-1:-1:-1;;;;;7355:21:25;;;7351:158;;7395:37;7412:5;9912:10:15;8230:162:25;:::i;7395:37::-;7390:119;;7459:35;;-1:-1:-1;;;7459:35:25;;;;;;;;;;;7390:119;7519:28;7528:2;7532:7;7541:5;7519:8;:28::i;:::-;7232:322;7162:392;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;611:162:237:-;-1:-1:-1;;;611:162:237;;;;;;;:::o;1036:150:94:-;1117:12;;:::i;:::-;1148:6;:17;;;;;;;;;;;:31;;;:24;;;;:31;;;;;;1141:38;;;;;;;;;;-1:-1:-1;;;;;1141:38:94;;;;;;1148:31;;1141:38;;;-1:-1:-1;;;1141:38:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1036:150;-1:-1:-1;;;1036:150:94:o;8454:134:25:-;8553:28;8563:4;8569:2;8573:7;8553:9;:28::i;5881:665:15:-;6078:15;1285:24;2613:38;2634:4;2640:10;2613:20;:38::i;:::-;6110:31:::1;1617:23;6138:1;6110:7;:31::i;:::-;6105:203;;6162:9;6157:141;6177:24:::0;;::::1;6157:141;;;6229:54;1617:23;6252:13;;6266:1;6252:16;;;;;;;:::i;:::-;:30;::::0;::::1;:16;::::0;;::::1;;:30:::0;;::::1;::::0;-1:-1:-1;6252:30:15::1;:::i;:::-;6229:10;:54::i;:::-;6203:6;6208:1;6203:6:::0;::::1;:::i;:::-;;;6157:141;;;;6105:203;7593:13:::0;;6318:29:::1;;6358:69;6371:10;6383:13;;6398:19;;6358:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;6419:7:15;;-1:-1:-1;6358:12:15::1;::::0;-1:-1:-1;;6358:69:15:i:1;:::-;6438:24;6448:10;6460:1;6438:9;:24::i;:::-;6516:7;6504:10;-1:-1:-1::0;;;;;6478:61:15::1;6492:10;-1:-1:-1::0;;;;;6478:61:15::1;;6525:13;;6478:61;;;;;;;:::i;:::-;;;;;;;;5881:665:::0;;;;;;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;18497:2:821;3433:39:71;;;18479:21:821;18536:2;18516:18;;;18509:30;18575:31;18555:18;;;18548:59;18624:18;;3433:39:71;18295:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;:::-;3253:271;;:::o;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;18855:2:821;4592:36:71;;;18837:21:821;18894:2;18874:18;;;18867:30;-1:-1:-1;;;18913:18:821;;;18906:56;18979:18;;4592:36:71;18653:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;8654:149:25:-;8757:39;8774:4;8780:2;8784:7;8757:39;;;;;;;;;;;;:16;:39::i;7924:343:15:-;8039:24;8075:13;8091:17;8099:8;8091:7;:17::i;:::-;8075:33;;8154:5;-1:-1:-1;;;;;8141:18:15;:9;-1:-1:-1;;;;;8141:18:15;;:68;;;;8175:34;8192:5;8199:9;8175:16;:34::i;:::-;8141:118;;;;8250:9;-1:-1:-1;;;;;8225:34:15;:21;8237:8;8225:11;:21::i;:::-;-1:-1:-1;;;;;8225:34:15;;8118:142;7924:343;-1:-1:-1;;;;7924:343:15:o;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;3065:256::-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;1245:124:94:-;1341:6;:17;;;;;;;;;;:21;;1334:28;;1309:13;;1341:21;1334:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:124;;;:::o;5944:123:25:-;6008:7;6034:21;6047:7;6034:12;:21::i;:::-;:26;;5944:123;-1:-1:-1;;5944:123:25:o;3370:203::-;3434:7;-1:-1:-1;;;;;3457:19:25;;3453:60;;3485:28;;-1:-1:-1;;;3485:28:25;;;;;;;;;;;3453:60;-1:-1:-1;;;;;;3538:19:25;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3538:27:25;;3370:203::o;1299:224:87:-;1373:11;1369:148;;;1400:38;-1:-1:-1;;;;;;;;;;;1435:1:87;1400:11;:38::i;1369:148::-;1469:37;-1:-1:-1;;;;;;;;;;;1503:1:87;1469:10;:37::i;6843:411:15:-;1442:24;2613:38;2634:4;2640:10;2613:20;:38::i;:::-;7593:13;;6962:8:::1;:30;6954:59;;;::::0;-1:-1:-1;;;6954:59:15;;19210:2:821;6954:59:15::1;::::0;::::1;19192:21:821::0;19249:2;19229:18;;;19222:30;-1:-1:-1;;;19268:18:821;;;19261:46;19324:18;;6954:59:15::1;19008:340:821::0;6954:59:15::1;7031:39;7049:10;7061:8;7031:17;:39::i;:::-;7023:87;;;::::0;-1:-1:-1;;;7023:87:15;;19555:2:821;7023:87:15::1;::::0;::::1;19537:21:821::0;19594:2;19574:18;;;19567:30;19633:34;19613:18;;;19606:62;-1:-1:-1;;;19684:18:821;;;19677:33;19727:19;;7023:87:15::1;19353:399:821::0;7023:87:15::1;7121:15;7127:8;7121:5;:15::i;:::-;7146:36;7161:10;7173:8;7146:14;:36::i;:::-;7198:49;::::0;7238:8;;-1:-1:-1;;;;;7198:49:15;::::1;::::0;7214:10:::1;::::0;7198:49:::1;::::0;;;::::1;6843:411:::0;;;:::o;871:86:70:-;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6291:102:25:-;6347:13;6379:7;6372:14;;;;;:::i;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;7882:282:25:-;9912:10:15;-1:-1:-1;;;;;7980:24:25;;;7976:54;;8013:17;;-1:-1:-1;;;8013:17:25;;;;;;;;;;;7976:54;9912:10:15;8041:32:25;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8041:42:25;;;;;;;;;;;;:53;;-1:-1:-1;;8041:53:25;;;;;;;;;;8109:48;;540:41:821;;;8041:42:25;;9912:10:15;8109:48:25;;513:18:821;8109:48:25;;;;;;;7882:282;;:::o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;9912:10:15;834:14:65;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;8869:343:25;8992:28;9002:4;9008:2;9012:7;8992:9;:28::i;:::-;9034:15;:2;-1:-1:-1;;;;;9034:13:25;;:15::i;:::-;9030:176;;;9068:56;9099:4;9105:2;9109:7;9118:5;9068:30;:56::i;:::-;9063:143;;9151:40;;-1:-1:-1;;;9151:40:25;;;;;;;;;;;9063:143;8869:343;;;;:::o;5176:137:15:-;5250:13;5282:24;5297:8;5282:14;:24::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8230:162:25:-;-1:-1:-1;;;;;8350:25:25;;;8327:4;8350:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8230:162::o;3020:291::-;3113:4;-1:-1:-1;;;;;;3148:40:25;;-1:-1:-1;;;3148:40:25;;:104;;-1:-1:-1;;;;;;;3204:48:25;;-1:-1:-1;;;3204:48:25;3148:104;:156;;;;3268:36;3292:11;3268:23;:36::i;9458:172::-;9515:4;9578:13;;9568:7;:23;9538:85;;;;-1:-1:-1;;9596:20:25;;;;:11;:20;;;;;:27;-1:-1:-1;;;9596:27:25;;;;9595:28;;9458:172::o;18379:159::-;18459:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18459:29:25;-1:-1:-1;;;;;18459:29:25;;;;;;;;;18503:28;;18459:24;;18503:28;;;;;;;18379:159;;;:::o;9412:115:15:-;9476:4;9513:7;:5;:7::i;:::-;-1:-1:-1;;;;;9499:21:15;:10;-1:-1:-1;;;;;9499:21:15;;9492:28;;9412:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;13484:2052:25:-;13564:35;13602:21;13615:7;13602:12;:21::i;:::-;13564:59;;13660:4;-1:-1:-1;;;;;13638:26:25;:13;:18;;;-1:-1:-1;;;;;13638:26:25;;13634:67;;13673:28;;-1:-1:-1;;;13673:28:25;;;;;;;;;;;13634:67;13712:22;9912:10:15;-1:-1:-1;;;;;13738:20:25;;;;:72;;-1:-1:-1;13774:36:25;13791:4;9912:10:15;8230:162:25;:::i;13774:36::-;13738:124;;;-1:-1:-1;9912:10:15;13826:20:25;13838:7;13826:11;:20::i;:::-;-1:-1:-1;;;;;13826:36:25;;13738:124;13712:151;;13879:17;13874:66;;13905:35;;-1:-1:-1;;;13905:35:25;;;;;;;;;;;13874:66;-1:-1:-1;;;;;13954:16:25;;13950:52;;13979:23;;-1:-1:-1;;;13979:23:25;;;;;;;;;;;13950:52;14013:43;14035:4;14041:2;14045:7;14054:1;14013:21;:43::i;:::-;14118:35;14135:1;14139:7;14148:4;14118:8;:35::i;:::-;-1:-1:-1;;;;;14443:18:25;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;14443:31:25;;;-1:-1:-1;;;;;14443:31:25;;;-1:-1:-1;;14443:31:25;;;;;;;14488:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14488:29:25;;;;;;;;;;;14566:20;;;:11;:20;;;;;;14600:18;;-1:-1:-1;;;;;;14632:49:25;;;;-1:-1:-1;;;14665:15:25;14632:49;;;;;;;;;;14951:11;;15010:24;;;;;15052:13;;14566:20;;15010:24;;15052:13;15048:377;;15259:13;;15244:11;:28;15240:171;;15296:20;;15364:28;;;;-1:-1:-1;;;;;15338:54:25;-1:-1:-1;;;15338:54:25;-1:-1:-1;;;;;;15338:54:25;;;-1:-1:-1;;;;;15296:20:25;;15338:54;;;;15240:171;14419:1016;;;15469:7;15465:2;-1:-1:-1;;;;;15450:27:25;15459:4;-1:-1:-1;;;;;15450:27:25;-1:-1:-1;;;;;;;;;;;15450:27:25;;;;;;;;;15487:42;13554:1982;;13484:2052;;;:::o;6146:510:71:-;6244:32;6262:4;6268:7;6244:17;:32::i;:::-;6239:411;;6435:41;6463:7;-1:-1:-1;;;;;6435:41:71;6473:2;6435:19;:41::i;:::-;6547:38;6575:4;6582:2;6547:19;:38::i;:::-;6344:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6344:263:71;;;;;;;;;;-1:-1:-1;;;6292:347:71;;;;;;;:::i;5555:491::-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;1188:340:95:-;1365:36;1379:7;;1388:12;1365:13;:36::i;:::-;1411:44;1427:13;1442:12;1411:15;:44::i;:::-;1465:56;1485:11;1506:4;1513:7;;1465:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:19;:56::i;9709:102:25:-;9777:27;9787:2;9791:8;9777:27;;;;;;;;;;;;:9;:27::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;3253:271:71;;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;4695:25:821;;;3689:46:77;;4683:2:821;4668:18;3689:46:77;;;;;;;3408:334;;:::o;4713:1174:25:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4823:7:25;4921:13;;4914:4;:20;4910:913;;;4958:31;4992:17;;;:11;:17;;;;;;;;;4958:51;;;;;;;;;-1:-1:-1;;;;;4958:51:25;;;;-1:-1:-1;;;4958:51:25;;-1:-1:-1;;;;;4958:51:25;;;;;;;;-1:-1:-1;;;4958:51:25;;;;;;;;;;;;;;5031:774;;5084:14;;-1:-1:-1;;;;;5084:28:25;;5080:107;;5151:9;4713:1174;-1:-1:-1;;;4713:1174:25:o;5080:107::-;-1:-1:-1;;;5547:6:25;5595:17;;;;:11;:17;;;;;;;;;5583:29;;;;;;;;;-1:-1:-1;;;;;5583:29:25;;;;;-1:-1:-1;;;5583:29:25;;-1:-1:-1;;;;;5583:29:25;;;;;;;;-1:-1:-1;;;5583:29:25;;;;;;;;;;;;;5646:28;5642:115;;5717:9;4713:1174;-1:-1:-1;;;4713:1174:25:o;5642:115::-;5504:279;;;4936:887;4910:913;5849:31;;-1:-1:-1;;;5849:31:25;;;;;;;;;;;15609:87;15668:21;15674:7;15683:5;15668;:21::i;1604:448:95:-;1690:13;913:17:94;;;;;;;;;;:23;;;-1:-1:-1;;;;;1785:18:95;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1752:51;;1819:9;1814:119;1838:5;1834:1;:9;1814:119;;;1888:34;1905:13;1920:1;1888:16;:34::i;:::-;1867:15;1883:1;1867:18;;;;;;;;:::i;:::-;;;;;;;;;;:55;1845:6;1850:1;1845:6;;:::i;:::-;;;1814:119;;;;1943:28;1957:13;1943;:28::i;:::-;1982:63;2010:4;2017:10;2029:15;1982:19;:63::i;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;4695:25:821;;;4836:49:77;;4804:29;;4901:43;;4668:18:821;4901:43:77;;;;;;;4619:332;;;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;1405:320::-;-1:-1:-1;;;;;1695:19:289;;:23;;;1405:320::o;19019:650:25:-;19197:72;;-1:-1:-1;;;19197:72:25;;19177:4;;-1:-1:-1;;;;;19197:36:25;;;;;:72;;9912:10:15;;19248:4:25;;19254:7;;19263:5;;19197:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19197:72:25;;;;;;;;-1:-1:-1;;19197:72:25;;;;;;;;;;;;:::i;:::-;;;19193:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19428:6;:13;19445:1;19428:18;19424:229;;19473:40;;-1:-1:-1;;;19473:40:25;;;;;;;;;;;19424:229;19613:6;19607:13;19598:6;19594:2;19590:15;19583:38;19193:470;-1:-1:-1;;;;;;19315:55:25;-1:-1:-1;;;19315:55:25;;-1:-1:-1;19308:62:25;;404:221:236;506:4;-1:-1:-1;;;;;;529:49:236;;-1:-1:-1;;;529:49:236;;:89;;-1:-1:-1;;;;;;;;;;947:40:22;;;582:36:236;839:155:22;8546:348:15;8815:72;8854:4;8860:2;8864:12;8878:8;8815:38;:72::i;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;26262:2:821;1911:55:298;;;26244:21:821;;;26281:18;;;26274:30;26340:34;26320:18;;;26313:62;26392:18;;1911:55:298;26060:356:821;1479:469:94;1594:13;1633:15;1625:35;;;;-1:-1:-1;;;1625:35:94;;26623:2:821;1625:35:94;;;26605:21:821;26662:1;26642:18;;;26635:29;-1:-1:-1;;;26680:18:821;;;26673:37;26727:18;;1625:35:94;26421:330:821;1625:35:94;1678:6;:17;;;;;;;;;;:23;:28;1670:50;;;;-1:-1:-1;;;1670:50:94;;26958:2:821;1670:50:94;;;26940:21:821;26997:1;26977:18;;;26970:29;-1:-1:-1;;;27015:18:821;;;27008:39;27064:18;;1670:50:94;26756:332:821;1670:50:94;1736:9;1731:163;1755:11;1751:1;:15;1731:163;;;1790:33;1806:13;;1820:1;1806:16;;;;;;;:::i;:::-;;;;;;1790:33;;;;;;;;;;:::i;:::-;:15;:33::i;:::-;1867:13;;1881:1;1867:16;;;;;;;:::i;:::-;1837:6;:17;;;;;;;;;;;:27;;;:24;;:27;;;;;1867:16;;;;;;;;;1837:27;-1:-1:-1;1837:46:94;1867:16;1837:27;:46;:::i;:::-;-1:-1:-1;1768:6:94;;-1:-1:-1;1773:1:94;1768:6;;:::i;:::-;;;1731:163;;;-1:-1:-1;1904:6:94;:17;;;;;;;;;;;:37;-1:-1:-1;;1479:469:94:o;4980:118::-;5063:6;:17;;;;;;;;;;:21;;:28;5087:4;5063:21;:28;:::i;2906:815:95:-;3006:24;;3040:314;3064:7;:14;3060:1;:18;3040:314;;;434:42:292;-1:-1:-1;;;;;3106:60:95;:7;3114:1;3106:10;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;3106:60:95;;:84;;;;-1:-1:-1;;;;;;3170:20:95;;3185:4;3170:20;3106:84;3102:242;;;3230:7;3238:1;3230:10;;;;;;;;:::i;:::-;;;;;;;:22;;;3210:42;;;;;:::i;:::-;;;3102:242;;;3291:38;3306:5;3313:3;3318:7;3326:1;3318:10;;;;;;;;:::i;:::-;;;;;;;3291:14;:38::i;:::-;3080:6;3085:1;3080:6;;:::i;:::-;;;3040:314;;;-1:-1:-1;3367:21:95;;3363:352;;3432:218;;;;;;;;434:42:292;3432:218:95;;-1:-1:-1;3432:218:95;;;;;;;;;;;;;;;;;;;3664:40;3679:5;3686:3;3432:218;3664:14;:40::i;10171:1678:25:-;10282:13;;-1:-1:-1;;;;;10309:16:25;;10305:48;;10334:19;;-1:-1:-1;;;10334:19:25;;;;;;;;;;;10305:48;10367:8;10379:1;10367:13;10363:44;;10389:18;;-1:-1:-1;;;10389:18:25;;;;;;;;;;;10363:44;10418:61;10448:1;10452:2;10456:12;10470:8;10418:21;:61::i;:::-;-1:-1:-1;;;;;10750:16:25;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;10808:49:25;;-1:-1:-1;;;;;10750:44:25;;;;;;;10808:49;;;-1:-1:-1;;;;;;;;;10750:44:25;;;;;;10808:49;;;;;;;;;;;;;;;;10872:25;;;10808:29;10872:25;;;;;;:35;;-1:-1:-1;;;;;;10921:66:25;;;-1:-1:-1;;;10971:15:25;10921:66;;;;;;;;;;;;;10872:25;;11065:23;;;;11107:15;;:13;:15::i;:::-;11103:618;;;11142:308;11172:38;;11197:12;;-1:-1:-1;;;;;11172:38:25;;;11189:1;;-1:-1:-1;;;;;;;;;;;11172:38:25;11189:1;;11172:38;11237:69;11276:1;11280:2;11284:14;;;;;;11300:5;11237:30;:69::i;:::-;11232:172;;11341:40;;-1:-1:-1;;;11341:40:25;;;;;;;;;;;11232:172;11445:3;11430:12;:18;11142:308;;11529:12;11512:13;;:29;11508:43;;11543:8;;;11508:43;11103:618;;;11590:117;11620:40;;11645:14;;;;;-1:-1:-1;;;;;11620:40:25;;;11637:1;;-1:-1:-1;;;;;;;;;;;11620:40:25;11637:1;;11620:40;11702:3;11687:12;:18;11590:117;;11103:618;-1:-1:-1;11734:13:25;:28;11782:60;11811:1;11815:2;11819:12;11833:8;11782:60;:::i;5034:168:71:-;5112:14;;;;5138:4;5112:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;;;;;;;5157:38;;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;15913:2355:25:-;15992:35;16030:21;16043:7;16030:12;:21::i;:::-;16077:18;;15992:59;;-1:-1:-1;16106:284:25;;;;16139:22;9912:10:15;-1:-1:-1;;;;;16165:20:25;;;;:76;;-1:-1:-1;16205:36:25;16222:4;9912:10:15;8230:162:25;:::i;16205:36::-;16165:132;;;-1:-1:-1;9912:10:15;16261:20:25;16273:7;16261:11;:20::i;:::-;-1:-1:-1;;;;;16261:36:25;;16165:132;16139:159;;16318:17;16313:66;;16344:35;;-1:-1:-1;;;16344:35:25;;;;;;;;;;;16313:66;16125:265;16106:284;16400:51;16422:4;16436:1;16440:7;16449:1;16400:21;:51::i;:::-;16513:35;16530:1;16534:7;16543:4;16513:8;:35::i;:::-;-1:-1:-1;;;;;16872:18:25;;;16838:31;16872:18;;;:12;:18;;;;;;;;16904:24;;-1:-1:-1;;;;;;;;;;16904:24:25;;;;;;;;;-1:-1:-1;;;;;;16904:24:25;;;;16942:29;;;;;16927:1;16942:29;;;;;;;;-1:-1:-1;;;;;;16942:29:25;;;;;;;;;;17101:20;;;:11;:20;;;;;;17135;;-1:-1:-1;;;;17202:15:25;17169:49;;;-1:-1:-1;;;17169:49:25;-1:-1:-1;;;;;;17169:49:25;;;;;;;;;;17232:22;-1:-1:-1;;;17232:22:25;;;17520:11;;;17579:24;;;;;17621:13;;16872:18;;17579:24;;17621:13;17617:377;;17828:13;;17813:11;:28;17809:171;;17865:20;;17933:28;;;;-1:-1:-1;;;;;17907:54:25;-1:-1:-1;;;17907:54:25;-1:-1:-1;;;;;;17907:54:25;;;-1:-1:-1;;;;;17865:20:25;;17907:54;;;;17809:171;-1:-1:-1;;18019:35:25;;18046:7;;-1:-1:-1;18042:1:25;;-1:-1:-1;;;;;;18019:35:25;;;-1:-1:-1;;;;;;;;;;;18019:35:25;18042:1;;18019:35;-1:-1:-1;;18237:12:25;:14;;;;;;-1:-1:-1;;15913:2355:25:o;5171:220:94:-;5237:9;5232:116;5256:6;:17;;;;;;;;;;:23;5252:27;;5232:116;;;5310:6;:17;;;;;;;;;;;:27;;;:24;;;;:27;;;;;5303:34;;-1:-1:-1;;;;;;5303:34:94;;;;;;;;;;;;;;;;5281:6;;5335:1;5281:6;:::i;:::-;;;5232:116;;;-1:-1:-1;5383:1:94;5357:17;;;;;;;;;;:27;5171:220::o;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;1742:438:87:-;1949:34;-1:-1:-1;;;;;;;;;;;1980:1:87;1949:7;:34::i;:::-;1948:35;:57;;;;-1:-1:-1;;;;;;1987:18:87;;;;1948:57;:77;;;;-1:-1:-1;;;;;;2009:16:87;;;;1948:77;1944:230;;;2046:28;-1:-1:-1;;;;;;;;;;;2069:4:87;2046:7;:28::i;:::-;2045:29;:60;;;;;2079:26;-1:-1:-1;;;;;;;;;;;2102:2:87;2079:7;:26::i;:::-;2078:27;2045:60;2041:123;;;2125:24;;-1:-1:-1;;;2125:24:87;;28435:2:821;2125:24:87;;;28417:21:821;28474:2;28454:18;;;28447:30;-1:-1:-1;;;28493:18:821;;;28486:44;28547:18;;2125:24:87;28233:338:821;3592:1300:94;3686:16;3666:6;:16;;;:36;;;;;;;;:::i;:::-;;3662:1224;;3730:20;;3722:59;;-1:-1:-1;;;3722:59:94;;-1:-1:-1;;;;;3722:47:94;;;;;;:59;;3770:10;;3722:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;3722:59:94;;;;;;;;-1:-1:-1;;3722:59:94;;;;;;;;;;;;:::i;:::-;;;3718:220;;3903:20;;-1:-1:-1;;;3903:20:94;;;;;;;:::i;3718:220::-;3836:12;3828:35;;;;-1:-1:-1;;;3828:35:94;;;;;;;:::i;3662:1224::-;3978:17;3958:6;:16;;;:37;;;;;;;;:::i;:::-;;3954:932;;4023:20;;4015:59;;-1:-1:-1;;;4015:59:94;;-1:-1:-1;;;;;4015:47:94;;;;;;:59;;4063:10;;4015:59;;;:::i;3954:932::-;4273:15;4253:6;:16;;;:35;;;;;;;;:::i;:::-;;4249:637;;4308:20;;-1:-1:-1;;;;;4308:56:94;434:42:292;4308:56:94;4304:572;;4426:20;;4418:59;;-1:-1:-1;;;4418:59:94;;-1:-1:-1;;;;;4418:47:94;;;;;;:59;;4466:10;;4418:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4418:59:94;;;;;;;;-1:-1:-1;;4418:59:94;;;;;;;;;;;;:::i;:::-;;;4414:448;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;1133:173:70;:::o;4414:448:94:-;4537:12;4536:13;4528:36;;;;-1:-1:-1;;;4528:36:94;;;;;;;:::i;:::-;4599:20;;4591:59;;-1:-1:-1;;;4591:59:94;;-1:-1:-1;;;;;4591:47:94;;;;;;:59;;4639:10;;4591:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4591:59:94;;;;;;;;-1:-1:-1;;4591:59:94;;;;;;;;;;;;:::i;:::-;;;4587:218;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;3253:271:71;;:::o;4587:218:94:-;4715:13;4714:14;4706:37;;;;-1:-1:-1;;;4706:37:94;;;;;;;:::i;2126:699:95:-;2242:15;2222:6;:16;;;:35;;;;;;;;:::i;:::-;;2218:601;;2273:215;2338:6;:20;;;2376:5;2399:3;2420:6;:18;;;2456;2273:47;:215::i;2218:601::-;2529:16;2509:6;:16;;;:36;;;;;;;;:::i;:::-;;2505:314;;2569:20;;2620:14;;;;;2561:74;;-1:-1:-1;;;2561:74:95;;-1:-1:-1;;;;;2561:46:95;;;;;;:74;;2608:5;;2615:3;;2561:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7232:322:25;7162:392;;:::o;2505:314:95:-;2676:17;2656:6;:16;;;:37;;;;;;;;:::i;:::-;;2652:167;;2718:20;;2769:14;;;;;2785:18;;;;2709:99;;-1:-1:-1;;;2709:99:95;;-1:-1:-1;;;;;31226:15:821;;;2709:99:95;;;31208:34:821;31278:15;;;31258:18;;;31251:43;31310:18;;;31303:34;;;;31353:18;;;31346:34;;;;31188:3;31396:19;;;31389:32;-1:-1:-1;31437:19:821;;;31430:30;2709:47:95;;;;;;31477:19:821;;2709:99:95;30875:627:821;7668:628:289;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;31709:2:821;8110:60:289;;;31691:21:821;31748:2;31728:18;;;31721:30;31787:31;31767:18;;;31760:59;31836:18;;8110:60:289;31507:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;4695:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;4668:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;:::-;1221:761;;1266:626;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;32067:2:821;1645:52:292;;;32049:21:821;32106:2;32086:18;;;32079:30;-1:-1:-1;;;32125:18:821;;;32118:49;32184:18;;1645:52:292;31865:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:761;;1552:340;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;8818:540:289:-;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;2866:439:292:-;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1040:96;1060:5;1090:27;;;1119:4;1125:2;1129:5;1067:68;;;;;;;;;;:::i;3107:706::-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;32625:2:821;3711:85:228;;;32607:21:821;32664:2;32644:18;;;32637:30;32703:34;32683:18;;;32676:62;-1:-1:-1;;;32754:18:821;;;32747:40;32804:19;;3711:85:228;32423:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:821:-;-1:-1:-1;;;;;;88:32:821;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:821;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:821;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:821:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:821;;1348:180;-1:-1:-1;1348:180:821:o;1741:131::-;-1:-1:-1;;;;;1816:31:821;;1806:42;;1796:70;;1862:1;1859;1852:12;1877:134;1945:20;;1974:31;1945:20;1974:31;:::i;:::-;1877:134;;;:::o;2016:315::-;2084:6;2092;2145:2;2133:9;2124:7;2120:23;2116:32;2113:52;;;2161:1;2158;2151:12;2113:52;2200:9;2187:23;2219:31;2244:5;2219:31;:::i;:::-;2269:5;2321:2;2306:18;;;;2293:32;;-1:-1:-1;;;2016:315:821:o;2336:247::-;2395:6;2448:2;2436:9;2427:7;2423:23;2419:32;2416:52;;;2464:1;2461;2454:12;2416:52;2503:9;2490:23;2522:31;2547:5;2522:31;:::i;2588:127::-;2649:10;2644:3;2640:20;2637:1;2630:31;2680:4;2677:1;2670:15;2704:4;2701:1;2694:15;2720:249;2830:2;2811:13;;-1:-1:-1;;2807:27:821;2795:40;;-1:-1:-1;;;;;2850:34:821;;2886:22;;;2847:62;2844:88;;;2912:18;;:::i;:::-;2948:2;2941:22;-1:-1:-1;;2720:249:821:o;2974:468::-;3038:5;-1:-1:-1;;;;;3064:6:821;3061:30;3058:56;;;3094:18;;:::i;:::-;3143:2;3137:9;3155:69;3212:2;3191:15;;-1:-1:-1;;3187:29:821;3218:4;3183:40;3137:9;3155:69;:::i;:::-;3242:6;3233:15;;3272:6;3264;3257:22;3312:3;3303:6;3298:3;3294:16;3291:25;3288:45;;;3329:1;3326;3319:12;3288:45;3379:6;3374:3;3367:4;3359:6;3355:17;3342:44;3434:1;3427:4;3418:6;3410;3406:19;3402:30;3395:41;;2974:468;;;;;:::o;3447:220::-;3489:5;3542:3;3535:4;3527:6;3523:17;3519:27;3509:55;;3560:1;3557;3550:12;3509:55;3582:79;3657:3;3648:6;3635:20;3628:4;3620:6;3616:17;3582:79;:::i;3672:665::-;3767:6;3775;3783;3791;3844:3;3832:9;3823:7;3819:23;3815:33;3812:53;;;3861:1;3858;3851:12;3812:53;3900:9;3887:23;3919:31;3944:5;3919:31;:::i;:::-;3969:5;-1:-1:-1;4026:2:821;4011:18;;3998:32;4039:33;3998:32;4039:33;:::i;:::-;4091:7;-1:-1:-1;4145:2:821;4130:18;;4117:32;;-1:-1:-1;4200:2:821;4185:18;;4172:32;-1:-1:-1;;;;;4216:30:821;;4213:50;;;4259:1;4256;4249:12;4213:50;4282:49;4323:7;4314:6;4303:9;4299:22;4282:49;:::i;:::-;4272:59;;;3672:665;;;;;;;:::o;4731:248::-;4799:6;4807;4860:2;4848:9;4839:7;4835:23;4831:32;4828:52;;;4876:1;4873;4866:12;4828:52;-1:-1:-1;;4899:23:821;;;4969:2;4954:18;;;4941:32;;-1:-1:-1;4731:248:821:o;4984:127::-;5045:10;5040:3;5036:20;5033:1;5026:31;5076:4;5073:1;5066:15;5100:4;5097:1;5090:15;5116:237;5197:1;5190:5;5187:12;5177:143;;5242:10;5237:3;5233:20;5230:1;5223:31;5277:4;5274:1;5267:15;5305:4;5302:1;5295:15;5177:143;5329:18;;5116:237::o;5358:508::-;5575:13;;-1:-1:-1;;;;;5571:39:821;5553:58;;5658:4;5646:17;;;5640:24;5540:3;5525:19;;;5673:61;;5713:20;;5640:24;5673:61;:::i;:::-;;5790:4;5782:6;5778:17;5772:24;5765:4;5754:9;5750:20;5743:54;5853:4;5845:6;5841:17;5835:24;5828:4;5817:9;5813:20;5806:54;5358:508;;;;:::o;6053:456::-;6130:6;6138;6146;6199:2;6187:9;6178:7;6174:23;6170:32;6167:52;;;6215:1;6212;6205:12;6167:52;6254:9;6241:23;6273:31;6298:5;6273:31;:::i;:::-;6323:5;-1:-1:-1;6380:2:821;6365:18;;6352:32;6393:33;6352:32;6393:33;:::i;:::-;6053:456;;6445:7;;-1:-1:-1;;;6499:2:821;6484:18;;;;6471:32;;6053:456::o;6699:348::-;6751:8;6761:6;6815:3;6808:4;6800:6;6796:17;6792:27;6782:55;;6833:1;6830;6823:12;6782:55;-1:-1:-1;6856:20:821;;-1:-1:-1;;;;;6888:30:821;;6885:50;;;6931:1;6928;6921:12;6885:50;6968:4;6960:6;6956:17;6944:29;;7020:3;7013:4;7004:6;6996;6992:19;6988:30;6985:39;6982:59;;;7037:1;7034;7027:12;6982:59;6699:348;;;;;:::o;7052:1010::-;7194:6;7202;7210;7218;7226;7279:2;7267:9;7258:7;7254:23;7250:32;7247:52;;;7295:1;7292;7285:12;7247:52;7335:9;7322:23;-1:-1:-1;;;;;7405:2:821;7397:6;7394:14;7391:34;;;7421:1;7418;7411:12;7391:34;7459:6;7448:9;7444:22;7434:32;;7504:7;7497:4;7493:2;7489:13;7485:27;7475:55;;7526:1;7523;7516:12;7475:55;7566:2;7553:16;7592:2;7584:6;7581:14;7578:34;;;7608:1;7605;7598:12;7578:34;7663:7;7656:4;7646:6;7643:1;7639:14;7635:2;7631:23;7627:34;7624:47;7621:67;;;7684:1;7681;7674:12;7621:67;7715:4;7707:13;;;;-1:-1:-1;7739:6:821;-1:-1:-1;7783:20:821;;;7770:34;;7816:16;;;7813:36;;;7845:1;7842;7835:12;7813:36;;7884:61;7937:7;7926:8;7915:9;7911:24;7884:61;:::i;:::-;7964:8;;-1:-1:-1;7858:87:821;-1:-1:-1;8018:38:821;;-1:-1:-1;8052:2:821;8037:18;;8018:38;:::i;:::-;8008:48;;7052:1010;;;;;;;;:::o;8067:274::-;-1:-1:-1;;;;;8259:32:821;;;;8241:51;;8323:2;8308:18;;8301:34;8229:2;8214:18;;8067:274::o;8346:315::-;8414:6;8422;8475:2;8463:9;8454:7;8450:23;8446:32;8443:52;;;8491:1;8488;8481:12;8443:52;8527:9;8514:23;8504:33;;8587:2;8576:9;8572:18;8559:32;8600:31;8625:5;8600:31;:::i;:::-;8650:5;8640:15;;;8346:315;;;;;:::o;8956:118::-;9042:5;9035:13;9028:21;9021:5;9018:32;9008:60;;9064:1;9061;9054:12;9079:241;9135:6;9188:2;9176:9;9167:7;9163:23;9159:32;9156:52;;;9204:1;9201;9194:12;9156:52;9243:9;9230:23;9262:28;9284:5;9262:28;:::i;9898:450::-;9967:6;10020:2;10008:9;9999:7;9995:23;9991:32;9988:52;;;10036:1;10033;10026:12;9988:52;10076:9;10063:23;-1:-1:-1;;;;;10101:6:821;10098:30;10095:50;;;10141:1;10138;10131:12;10095:50;10164:22;;10217:4;10209:13;;10205:27;-1:-1:-1;10195:55:821;;10246:1;10243;10236:12;10195:55;10269:73;10334:7;10329:2;10316:16;10311:2;10307;10303:11;10269:73;:::i;10353:383::-;10430:6;10438;10446;10499:2;10487:9;10478:7;10474:23;10470:32;10467:52;;;10515:1;10512;10505:12;10467:52;10551:9;10538:23;10528:33;;10611:2;10600:9;10596:18;10583:32;10624:31;10649:5;10624:31;:::i;10741:382::-;10806:6;10814;10867:2;10855:9;10846:7;10842:23;10838:32;10835:52;;;10883:1;10880;10873:12;10835:52;10922:9;10909:23;10941:31;10966:5;10941:31;:::i;:::-;10991:5;-1:-1:-1;11048:2:821;11033:18;;11020:32;11061:30;11020:32;11061:30;:::i;11128:626::-;11225:6;11233;11286:2;11274:9;11265:7;11261:23;11257:32;11254:52;;;11302:1;11299;11292:12;11254:52;11342:9;11329:23;-1:-1:-1;;;;;11412:2:821;11404:6;11401:14;11398:34;;;11428:1;11425;11418:12;11398:34;11466:6;11455:9;11451:22;11441:32;;11511:7;11504:4;11500:2;11496:13;11492:27;11482:55;;11533:1;11530;11523:12;11482:55;11573:2;11560:16;11599:2;11591:6;11588:14;11585:34;;;11615:1;11612;11605:12;11585:34;11668:7;11663:2;11653:6;11650:1;11646:14;11642:2;11638:23;11634:32;11631:45;11628:65;;;11689:1;11686;11679:12;11628:65;11720:2;11712:11;;;;;11742:6;;-1:-1:-1;11128:626:821;;-1:-1:-1;;;;11128:626:821:o;11759:801::-;11919:4;11948:2;11988;11977:9;11973:18;12018:2;12007:9;12000:21;12041:6;12076;12070:13;12107:6;12099;12092:22;12145:2;12134:9;12130:18;12123:25;;12207:2;12197:6;12194:1;12190:14;12179:9;12175:30;12171:39;12157:53;;12245:2;12237:6;12233:15;12266:1;12276:255;12290:6;12287:1;12284:13;12276:255;;;12383:2;12379:7;12367:9;12359:6;12355:22;12351:36;12346:3;12339:49;12411:40;12444:6;12435;12429:13;12411:40;:::i;:::-;12401:50;-1:-1:-1;12509:12:821;;;;12474:15;;;;12312:1;12305:9;12276:255;;;-1:-1:-1;12548:6:821;;11759:801;-1:-1:-1;;;;;;;11759:801:821:o;12565:753::-;12619:5;12672:3;12665:4;12657:6;12653:17;12649:27;12639:55;;12690:1;12687;12680:12;12639:55;12726:6;12713:20;12752:4;-1:-1:-1;;;;;12771:2:821;12768:26;12765:52;;;12797:18;;:::i;:::-;12843:2;12840:1;12836:10;12875:2;12869:9;12887:40;12923:2;12919;12915:11;12907:6;12887:40;:::i;:::-;12962:18;;;13038:15;;;13034:24;;;12996:15;;;13070;;;13067:35;;;13098:1;13095;13088:12;13067:35;13134:2;13126:6;13122:15;13111:26;;13146:142;13162:6;13157:3;13154:15;13146:142;;;13228:17;;13216:30;;13179:12;;;;13266;;13146:142;;;-1:-1:-1;13306:6:821;12565:753;-1:-1:-1;;;;;;12565:753:821:o;13323:1071::-;13477:6;13485;13493;13501;13509;13562:3;13550:9;13541:7;13537:23;13533:33;13530:53;;;13579:1;13576;13569:12;13530:53;13618:9;13605:23;13637:31;13662:5;13637:31;:::i;:::-;13687:5;-1:-1:-1;13744:2:821;13729:18;;13716:32;13757:33;13716:32;13757:33;:::i;:::-;13809:7;-1:-1:-1;13867:2:821;13852:18;;13839:32;-1:-1:-1;;;;;13920:14:821;;;13917:34;;;13947:1;13944;13937:12;13917:34;13970:61;14023:7;14014:6;14003:9;13999:22;13970:61;:::i;:::-;13960:71;;14084:2;14073:9;14069:18;14056:32;14040:48;;14113:2;14103:8;14100:16;14097:36;;;14129:1;14126;14119:12;14097:36;14152:63;14207:7;14196:8;14185:9;14181:24;14152:63;:::i;:::-;14142:73;;14268:3;14257:9;14253:19;14240:33;14224:49;;14298:2;14288:8;14285:16;14282:36;;;14314:1;14311;14304:12;14282:36;;14337:51;14380:7;14369:8;14358:9;14354:24;14337:51;:::i;:::-;14327:61;;;13323:1071;;;;;;;;:::o;14399:388::-;14467:6;14475;14528:2;14516:9;14507:7;14503:23;14499:32;14496:52;;;14544:1;14541;14534:12;14496:52;14583:9;14570:23;14602:31;14627:5;14602:31;:::i;:::-;14652:5;-1:-1:-1;14709:2:821;14694:18;;14681:32;14722:33;14681:32;14722:33;:::i;14792:734::-;14896:6;14904;14912;14920;14928;14981:3;14969:9;14960:7;14956:23;14952:33;14949:53;;;14998:1;14995;14988:12;14949:53;15037:9;15024:23;15056:31;15081:5;15056:31;:::i;:::-;15106:5;-1:-1:-1;15163:2:821;15148:18;;15135:32;15176:33;15135:32;15176:33;:::i;:::-;15228:7;-1:-1:-1;15282:2:821;15267:18;;15254:32;;-1:-1:-1;15333:2:821;15318:18;;15305:32;;-1:-1:-1;15388:3:821;15373:19;;15360:33;-1:-1:-1;;;;;15405:30:821;;15402:50;;;15448:1;15445;15438:12;15402:50;15471:49;15512:7;15503:6;15492:9;15488:22;15471:49;:::i;15531:380::-;15610:1;15606:12;;;;15653;;;15674:61;;15728:4;15720:6;15716:17;15706:27;;15674:61;15781:2;15773:6;15770:14;15750:18;15747:38;15744:161;;15827:10;15822:3;15818:20;15815:1;15808:31;15862:4;15859:1;15852:15;15890:4;15887:1;15880:15;15916:338;16118:2;16100:21;;;16157:2;16137:18;;;16130:30;-1:-1:-1;;;16191:2:821;16176:18;;16169:44;16245:2;16230:18;;15916:338::o;16259:127::-;16320:10;16315:3;16311:20;16308:1;16301:31;16351:4;16348:1;16341:15;16375:4;16372:1;16365:15;16391:127;16452:10;16447:3;16443:20;16440:1;16433:31;16483:4;16480:1;16473:15;16507:4;16504:1;16497:15;16523:125;16588:9;;;16609:10;;;16606:36;;;16622:18;;:::i;16653:108::-;16735:1;16728:5;16725:12;16715:40;;16751:1;16748;16741:12;16766:1129;16997:2;17049:21;;;17022:18;;;17105:22;;;16968:4;;17146:2;17164:18;;;17205:6;16968:4;17239:630;17253:6;17250:1;17247:13;17239:630;;;17328:6;17315:20;17348:31;17373:5;17348:31;:::i;:::-;-1:-1:-1;;;;;17404:31:821;17392:44;;17477:15;;;17464:29;17506:40;17464:29;17506:40;:::i;:::-;17559:48;17603:2;17598:3;17594:12;17585:7;17559:48;:::i;:::-;-1:-1:-1;17654:15:821;;;17641:29;17627:12;;;17620:51;17694:4;17745:15;;;17732:29;17718:12;;;17711:51;17785:4;17809:12;;;;17844:15;;;;17275:1;17268:9;17239:630;;;-1:-1:-1;17886:3:821;;16766:1129;-1:-1:-1;;;;;;;16766:1129:821:o;17900:168::-;17973:9;;;18004;;18021:15;;;18015:22;;18001:37;17991:71;;18042:18;;:::i;18073:217::-;18113:1;18139;18129:132;;18183:10;18178:3;18174:20;18171:1;18164:31;18218:4;18215:1;18208:15;18246:4;18243:1;18236:15;18129:132;-1:-1:-1;18275:9:821;;18073:217::o;19757:521::-;19834:4;19840:6;19900:11;19887:25;19994:2;19990:7;19979:8;19963:14;19959:29;19955:43;19935:18;19931:68;19921:96;;20013:1;20010;20003:12;19921:96;20040:33;;20092:20;;;-1:-1:-1;;;;;;20124:30:821;;20121:50;;;20167:1;20164;20157:12;20121:50;20200:4;20188:17;;-1:-1:-1;20231:14:821;20227:27;;;20217:38;;20214:58;;;20268:1;20265;20258:12;20283:352;20494:6;20486;20481:3;20468:33;20589:2;20560:15;;;;-1:-1:-1;;;;;;20556:45:821;20520:16;;20545:57;;;20626:2;20618:11;;20283:352;-1:-1:-1;20283:352:821:o;20640:810::-;-1:-1:-1;;;21046:3:821;21039:36;21021:3;21104:6;21098:13;21120:75;21188:6;21183:2;21178:3;21174:12;21167:4;21159:6;21155:17;21120:75;:::i;:::-;-1:-1:-1;;;21254:2:821;21214:16;;;21246:11;;;21239:40;21304:13;;21326:76;21304:13;21388:2;21380:11;;21373:4;21361:17;;21326:76;:::i;:::-;21422:17;21441:2;21418:26;;20640:810;-1:-1:-1;;;;20640:810:821:o;21455:784::-;21538:6;21591:3;21579:9;21570:7;21566:23;21562:33;21559:53;;;21608:1;21605;21598:12;21559:53;21641:2;21635:9;21683:3;21675:6;21671:16;21753:6;21741:10;21738:22;-1:-1:-1;;;;;21705:10:821;21702:34;21699:62;21696:88;;;21764:18;;:::i;:::-;21800:2;21793:22;21837:23;;21869:31;21837:23;21869:31;:::i;:::-;21909:21;;21982:2;21967:18;;21954:32;21995:40;21954:32;21995:40;:::i;:::-;22063:2;22051:15;;22044:32;22137:2;22122:18;;;22109:32;22092:15;;;22085:57;22203:2;22188:18;;;22175:32;22158:15;;;22151:57;;;;-1:-1:-1;22055:6:821;21455:784;-1:-1:-1;21455:784:821:o;22244:339::-;22446:2;22428:21;;;22485:2;22465:18;;;22458:30;-1:-1:-1;;;22519:2:821;22504:18;;22497:45;22574:2;22559:18;;22244:339::o;22714:543::-;22816:2;22811:3;22808:11;22805:446;;;22852:1;22876:5;22873:1;22866:16;22920:4;22917:1;22907:18;22990:2;22978:10;22974:19;22971:1;22967:27;22961:4;22957:38;23026:4;23014:10;23011:20;23008:47;;;-1:-1:-1;23049:4:821;23008:47;23104:2;23099:3;23095:12;23092:1;23088:20;23082:4;23078:31;23068:41;;23159:82;23177:2;23170:5;23167:13;23159:82;;;23222:17;;;23203:1;23192:13;23159:82;;;23163:3;;;22714:543;;;:::o;23433:1345::-;23559:3;23553:10;-1:-1:-1;;;;;23578:6:821;23575:30;23572:56;;;23608:18;;:::i;:::-;23637:97;23727:6;23687:38;23719:4;23713:11;23687:38;:::i;:::-;23681:4;23637:97;:::i;:::-;23789:4;;23846:2;23835:14;;23863:1;23858:663;;;;24565:1;24582:6;24579:89;;;-1:-1:-1;24634:19:821;;;24628:26;24579:89;-1:-1:-1;;23390:1:821;23386:11;;;23382:24;23378:29;23368:40;23414:1;23410:11;;;23365:57;24681:81;;23828:944;;23858:663;22661:1;22654:14;;;22698:4;22685:18;;-1:-1:-1;;23894:20:821;;;24012:236;24026:7;24023:1;24020:14;24012:236;;;24115:19;;;24109:26;24094:42;;24207:27;;;;24175:1;24163:14;;;;24042:19;;24012:236;;;24016:3;24276:6;24267:7;24264:19;24261:201;;;24337:19;;;24331:26;-1:-1:-1;;24420:1:821;24416:14;;;24432:3;24412:24;24408:37;24404:42;24389:58;24374:74;;24261:201;-1:-1:-1;;;;;24508:1:821;24492:14;;;24488:22;24475:36;;-1:-1:-1;23433:1345:821:o;24783:383::-;24980:2;24969:9;24962:21;24943:4;25006:45;25047:2;25036:9;25032:18;25024:6;25006:45;:::i;:::-;25099:9;25091:6;25087:22;25082:2;25071:9;25067:18;25060:50;25127:33;25153:6;25145;25127:33;:::i;:::-;25119:41;24783:383;-1:-1:-1;;;;;24783:383:821:o;25171:489::-;-1:-1:-1;;;;;25440:15:821;;;25422:34;;25492:15;;25487:2;25472:18;;25465:43;25539:2;25524:18;;25517:34;;;25587:3;25582:2;25567:18;;25560:31;;;25365:4;;25608:46;;25634:19;;25626:6;25608:46;:::i;25665:249::-;25734:6;25787:2;25775:9;25766:7;25762:23;25758:32;25755:52;;;25803:1;25800;25793:12;25755:52;25835:9;25829:16;25854:30;25878:5;25854:30;:::i;25919:136::-;25958:3;25986:5;25976:39;;25995:18;;:::i;:::-;-1:-1:-1;;;26031:18:821;;25919:136::o;27093:843::-;27256:5;27243:19;27271:33;27296:7;27271:33;:::i;:::-;27375:11;;-1:-1:-1;;;;;;27411:33:821;;-1:-1:-1;;;;;27323:33:821;;;;27408:41;;;27395:55;;27498:2;27487:14;;27474:28;27511:40;27474:28;27511:40;:::i;:::-;27582:1;27573:7;27570:14;27560:145;;27627:10;27622:3;27618:20;27615:1;27608:31;27662:4;27659:1;27652:15;27690:4;27687:1;27680:15;27560:145;-1:-1:-1;;;;;;27733:33:821;;;;27730:41;;;27800:3;27777:17;;;;-1:-1:-1;;;27773:37:821;27727:84;27714:98;;27866:2;27855:14;;27842:28;27762:1;27828:12;;27821:50;27925:2;27914:14;;;27901:28;27897:1;27887:12;;;27880:50;27093:843::o;27941:287::-;28070:3;28108:6;28102:13;28124:66;28183:6;28178:3;28171:4;28163:6;28159:17;28124:66;:::i;:::-;28206:16;;;;;27941:287;-1:-1:-1;;27941:287:821:o;28576:230::-;28782:3;28760:16;;;;-1:-1:-1;;;;;;28756:43:821;28738:62;;28726:2;28711:18;;28576:230::o;28811:245::-;28878:6;28931:2;28919:9;28910:7;28906:23;28902:32;28899:52;;;28947:1;28944;28937:12;28899:52;28979:9;28973:16;28998:28;29020:5;28998:28;:::i;29061:334::-;29263:2;29245:21;;;29302:2;29282:18;;;29275:30;-1:-1:-1;;;29336:2:821;29321:18;;29314:40;29386:2;29371:18;;29061:334::o;29635:179::-;29670:3;29712:1;29694:16;29691:23;29688:120;;;29758:1;29755;29752;29737:23;-1:-1:-1;29795:1:821;29789:8;29784:3;29780:18;29688:120;29635:179;:::o;29819:671::-;29858:3;29900:4;29882:16;29879:26;29876:39;;;29819:671;:::o;29876:39::-;29942:2;29936:9;-1:-1:-1;;30007:16:821;30003:25;;30000:1;29936:9;29979:50;30058:4;30052:11;30082:16;-1:-1:-1;;;;;30188:2:821;30181:4;30173:6;30169:17;30166:25;30161:2;30153:6;30150:14;30147:45;30144:58;;;30195:5;;;;;29819:671;:::o;30144:58::-;30232:6;30226:4;30222:17;30211:28;;30268:3;30262:10;30295:2;30287:6;30284:14;30281:27;;;30301:5;;;;;;29819:671;:::o;30281:27::-;30385:2;30366:16;30360:4;30356:27;30352:36;30345:4;30336:6;30331:3;30327:16;30323:27;30320:69;30317:82;;;30392:5;;;;;;29819:671;:::o;30317:82::-;30408:57;30459:4;30450:6;30442;30438:19;30434:30;30428:4;30408:57;:::i;:::-;-1:-1:-1;30481:3:821;;29819:671;-1:-1:-1;;;;;29819:671:821:o;30495:375::-;-1:-1:-1;;;;;30753:15:821;;;30735:34;;30805:15;;;;30800:2;30785:18;;30778:43;30852:2;30837:18;;30830:34;;;;30685:2;30670:18;;30495:375::o",
    "linkReferences": {},
    "immutableReferences": {
      "32281": [
        {
          "start": 11771,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "TRANSFER_ROLE()": "206b60f9",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "contractURI()": "e8a3d485",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getTokenCountOfBundle(uint256)": "d0d2fe25",
    "getTokenOfBundle(uint256,uint256)": "1da799c9",
    "getUriOfBundle(uint256)": "61195e94",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceRole(bytes32,address)": "36568abe",
    "restrictTransfers(bool)": "73fa563f",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unwrap(uint256,address)": "7647691d",
    "wrap((address,uint8,uint256,uint256)[],string,address)": "29e471dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedContents\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"}],\"name\":\"TokensUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"wrappedContents\",\"type\":\"tuple[]\"}],\"name\":\"TokensWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"TransfersRestricted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getTokenCountOfBundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenOfBundle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getUriOfBundle\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_toRestrict\",\"type\":\"bool\"}],\"name\":\"restrictTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"_tokensToWrap\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"_uriForWrappedToken\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokensUnwrapped(address,address,uint256)\":{\"details\":\"Emitted when tokens are unwrapped.\"},\"TokensWrapped(address,address,uint256,(address,uint8,uint256,uint256)[])\":{\"details\":\"Emitted when tokens are wrapped.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"params\":{\"_defaultAdmin\":\"The default admin of the contract.\",\"_name\":\"The name of the contract.\",\"_nativeTokenWrapper\":\"The address of the ERC20 wrapper for the native token.\",\"_royaltyBps\":\"The royalty basis points to be charged. Max = 10000 (10000 = 100%, 1000 = 10%)\",\"_royaltyRecipient\":\"The address to receive royalties.\",\"_symbol\":\"The symbol of the contract.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getTokenCountOfBundle(uint256)\":{\"details\":\"Returns the total number of assets in a particular bundle.\"},\"getTokenOfBundle(uint256,uint256)\":{\"details\":\"Returns an asset contained in a particular bundle, at a particular index.\"},\"getUriOfBundle(uint256)\":{\"details\":\"Returns the uri of a particular bundle.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedOrOwner(address,uint256)\":{\"params\":{\"_operator\":\"The address to check.\",\"_tokenId\":\"The tokenId to check.\"},\"returns\":{\"isApprovedOrOwnerOf\":\"Whether `_operator` is approved to transfer `_tokenId`.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"restrictTransfers(bool)\":{\"details\":\"Restricting transfers means revoking the TRANSFER_ROLE from address(0). Making                    transfers unrestricted means granting the TRANSFER_ROLE to address(0).\",\"params\":{\"_toRestrict\":\"Whether to restrict transfers or not.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unwrap(uint256,address)\":{\"params\":{\"_recipient\":\"The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.\",\"_tokenId\":\"The token Id of the wrapped NFT to unwrap.\"}},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"params\":{\"_recipient\":\"The recipient of the wrapped NFT.\",\"_tokensToWrap\":\"The tokens to wrap.\",\"_uriForWrappedToken\":\"The metadata URI for the wrapped NFT.\"},\"returns\":{\"tokenId\":\"The tokenId of the wrapped NFT minted.\"}}},\"stateVariables\":{\"ASSET_ROLE\":{\"details\":\"Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted.\"},\"UNWRAP_ROLE\":{\"details\":\"Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract during construction.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"restrictTransfers(bool)\":{\"notice\":\"Restrict transfers of NFTs.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"unwrap(uint256,address)\":{\"notice\":\"Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\"},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"notice\":\"Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\"}},\"notice\":\"BASE:      ERC721Base      EXTENSION: TokenStore, SoulboundERC721A  The `ERC721Multiwrap` contract uses the `ERC721Base` contract, along with the `TokenStore` and   `SoulboundERC721A` extension.  The `ERC721Multiwrap` contract lets you wrap arbitrary ERC20, ERC721 and ERC1155 tokens you own  into a single wrapped token / NFT.  The `SoulboundERC721A` extension lets you make your NFTs 'soulbound' i.e. non-transferrable.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC721Multiwrap.sol\":\"ERC721Multiwrap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC721Multiwrap.sol\":{\"keccak256\":\"0x25b66f35412c2d211329d1d3f5b8fc36b215b661a085af6d2c57da9a396f6c09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c665df34a13fd9ef413b86a23ac48b23815f32b11d9d66e6468cac6fecbe3aa\",\"dweb:/ipfs/QmRXenh943hJCKt4LZ4qJZzJW2Q7WMPuqm9bY5549cnWGT\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0x6547a787b5ac8032fddbee8d058d520ef8da5c5808b89d47b11bd5ff27d32afc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fde24fcc2b49c889651aac81bff6f1fa8786e55a6f65c1e3f052666dff71143\",\"dweb:/ipfs/QmW6YArfXiUzQsDZHoTeWsZYkrMmAVTpttnEsmYGqPzQWx\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5\",\"dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf\",\"dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/SoulboundERC721A.sol\":{\"keccak256\":\"0xba90e07db761a1c1f9c92e425079a2c94ddffa154247e26c2c042e8f7481c34c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://615165118f853468cd6f92ef1ede4b3046721600cbee3b132f71e331f1f1e719\",\"dweb:/ipfs/QmazYKnWsMTRrfQZBybC8TF6aJ2EBdx3nkmQBzYFUwENN5\"]},\"contracts/extension/TokenBundle.sol\":{\"keccak256\":\"0x0f14ee2261baa4c4ede0ceacf8a573c900aeb8a7dcb28480f812f583402c42a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fee767474c0b07e96383810e5a6cc2e40a0f0390198b3a85f543a015a0a70523\",\"dweb:/ipfs/QmeUunQ1xCs1MSm387fqivURk25S1Ye65rZBam4AchsS6y\"]},\"contracts/extension/TokenStore.sol\":{\"keccak256\":\"0xafeff5d43380e45fcd0e5d6fba5cca9063c3e05835aa60c7a89b4f135f58fd3b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10a62935e832834541f67073434dd574ad05d82ab8d59ab9f91eea548a06ef44\",\"dweb:/ipfs/QmXofRx3M6yXThm378VRccpMKDv9aegaGeyGWHtSEaJ48N\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/extension/interface/ITokenBundle.sol\":{\"keccak256\":\"0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0\",\"dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Receiver.sol\":{\"keccak256\":\"0x0e661571b96f5cb573793f26917d2a9e6c67730eb5bdc797554d6174daeeeb3e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f9a3090c66448ca9702a35b10ae33cef5ece212f260fe1fb85f7bb5d03497e94\",\"dweb:/ipfs/QmWnsKyCG7qVhds4eY8zfEJyBmgTunishm8SMF8Bc2SNFC\"]},\"contracts/external-deps/openzeppelin/utils/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xfe8fa2e1e95883eb06de7715682e3c1a0a6bcdd9c5d6859b259dbae87c9aff1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70df822499f69ccca17e08c3ac03fcf9b7c37541d9501775d6e96b017f4c684\",\"dweb:/ipfs/QmcXHWiWUnZ5dkb3nvfi1pZGYbMcaEzVxPCappx4w72F7t\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "unwrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedContents",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensUnwrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "wrappedContents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransfersRestricted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCountOfBundle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenOfBundle",
          "outputs": [
            {
              "internalType": "struct ITokenBundle.Token",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUriOfBundle",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_toRestrict",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restrictTransfers"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "_tokensToWrap",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "_uriForWrappedToken",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "constructor": {
            "params": {
              "_defaultAdmin": "The default admin of the contract.",
              "_name": "The name of the contract.",
              "_nativeTokenWrapper": "The address of the ERC20 wrapper for the native token.",
              "_royaltyBps": "The royalty basis points to be charged. Max = 10000 (10000 = 100%, 1000 = 10%)",
              "_royaltyRecipient": "The address to receive royalties.",
              "_symbol": "The symbol of the contract."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getTokenCountOfBundle(uint256)": {
            "details": "Returns the total number of assets in a particular bundle."
          },
          "getTokenOfBundle(uint256,uint256)": {
            "details": "Returns an asset contained in a particular bundle, at a particular index."
          },
          "getUriOfBundle(uint256)": {
            "details": "Returns the uri of a particular bundle."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedOrOwner(address,uint256)": {
            "params": {
              "_operator": "The address to check.",
              "_tokenId": "The tokenId to check."
            },
            "returns": {
              "isApprovedOrOwnerOf": "Whether `_operator` is approved to transfer `_tokenId`."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "restrictTransfers(bool)": {
            "details": "Restricting transfers means revoking the TRANSFER_ROLE from address(0). Making                    transfers unrestricted means granting the TRANSFER_ROLE to address(0).",
            "params": {
              "_toRestrict": "Whether to restrict transfers or not."
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "unwrap(uint256,address)": {
            "params": {
              "_recipient": "The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.",
              "_tokenId": "The token Id of the wrapped NFT to unwrap."
            }
          },
          "wrap((address,uint8,uint256,uint256)[],string,address)": {
            "params": {
              "_recipient": "The recipient of the wrapped NFT.",
              "_tokensToWrap": "The tokens to wrap.",
              "_uriForWrappedToken": "The metadata URI for the wrapped NFT."
            },
            "returns": {
              "tokenId": "The tokenId of the wrapped NFT minted."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Initializes the contract during construction."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "restrictTransfers(bool)": {
            "notice": "Restrict transfers of NFTs."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "unwrap(uint256,address)": {
            "notice": "Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
          },
          "wrap((address,uint8,uint256,uint256)[],string,address)": {
            "notice": "Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC721Multiwrap.sol": "ERC721Multiwrap"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC721Multiwrap.sol": {
        "keccak256": "0x25b66f35412c2d211329d1d3f5b8fc36b215b661a085af6d2c57da9a396f6c09",
        "urls": [
          "bzz-raw://7c665df34a13fd9ef413b86a23ac48b23815f32b11d9d66e6468cac6fecbe3aa",
          "dweb:/ipfs/QmRXenh943hJCKt4LZ4qJZzJW2Q7WMPuqm9bY5549cnWGT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AVirtualApprove.sol": {
        "keccak256": "0x6547a787b5ac8032fddbee8d058d520ef8da5c5808b89d47b11bd5ff27d32afc",
        "urls": [
          "bzz-raw://1fde24fcc2b49c889651aac81bff6f1fa8786e55a6f65c1e3f052666dff71143",
          "dweb:/ipfs/QmW6YArfXiUzQsDZHoTeWsZYkrMmAVTpttnEsmYGqPzQWx"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4",
        "urls": [
          "bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5",
          "dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea",
        "urls": [
          "bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf",
          "dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SoulboundERC721A.sol": {
        "keccak256": "0xba90e07db761a1c1f9c92e425079a2c94ddffa154247e26c2c042e8f7481c34c",
        "urls": [
          "bzz-raw://615165118f853468cd6f92ef1ede4b3046721600cbee3b132f71e331f1f1e719",
          "dweb:/ipfs/QmazYKnWsMTRrfQZBybC8TF6aJ2EBdx3nkmQBzYFUwENN5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenBundle.sol": {
        "keccak256": "0x0f14ee2261baa4c4ede0ceacf8a573c900aeb8a7dcb28480f812f583402c42a6",
        "urls": [
          "bzz-raw://fee767474c0b07e96383810e5a6cc2e40a0f0390198b3a85f543a015a0a70523",
          "dweb:/ipfs/QmeUunQ1xCs1MSm387fqivURk25S1Ye65rZBam4AchsS6y"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenStore.sol": {
        "keccak256": "0xafeff5d43380e45fcd0e5d6fba5cca9063c3e05835aa60c7a89b4f135f58fd3b",
        "urls": [
          "bzz-raw://10a62935e832834541f67073434dd574ad05d82ab8d59ab9f91eea548a06ef44",
          "dweb:/ipfs/QmXofRx3M6yXThm378VRccpMKDv9aegaGeyGWHtSEaJ48N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ITokenBundle.sol": {
        "keccak256": "0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949",
        "urls": [
          "bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0",
          "dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Receiver.sol": {
        "keccak256": "0x0e661571b96f5cb573793f26917d2a9e6c67730eb5bdc797554d6174daeeeb3e",
        "urls": [
          "bzz-raw://f9a3090c66448ca9702a35b10ae33cef5ece212f260fe1fb85f7bb5d03497e94",
          "dweb:/ipfs/QmWnsKyCG7qVhds4eY8zfEJyBmgTunishm8SMF8Bc2SNFC"
        ],
        "license": "Apache 2.0"
      },
      "contracts/external-deps/openzeppelin/utils/ERC721/ERC721Holder.sol": {
        "keccak256": "0xfe8fa2e1e95883eb06de7715682e3c1a0a6bcdd9c5d6859b259dbae87c9aff1f",
        "urls": [
          "bzz-raw://b70df822499f69ccca17e08c3ac03fcf9b7c37541d9501775d6e96b017f4c684",
          "dweb:/ipfs/QmcXHWiWUnZ5dkb3nvfi1pZGYbMcaEzVxPCappx4w72F7t"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC721Multiwrap.sol",
    "id": 5560,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "Context": [
        49279
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ERC1155Holder": [
        49515
      ],
      "ERC1155Receiver": [
        49549
      ],
      "ERC165": [
        7939
      ],
      "ERC721A": [
        12340
      ],
      "ERC721Holder": [
        49576
      ],
      "ERC721Multiwrap": [
        5559
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC1155": [
        13858
      ],
      "IERC1155Receiver": [
        13921
      ],
      "IERC165": [
        13945
      ],
      "IERC2981": [
        14089
      ],
      "IERC721": [
        14221
      ],
      "IERC721Receiver": [
        14356
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IRoyalty": [
        34061
      ],
      "ITokenBundle": [
        34909
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "Royalty": [
        23031
      ],
      "SoulboundERC721A": [
        24897
      ],
      "Strings": [
        66084
      ],
      "TokenBundle": [
        32260
      ],
      "TokenStore": [
        32544
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9893:15",
    "nodes": [
      {
        "id": 5087,
        "nodeType": "PragmaDirective",
        "src": "39:23:15",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 5090,
        "nodeType": "ImportDirective",
        "src": "86:68:15",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApprove.sol",
        "file": "../eip/ERC721AVirtualApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 12341,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5088,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12340,
              "src": "95:7:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 5089,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49279,
              "src": "104:7:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5091,
        "nodeType": "ImportDirective",
        "src": "156:43:15",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5092,
        "nodeType": "ImportDirective",
        "src": "200:34:15",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5093,
        "nodeType": "ImportDirective",
        "src": "235:34:15",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 23032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5094,
        "nodeType": "ImportDirective",
        "src": "270:43:15",
        "nodes": [],
        "absolutePath": "contracts/extension/SoulboundERC721A.sol",
        "file": "../extension/SoulboundERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 24898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5095,
        "nodeType": "ImportDirective",
        "src": "314:37:15",
        "nodes": [],
        "absolutePath": "contracts/extension/TokenStore.sol",
        "file": "../extension/TokenStore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 32545,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5096,
        "nodeType": "ImportDirective",
        "src": "352:36:15",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5560,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5559,
        "nodeType": "ContractDefinition",
        "src": "859:9072:15",
        "nodes": [
          {
            "id": 5117,
            "nodeType": "VariableDeclaration",
            "src": "1246:63:15",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 5112,
              "nodeType": "StructuredDocumentation",
              "src": "1162:79:15",
              "text": "@dev Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1271:11:15",
            "scope": 5559,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5113,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1246:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 5115,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1295:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 5114,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1285:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1285:24:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5123,
            "nodeType": "VariableDeclaration",
            "src": "1403:63:15",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 5118,
              "nodeType": "StructuredDocumentation",
              "src": "1315:83:15",
              "text": "@dev Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted."
            },
            "mutability": "constant",
            "name": "UNWRAP_ROLE",
            "nameLocation": "1428:11:15",
            "scope": 5559,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5119,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1403:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "554e575241505f524f4c45",
                  "id": 5121,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1452:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  },
                  "value": "UNWRAP_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  }
                ],
                "id": 5120,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1442:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1442:24:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5129,
            "nodeType": "VariableDeclaration",
            "src": "1579:61:15",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 5124,
              "nodeType": "StructuredDocumentation",
              "src": "1472:102:15",
              "text": "@dev Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets."
            },
            "mutability": "constant",
            "name": "ASSET_ROLE",
            "nameLocation": "1604:10:15",
            "scope": 5559,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5125,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1579:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41535345545f524f4c45",
                  "id": 5127,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1627:12:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  },
                  "value": "ASSET_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  }
                ],
                "id": 5126,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1617:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5128,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1617:23:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5142,
            "nodeType": "EventDefinition",
            "src": "1871:188:15",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 5130,
              "nodeType": "StructuredDocumentation",
              "src": "1825:41:15",
              "text": "@dev Emitted when tokens are wrapped."
            },
            "eventSelector": "d37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c",
            "name": "TokensWrapped",
            "nameLocation": "1877:13:15",
            "parameters": {
              "id": 5141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5132,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wrapper",
                  "nameLocation": "1916:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5142,
                  "src": "1900:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5134,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipientOfWrappedToken",
                  "nameLocation": "1949:23:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5142,
                  "src": "1933:39:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5136,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdOfWrappedToken",
                  "nameLocation": "1998:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5142,
                  "src": "1982:37:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wrappedContents",
                  "nameLocation": "2037:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5142,
                  "src": "2029:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5138,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5137,
                        "name": "Token",
                        "nameLocations": [
                          "2029:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34897,
                        "src": "2029:5:15"
                      },
                      "referencedDeclaration": 34897,
                      "src": "2029:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$34897_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 5139,
                    "nodeType": "ArrayTypeName",
                    "src": "2029:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$34897_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:168:15"
            }
          },
          {
            "id": 5151,
            "nodeType": "EventDefinition",
            "src": "2113:162:15",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 5143,
              "nodeType": "StructuredDocumentation",
              "src": "2065:43:15",
              "text": "@dev Emitted when tokens are unwrapped."
            },
            "eventSelector": "e9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a73",
            "name": "TokensUnwrapped",
            "nameLocation": "2119:15:15",
            "parameters": {
              "id": 5150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5145,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "unwrapper",
                  "nameLocation": "2160:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5151,
                  "src": "2144:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5147,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipientOfWrappedContents",
                  "nameLocation": "2195:26:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5151,
                  "src": "2179:42:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5149,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdOfWrappedToken",
                  "nameLocation": "2247:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5151,
                  "src": "2231:37:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2231:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:140:15"
            }
          },
          {
            "id": 5164,
            "nodeType": "ModifierDefinition",
            "src": "2561:108:15",
            "nodes": [],
            "body": {
              "id": 5163,
              "nodeType": "Block",
              "src": "2603:66:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5157,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5154,
                        "src": "2634:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 5158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2640:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2644:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2640:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5156,
                      "name": "_checkRoleWithSwitch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22110,
                      "src": "2613:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) view"
                      }
                    },
                    "id": 5160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5161,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:38:15"
                },
                {
                  "id": 5162,
                  "nodeType": "PlaceholderStatement",
                  "src": "2661:1:15"
                }
              ]
            },
            "documentation": {
              "id": 5152,
              "nodeType": "StructuredDocumentation",
              "src": "2459:97:15",
              "text": "@notice Checks whether the caller holds `role`, when restrictions for `role` are switched on."
            },
            "name": "onlyRoleWithSwitch",
            "nameLocation": "2570:18:15",
            "parameters": {
              "id": 5155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5154,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2597:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5164,
                  "src": "2589:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2588:14:15"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5232,
            "nodeType": "FunctionDefinition",
            "src": "3389:654:15",
            "nodes": [],
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "3655:388:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5188,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "3677:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5187,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "3665:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5190,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:26:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5192,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5173,
                        "src": "3726:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5193,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5175,
                        "src": "3745:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 5191,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "3701:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5195,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:56:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5197,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3779:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5198,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "3799:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5196,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3768:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5200,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:45:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5202,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5117,
                        "src": "3834:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5203,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "3847:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5201,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3823:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3823:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5205,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:38:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5207,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24805,
                        "src": "3882:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5208,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "3897:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5206,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3871:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3871:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5210,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:40:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5212,
                        "name": "ASSET_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5129,
                        "src": "3933:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3953:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3945:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5213,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3945:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3945:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5211,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3922:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3922:34:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5218,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:34:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5220,
                        "name": "UNWRAP_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5123,
                        "src": "3977:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3998:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3990:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5221,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3990:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3990:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5219,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3966:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3966:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5226,
                  "nodeType": "ExpressionStatement",
                  "src": "3966:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 5228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4030:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5227,
                      "name": "restrictTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24836,
                      "src": "4012:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:24:15"
                }
              ]
            },
            "documentation": {
              "id": 5165,
              "nodeType": "StructuredDocumentation",
              "src": "2854:530:15",
              "text": " @notice Initializes the contract during construction.\n @param _defaultAdmin     The default admin of the contract.\n @param _name             The name of the contract.\n @param _symbol           The symbol of the contract.\n @param _royaltyRecipient The address to receive royalties.\n @param _royaltyBps       The royalty basis points to be charged. Max = 10000 (10000 = 100%, 1000 = 10%)\n @param _nativeTokenWrapper The address of the ERC20 wrapper for the native token."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5180,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5169,
                    "src": "3607:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5181,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5171,
                    "src": "3614:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5182,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5179,
                  "name": "ERC721A",
                  "nameLocations": [
                    "3599:7:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12340,
                  "src": "3599:7:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "3599:23:15"
              },
              {
                "arguments": [
                  {
                    "id": 5184,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5177,
                    "src": "3634:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5185,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5183,
                  "name": "TokenStore",
                  "nameLocations": [
                    "3623:10:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32544,
                  "src": "3623:10:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "3623:31:15"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5167,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3418:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "3410:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5169,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3455:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "3441:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3441:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5171,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3484:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "3470:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5173,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3509:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "3501:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5175,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3544:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "3536:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 5174,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3536:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5177,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "3573:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "3565:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3565:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3400:198:15"
            },
            "returnParameters": {
              "id": 5186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3655:0:15"
            },
            "scope": 5559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5276,
            "nodeType": "FunctionDefinition",
            "src": "4342:592:15",
            "nodes": [],
            "body": {
              "id": 5275,
              "nodeType": "Block",
              "src": "4482:452:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 5266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 5251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 5246,
                                  "name": "interfaceId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5235,
                                  "src": "4535:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 5244,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -25,
                                  "src": "4511:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$5559_$",
                                    "typeString": "type(contract super ERC721Multiwrap)"
                                  }
                                },
                                "id": 5245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4517:17:15",
                                "memberName": "supportsInterface",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11105,
                                "src": "4511:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (bytes4) view returns (bool)"
                                }
                              },
                              "id": 5247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4511:36:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 5250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5248,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5235,
                                "src": "4563:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30783031666663396137",
                                "id": 5249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4578:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_33540519_by_1",
                                  "typeString": "int_const 33540519"
                                },
                                "value": "0x01ffc9a7"
                              },
                              "src": "4563:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4511:77:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 5254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5252,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5235,
                              "src": "4638:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783830616335386364",
                              "id": 5253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4653:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2158778573_by_1",
                                "typeString": "int_const 2158778573"
                              },
                              "value": "0x80ac58cd"
                            },
                            "src": "4638:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4511:152:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 5258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5256,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5235,
                            "src": "4713:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783562356531333966",
                            "id": 5257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4728:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1532892063_by_1",
                              "typeString": "int_const 1532892063"
                            },
                            "value": "0x5b5e139f"
                          },
                          "src": "4713:25:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4511:227:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5260,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5235,
                          "src": "4796:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5262,
                                "name": "IERC2981",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14089,
                                "src": "4816:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$14089_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$14089_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              ],
                              "id": 5261,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4811:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4811:14:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$14089",
                              "typeString": "type(contract IERC2981)"
                            }
                          },
                          "id": 5264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4826:11:15",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4811:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4796:41:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4511:326:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5267,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5235,
                        "src": "4878:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5269,
                              "name": "IERC1155Receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13921,
                              "src": "4898:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13921_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13921_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            ],
                            "id": 5268,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4893:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4893:22:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$13921",
                            "typeString": "type(contract IERC1155Receiver)"
                          }
                        },
                        "id": 5271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4916:11:15",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4893:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4878:49:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4511:416:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5243,
                  "id": 5274,
                  "nodeType": "Return",
                  "src": "4492:435:15"
                }
              ]
            },
            "baseFunctions": [
              11105,
              13944,
              49548
            ],
            "documentation": {
              "id": 5233,
              "nodeType": "StructuredDocumentation",
              "src": "4236:101:15",
              "text": " @dev See ERC165: https://eips.ethereum.org/EIPS/eip-165\n @inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4351:17:15",
            "overrides": {
              "id": 5240,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5237,
                  "name": "ERC1155Receiver",
                  "nameLocations": [
                    "4432:15:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49549,
                  "src": "4432:15:15"
                },
                {
                  "id": 5238,
                  "name": "ERC721A",
                  "nameLocations": [
                    "4449:7:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12340,
                  "src": "4449:7:15"
                },
                {
                  "id": 5239,
                  "name": "IERC165",
                  "nameLocations": [
                    "4458:7:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "4458:7:15"
                }
              ],
              "src": "4423:43:15"
            },
            "parameters": {
              "id": 5236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5235,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4385:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5276,
                  "src": "4378:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5234,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4368:34:15"
            },
            "returnParameters": {
              "id": 5243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5276,
                  "src": "4476:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4475:6:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5290,
            "nodeType": "FunctionDefinition",
            "src": "5176:137:15",
            "nodes": [],
            "body": {
              "id": 5289,
              "nodeType": "Block",
              "src": "5265:48:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5286,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5279,
                        "src": "5297:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5285,
                      "name": "getUriOfBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31832,
                      "src": "5282:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 5287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 5284,
                  "id": 5288,
                  "nodeType": "Return",
                  "src": "5275:31:15"
                }
              ]
            },
            "baseFunctions": [
              11349
            ],
            "documentation": {
              "id": 5277,
              "nodeType": "StructuredDocumentation",
              "src": "5126:45:15",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5185:8:15",
            "overrides": {
              "id": 5281,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5232:8:15"
            },
            "parameters": {
              "id": 5280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5279,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5202:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5290,
                  "src": "5194:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5194:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5193:18:15"
            },
            "returnParameters": {
              "id": 5284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5290,
                  "src": "5250:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5250:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5249:15:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5366,
            "nodeType": "FunctionDefinition",
            "src": "5881:665:15",
            "nodes": [],
            "body": {
              "id": 5365,
              "nodeType": "Block",
              "src": "6095:451:15",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 5314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6109:32:15",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 5308,
                          "name": "ASSET_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5129,
                          "src": "6118:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6138:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6130:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5309,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6130:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6130:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5307,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21818,
                        "src": "6110:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 5313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6110:31:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5338,
                  "nodeType": "IfStatement",
                  "src": "6105:203:15",
                  "trueBody": {
                    "id": 5337,
                    "nodeType": "Block",
                    "src": "6143:165:15",
                    "statements": [
                      {
                        "body": {
                          "id": 5335,
                          "nodeType": "Block",
                          "src": "6211:87:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5328,
                                    "name": "ASSET_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5129,
                                    "src": "6240:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 5329,
                                        "name": "_tokensToWrap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5295,
                                        "src": "6252:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                                        }
                                      },
                                      "id": 5331,
                                      "indexExpression": {
                                        "id": 5330,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5316,
                                        "src": "6266:1:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6252:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$34897_calldata_ptr",
                                        "typeString": "struct ITokenBundle.Token calldata"
                                      }
                                    },
                                    "id": 5332,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6269:13:15",
                                    "memberName": "assetContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34889,
                                    "src": "6252:30:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5327,
                                  "name": "_checkRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22067,
                                  "src": "6229:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address) view"
                                  }
                                },
                                "id": 5333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6229:54:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5334,
                              "nodeType": "ExpressionStatement",
                              "src": "6229:54:15"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5319,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5316,
                            "src": "6177:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 5320,
                              "name": "_tokensToWrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5295,
                              "src": "6181:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ITokenBundle.Token calldata[] calldata"
                              }
                            },
                            "id": 5321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6195:6:15",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6181:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6177:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5336,
                        "initializationExpression": {
                          "assignments": [
                            5316
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 5316,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6170:1:15",
                              "nodeType": "VariableDeclaration",
                              "scope": 5336,
                              "src": "6162:9:15",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 5315,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6162:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 5318,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 5317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6174:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6162:13:15"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 5325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5323,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5316,
                              "src": "6203:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 5324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6208:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6203:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5326,
                          "nodeType": "ExpressionStatement",
                          "src": "6203:6:15"
                        },
                        "nodeType": "ForStatement",
                        "src": "6157:141:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5339,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5305,
                      "src": "6318:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5340,
                        "name": "nextTokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5420,
                        "src": "6328:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 5341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6328:19:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6318:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5343,
                  "nodeType": "ExpressionStatement",
                  "src": "6318:29:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5345,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6371:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6375:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6371:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5347,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5295,
                        "src": "6383:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      },
                      {
                        "id": 5348,
                        "name": "_uriForWrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5297,
                        "src": "6398:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 5349,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5305,
                        "src": "6419:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5344,
                      "name": "_storeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32325,
                      "src": "6358:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,struct ITokenBundle.Token calldata[] calldata,string memory,uint256)"
                      }
                    },
                    "id": 5350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6358:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5351,
                  "nodeType": "ExpressionStatement",
                  "src": "6358:69:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5353,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5299,
                        "src": "6448:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 5354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6460:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 5352,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11590,
                        11753
                      ],
                      "referencedDeclaration": 11590,
                      "src": "6438:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6438:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5356,
                  "nodeType": "ExpressionStatement",
                  "src": "6438:24:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6492:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6496:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6492:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5360,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5299,
                        "src": "6504:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5361,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5305,
                        "src": "6516:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5362,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5295,
                        "src": "6525:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      ],
                      "id": 5357,
                      "name": "TokensWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5142,
                      "src": "6478:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ITokenBundle.Token memory[] memory)"
                      }
                    },
                    "id": 5363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6478:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5364,
                  "nodeType": "EmitStatement",
                  "src": "6473:66:15"
                }
              ]
            },
            "documentation": {
              "id": 5291,
              "nodeType": "StructuredDocumentation",
              "src": "5507:369:15",
              "text": "  @notice Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\n  @param _tokensToWrap    The tokens to wrap.\n  @param _uriForWrappedToken The metadata URI for the wrapped NFT.\n  @param _recipient          The recipient of the wrapped NFT.\n  @return tokenId The tokenId of the wrapped NFT minted."
            },
            "functionSelector": "29e471dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5302,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5117,
                    "src": "6056:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5303,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5301,
                  "name": "onlyRoleWithSwitch",
                  "nameLocations": [
                    "6037:18:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5164,
                  "src": "6037:18:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6037:31:15"
              }
            ],
            "name": "wrap",
            "nameLocation": "5890:4:15",
            "parameters": {
              "id": 5300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5295,
                  "mutability": "mutable",
                  "name": "_tokensToWrap",
                  "nameLocation": "5921:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5366,
                  "src": "5904:30:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5293,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5292,
                        "name": "Token",
                        "nameLocations": [
                          "5904:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34897,
                        "src": "5904:5:15"
                      },
                      "referencedDeclaration": 34897,
                      "src": "5904:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$34897_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 5294,
                    "nodeType": "ArrayTypeName",
                    "src": "5904:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$34897_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5297,
                  "mutability": "mutable",
                  "name": "_uriForWrappedToken",
                  "nameLocation": "5960:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5366,
                  "src": "5944:35:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5944:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5299,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "5997:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5366,
                  "src": "5989:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5989:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5894:119:15"
            },
            "returnParameters": {
              "id": 5306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5305,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6086:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5366,
                  "src": "6078:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6078:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6077:17:15"
            },
            "scope": 5559,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5411,
            "nodeType": "FunctionDefinition",
            "src": "6843:411:15",
            "nodes": [],
            "body": {
              "id": 5410,
              "nodeType": "Block",
              "src": "6944:310:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5378,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5369,
                          "src": "6962:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5379,
                            "name": "nextTokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5420,
                            "src": "6973:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 5380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6973:19:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6962:30:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726170706564204e465420444e452e",
                        "id": 5382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6994:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        },
                        "value": "wrapped NFT DNE."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        }
                      ],
                      "id": 5377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6954:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6954:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5384,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:59:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5387,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7049:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7053:6:15",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7049:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5389,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5369,
                            "src": "7061:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5386,
                          "name": "isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5455,
                          "src": "7031:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 5390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7031:39:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f7420617070726f76656420666f7220756e7772617070696e672e",
                        "id": 5391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7072:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        },
                        "value": "caller not approved for unwrapping."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        }
                      ],
                      "id": 5385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7023:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7023:87:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5393,
                  "nodeType": "ExpressionStatement",
                  "src": "7023:87:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5395,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5369,
                        "src": "7127:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5394,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12053,
                        12235
                      ],
                      "referencedDeclaration": 12053,
                      "src": "7121:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7121:15:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5397,
                  "nodeType": "ExpressionStatement",
                  "src": "7121:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5399,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5371,
                        "src": "7161:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5400,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5369,
                        "src": "7173:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5398,
                      "name": "_releaseTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32387,
                      "src": "7146:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7146:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5402,
                  "nodeType": "ExpressionStatement",
                  "src": "7146:36:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5404,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7214:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7218:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7214:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5406,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5371,
                        "src": "7226:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5407,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5369,
                        "src": "7238:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5403,
                      "name": "TokensUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5151,
                      "src": "7198:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7198:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5409,
                  "nodeType": "EmitStatement",
                  "src": "7193:54:15"
                }
              ]
            },
            "documentation": {
              "id": 5367,
              "nodeType": "StructuredDocumentation",
              "src": "6552:286:15",
              "text": "  @notice Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\n  @param _tokenId   The token Id of the wrapped NFT to unwrap.\n  @param _recipient The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT."
            },
            "functionSelector": "7647691d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5374,
                    "name": "UNWRAP_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5123,
                    "src": "6931:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5373,
                  "name": "onlyRoleWithSwitch",
                  "nameLocations": [
                    "6912:18:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5164,
                  "src": "6912:18:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6912:31:15"
              }
            ],
            "name": "unwrap",
            "nameLocation": "6852:6:15",
            "parameters": {
              "id": 5372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5369,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6867:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5411,
                  "src": "6859:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5371,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "6885:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5411,
                  "src": "6877:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6877:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6858:38:15"
            },
            "returnParameters": {
              "id": 5376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6944:0:15"
            },
            "scope": 5559,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5420,
            "nodeType": "FunctionDefinition",
            "src": "7509:104:15",
            "nodes": [],
            "body": {
              "id": 5419,
              "nodeType": "Block",
              "src": "7576:37:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5417,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10990,
                    "src": "7593:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5416,
                  "id": 5418,
                  "nodeType": "Return",
                  "src": "7586:20:15"
                }
              ]
            },
            "documentation": {
              "id": 5412,
              "nodeType": "StructuredDocumentation",
              "src": "7438:66:15",
              "text": "@notice The tokenId assigned to the next new NFT to be minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "7518:17:15",
            "parameters": {
              "id": 5413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7535:2:15"
            },
            "returnParameters": {
              "id": 5416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5420,
                  "src": "7567:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7567:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7566:9:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5455,
            "nodeType": "FunctionDefinition",
            "src": "7924:343:15",
            "nodes": [],
            "body": {
              "id": 5454,
              "nodeType": "Block",
              "src": "8065:202:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5431,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8083:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5454,
                      "src": "8075:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8075:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5435,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5433,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5425,
                        "src": "8099:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5432,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11286,
                      "src": "8091:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 5434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8091:17:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8075:33:15"
                },
                {
                  "expression": {
                    "id": 5452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5436,
                      "name": "isApprovedOrOwnerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5428,
                      "src": "8118:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 5444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 5439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5437,
                                "name": "_operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5423,
                                "src": "8141:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 5438,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5431,
                                "src": "8154:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8141:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 5441,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5431,
                                  "src": "8192:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5442,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5423,
                                  "src": "8199:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5440,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11478,
                                "src": "8175:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 5443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8175:34:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8141:68:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 5446,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5425,
                                  "src": "8237:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5445,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11426,
                                "src": "8225:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 5447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8225:21:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 5448,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5423,
                              "src": "8250:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8225:34:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8141:118:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5451,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8140:120:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8118:142:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5453,
                  "nodeType": "ExpressionStatement",
                  "src": "8118:142:15"
                }
              ]
            },
            "documentation": {
              "id": 5421,
              "nodeType": "StructuredDocumentation",
              "src": "7619:300:15",
              "text": " @notice Returns whether a given address is the owner, or approved to transfer an NFT.\n @param _operator The address to check.\n @param _tokenId The tokenId to check.\n @return isApprovedOrOwnerOf Whether `_operator` is approved to transfer `_tokenId`."
            },
            "functionSelector": "430c2081",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedOrOwner",
            "nameLocation": "7933:17:15",
            "parameters": {
              "id": 5426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5423,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "7968:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "7960:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7960:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5425,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7995:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "7987:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7987:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7950:59:15"
            },
            "returnParameters": {
              "id": 5429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5428,
                  "mutability": "mutable",
                  "name": "isApprovedOrOwnerOf",
                  "nameLocation": "8044:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "8039:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8039:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8038:26:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5489,
            "nodeType": "FunctionDefinition",
            "src": "8546:348:15",
            "nodes": [],
            "body": {
              "id": 5488,
              "nodeType": "Block",
              "src": "8734:160:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5473,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "8772:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5474,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5460,
                        "src": "8778:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5475,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5462,
                        "src": "8782:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5476,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "8796:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5470,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8744:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$5559_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 5472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8750:21:15",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12326,
                      "src": "8744:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 5477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8744:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5478,
                  "nodeType": "ExpressionStatement",
                  "src": "8744:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5482,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "8854:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5483,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5460,
                        "src": "8860:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5484,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5462,
                        "src": "8864:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5485,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "8878:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5479,
                        "name": "SoulboundERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24897,
                        "src": "8815:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SoulboundERC721A_$24897_$",
                          "typeString": "type(contract SoulboundERC721A)"
                        }
                      },
                      "id": 5481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8832:21:15",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24896,
                      "src": "8815:38:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 5486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8815:72:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5487,
                  "nodeType": "ExpressionStatement",
                  "src": "8815:72:15"
                }
              ]
            },
            "baseFunctions": [
              12326,
              24896
            ],
            "documentation": {
              "id": 5456,
              "nodeType": "StructuredDocumentation",
              "src": "8456:85:15",
              "text": " @dev See {ERC721-_beforeTokenTransfer}.\n @inheritdoc ERC721A"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "8555:21:15",
            "overrides": {
              "id": 5468,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5466,
                  "name": "ERC721A",
                  "nameLocations": [
                    "8707:7:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12340,
                  "src": "8707:7:15"
                },
                {
                  "id": 5467,
                  "name": "SoulboundERC721A",
                  "nameLocations": [
                    "8716:16:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24897,
                  "src": "8716:16:15"
                }
              ],
              "src": "8698:35:15"
            },
            "parameters": {
              "id": 5465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5458,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8594:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5489,
                  "src": "8586:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8586:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5460,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8616:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5489,
                  "src": "8608:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8608:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5462,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "8636:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5489,
                  "src": "8628:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8628:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5464,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "8666:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5489,
                  "src": "8658:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8658:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8576:104:15"
            },
            "returnParameters": {
              "id": 5469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8734:0:15"
            },
            "scope": 5559,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5503,
            "nodeType": "FunctionDefinition",
            "src": "8987:124:15",
            "nodes": [],
            "body": {
              "id": 5502,
              "nodeType": "Block",
              "src": "9066:45:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5496,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9083:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9087:6:15",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9083:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5498,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "9097:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9097:7:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9083:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5495,
                  "id": 5501,
                  "nodeType": "Return",
                  "src": "9076:28:15"
                }
              ]
            },
            "baseFunctions": [
              24842
            ],
            "documentation": {
              "id": 5490,
              "nodeType": "StructuredDocumentation",
              "src": "8900:82:15",
              "text": "@dev Returns whether transfers can be restricted in a given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canRestrictTransfers",
            "nameLocation": "8996:21:15",
            "overrides": {
              "id": 5492,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9042:8:15"
            },
            "parameters": {
              "id": 5491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9017:2:15"
            },
            "returnParameters": {
              "id": 5495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5503,
                  "src": "9060:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5493,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9060:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9059:6:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5517,
            "nodeType": "FunctionDefinition",
            "src": "9207:121:15",
            "nodes": [],
            "body": {
              "id": 5516,
              "nodeType": "Block",
              "src": "9283:45:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5510,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9300:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9304:6:15",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9300:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5512,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "9314:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9314:7:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9300:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5509,
                  "id": 5515,
                  "nodeType": "Return",
                  "src": "9293:28:15"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 5504,
              "nodeType": "StructuredDocumentation",
              "src": "9117:85:15",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "9216:18:15",
            "overrides": {
              "id": 5506,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9259:8:15"
            },
            "parameters": {
              "id": 5505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9234:2:15"
            },
            "returnParameters": {
              "id": 5509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5517,
                  "src": "9277:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5507,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9277:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9276:6:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5531,
            "nodeType": "FunctionDefinition",
            "src": "9412:115:15",
            "nodes": [],
            "body": {
              "id": 5530,
              "nodeType": "Block",
              "src": "9482:45:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5524,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9499:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9503:6:15",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9499:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5526,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "9513:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9513:7:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9499:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5523,
                  "id": 5529,
                  "nodeType": "Return",
                  "src": "9492:28:15"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 5518,
              "nodeType": "StructuredDocumentation",
              "src": "9334:73:15",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "9421:12:15",
            "overrides": {
              "id": 5520,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9458:8:15"
            },
            "parameters": {
              "id": 5519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9433:2:15"
            },
            "returnParameters": {
              "id": 5523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5531,
                  "src": "9476:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9476:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9475:6:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5545,
            "nodeType": "FunctionDefinition",
            "src": "9618:121:15",
            "nodes": [],
            "body": {
              "id": 5544,
              "nodeType": "Block",
              "src": "9694:45:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5538,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9711:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9715:6:15",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9711:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5540,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "9725:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9725:7:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9711:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5537,
                  "id": 5543,
                  "nodeType": "Return",
                  "src": "9704:28:15"
                }
              ]
            },
            "baseFunctions": [
              23030
            ],
            "documentation": {
              "id": 5532,
              "nodeType": "StructuredDocumentation",
              "src": "9533:80:15",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "9627:18:15",
            "overrides": {
              "id": 5534,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9670:8:15"
            },
            "parameters": {
              "id": 5533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9645:2:15"
            },
            "returnParameters": {
              "id": 5537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5536,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5545,
                  "src": "9688:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9688:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9687:6:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5558,
            "nodeType": "FunctionDefinition",
            "src": "9812:117:15",
            "nodes": [],
            "body": {
              "id": 5557,
              "nodeType": "Block",
              "src": "9895:34:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5554,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "9912:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9916:6:15",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "9912:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5553,
                  "id": 5556,
                  "nodeType": "Return",
                  "src": "9905:17:15"
                }
              ]
            },
            "baseFunctions": [
              21205,
              49269
            ],
            "documentation": {
              "id": 5546,
              "nodeType": "StructuredDocumentation",
              "src": "9745:62:15",
              "text": "@notice Returns the sender in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9821:10:15",
            "overrides": {
              "id": 5550,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5548,
                  "name": "Multicall",
                  "nameLocations": [
                    "9857:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "9857:9:15"
                },
                {
                  "id": 5549,
                  "name": "Context",
                  "nameLocations": [
                    "9868:7:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49279,
                  "src": "9868:7:15"
                }
              ],
              "src": "9848:28:15"
            },
            "parameters": {
              "id": 5547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9831:2:15"
            },
            "returnParameters": {
              "id": 5553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "9886:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9886:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9885:9:15"
            },
            "scope": 5559,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5098,
              "name": "Multicall",
              "nameLocations": [
                "887:9:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "887:9:15"
            },
            "id": 5099,
            "nodeType": "InheritanceSpecifier",
            "src": "887:9:15"
          },
          {
            "baseName": {
              "id": 5100,
              "name": "TokenStore",
              "nameLocations": [
                "898:10:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32544,
              "src": "898:10:15"
            },
            "id": 5101,
            "nodeType": "InheritanceSpecifier",
            "src": "898:10:15"
          },
          {
            "baseName": {
              "id": 5102,
              "name": "SoulboundERC721A",
              "nameLocations": [
                "910:16:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24897,
              "src": "910:16:15"
            },
            "id": 5103,
            "nodeType": "InheritanceSpecifier",
            "src": "910:16:15"
          },
          {
            "baseName": {
              "id": 5104,
              "name": "ERC721A",
              "nameLocations": [
                "928:7:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12340,
              "src": "928:7:15"
            },
            "id": 5105,
            "nodeType": "InheritanceSpecifier",
            "src": "928:7:15"
          },
          {
            "baseName": {
              "id": 5106,
              "name": "ContractMetadata",
              "nameLocations": [
                "937:16:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "937:16:15"
            },
            "id": 5107,
            "nodeType": "InheritanceSpecifier",
            "src": "937:16:15"
          },
          {
            "baseName": {
              "id": 5108,
              "name": "Ownable",
              "nameLocations": [
                "955:7:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "955:7:15"
            },
            "id": 5109,
            "nodeType": "InheritanceSpecifier",
            "src": "955:7:15"
          },
          {
            "baseName": {
              "id": 5110,
              "name": "Royalty",
              "nameLocations": [
                "964:7:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23031,
              "src": "964:7:15"
            },
            "id": 5111,
            "nodeType": "InheritanceSpecifier",
            "src": "964:7:15"
          }
        ],
        "canonicalName": "ERC721Multiwrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5097,
          "nodeType": "StructuredDocumentation",
          "src": "390:467:15",
          "text": "      BASE:      ERC721Base\n      EXTENSION: TokenStore, SoulboundERC721A\n  The `ERC721Multiwrap` contract uses the `ERC721Base` contract, along with the `TokenStore` and\n   `SoulboundERC721A` extension.\n  The `ERC721Multiwrap` contract lets you wrap arbitrary ERC20, ERC721 and ERC1155 tokens you own\n  into a single wrapped token / NFT.\n  The `SoulboundERC721A` extension lets you make your NFTs 'soulbound' i.e. non-transferrable."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5559,
          23031,
          34061,
          14089,
          21764,
          33834,
          18093,
          33084,
          12340,
          14292,
          14338,
          14221,
          24897,
          22411,
          22111,
          33932,
          33907,
          32544,
          49515,
          49549,
          13921,
          7939,
          13945,
          49279,
          49576,
          14356,
          32260,
          34909,
          21206,
          33577
        ],
        "name": "ERC721Multiwrap",
        "nameLocation": "868:15:15",
        "scope": 5560,
        "usedErrors": [
          14233,
          14236,
          14239,
          14242,
          14245,
          14248,
          14251,
          14254,
          14257,
          14260,
          14263,
          14266,
          14269
        ],
        "usedEvents": [
          5142,
          5151,
          14120,
          14129,
          14138,
          24809,
          33083,
          33833,
          33846,
          33855,
          33864,
          34051,
          34060
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 15
}