{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "primarySaleRecipient()": "079fe40e",
    "setPrimarySaleRecipient(address)": "6f4f2837"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"}},\"kind\":\"dev\",\"methods\":{\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}}},\"stateVariables\":{\"recipient\":{\"details\":\"The address that receives all primary sales value.\"}},\"title\":\"Primary Sale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"notice\":\"Thirdweb's `PrimarySale` is a contract extension to be used with any base contract. It exposes functions for setting and reading           the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about           primary sales, if desired.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/PrimarySale.sol\":\"PrimarySale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/PrimarySale.sol": "PrimarySale"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/PrimarySale.sol",
    "id": 22704,
    "exportedSymbols": {
      "IPrimarySale": [
        33997
      ],
      "PrimarySale": [
        22703
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1905:74",
    "nodes": [
      {
        "id": 22631,
        "nodeType": "PragmaDirective",
        "src": "39:23:74",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 22632,
        "nodeType": "ImportDirective",
        "src": "86:38:74",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IPrimarySale.sol",
        "file": "./interface/IPrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22704,
        "sourceUnit": 33998,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22703,
        "nodeType": "ContractDefinition",
        "src": "475:1468:74",
        "nodes": [
          {
            "id": 22638,
            "nodeType": "VariableDeclaration",
            "src": "591:25:74",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 22636,
              "nodeType": "StructuredDocumentation",
              "src": "527:59:74",
              "text": "@dev The address that receives all primary sales value."
            },
            "mutability": "mutable",
            "name": "recipient",
            "nameLocation": "607:9:74",
            "scope": 22703,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22637,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 22648,
            "nodeType": "FunctionDefinition",
            "src": "676:104:74",
            "nodes": [],
            "body": {
              "id": 22647,
              "nodeType": "Block",
              "src": "747:33:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 22645,
                    "name": "recipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22638,
                    "src": "764:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 22644,
                  "id": 22646,
                  "nodeType": "Return",
                  "src": "757:16:74"
                }
              ]
            },
            "baseFunctions": [
              33985
            ],
            "documentation": {
              "id": 22639,
              "nodeType": "StructuredDocumentation",
              "src": "623:48:74",
              "text": "@dev Returns primary sale recipient address."
            },
            "functionSelector": "079fe40e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "primarySaleRecipient",
            "nameLocation": "685:20:74",
            "overrides": {
              "id": 22641,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "720:8:74"
            },
            "parameters": {
              "id": 22640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:74"
            },
            "returnParameters": {
              "id": 22644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22648,
                  "src": "738:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "737:9:74"
            },
            "scope": 22703,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22669,
            "nodeType": "FunctionDefinition",
            "src": "1189:228:74",
            "nodes": [],
            "body": {
              "id": 22668,
              "nodeType": "Block",
              "src": "1264:153:74",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 22657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1278:30:74",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22655,
                        "name": "_canSetPrimarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22702,
                        "src": "1279:27:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 22656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1279:29:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22663,
                  "nodeType": "IfStatement",
                  "src": "1274:85:74",
                  "trueBody": {
                    "id": 22662,
                    "nodeType": "Block",
                    "src": "1310:49:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 22659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1331:16:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 22658,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1324:6:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 22660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1324:24:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22661,
                        "nodeType": "ExpressionStatement",
                        "src": "1324:24:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22665,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22651,
                        "src": "1395:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22664,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "1368:26:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1368:42:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22667,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:42:74"
                }
              ]
            },
            "baseFunctions": [
              33991
            ],
            "documentation": {
              "id": 22649,
              "nodeType": "StructuredDocumentation",
              "src": "786:398:74",
              "text": "  @notice         Updates primary sale recipient.\n  @dev            Caller should be authorized to set primary sales info.\n                  See {_canSetPrimarySaleRecipient}.\n                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\n  @param _saleRecipient   Address to be set as new recipient of primary sales."
            },
            "functionSelector": "6f4f2837",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPrimarySaleRecipient",
            "nameLocation": "1198:23:74",
            "overrides": {
              "id": 22653,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1255:8:74"
            },
            "parameters": {
              "id": 22652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22651,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "1230:14:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 22669,
                  "src": "1222:22:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:24:74"
            },
            "returnParameters": {
              "id": 22654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:74"
            },
            "scope": 22703,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 22696,
            "nodeType": "FunctionDefinition",
            "src": "1499:265:74",
            "nodes": [],
            "body": {
              "id": 22695,
              "nodeType": "Block",
              "src": "1568:196:74",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22675,
                      "name": "_saleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22672,
                      "src": "1582:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 22678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1608:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 22677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1600:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 22676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1600:7:74",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 22679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1600:10:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1582:28:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22686,
                  "nodeType": "IfStatement",
                  "src": "1578:86:74",
                  "trueBody": {
                    "id": 22685,
                    "nodeType": "Block",
                    "src": "1612:52:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "496e76616c696420726563697069656e74",
                              "id": 22682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1633:19:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
                                "typeString": "literal_string \"Invalid recipient\""
                              },
                              "value": "Invalid recipient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
                                "typeString": "literal_string \"Invalid recipient\""
                              }
                            ],
                            "id": 22681,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1626:6:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 22683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1626:27:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22684,
                        "nodeType": "ExpressionStatement",
                        "src": "1626:27:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 22689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22687,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22638,
                      "src": "1673:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22688,
                      "name": "_saleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22672,
                      "src": "1685:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1673:26:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22690,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:26:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22692,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22672,
                        "src": "1742:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22691,
                      "name": "PrimarySaleRecipientUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33996,
                      "src": "1714:27:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1714:43:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22694,
                  "nodeType": "EmitStatement",
                  "src": "1709:48:74"
                }
              ]
            },
            "documentation": {
              "id": 22670,
              "nodeType": "StructuredDocumentation",
              "src": "1423:71:74",
              "text": "@dev Lets a contract admin set the recipient for all primary sales."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupPrimarySaleRecipient",
            "nameLocation": "1508:26:74",
            "parameters": {
              "id": 22673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22672,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "1543:14:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 22696,
                  "src": "1535:22:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1534:24:74"
            },
            "returnParameters": {
              "id": 22674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:0:74"
            },
            "scope": 22703,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 22702,
            "nodeType": "FunctionDefinition",
            "src": "1865:76:74",
            "nodes": [],
            "documentation": {
              "id": 22697,
              "nodeType": "StructuredDocumentation",
              "src": "1770:90:74",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "1874:27:74",
            "parameters": {
              "id": 22698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:2:74"
            },
            "returnParameters": {
              "id": 22701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22700,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22702,
                  "src": "1935:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22699,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1935:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:6:74"
            },
            "scope": 22703,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 22634,
              "name": "IPrimarySale",
              "nameLocations": [
                "508:12:74"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33997,
              "src": "508:12:74"
            },
            "id": 22635,
            "nodeType": "InheritanceSpecifier",
            "src": "508:12:74"
          }
        ],
        "canonicalName": "PrimarySale",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22633,
          "nodeType": "StructuredDocumentation",
          "src": "126:347:74",
          "text": "  @title   Primary Sale\n  @notice  Thirdweb's `PrimarySale` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n           the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n           primary sales, if desired."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          22703,
          33997
        ],
        "name": "PrimarySale",
        "nameLocation": "493:11:74",
        "scope": 22704,
        "usedErrors": [],
        "usedEvents": [
          33996
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 74
}