{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airdropTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_proofMaxQuantityForWallet",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_airdropTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_airdropAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expirationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_openClaimLimitPerWallet",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openClaimLimitPerWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_proofMaxQuantityForWallet",
          "type": "uint256"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611111806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c8063097b3cdb146100a95780630ce56cac146100be5780632eb4a7ab146100f15780633b4b57b0146100fa5780633fb9baee1461010d578063572b6c051461011657806391f7cfb9146101395780639f43ddd214610142578063a3e676101461014b578063a7eae9ae14610176578063ac9650d814610189578063b73e0e8b146101a9575b600080fd5b6100bc6100b7366004610cb6565b6101bc565b005b6100de6100cc366004610d17565b609d6020526000908152604090205481565b6040519081526020015b60405180910390f35b6100de609c5481565b6100bc610108366004610cb6565b6103ac565b6100de609b5481565b610129610124366004610d17565b61043c565b60405190151581526020016100e8565b6100de60995481565b6100de609a5481565b60985461015e906001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b6100bc610184366004610d48565b61045a565b61019c610197366004610e53565b6105c6565b6040516100e89190610ee4565b60975461015e906001600160a01b031681565b609c54600090156102435761023f84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050609c546040516001600160601b031960608d901b16602082015260348101889052909250605401905060405160208183030381529060405280519060200120610743565b5090505b6001600160a01b0386166000908152609d6020526040902054856102a55760405162461bcd60e51b8152602060048201526014602482015273436c61696d696e67207a65726f20746f6b656e7360601b60448201526064015b60405180910390fd5b6099548611156102f35760405162461bcd60e51b815260206004820152601960248201527832bc31b2b2b2399030bb30b4b630b13632903a37b5b2b7399760391b604482015260640161029c565b609a5480158061030257508042105b6103415760405162461bcd60e51b815260206004820152601060248201526f30b4b9323937b81032bc3834b932b21760811b604482015260640161029c565b60008361035057609b54610352565b845b90508061035f848a610f5e565b11156103a15760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21038bab0b73a34ba3c9760791b604482015260640161029c565b505050505050505050565b6103b4610807565b60006103be610860565b90506103cd81868686866101bc565b6103d7868661086f565b856001600160a01b03166103e9610860565b6001600160a01b03167fa86305abc2db271df4609aa86a8d044bc11fb36939841bfdad6c1ab2b26e94718760405161042391815260200190565b60405180910390a35061043560018055565b5050505050565b6001600160a01b031660009081526065602052604090205460ff1690565b600054610100900460ff161580801561047a5750600054600160ff909116105b8061049b575061048930610992565b15801561049b575060005460ff166001145b6104fe5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161029c565b6000805460ff191660011790558015610521576000805461ff0019166101001790555b6105296109a1565b610532886109d2565b609880546001600160a01b03808a166001600160a01b03199283161790925560978054928916929091169190911790556099859055609a849055609b839055609c82905580156105bc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6060816001600160401b038111156105e0576105e0610d32565b60405190808252806020026020018201604052801561061357816020015b60608152602001906001900390816105fe5790505b5090506000610620610860565b9050336001600160a01b038216141560005b848110156107395781156106b15761068f3087878481811061065657610656610f71565b90506020028101906106689190610f87565b8660405160200161067b93929190610fcd565b604051602081830303815290604052610a0d565b8482815181106106a1576106a1610f71565b6020026020010181905250610731565b610713308787848181106106c7576106c7610f71565b90506020028101906106d99190610f87565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a0d92505050565b84828151811061072557610725610f71565b60200260200101819052505b600101610632565b5050505b92915050565b6000808281805b87518110156107fb5761075e600283610fee565b9150600088828151811061077457610774610f71565b602002602001015190508084116107b65760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506107f2565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836107ef9190610f5e565b92505b5060010161074a565b50941495939450505050565b6002600154036108595760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161029c565b6002600155565b600061086a610a39565b905090565b80609d600061087c610860565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108ab9190610f5e565b9250508190555080609960008282546108c49190611005565b90915550506097546098546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd906064016020604051808303816000875af1158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611018565b6109885760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161029c565b5050565b60018055565b6001600160a01b03163b151590565b600054610100900460ff166109c85760405162461bcd60e51b815260040161029c9061103a565b6109d0610a5b565b565b600054610100900460ff166109f95760405162461bcd60e51b815260040161029c9061103a565b610a01610a82565b610a0a81610aa9565b50565b6060610a3283836040518060600160405280602781526020016110b560279139610b2e565b9392505050565b6000610a443361043c565b15610a56575060131936013560601c90565b503390565b600054610100900460ff1661098c5760405162461bcd60e51b815260040161029c9061103a565b600054610100900460ff166109d05760405162461bcd60e51b815260040161029c9061103a565b600054610100900460ff16610ad05760405162461bcd60e51b815260040161029c9061103a565b60005b815181101561098857600160656000848481518110610af457610af4610f71565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610ad3565b6060600080856001600160a01b031685604051610b4b9190611085565b600060405180830381855af49150503d8060008114610b86576040519150601f19603f3d011682016040523d82523d6000602084013e610b8b565b606091505b5091509150610b9c86838387610ba6565b9695505050505050565b60608315610c13578251600003610c0c57610bc085610992565b610c0c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029c565b5081610c1d565b610c1d8383610c25565b949350505050565b815115610c355781518083602001fd5b8060405162461bcd60e51b815260040161029c91906110a1565b80356001600160a01b0381168114610c6657600080fd5b919050565b60008083601f840112610c7d57600080fd5b5081356001600160401b03811115610c9457600080fd5b6020830191508360208260051b8501011115610caf57600080fd5b9250929050565b600080600080600060808688031215610cce57600080fd5b610cd786610c4f565b94506020860135935060408601356001600160401b03811115610cf957600080fd5b610d0588828901610c6b565b96999598509660600135949350505050565b600060208284031215610d2957600080fd5b610a3282610c4f565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610d6357600080fd5b87356001600160401b0380821115610d7a57600080fd5b818a0191508a601f830112610d8e57600080fd5b8135602082821115610da257610da2610d32565b8160051b604051601f19603f83011681018181108682111715610dc757610dc7610d32565b60405292835281830193508481018201928e841115610de557600080fd5b948201945b83861015610e0a57610dfb86610c4f565b85529482019493820193610dea565b9b50610e1990508c8201610c4f565b995050505050610e2b60408901610c4f565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b60008060208385031215610e6657600080fd5b82356001600160401b03811115610e7c57600080fd5b610e8885828601610c6b565b90969095509350505050565b60005b83811015610eaf578181015183820152602001610e97565b50506000910152565b60008151808452610ed0816020860160208601610e94565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015610f3b57603f19888603018452610f29858351610eb8565b94509285019290850190600101610f0d565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561073d5761073d610f48565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610f9e57600080fd5b8301803591506001600160401b03821115610fb857600080fd5b602001915036819003821315610caf57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b808202811582820484141761073d5761073d610f48565b8181038181111561073d5761073d610f48565b60006020828403121561102a57600080fd5b81518015158114610a3257600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611097818460208701610e94565b9190910192915050565b602081526000610a326020830184610eb856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d927256cc11096b5ea6bb98b206dbfdaba4b8857014f5d46f7fc3db49a8339f464736f6c63430008170033",
    "sourceMap": "1235:5725:385:-:0;;;2668:53;;;;;;;;;-1:-1:-1;2692:22:385;:20;:22::i;:::-;1235:5725;;5939:280:450;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:450;;216:2:821;5998:66:450;;;198:21:821;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:821;;;338:37;392:19;;5998:66:450;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:450;6140:15;6125:30;;;;;;6174:28;;564:36:821;;;6174:28:450;;552:2:821;537:18;6174:28:450;;;;;;;6074:139;5939:280::o;422:184:821:-;1235:5725:385;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a45760003560e01c8063097b3cdb146100a95780630ce56cac146100be5780632eb4a7ab146100f15780633b4b57b0146100fa5780633fb9baee1461010d578063572b6c051461011657806391f7cfb9146101395780639f43ddd214610142578063a3e676101461014b578063a7eae9ae14610176578063ac9650d814610189578063b73e0e8b146101a9575b600080fd5b6100bc6100b7366004610cb6565b6101bc565b005b6100de6100cc366004610d17565b609d6020526000908152604090205481565b6040519081526020015b60405180910390f35b6100de609c5481565b6100bc610108366004610cb6565b6103ac565b6100de609b5481565b610129610124366004610d17565b61043c565b60405190151581526020016100e8565b6100de60995481565b6100de609a5481565b60985461015e906001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b6100bc610184366004610d48565b61045a565b61019c610197366004610e53565b6105c6565b6040516100e89190610ee4565b60975461015e906001600160a01b031681565b609c54600090156102435761023f84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050609c546040516001600160601b031960608d901b16602082015260348101889052909250605401905060405160208183030381529060405280519060200120610743565b5090505b6001600160a01b0386166000908152609d6020526040902054856102a55760405162461bcd60e51b8152602060048201526014602482015273436c61696d696e67207a65726f20746f6b656e7360601b60448201526064015b60405180910390fd5b6099548611156102f35760405162461bcd60e51b815260206004820152601960248201527832bc31b2b2b2399030bb30b4b630b13632903a37b5b2b7399760391b604482015260640161029c565b609a5480158061030257508042105b6103415760405162461bcd60e51b815260206004820152601060248201526f30b4b9323937b81032bc3834b932b21760811b604482015260640161029c565b60008361035057609b54610352565b845b90508061035f848a610f5e565b11156103a15760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21038bab0b73a34ba3c9760791b604482015260640161029c565b505050505050505050565b6103b4610807565b60006103be610860565b90506103cd81868686866101bc565b6103d7868661086f565b856001600160a01b03166103e9610860565b6001600160a01b03167fa86305abc2db271df4609aa86a8d044bc11fb36939841bfdad6c1ab2b26e94718760405161042391815260200190565b60405180910390a35061043560018055565b5050505050565b6001600160a01b031660009081526065602052604090205460ff1690565b600054610100900460ff161580801561047a5750600054600160ff909116105b8061049b575061048930610992565b15801561049b575060005460ff166001145b6104fe5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161029c565b6000805460ff191660011790558015610521576000805461ff0019166101001790555b6105296109a1565b610532886109d2565b609880546001600160a01b03808a166001600160a01b03199283161790925560978054928916929091169190911790556099859055609a849055609b839055609c82905580156105bc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6060816001600160401b038111156105e0576105e0610d32565b60405190808252806020026020018201604052801561061357816020015b60608152602001906001900390816105fe5790505b5090506000610620610860565b9050336001600160a01b038216141560005b848110156107395781156106b15761068f3087878481811061065657610656610f71565b90506020028101906106689190610f87565b8660405160200161067b93929190610fcd565b604051602081830303815290604052610a0d565b8482815181106106a1576106a1610f71565b6020026020010181905250610731565b610713308787848181106106c7576106c7610f71565b90506020028101906106d99190610f87565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a0d92505050565b84828151811061072557610725610f71565b60200260200101819052505b600101610632565b5050505b92915050565b6000808281805b87518110156107fb5761075e600283610fee565b9150600088828151811061077457610774610f71565b602002602001015190508084116107b65760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506107f2565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836107ef9190610f5e565b92505b5060010161074a565b50941495939450505050565b6002600154036108595760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161029c565b6002600155565b600061086a610a39565b905090565b80609d600061087c610860565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108ab9190610f5e565b9250508190555080609960008282546108c49190611005565b90915550506097546098546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd906064016020604051808303816000875af1158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611018565b6109885760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161029c565b5050565b60018055565b6001600160a01b03163b151590565b600054610100900460ff166109c85760405162461bcd60e51b815260040161029c9061103a565b6109d0610a5b565b565b600054610100900460ff166109f95760405162461bcd60e51b815260040161029c9061103a565b610a01610a82565b610a0a81610aa9565b50565b6060610a3283836040518060600160405280602781526020016110b560279139610b2e565b9392505050565b6000610a443361043c565b15610a56575060131936013560601c90565b503390565b600054610100900460ff1661098c5760405162461bcd60e51b815260040161029c9061103a565b600054610100900460ff166109d05760405162461bcd60e51b815260040161029c9061103a565b600054610100900460ff16610ad05760405162461bcd60e51b815260040161029c9061103a565b60005b815181101561098857600160656000848481518110610af457610af4610f71565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610ad3565b6060600080856001600160a01b031685604051610b4b9190611085565b600060405180830381855af49150503d8060008114610b86576040519150601f19603f3d011682016040523d82523d6000602084013e610b8b565b606091505b5091509150610b9c86838387610ba6565b9695505050505050565b60608315610c13578251600003610c0c57610bc085610992565b610c0c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029c565b5081610c1d565b610c1d8383610c25565b949350505050565b815115610c355781518083602001fd5b8060405162461bcd60e51b815260040161029c91906110a1565b80356001600160a01b0381168114610c6657600080fd5b919050565b60008083601f840112610c7d57600080fd5b5081356001600160401b03811115610c9457600080fd5b6020830191508360208260051b8501011115610caf57600080fd5b9250929050565b600080600080600060808688031215610cce57600080fd5b610cd786610c4f565b94506020860135935060408601356001600160401b03811115610cf957600080fd5b610d0588828901610c6b565b96999598509660600135949350505050565b600060208284031215610d2957600080fd5b610a3282610c4f565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610d6357600080fd5b87356001600160401b0380821115610d7a57600080fd5b818a0191508a601f830112610d8e57600080fd5b8135602082821115610da257610da2610d32565b8160051b604051601f19603f83011681018181108682111715610dc757610dc7610d32565b60405292835281830193508481018201928e841115610de557600080fd5b948201945b83861015610e0a57610dfb86610c4f565b85529482019493820193610dea565b9b50610e1990508c8201610c4f565b995050505050610e2b60408901610c4f565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b60008060208385031215610e6657600080fd5b82356001600160401b03811115610e7c57600080fd5b610e8885828601610c6b565b90969095509350505050565b60005b83811015610eaf578181015183820152602001610e97565b50506000910152565b60008151808452610ed0816020860160208601610e94565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015610f3b57603f19888603018452610f29858351610eb8565b94509285019290850190600101610f0d565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561073d5761073d610f48565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610f9e57600080fd5b8301803591506001600160401b03821115610fb857600080fd5b602001915036819003821315610caf57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b808202811582820484141761073d5761073d610f48565b8181038181111561073d5761073d610f48565b60006020828403121561102a57600080fd5b81518015158114610a3257600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611097818460208701610e94565b9190910192915050565b602081526000610a326020830184610eb856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d927256cc11096b5ea6bb98b206dbfdaba4b8857014f5d46f7fc3db49a8339f464736f6c63430008170033",
    "sourceMap": "1235:5725:385:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4770:1199;;;;;;:::i;:::-;;:::i;:::-;;2413:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1554:25:821;;;1542:2;1527:18;2413:56:385;;;;;;;;2118:25;;;;;;4248:423;;;;;;:::i;:::-;;:::i;1999:38::-;;;;;;918:134:211;;;;;;:::i;:::-;;:::i;:::-;;;1937:14:821;;1930:22;1912:41;;1900:2;1885:18;918:134:211;1772:187:821;1809:30:385;;;;;;1889:34;;;;;;1730:25;;;;;-1:-1:-1;;;;;1730:25:385;;;;;;-1:-1:-1;;;;;2128:32:821;;;2110:51;;2098:2;2083:18;1730:25:385;1964:203:821;2786:667:385;;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1631:34:385:-;;;;;-1:-1:-1;;;;;1631:34:385;;;4770:1199;5177:10;;4952:15;;5177:24;5173:240;;5234:168;5270:7;;5234:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5295:10:385;;5333:54;;-1:-1:-1;;;;;;5846:2:821;5817:15;;;5813:45;5333:54:385;;;5801:58:821;5875:12;;;5868:28;;;5295:10:385;;-1:-1:-1;5912:12:821;;;-1:-1:-1;5333:54:385;;;;;;;;;;;;5323:65;;;;;;5234:18;:168::i;:::-;-1:-1:-1;5217:185:385;-1:-1:-1;5173:240:385;-1:-1:-1;;;;;5454:31:385;;5423:28;5454:31;;;:21;:31;;;;;;5504:13;5496:46;;;;-1:-1:-1;;;5496:46:385;;6137:2:821;5496:46:385;;;6119:21:821;6176:2;6156:18;;;6149:30;-1:-1:-1;;;6195:18:821;;;6188:50;6255:18;;5496:46:385;;;;;;;;;5573:15;;5560:9;:28;;5552:66;;;;-1:-1:-1;;;5552:66:385;;6486:2:821;5552:66:385;;;6468:21:821;6525:2;6505:18;;;6498:30;-1:-1:-1;;;6544:18:821;;;6537:55;6609:18;;5552:66:385;6284:349:821;5552:66:385;5652:19;;5689:17;;;:51;;;5728:12;5710:15;:30;5689:51;5681:80;;;;-1:-1:-1;;;5681:80:385;;6840:2:821;5681:80:385;;;6822:21:821;6879:2;6859:18;;;6852:30;-1:-1:-1;;;6898:18:821;;;6891:46;6954:18;;5681:80:385;6638:340:821;5681:80:385;5772:27;5802:10;:65;;5844:23;;5802:65;;;5815:26;5802:65;5772:95;-1:-1:-1;5772:95:385;5885:32;5897:20;5885:9;:32;:::i;:::-;:55;;5877:85;;;;-1:-1:-1;;;5877:85:385;;7447:2:821;5877:85:385;;;7429:21:821;7486:2;7466:18;;;7459:30;-1:-1:-1;;;7505:18:821;;;7498:47;7562:18;;5877:85:385;7245:341:821;5877:85:385;4942:1027;;;;4770:1199;;;;;:::o;4248:423::-;2505:21:452;:19;:21::i;:::-;4435:15:385::1;4453:12;:10;:12::i;:::-;4435:30;;4476:68;4488:7;4497:9;4508:7;;4517:26;4476:11;:68::i;:::-;4555:44;4578:9;4589;4555:22;:44::i;:::-;4643:9;-1:-1:-1::0;;;;;4615:49:385::1;4629:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;4615:49:385::1;;4654:9;4615:49;;;;1554:25:821::0;;1542:2;1527:18;;1408:177;4615:49:385::1;;;;;;;;4425:246;2547:20:452::0;1787:1;3053:22;;2873:209;2547:20;4248:423:385;;;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;2786:667:385:-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;7793:2:821;3325:201:450;;;7775:21:821;7832:2;7812:18;;;7805:30;7871:34;7851:18;;;7844:62;-1:-1:-1;;;7922:18:821;;;7915:44;7976:19;;3325:201:450;7591:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3096:24:385::1;:22;:24::i;:::-;3130:41;3152:18;3130:21;:41::i;:::-;3182:10;:24:::0;;-1:-1:-1;;;;;3182:24:385;;::::1;-1:-1:-1::0;;;;;;3182:24:385;;::::1;;::::0;;;3216:19:::1;:42:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3268:15:::1;:32:::0;;;3310:19:::1;:42:::0;;;3362:23:::1;:50:::0;;;3422:10:::1;:24:::0;;;3647:99:450;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;8158:36:821;;3721:14:450;;8146:2:821;8131:18;3721:14:450;;;;;;;3647:99;3269:483;2786:667:385;;;;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;;:::o;112:876:294:-;203:4;;251;203;;293:567;317:5;:12;313:1;:16;293:567;;;350:10;359:1;350:10;;:::i;:::-;;;374:20;397:5;403:1;397:8;;;;;;;;:::i;:::-;;;;;;;374:31;;440:12;424;:28;420:430;;575:44;;;;;;9550:19:821;;;9585:12;;;9578:28;;;9622:12;;575:44:294;;;;;;;;;;;;565:55;;;;;;550:70;;420:430;;;762:44;;;;;;9550:19:821;;;9585:12;;;9578:28;;;9622:12;;762:44:294;;;;;;;;;;;;752:55;;;;;;737:70;;834:1;825:10;;;;;:::i;:::-;;;420:430;-1:-1:-1;331:3:294;;293:567;;;-1:-1:-1;953:20:294;;;;;-1:-1:-1;;;;112:876:294:o;2580:287:452:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:452;;9847:2:821;2704:63:452;;;9829:21:821;9886:2;9866:18;;;9859:30;9925:33;9905:18;;;9898:61;9976:18;;2704:63:452;9645:355:821;2704:63:452;1830:1;2842:7;:18;2580:287::o;6736:222:385:-;6876:14;6913:38;:36;:38::i;:::-;6906:45;;6736:222;:::o;6024:528::-;6355:21;6316;:35;6338:12;:10;:12::i;:::-;-1:-1:-1;;;;;6316:35:385;-1:-1:-1;;;;;6316:35:385;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;;;;;;;6405:21;6386:15;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;6452:19:385;;6486:10;;6445:80;;-1:-1:-1;;;6445:80:385;;-1:-1:-1;;;;;6486:10:385;;;6445:80;;;10378:34:821;10448:15;;;10428:18;;;10421:43;10480:18;;;10473:34;;;6452:19:385;;;6445:40;;10313:18:821;;6445:80:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6437:108;;;;-1:-1:-1;;;6437:108:385;;11002:2:821;6437:108:385;;;10984:21:821;11041:2;11021:18;;;11014:30;-1:-1:-1;;;11060:18:821;;;11053:45;11115:18;;6437:108:385;10800:339:821;6437:108:385;6024:528;;:::o;2873:209:452:-;1787:1;3053:22;;2873:209::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;1868:111:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1938:34:452::1;:32;:34::i;:::-;1868:111::o:0;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;:::-;470:194:::0;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;6736:222:385:o;1985:109:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;776::478:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;7055:325:289::0;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;7668:628::-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;12050:2:821;8110:60:289;;;12032:21:821;12089:2;12069:18;;;12062:30;12128:31;12108:18;;;12101:59;12177:18;;8110:60:289;11848:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;8818:540::-;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;14:173:821:-;82:20;;-1:-1:-1;;;;;131:31:821;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:367::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:55;;337:1;334;327:12;286:55;-1:-1:-1;360:20:821;;-1:-1:-1;;;;;392:30:821;;389:50;;;435:1;432;425:12;389:50;472:4;464:6;460:17;448:29;;532:3;525:4;515:6;512:1;508:14;500:6;496:27;492:38;489:47;486:67;;;549:1;546;539:12;486:67;192:367;;;;;:::o;564:648::-;677:6;685;693;701;709;762:3;750:9;741:7;737:23;733:33;730:53;;;779:1;776;769:12;730:53;802:29;821:9;802:29;:::i;:::-;792:39;;878:2;867:9;863:18;850:32;840:42;;933:2;922:9;918:18;905:32;-1:-1:-1;;;;;952:6:821;949:30;946:50;;;992:1;989;982:12;946:50;1031:70;1093:7;1084:6;1073:9;1069:22;1031:70;:::i;:::-;564:648;;;;-1:-1:-1;1120:8:821;1202:2;1187:18;1174:32;;564:648;-1:-1:-1;;;;564:648:821:o;1217:186::-;1276:6;1329:2;1317:9;1308:7;1304:23;1300:32;1297:52;;;1345:1;1342;1335:12;1297:52;1368:29;1387:9;1368:29;:::i;2172:127::-;2233:10;2228:3;2224:20;2221:1;2214:31;2264:4;2261:1;2254:15;2288:4;2285:1;2278:15;2304:1547;2442:6;2450;2458;2466;2474;2482;2490;2543:3;2531:9;2522:7;2518:23;2514:33;2511:53;;;2560:1;2557;2550:12;2511:53;2600:9;2587:23;-1:-1:-1;;;;;2670:2:821;2662:6;2659:14;2656:34;;;2686:1;2683;2676:12;2656:34;2724:6;2713:9;2709:22;2699:32;;2769:7;2762:4;2758:2;2754:13;2750:27;2740:55;;2791:1;2788;2781:12;2740:55;2827:2;2814:16;2849:4;2872:2;2868;2865:10;2862:36;;;2878:18;;:::i;:::-;2924:2;2921:1;2917:10;2956:2;2950:9;3019:2;3015:7;3010:2;3006;3002:11;2998:25;2990:6;2986:38;3074:6;3062:10;3059:22;3054:2;3042:10;3039:18;3036:46;3033:72;;;3085:18;;:::i;:::-;3121:2;3114:22;3171:18;;;3205:15;;;;-1:-1:-1;3247:11:821;;;3243:20;;;3275:19;;;3272:39;;;3307:1;3304;3297:12;3272:39;3331:11;;;;3351:148;3367:6;3362:3;3359:15;3351:148;;;3433:23;3452:3;3433:23;:::i;:::-;3421:36;;3384:12;;;;3477;;;;3351:148;;;3518:6;-1:-1:-1;3543:38:821;;-1:-1:-1;3562:18:821;;;3543:38;:::i;:::-;3533:48;;;;;;3600:38;3634:2;3623:9;3619:18;3600:38;:::i;:::-;2304:1547;;;;-1:-1:-1;3590:48:821;;3685:2;3670:18;;3657:32;;-1:-1:-1;3736:3:821;3721:19;;3708:33;;3788:3;3773:19;;3760:33;;-1:-1:-1;3840:3:821;3825:19;;;3812:33;;-1:-1:-1;2304:1547:821;-1:-1:-1;;2304:1547:821:o;3856:448::-;3953:6;3961;4014:2;4002:9;3993:7;3989:23;3985:32;3982:52;;;4030:1;4027;4020:12;3982:52;4070:9;4057:23;-1:-1:-1;;;;;4095:6:821;4092:30;4089:50;;;4135:1;4132;4125:12;4089:50;4174:70;4236:7;4227:6;4216:9;4212:22;4174:70;:::i;:::-;4263:8;;4148:96;;-1:-1:-1;3856:448:821;-1:-1:-1;;;;3856:448:821:o;4309:250::-;4394:1;4404:113;4418:6;4415:1;4412:13;4404:113;;;4494:11;;;4488:18;4475:11;;;4468:39;4440:2;4433:10;4404:113;;;-1:-1:-1;;4551:1:821;4533:16;;4526:27;4309:250::o;4564:270::-;4605:3;4643:5;4637:12;4670:6;4665:3;4658:19;4686:76;4755:6;4748:4;4743:3;4739:14;4732:4;4725:5;4721:16;4686:76;:::i;:::-;4816:2;4795:15;-1:-1:-1;;4791:29:821;4782:39;;;;4823:4;4778:50;;4564:270;-1:-1:-1;;4564:270:821:o;4839:800::-;4999:4;5028:2;5068;5057:9;5053:18;5098:2;5087:9;5080:21;5121:6;5156;5150:13;5187:6;5179;5172:22;5225:2;5214:9;5210:18;5203:25;;5287:2;5277:6;5274:1;5270:14;5259:9;5255:30;5251:39;5237:53;;5325:2;5317:6;5313:15;5346:1;5356:254;5370:6;5367:1;5364:13;5356:254;;;5463:2;5459:7;5447:9;5439:6;5435:22;5431:36;5426:3;5419:49;5491:39;5523:6;5514;5508:13;5491:39;:::i;:::-;5481:49;-1:-1:-1;5588:12:821;;;;5553:15;;;;5392:1;5385:9;5356:254;;;-1:-1:-1;5627:6:821;;4839:800;-1:-1:-1;;;;;;;4839:800:821:o;6983:127::-;7044:10;7039:3;7035:20;7032:1;7025:31;7075:4;7072:1;7065:15;7099:4;7096:1;7089:15;7115:125;7180:9;;;7201:10;;;7198:36;;;7214:18;;:::i;8205:127::-;8266:10;8261:3;8257:20;8254:1;8247:31;8297:4;8294:1;8287:15;8321:4;8318:1;8311:15;8337:521;8414:4;8420:6;8480:11;8467:25;8574:2;8570:7;8559:8;8543:14;8539:29;8535:43;8515:18;8511:68;8501:96;;8593:1;8590;8583:12;8501:96;8620:33;;8672:20;;;-1:-1:-1;;;;;;8704:30:821;;8701:50;;;8747:1;8744;8737:12;8701:50;8780:4;8768:17;;-1:-1:-1;8811:14:821;8807:27;;;8797:38;;8794:58;;;8848:1;8845;8838:12;8863:352;9074:6;9066;9061:3;9048:33;9169:2;9140:15;;;;-1:-1:-1;;;;;;9136:45:821;9100:16;;9125:57;;;9206:2;9198:11;;8863:352;-1:-1:-1;8863:352:821:o;9220:168::-;9293:9;;;9324;;9341:15;;;9335:22;;9321:37;9311:71;;9362:18;;:::i;10005:128::-;10072:9;;;10093:11;;;10090:37;;;10107:18;;:::i;10518:277::-;10585:6;10638:2;10626:9;10617:7;10613:23;10609:32;10606:52;;;10654:1;10651;10644:12;10606:52;10686:9;10680:16;10739:5;10732:13;10725:21;10718:5;10715:32;10705:60;;10761:1;10758;10751:12;11144:407;11346:2;11328:21;;;11385:2;11365:18;;;11358:30;11424:34;11419:2;11404:18;;11397:62;-1:-1:-1;;;11490:2:821;11475:18;;11468:41;11541:3;11526:19;;11144:407::o;11556:287::-;11685:3;11723:6;11717:13;11739:66;11798:6;11793:3;11786:4;11778:6;11774:17;11739:66;:::i;:::-;11821:16;;;;;11556:287;-1:-1:-1;;11556:287:821:o;12206:219::-;12355:2;12344:9;12337:21;12318:4;12375:44;12415:2;12404:9;12400:18;12392:6;12375:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "airdropTokenAddress()": "b73e0e8b",
    "availableAmount()": "91f7cfb9",
    "claim(address,uint256,bytes32[],uint256)": "3b4b57b0",
    "expirationTimestamp()": "9f43ddd2",
    "initialize(address[],address,address,uint256,uint256,uint256,bytes32)": "a7eae9ae",
    "isTrustedForwarder(address)": "572b6c05",
    "merkleRoot()": "2eb4a7ab",
    "multicall(bytes[])": "ac9650d8",
    "openClaimLimitPerWallet()": "3fb9baee",
    "supplyClaimedByWallet(address)": "0ce56cac",
    "tokenOwner()": "a3e67610",
    "verifyClaim(address,uint256,bytes32[],uint256)": "097b3cdb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_openClaimLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openClaimLimitPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TokensClaimed(address,address,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,bytes32[],uint256)\":{\"params\":{\"_proofMaxQuantityForWallet\":\"The maximum number of NFTs an address included in an                                        allowlist can claim.\",\"_proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"_quantity\":\"The quantity of NFTs to claim.\",\"_receiver\":\"The receiver of the NFTs to claim.\"}},\"initialize(address[],address,address,uint256,uint256,uint256,bytes32)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"verifyClaim(address,uint256,bytes32[],uint256)\":{\"details\":\"Checks a request to claim tokens against the active claim condition's criteria.\"}},\"stateVariables\":{\"airdropTokenAddress\":{\"details\":\"address of token being airdropped.\"},\"availableAmount\":{\"details\":\"number tokens available to claim.\"},\"expirationTimestamp\":{\"details\":\"airdrop expiration timestamp.\"},\"merkleRoot\":{\"details\":\"merkle root of the allowlist of addresses eligible to claim.\"},\"openClaimLimitPerWallet\":{\"details\":\"claim limit for open/public claiming without allowlist.\"},\"supplyClaimedByWallet\":{\"details\":\"Mapping from address => total number of tokens a wallet has claimed.\"},\"tokenOwner\":{\"details\":\"address of owner of tokens being airdropped.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/airdrop/AirdropERC20Claimable.sol\":\"AirdropERC20Claimable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732\",\"dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU\"]},\"contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol\":{\"keccak256\":\"0xec4f3d9c3689f3aceb5aff11a6ced7a01b57ef60c53c15239b83652d654e3ccc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f75157bb36ca34a35726b4960d857090f2900554bd9461a16ebfcbafd47f3da7\",\"dweb:/ipfs/QmXfqrHNJ3nAkkpdnSL5b1jGQuPi5vqa53F8HoCrMTfNfH\"]},\"contracts/prebuilts/unaudited/airdrop/AirdropERC20Claimable.sol\":{\"keccak256\":\"0x099535813338d3b423fc699818d013dbeff868a3c3c6a9b080a5c4c4ca23f19f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd58baf587dd886d11639e5bd5fda5fe3c7ecbf687bb354b383588b531d82fa5\",\"dweb:/ipfs/QmYmRkBg9JM7qXPA16ucnxJ79nTBZCYidQGxnST7BKDpH1\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "airdropTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "availableAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "_proofMaxQuantityForWallet",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "expirationTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_airdropTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_airdropAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_expirationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_openClaimLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "openClaimLimitPerWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "_proofMaxQuantityForWallet",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim(address,uint256,bytes32[],uint256)": {
            "params": {
              "_proofMaxQuantityForWallet": "The maximum number of NFTs an address included in an                                        allowlist can claim.",
              "_proofs": "The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.",
              "_quantity": "The quantity of NFTs to claim.",
              "_receiver": "The receiver of the NFTs to claim."
            }
          },
          "initialize(address[],address,address,uint256,uint256,uint256,bytes32)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "verifyClaim(address,uint256,bytes32[],uint256)": {
            "details": "Checks a request to claim tokens against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claim(address,uint256,bytes32[],uint256)": {
            "notice": "Lets an account claim a given quantity of NFTs."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/airdrop/AirdropERC20Claimable.sol": "AirdropERC20Claimable"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad",
        "urls": [
          "bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732",
          "dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol": {
        "keccak256": "0xec4f3d9c3689f3aceb5aff11a6ced7a01b57ef60c53c15239b83652d654e3ccc",
        "urls": [
          "bzz-raw://f75157bb36ca34a35726b4960d857090f2900554bd9461a16ebfcbafd47f3da7",
          "dweb:/ipfs/QmXfqrHNJ3nAkkpdnSL5b1jGQuPi5vqa53F8HoCrMTfNfH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/airdrop/AirdropERC20Claimable.sol": {
        "keccak256": "0x099535813338d3b423fc699818d013dbeff868a3c3c6a9b080a5c4c4ca23f19f",
        "urls": [
          "bzz-raw://fd58baf587dd886d11639e5bd5fda5fe3c7ecbf687bb354b383588b531d82fa5",
          "dweb:/ipfs/QmYmRkBg9JM7qXPA16ucnxJ79nTBZCYidQGxnST7BKDpH1"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/airdrop/AirdropERC20Claimable.sol",
    "id": 99227,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "AirdropERC20Claimable": [
        99226
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "IAirdropERC20Claimable": [
        77131
      ],
      "IERC20": [
        169760
      ],
      "IMulticall": [
        33577
      ],
      "Initializable": [
        154159
      ],
      "MerkleProof": [
        65274
      ],
      "Multicall": [
        21206
      ],
      "ReentrancyGuardUpgradeable": [
        154370
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6922:385",
    "nodes": [
      {
        "id": 98948,
        "nodeType": "PragmaDirective",
        "src": "39:24:385",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 98949,
        "nodeType": "ImportDirective",
        "src": "774:56:385",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99227,
        "sourceUnit": 169761,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98950,
        "nodeType": "ImportDirective",
        "src": "832:85:385",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99227,
        "sourceUnit": 154371,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98951,
        "nodeType": "ImportDirective",
        "src": "918:42:385",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99227,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98952,
        "nodeType": "ImportDirective",
        "src": "1010:60:385",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol",
        "file": "../../interface/airdrop/IAirdropERC20Claimable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99227,
        "sourceUnit": 77132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98953,
        "nodeType": "ImportDirective",
        "src": "1112:82:385",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99227,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98954,
        "nodeType": "ImportDirective",
        "src": "1195:38:385",
        "nodes": [],
        "absolutePath": "contracts/lib/MerkleProof.sol",
        "file": "../../../lib/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99227,
        "sourceUnit": 65275,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99226,
        "nodeType": "ContractDefinition",
        "src": "1235:5725:385",
        "nodes": [
          {
            "id": 98967,
            "nodeType": "VariableDeclaration",
            "src": "1631:34:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98965,
              "nodeType": "StructuredDocumentation",
              "src": "1583:43:385",
              "text": "@dev address of token being airdropped."
            },
            "functionSelector": "b73e0e8b",
            "mutability": "mutable",
            "name": "airdropTokenAddress",
            "nameLocation": "1646:19:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 98966,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1631:7:385",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98970,
            "nodeType": "VariableDeclaration",
            "src": "1730:25:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98968,
              "nodeType": "StructuredDocumentation",
              "src": "1672:53:385",
              "text": "@dev address of owner of tokens being airdropped."
            },
            "functionSelector": "a3e67610",
            "mutability": "mutable",
            "name": "tokenOwner",
            "nameLocation": "1745:10:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 98969,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1730:7:385",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98973,
            "nodeType": "VariableDeclaration",
            "src": "1809:30:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98971,
              "nodeType": "StructuredDocumentation",
              "src": "1762:42:385",
              "text": "@dev number tokens available to claim."
            },
            "functionSelector": "91f7cfb9",
            "mutability": "mutable",
            "name": "availableAmount",
            "nameLocation": "1824:15:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98972,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1809:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98976,
            "nodeType": "VariableDeclaration",
            "src": "1889:34:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98974,
              "nodeType": "StructuredDocumentation",
              "src": "1846:38:385",
              "text": "@dev airdrop expiration timestamp."
            },
            "functionSelector": "9f43ddd2",
            "mutability": "mutable",
            "name": "expirationTimestamp",
            "nameLocation": "1904:19:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98975,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1889:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98979,
            "nodeType": "VariableDeclaration",
            "src": "1999:38:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98977,
              "nodeType": "StructuredDocumentation",
              "src": "1930:64:385",
              "text": "@dev claim limit for open/public claiming without allowlist."
            },
            "functionSelector": "3fb9baee",
            "mutability": "mutable",
            "name": "openClaimLimitPerWallet",
            "nameLocation": "2014:23:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1999:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98982,
            "nodeType": "VariableDeclaration",
            "src": "2118:25:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98980,
              "nodeType": "StructuredDocumentation",
              "src": "2044:69:385",
              "text": "@dev merkle root of the allowlist of addresses eligible to claim."
            },
            "functionSelector": "2eb4a7ab",
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "2133:10:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98981,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2118:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98987,
            "nodeType": "VariableDeclaration",
            "src": "2413:56:385",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98983,
              "nodeType": "StructuredDocumentation",
              "src": "2331:77:385",
              "text": "@dev Mapping from address => total number of tokens a wallet has claimed."
            },
            "functionSelector": "0ce56cac",
            "mutability": "mutable",
            "name": "supplyClaimedByWallet",
            "nameLocation": "2448:21:385",
            "scope": 99226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 98986,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 98984,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2421:7:385",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2413:27:385",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 98985,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2432:7:385",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 98994,
            "nodeType": "FunctionDefinition",
            "src": "2668:53:385",
            "nodes": [],
            "body": {
              "id": 98993,
              "nodeType": "Block",
              "src": "2682:39:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98990,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154140,
                      "src": "2692:20:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 98991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:22:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98992,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:22:385"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2679:2:385"
            },
            "returnParameters": {
              "id": 98989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2682:0:385"
            },
            "scope": 99226,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99047,
            "nodeType": "FunctionDefinition",
            "src": "2786:667:385",
            "nodes": [],
            "body": {
              "id": 99046,
              "nodeType": "Block",
              "src": "3086:367:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99015,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154309,
                      "src": "3096:22:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 99016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:24:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99017,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:24:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99019,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98998,
                        "src": "3152:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 99018,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "3130:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 99020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:41:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99021,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:41:385"
                },
                {
                  "expression": {
                    "id": 99024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99022,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98970,
                      "src": "3182:10:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99023,
                      "name": "_tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99000,
                      "src": "3195:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3182:24:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99025,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:24:385"
                },
                {
                  "expression": {
                    "id": 99028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99026,
                      "name": "airdropTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98967,
                      "src": "3216:19:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99027,
                      "name": "_airdropTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99002,
                      "src": "3238:20:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3216:42:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99029,
                  "nodeType": "ExpressionStatement",
                  "src": "3216:42:385"
                },
                {
                  "expression": {
                    "id": 99032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99030,
                      "name": "availableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98973,
                      "src": "3268:15:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99031,
                      "name": "_airdropAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99004,
                      "src": "3286:14:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3268:32:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99033,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:32:385"
                },
                {
                  "expression": {
                    "id": 99036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99034,
                      "name": "expirationTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98976,
                      "src": "3310:19:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99035,
                      "name": "_expirationTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99006,
                      "src": "3332:20:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3310:42:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99037,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:42:385"
                },
                {
                  "expression": {
                    "id": 99040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99038,
                      "name": "openClaimLimitPerWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98979,
                      "src": "3362:23:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99039,
                      "name": "_openClaimLimitPerWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99008,
                      "src": "3388:24:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3362:50:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99041,
                  "nodeType": "ExpressionStatement",
                  "src": "3362:50:385"
                },
                {
                  "expression": {
                    "id": 99044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99042,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98982,
                      "src": "3422:10:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99043,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99010,
                      "src": "3435:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3422:24:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 99045,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:24:385"
                }
              ]
            },
            "documentation": {
              "id": 98995,
              "nodeType": "StructuredDocumentation",
              "src": "2727:54:385",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "a7eae9ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99012,
                  "name": "initializer",
                  "nameLocations": [
                    "3074:11:385"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "3074:11:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "3074:11:385"
              }
            ],
            "name": "initialize",
            "nameLocation": "2795:10:385",
            "parameters": {
              "id": 99011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98998,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2832:18:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "2815:35:385",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 98996,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2815:7:385",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 98997,
                    "nodeType": "ArrayTypeName",
                    "src": "2815:9:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99000,
                  "mutability": "mutable",
                  "name": "_tokenOwner",
                  "nameLocation": "2868:11:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "2860:19:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99002,
                  "mutability": "mutable",
                  "name": "_airdropTokenAddress",
                  "nameLocation": "2897:20:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "2889:28:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99004,
                  "mutability": "mutable",
                  "name": "_airdropAmount",
                  "nameLocation": "2935:14:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "2927:22:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99006,
                  "mutability": "mutable",
                  "name": "_expirationTimestamp",
                  "nameLocation": "2967:20:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "2959:28:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2959:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99008,
                  "mutability": "mutable",
                  "name": "_openClaimLimitPerWallet",
                  "nameLocation": "3005:24:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "2997:32:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99010,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "3047:11:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99047,
                  "src": "3039:19:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 99009,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2805:259:385"
            },
            "returnParameters": {
              "id": 99014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:0:385"
            },
            "scope": 99226,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99087,
            "nodeType": "FunctionDefinition",
            "src": "4248:423:385",
            "nodes": [],
            "body": {
              "id": 99086,
              "nodeType": "Block",
              "src": "4425:246:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99063,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "4443:7:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 99086,
                      "src": "4435:15:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99062,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4435:7:385",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99066,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99064,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99225
                      ],
                      "referencedDeclaration": 99225,
                      "src": "4453:10:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4453:12:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4435:30:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99068,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99063,
                        "src": "4488:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99069,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99052,
                        "src": "4497:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99070,
                        "name": "_proofs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99055,
                        "src": "4508:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 99071,
                        "name": "_proofMaxQuantityForWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99057,
                        "src": "4517:26:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99067,
                      "name": "verifyClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99180,
                      "src": "4476:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32[] calldata,uint256) view"
                      }
                    },
                    "id": 99072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:68:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99073,
                  "nodeType": "ExpressionStatement",
                  "src": "4476:68:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99075,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99050,
                        "src": "4578:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99076,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99052,
                        "src": "4589:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99074,
                      "name": "_transferClaimedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99212,
                      "src": "4555:22:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:44:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99078,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:44:385"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99080,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99225
                          ],
                          "referencedDeclaration": 99225,
                          "src": "4629:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99082,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99050,
                        "src": "4643:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99083,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99052,
                        "src": "4654:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99079,
                      "name": "TokensClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77117,
                      "src": "4615:13:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 99084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4615:49:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99085,
                  "nodeType": "EmitStatement",
                  "src": "4610:54:385"
                }
              ]
            },
            "baseFunctions": [
              77130
            ],
            "documentation": {
              "id": 99048,
              "nodeType": "StructuredDocumentation",
              "src": "3639:604:385",
              "text": "  @notice Lets an account claim a given quantity of NFTs.\n  @param _receiver                       The receiver of the NFTs to claim.\n  @param _quantity                       The quantity of NFTs to claim.\n  @param _proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param _proofMaxQuantityForWallet      The maximum number of NFTs an address included in an\n                                        allowlist can claim."
            },
            "functionSelector": "3b4b57b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99059,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4412:12:385"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "4412:12:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "4412:12:385"
              }
            ],
            "name": "claim",
            "nameLocation": "4257:5:385",
            "parameters": {
              "id": 99058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99050,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "4280:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99087,
                  "src": "4272:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4272:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99052,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4307:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99087,
                  "src": "4299:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4299:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99055,
                  "mutability": "mutable",
                  "name": "_proofs",
                  "nameLocation": "4345:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99087,
                  "src": "4326:26:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 99053,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4326:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 99054,
                    "nodeType": "ArrayTypeName",
                    "src": "4326:9:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99057,
                  "mutability": "mutable",
                  "name": "_proofMaxQuantityForWallet",
                  "nameLocation": "4370:26:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99087,
                  "src": "4362:34:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4262:140:385"
            },
            "returnParameters": {
              "id": 99061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4425:0:385"
            },
            "scope": 99226,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99180,
            "nodeType": "FunctionDefinition",
            "src": "4770:1199:385",
            "nodes": [],
            "body": {
              "id": 99179,
              "nodeType": "Block",
              "src": "4942:1027:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99101,
                      "mutability": "mutable",
                      "name": "isOverride",
                      "nameLocation": "4957:10:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 99179,
                      "src": "4952:15:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 99100,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4952:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99102,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4952:15:385"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 99108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99103,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98982,
                      "src": "5177:10:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5199:1:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5191:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 99104,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5191:7:385",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 99107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5191:10:385",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5177:24:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99126,
                  "nodeType": "IfStatement",
                  "src": "5173:240:385",
                  "trueBody": {
                    "id": 99125,
                    "nodeType": "Block",
                    "src": "5203:210:385",
                    "statements": [
                      {
                        "expression": {
                          "id": 99123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 99109,
                                "name": "isOverride",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99101,
                                "src": "5218:10:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 99110,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5217:14:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 99113,
                                "name": "_proofs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99095,
                                "src": "5270:7:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              {
                                "id": 99114,
                                "name": "merkleRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98982,
                                "src": "5295:10:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 99118,
                                        "name": "_claimer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99090,
                                        "src": "5350:8:385",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 99119,
                                        "name": "_proofMaxQuantityForWallet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99097,
                                        "src": "5360:26:385",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 99116,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5333:3:385",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 99117,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5337:12:385",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "5333:16:385",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 99120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5333:54:385",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 99115,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "5323:9:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 99121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5323:65:385",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 99111,
                                "name": "MerkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65274,
                                "src": "5234:11:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProof_$65274_$",
                                  "typeString": "type(library MerkleProof)"
                                }
                              },
                              "id": 99112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5246:6:385",
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65273,
                              "src": "5234:18:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_t_uint256_$",
                                "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool,uint256)"
                              }
                            },
                            "id": 99122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5234:168:385",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256)"
                            }
                          },
                          "src": "5217:185:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99124,
                        "nodeType": "ExpressionStatement",
                        "src": "5217:185:385"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    99128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99128,
                      "mutability": "mutable",
                      "name": "supplyClaimedAlready",
                      "nameLocation": "5431:20:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 99179,
                      "src": "5423:28:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5423:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99132,
                  "initialValue": {
                    "baseExpression": {
                      "id": 99129,
                      "name": "supplyClaimedByWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98987,
                      "src": "5454:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 99131,
                    "indexExpression": {
                      "id": 99130,
                      "name": "_claimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99090,
                      "src": "5476:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5454:31:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5423:62:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99134,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99092,
                          "src": "5504:9:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 99135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5516:1:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5504:13:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d696e67207a65726f20746f6b656e73",
                        "id": 99137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:22:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4cab4352ebbff407565ed1989379dd7c2e3cfab5ff1590680959433267d0cb8",
                          "typeString": "literal_string \"Claiming zero tokens\""
                        },
                        "value": "Claiming zero tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4cab4352ebbff407565ed1989379dd7c2e3cfab5ff1590680959433267d0cb8",
                          "typeString": "literal_string \"Claiming zero tokens\""
                        }
                      ],
                      "id": 99133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5496:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5496:46:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99139,
                  "nodeType": "ExpressionStatement",
                  "src": "5496:46:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99141,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99092,
                          "src": "5560:9:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 99142,
                          "name": "availableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98973,
                          "src": "5573:15:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5560:28:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578636565647320617661696c61626c6520746f6b656e732e",
                        "id": 99144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5590:27:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1b3641a398839decbe53e38c3827a6ef686bba4c9d294c84d93a9b605b48f7",
                          "typeString": "literal_string \"exceeds available tokens.\""
                        },
                        "value": "exceeds available tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1b3641a398839decbe53e38c3827a6ef686bba4c9d294c84d93a9b605b48f7",
                          "typeString": "literal_string \"exceeds available tokens.\""
                        }
                      ],
                      "id": 99140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5552:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5552:66:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99146,
                  "nodeType": "ExpressionStatement",
                  "src": "5552:66:385"
                },
                {
                  "assignments": [
                    99148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99148,
                      "mutability": "mutable",
                      "name": "expTimestamp",
                      "nameLocation": "5637:12:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 99179,
                      "src": "5629:20:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5629:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99150,
                  "initialValue": {
                    "id": 99149,
                    "name": "expirationTimestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98976,
                    "src": "5652:19:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5629:42:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 99159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99152,
                            "name": "expTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99148,
                            "src": "5689:12:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 99153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5705:1:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5689:17:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 99155,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5710:5:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5716:9:385",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5710:15:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 99157,
                            "name": "expTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99148,
                            "src": "5728:12:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5710:30:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5689:51:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61697264726f7020657870697265642e",
                        "id": 99160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5742:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c786d12392af5c5e546f0f991e0cea6a57050b1a5836df7d200bbd1fd700b638",
                          "typeString": "literal_string \"airdrop expired.\""
                        },
                        "value": "airdrop expired."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c786d12392af5c5e546f0f991e0cea6a57050b1a5836df7d200bbd1fd700b638",
                          "typeString": "literal_string \"airdrop expired.\""
                        }
                      ],
                      "id": 99151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5681:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5681:80:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99162,
                  "nodeType": "ExpressionStatement",
                  "src": "5681:80:385"
                },
                {
                  "assignments": [
                    99164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99164,
                      "mutability": "mutable",
                      "name": "claimLimitForWallet",
                      "nameLocation": "5780:19:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 99179,
                      "src": "5772:27:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5772:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99169,
                  "initialValue": {
                    "condition": {
                      "id": 99165,
                      "name": "isOverride",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99101,
                      "src": "5802:10:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 99167,
                      "name": "openClaimLimitPerWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98979,
                      "src": "5844:23:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 99168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5802:65:385",
                    "trueExpression": {
                      "id": 99166,
                      "name": "_proofMaxQuantityForWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99097,
                      "src": "5815:26:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5772:95:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99171,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99092,
                            "src": "5885:9:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 99172,
                            "name": "supplyClaimedAlready",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99128,
                            "src": "5897:20:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5885:32:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 99174,
                          "name": "claimLimitForWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99164,
                          "src": "5921:19:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5885:55:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207175616e746974792e",
                        "id": 99176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5942:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ead4e3aca1e86a832b202ca7183471f5cf3d0fc2d804201f7845ddf4f43fb9",
                          "typeString": "literal_string \"invalid quantity.\""
                        },
                        "value": "invalid quantity."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55ead4e3aca1e86a832b202ca7183471f5cf3d0fc2d804201f7845ddf4f43fb9",
                          "typeString": "literal_string \"invalid quantity.\""
                        }
                      ],
                      "id": 99170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5877:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5877:85:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99178,
                  "nodeType": "ExpressionStatement",
                  "src": "5877:85:385"
                }
              ]
            },
            "documentation": {
              "id": 99088,
              "nodeType": "StructuredDocumentation",
              "src": "4677:88:385",
              "text": "@dev Checks a request to claim tokens against the active claim condition's criteria."
            },
            "functionSelector": "097b3cdb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "4779:11:385",
            "parameters": {
              "id": 99098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99090,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "4808:8:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99180,
                  "src": "4800:16:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99092,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4834:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99180,
                  "src": "4826:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4826:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99095,
                  "mutability": "mutable",
                  "name": "_proofs",
                  "nameLocation": "4872:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99180,
                  "src": "4853:26:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 99093,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4853:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 99094,
                    "nodeType": "ArrayTypeName",
                    "src": "4853:9:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99097,
                  "mutability": "mutable",
                  "name": "_proofMaxQuantityForWallet",
                  "nameLocation": "4897:26:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99180,
                  "src": "4889:34:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4889:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4790:139:385"
            },
            "returnParameters": {
              "id": 99099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4942:0:385"
            },
            "scope": 99226,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99212,
            "nodeType": "FunctionDefinition",
            "src": "6024:528:385",
            "nodes": [],
            "body": {
              "id": 99211,
              "nodeType": "Block",
              "src": "6109:443:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 99193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 99188,
                        "name": "supplyClaimedByWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98987,
                        "src": "6316:21:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 99191,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99189,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99225
                          ],
                          "referencedDeclaration": 99225,
                          "src": "6338:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6338:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6316:35:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 99192,
                      "name": "_quantityBeingClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99185,
                      "src": "6355:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6316:60:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99194,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:60:385"
                },
                {
                  "expression": {
                    "id": 99197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99195,
                      "name": "availableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98973,
                      "src": "6386:15:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 99196,
                      "name": "_quantityBeingClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99185,
                      "src": "6405:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6386:40:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99198,
                  "nodeType": "ExpressionStatement",
                  "src": "6386:40:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99204,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98970,
                            "src": "6486:10:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 99205,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99183,
                            "src": "6498:3:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 99206,
                            "name": "_quantityBeingClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99185,
                            "src": "6503:21:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 99201,
                                "name": "airdropTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98967,
                                "src": "6452:19:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 99200,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169760,
                              "src": "6445:6:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$169760_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 99202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6445:27:385",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$169760",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6473:12:385",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 169759,
                          "src": "6445:40:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 99207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6445:80:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 99208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6527:17:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 99199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6437:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6437:108:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99210,
                  "nodeType": "ExpressionStatement",
                  "src": "6437:108:385"
                }
              ]
            },
            "documentation": {
              "id": 99181,
              "nodeType": "StructuredDocumentation",
              "src": "5975:44:385",
              "text": "@dev Transfers the tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferClaimedTokens",
            "nameLocation": "6033:22:385",
            "parameters": {
              "id": 99186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99183,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6064:3:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99212,
                  "src": "6056:11:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99185,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6077:21:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99212,
                  "src": "6069:29:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6069:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6055:44:385"
            },
            "returnParameters": {
              "id": 99187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6109:0:385"
            },
            "scope": 99226,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99225,
            "nodeType": "FunctionDefinition",
            "src": "6736:222:385",
            "nodes": [],
            "body": {
              "id": 99224,
              "nodeType": "Block",
              "src": "6896:62:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99220,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "6913:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 99221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6939:10:385",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "6913:36:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6913:38:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99219,
                  "id": 99223,
                  "nodeType": "Return",
                  "src": "6906:45:385"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "6745:10:385",
            "overrides": {
              "id": 99216,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99214,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "6821:25:385"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "6821:25:385"
                },
                {
                  "id": 99215,
                  "name": "Multicall",
                  "nameLocations": [
                    "6848:9:385"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "6848:9:385"
                }
              ],
              "src": "6812:46:385"
            },
            "parameters": {
              "id": 99213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6755:2:385"
            },
            "returnParameters": {
              "id": 99219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99218,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6884:6:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 99225,
                  "src": "6876:14:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6876:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6875:16:385"
            },
            "scope": 99226,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98955,
              "name": "Initializable",
              "nameLocations": [
                "1273:13:385"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1273:13:385"
            },
            "id": 98956,
            "nodeType": "InheritanceSpecifier",
            "src": "1273:13:385"
          },
          {
            "baseName": {
              "id": 98957,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1292:26:385"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154370,
              "src": "1292:26:385"
            },
            "id": 98958,
            "nodeType": "InheritanceSpecifier",
            "src": "1292:26:385"
          },
          {
            "baseName": {
              "id": 98959,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1324:25:385"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1324:25:385"
            },
            "id": 98960,
            "nodeType": "InheritanceSpecifier",
            "src": "1324:25:385"
          },
          {
            "baseName": {
              "id": 98961,
              "name": "Multicall",
              "nameLocations": [
                "1355:9:385"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1355:9:385"
            },
            "id": 98962,
            "nodeType": "InheritanceSpecifier",
            "src": "1355:9:385"
          },
          {
            "baseName": {
              "id": 98963,
              "name": "IAirdropERC20Claimable",
              "nameLocations": [
                "1370:22:385"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77131,
              "src": "1370:22:385"
            },
            "id": 98964,
            "nodeType": "InheritanceSpecifier",
            "src": "1370:22:385"
          }
        ],
        "canonicalName": "AirdropERC20Claimable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          99226,
          77131,
          21206,
          33577,
          46402,
          161692,
          154370,
          154159
        ],
        "name": "AirdropERC20Claimable",
        "nameLocation": "1244:21:385",
        "scope": 99227,
        "usedErrors": [],
        "usedEvents": [
          77117,
          154005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 385
}