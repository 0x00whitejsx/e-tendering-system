{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            }
          ],
          "internalType": "struct IERC721A.TokenOwnership",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "explicitOwnershipsOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            }
          ],
          "internalType": "struct IERC721A.TokenOwnership[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b5060405162004567380380620045678339810160408190526200003591620003f7565b6040518060400160405280601381526020017f5369676e61747572654d696e7445524337323100000000000000000000000000815250604051806040016040528060018152602001603160f81b8152508787878787838381600290816200009d91906200054a565b506003620000ac82826200054a565b50506000805550620000be856200017e565b620000d3826001600160801b038316620001d0565b5050845160209586012084519486019490942060e08590526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909801209052949094525050610120525062000172816200027c565b50505050505062000616565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200021a5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064015b60405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b038116620002c85760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640162000211565b601080546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b80516001600160a01b03811681146200032a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200035757600080fd5b81516001600160401b03808211156200037457620003746200032f565b604051601f8301601f19908116603f011681019082821181831017156200039f576200039f6200032f565b8160405283815260209250866020858801011115620003bd57600080fd5b600091505b83821015620003e15785820183015181830184015290820190620003c2565b6000602085830101528094505050505092915050565b60008060008060008060c087890312156200041157600080fd5b6200041c8762000312565b60208801519096506001600160401b03808211156200043a57600080fd5b620004488a838b0162000345565b965060408901519150808211156200045f57600080fd5b506200046e89828a0162000345565b9450506200047f6060880162000312565b60808801519093506001600160801b03811681146200049d57600080fd5b9150620004ad60a0880162000312565b90509295509295509295565b600181811c90821680620004ce57607f821691505b602082108103620004ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000545576000816000526020600020601f850160051c81016020861015620005205750805b601f850160051c820191505b8181101562000541578281556001016200052c565b5050505b505050565b81516001600160401b038111156200056657620005666200032f565b6200057e81620005778454620004b9565b84620004f5565b602080601f831160018114620005b657600084156200059d5750858301515b600019600386901b1c1916600185901b17855562000541565b600085815260208120601f198616915b82811015620005e757888601518255948401946001909101908401620005c6565b5085821015620006065787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051613f01620006666000396000612b1901526000612b6801526000612b4301526000612a9c01526000612ac601526000612af00152613f016000f3fe6080604052600436106101da5760003560e01c80636352211e116100fe5780636352211e146104cc57806363b45e2d146104ec5780636f4f28371461050157806370a0823114610521578063754a81d91461054157806383040532146105615780638462151c146105915780638da5cb5b146105be578063938e3d7b146105d357806395d89b41146105f357806399a2557a146106085780639bcf7a1514610628578063a22cb46514610648578063ac9650d814610668578063b24f2d3914610695578063b88d4fde146106c0578063c23dc68f146106e0578063c87b56dd1461070d578063e8a3d4851461072d578063e985e9c51461074257600080fd5b806275a317146101df57806301ffc9a71461020157806306fdde0314610236578063079fe40e14610258578063081812fc14610285578063095ea7b3146102a557806313af4035146102c557806318160ddd146102e557806323b872dd146103085780632419f51b14610328578063252e82e8146103485780632a55205a146103875780633b1475a7146103b557806342842e0e146103ca57806342966c68146103ea578063430c20811461040a578063439c7be51461042a5780634cc157df1461043d5780635bbb21771461047f578063600dd5ea146104ac575b600080fd5b3480156101eb57600080fd5b506101ff6101fa366004613266565b610762565b005b34801561020d57600080fd5b5061022161021c3660046132c9565b6107c0565b60405190151581526020015b60405180910390f35b34801561024257600080fd5b5061024b61082d565b60405161022d9190613336565b34801561026457600080fd5b5061026d6108bf565b6040516001600160a01b03909116815260200161022d565b34801561029157600080fd5b5061026d6102a0366004613356565b6108ce565b3480156102b157600080fd5b506101ff6102c036600461336f565b610912565b3480156102d157600080fd5b506101ff6102e0366004613399565b610998565b3480156102f157600080fd5b50600154600054035b60405190815260200161022d565b34801561031457600080fd5b506101ff6103233660046133b4565b6109c8565b34801561033457600080fd5b506102fa610343366004613356565b6109d3565b34801561035457600080fd5b506103686103633660046133f0565b610a41565b6040805192151583526001600160a01b0390911660208301520161022d565b34801561039357600080fd5b506103a76103a236600461348f565b610a85565b60405161022d9291906134b1565b3480156103c157600080fd5b506000546102fa565b3480156103d657600080fd5b506101ff6103e53660046133b4565b610ac2565b3480156103f657600080fd5b506101ff610405366004613356565b610add565b34801561041657600080fd5b5061022161042536600461336f565b610ae8565b61026d6104383660046133f0565b610b47565b34801561044957600080fd5b5061045d610458366004613356565b610ce2565b604080516001600160a01b03909316835261ffff90911660208301520161022d565b34801561048b57600080fd5b5061049f61049a3660046134ca565b610d4d565b60405161022d919061359c565b3480156104b857600080fd5b506101ff6104c736600461336f565b610e01565b3480156104d857600080fd5b5061026d6104e7366004613356565b610e2f565b3480156104f857600080fd5b50600c546102fa565b34801561050d57600080fd5b506101ff61051c366004613399565b610e41565b34801561052d57600080fd5b506102fa61053c366004613399565b610e6e565b34801561054d57600080fd5b506101ff61055c3660046135de565b610ebc565b34801561056d57600080fd5b5061022161057c366004613356565b600e6020526000908152604090205460ff1681565b34801561059d57600080fd5b506105b16105ac366004613399565b610f06565b60405161022d919061365b565b3480156105ca57600080fd5b5061026d611030565b3480156105df57600080fd5b506101ff6105ee366004613693565b61103f565b3480156105ff57600080fd5b5061024b61106c565b34801561061457600080fd5b506105b16106233660046136c7565b61107b565b34801561063457600080fd5b506101ff6106433660046136fa565b61122e565b34801561065457600080fd5b506101ff61066336600461372d565b61125d565b34801561067457600080fd5b50610688610683366004613764565b6112f2565b60405161022d91906137d8565b3480156106a157600080fd5b50600a546001600160a01b03811690600160a01b900461ffff1661045d565b3480156106cc57600080fd5b506101ff6106db36600461383c565b611457565b3480156106ec57600080fd5b506107006106fb366004613356565b6114a2565b60405161022d9190613897565b34801561071957600080fd5b5061024b610728366004613356565b61152a565b34801561073957600080fd5b5061024b611618565b34801561074e57600080fd5b5061022161075d3660046138a5565b6116a6565b61076a6116d4565b61078f5760405162461bcd60e51b8152600401610786906138d8565b60405180910390fd5b6107a161079b60005490565b826116f7565b6107bc82600160405180602001604052806000815250611769565b5050565b60006301ffc9a760e01b6001600160e01b0319831614806107f157506380ac58cd60e01b6001600160e01b03198316145b8061080c5750635b5e139f60e01b6001600160e01b03198316145b8061082757506001600160e01b0319821663152a902d60e11b145b92915050565b60606002805461083c90613909565b80601f016020809104026020016040519081016040528092919081815260200182805461086890613909565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b5050505050905090565b6010546001600160a01b031690565b60006108d982611905565b6108f6576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061091d82610e2f565b9050806001600160a01b0316836001600160a01b0316036109515760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146109885761096b81336116a6565b610988576040516367d9dca160e11b815260040160405180910390fd5b610993838383611930565b505050565b6109a06116d4565b6109bc5760405162461bcd60e51b815260040161078690613943565b6109c58161198c565b50565b6109938383836119de565b60006109de600c5490565b8210610a1c5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610786565b600c8281548110610a2f57610a2f61396b565b90600052602060002001549050919050565b600080610a4f858585611bb8565b61014086013560009081526011602052604090205490915060ff16158015610a7b5750610a7b81611c14565b9150935093915050565b600080600080610a9486610ce2565b90945084925061ffff169050612710610aad8287613997565b610ab791906139c4565b925050509250929050565b61099383838360405180602001604052806000815250611457565b6109c5816001611c39565b600080610af483610e2f565b9050806001600160a01b0316846001600160a01b03161480610b1b5750610b1b81856116a6565b80610b3f5750836001600160a01b0316610b34846108ce565b6001600160a01b0316145b949350505050565b60008360a00135600114610b915760405162461bcd60e51b81526020600482015260116024820152707175616e746979206d757374206265203160781b6044820152606401610786565b600054610b9f858585611de8565b91506000610bb06020870187613399565b9050610be5610bc56080880160608901613399565b60a0880135610bdb6101008a0160e08b01613399565b8960c00135611f70565b6000610bf76040880160208901613399565b6001600160a01b031614158015610c115750604086013515155b15610c3457610c3482610c2a6040890160208a01613399565b886040013561206d565b610c7f82610c4560808901896139d8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506116f792505050565b610c8d818760a00135612114565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c89604051610cd19190613aa3565b60405180910390a450509392505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610d295780516020820151610d43565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b80516060906000816001600160401b03811115610d6c57610d6c6131b1565b604051908082528060200260200182016040528015610da557816020015b610d92613175565b815260200190600190039081610d8a5790505b50905060005b828114610df957610dd4858281518110610dc757610dc761396b565b60200260200101516114a2565b828281518110610de657610de661396b565b6020908102919091010152600101610dab565b509392505050565b610e096116d4565b610e255760405162461bcd60e51b815260040161078690613943565b6107bc828261212e565b6000610e3a826121b2565b5192915050565b610e496116d4565b610e655760405162461bcd60e51b815260040161078690613943565b6109c5816122b7565b60006001600160a01b038216610e97576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610ec46116d4565b610ee05760405162461bcd60e51b8152600401610786906138d8565b610ef3610eec60005490565b848461234b565b5050610f00848483611769565b50505050565b60606000806000610f1685610e6e565b90506000816001600160401b03811115610f3257610f326131b1565b604051908082528060200260200182016040528015610f5b578160200160208202803683370190505b509050610f66613175565b60005b83861461102457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052925061101c5781516001600160a01b031615610fdd57815194505b876001600160a01b0316856001600160a01b03160361101c578083878060010198508151811061100f5761100f61396b565b6020026020010181815250505b600101610f69565b50909695505050505050565b6009546001600160a01b031690565b6110476116d4565b6110635760405162461bcd60e51b815260040161078690613943565b6109c5816123af565b60606003805461083c90613909565b606081831061109d57604051631960ccad60e11b815260040160405180910390fd5b60008054808411156110ad578093505b60006110b887610e6e565b9050848610156110d757858503818110156110d1578091505b506110db565b5060005b6000816001600160401b038111156110f5576110f56131b1565b60405190808252806020026020018201604052801561111e578160200160208202803683370190505b5090508160000361113457935061122792505050565b600061113f886114a2565b905060008160400151611150575080515b885b8881141580156111625750848714155b1561121b57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905293506112135782516001600160a01b0316156111d457825191505b8a6001600160a01b0316826001600160a01b03160361121357808488806001019950815181106112065761120661396b565b6020026020010181815250505b600101611152565b50505092835250909150505b9392505050565b6112366116d4565b6112525760405162461bcd60e51b815260040161078690613943565b61099383838361206d565b336001600160a01b038316036112865760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6060816001600160401b0381111561130c5761130c6131b1565b60405190808252806020026020018201604052801561133f57816020015b606081526020019060019003908161132a5790505b509050336000805b8481101561144e5781156113c6576113a43087878481811061136b5761136b61396b565b905060200281019061137d91906139d8565b8660405160200161139093929190613bb1565b60405160208183030381529060405261248b565b8482815181106113b6576113b661396b565b6020026020010181905250611446565b611428308787848181106113dc576113dc61396b565b90506020028101906113ee91906139d8565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061248b92505050565b84828151811061143a5761143a61396b565b60200260200101819052505b600101611347565b50505092915050565b6114628484846119de565b611474836001600160a01b03166124b0565b15610f0057611485848484846124bf565b610f00576040516368d2bf6b60e11b815260040160405180910390fd5b6114aa613175565b6114b2613175565b60005483106114c15792915050565b50600082815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615801592820192909252906115215792915050565b611227836121b2565b6000818152600f602052604081208054606092919061154890613909565b80601f016020809104026020016040519081016040528092919081815260200182805461157490613909565b80156115c15780601f10611596576101008083540402835291602001916115c1565b820191906000526020600020905b8154815290600101906020018083116115a457829003601f168201915b505050505090506000815111156115d85792915050565b60006115e3846125aa565b9050806115ef85612746565b604051602001611600929190613bd2565b60405160208183030381529060405292505050919050565b6008805461162590613909565b80601f016020809104026020016040519081016040528092919081815260200182805461165190613909565b801561169e5780601f106116735761010080835404028352916020019161169e565b820191906000526020600020905b81548152906001019060200180831161168157829003601f168201915b505050505081565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006116de611030565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f60205260409020805461171090613909565b1590506117515760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b6044820152606401610786565b6000828152600f602052604090206109938282613c51565b6000546001600160a01b03841661179257604051622e076360e81b815260040160405180910390fd5b826000036117b35760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061184c906124b0565b156118c2575b60405182906001600160a01b03881690600090600080516020613eac833981519152908290a461188b60008784806001019550876124bf565b6118a8576040516368d2bf6b60e11b815260040160405180910390fd5b8082106118525782600054146118bd57600080fd5b6118f5565b5b6040516001830192906001600160a01b03881690600090600080516020613eac833981519152908290a48082106118c3575b506000908155610f009085838684565b6000805482108015610827575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006119e9826121b2565b9050836001600160a01b031681600001516001600160a01b031614611a205760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611a3e5750611a3e85336116a6565b80611a59575033611a4e846108ce565b6001600160a01b0316145b905080611a7957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611aa057604051633a954ecd60e21b815260040160405180910390fd5b611aac60008487611930565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611b7f576000548214611b7f57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020613eac83398151915260405160405180910390a45050505050565b6000610b3f83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c0e9250611c029150889050612846565b8051906020012061298d565b906129ba565b6000611c1e611030565b6001600160a01b0316826001600160a01b0316149050919050565b6000611c44836121b2565b80519091508215611caa576000336001600160a01b0383161480611c6d5750611c6d82336116a6565b80611c88575033611c7d866108ce565b6001600160a01b0316145b905080611ca857604051632ce44b5f60e11b815260040160405180910390fd5b505b611cb660008583611930565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116611db0576000548214611db057805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020613eac833981519152908390a4505060018054810190555050565b600080611df6858585610a41565b9250905080611e355760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610786565b42611e4861012087016101008801613d10565b6001600160801b03161180611e765750611e6a61014086016101208701613d10565b6001600160801b031642115b15611eb15760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610786565b6000611ec06020870187613399565b6001600160a01b031603611f0c5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610786565b60008560a0013511611f485760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610786565b50610140909301356000908152601160205260409020805460ff191660011790555090919050565b80600003611fb4573415611faf5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610786565b610f00565b6000611fc08285613997565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601611ff25750348114611ff6565b5034155b806120375760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610786565b60006001600160a01b0387161561204e5786612056565b6120566108bf565b9050612064853383866129d6565b50505050505050565b61271081111561208f5760405162461bcd60e51b815260040161078690613d2b565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6107bc828260405180602001604052806000815250611769565b6127108111156121505760405162461bcd60e51b815260040161078690613d2b565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6121ba613175565b8160005481101561229e57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615159181018290529061229c5780516001600160a01b031615612233579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215612297579392505050565b612233565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166123015760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610786565b601080546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000806123588486613d54565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602052604090209092508291506123a68482613c51565b50935093915050565b6000600880546123be90613909565b80601f01602080910402602001604051908101604052809291908181526020018280546123ea90613909565b80156124375780601f1061240c57610100808354040283529160200191612437565b820191906000526020600020905b81548152906001019060200180831161241a57829003601f168201915b50505050509050816008908161244d9190613c51565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161247f929190613d67565b60405180910390a15050565b60606112278383604051806060016040528060278152602001613e8560279139612a17565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906124f4903390899088908890600401613d95565b6020604051808303816000875af192505050801561252f575060408051601f3d908101601f1916820190925261252c91810190613dc8565b60015b61258d573d80801561255d576040519150601f19603f3d011682016040523d82523d6000602084013e612562565b606091505b508051600003612585576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060006125b7600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561260757602002820191906000526020600020905b8154815260200190600101908083116125f3575b5050505050905060005b8281101561270b5781818151811061262b5761262b61396b565b60200260200101518510156126f957600d60008383815181106126505761265061396b565b60200260200101518152602001908152602001600020805461267190613909565b80601f016020809104026020016040519081016040528092919081815260200182805461269d90613909565b80156126ea5780601f106126bf576101008083540402835291602001916126ea565b820191906000526020600020905b8154815290600101906020018083116126cd57829003601f168201915b50505050509350505050919050565b612704600182613d54565b9050612611565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610786565b60608160000361276d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612797578061278181613de5565b91506127909050600a836139c4565b9150612771565b6000816001600160401b038111156127b1576127b16131b1565b6040519080825280601f01601f1916602001820160405280156127db576020820181803683370190505b5090505b8415610b3f576127f0600183613dfe565b91506127fd600a86613e11565b612808906030613d54565b60f81b81838151811061281d5761281d61396b565b60200101906001600160f81b031916908160001a90535061283f600a866139c4565b94506127df565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d446128766020840184613399565b6128866040850160208601613399565b604085013561289b6080870160608801613399565b6128a860808801886139d8565b6040516128b6929190613e25565b60405190819003902060a088013560c08901356128da6101008b0160e08c01613399565b6128ec6101208c016101008d01613d10565b6128fe6101408d016101208e01613d10565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b600061082761299a612a8f565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006129c98585612bb6565b91509150610df981612bfb565b8015610f005773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601612a0b57611faf8282612d40565b610f0084848484612de2565b6060600080856001600160a01b031685604051612a349190613e35565b600060405180830381855af49150503d8060008114612a6f576040519150601f19603f3d011682016040523d82523d6000602084013e612a74565b606091505b5091509150612a8586838387612e35565b9695505050505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612ae857507f000000000000000000000000000000000000000000000000000000000000000046145b15612b1257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103612bec5760208301516040840151606085015160001a612be087828585612eac565b94509450505050612bf4565b506000905060025b9250929050565b6000816004811115612c0f57612c0f613e51565b03612c175750565b6001816004811115612c2b57612c2b613e51565b03612c735760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610786565b6002816004811115612c8757612c87613e51565b03612cd45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610786565b6003816004811115612ce857612ce8613e51565b036109c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610786565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d8d576040519150601f19603f3d011682016040523d82523d6000602084013e612d92565b606091505b50509050806109935760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610786565b816001600160a01b0316836001600160a01b03160315610f0057306001600160a01b03841603612e2057611faf6001600160a01b0385168383612f66565b610f006001600160a01b038516848484612fbc565b60608315612ea2578251600003612e9b57612e4f856124b0565b612e9b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610786565b5081610b3f565b610b3f8383612ff4565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612ed95750600090506003612f5d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f2d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f5657600060019250925050612f5d565b9150600090505b94509492505050565b6109938363a9059cbb60e01b8484604051602401612f859291906134b1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261301e565b6040516001600160a01b0380851660248301528316604482015260648101829052610f009085906323b872dd60e01b90608401612f85565b8151156130045781518083602001fd5b8060405162461bcd60e51b81526004016107869190613336565b6000613073826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130f09092919063ffffffff16565b80519091501561099357808060200190518101906130919190613e67565b6109935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610786565b6060610b3f848460008585600080866001600160a01b031685876040516131179190613e35565b60006040518083038185875af1925050503d8060008114613154576040519150601f19603f3d011682016040523d82523d6000602084013e613159565b606091505b509150915061316a87838387612e35565b979650505050505050565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146131ac57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156131ef576131ef6131b1565b604052919050565b600082601f83011261320857600080fd5b81356001600160401b03811115613221576132216131b1565b613234601f8201601f19166020016131c7565b81815284602083860101111561324957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561327957600080fd5b61328283613195565b915060208301356001600160401b0381111561329d57600080fd5b6132a9858286016131f7565b9150509250929050565b6001600160e01b0319811681146109c557600080fd5b6000602082840312156132db57600080fd5b8135611227816132b3565b60005b838110156133015781810151838201526020016132e9565b50506000910152565b600081518084526133228160208601602086016132e6565b601f01601f19169290920160200192915050565b602081526000611227602083018461330a565b6001600160a01b03169052565b60006020828403121561336857600080fd5b5035919050565b6000806040838503121561338257600080fd5b61338b83613195565b946020939093013593505050565b6000602082840312156133ab57600080fd5b61122782613195565b6000806000606084860312156133c957600080fd5b6133d284613195565b92506133e060208501613195565b9150604084013590509250925092565b60008060006040848603121561340557600080fd5b83356001600160401b038082111561341c57600080fd5b90850190610160828803121561343157600080fd5b9093506020850135908082111561344757600080fd5b818601915086601f83011261345b57600080fd5b81358181111561346a57600080fd5b87602082850101111561347c57600080fd5b6020830194508093505050509250925092565b600080604083850312156134a257600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b600060208083850312156134dd57600080fd5b82356001600160401b03808211156134f457600080fd5b818501915085601f83011261350857600080fd5b81358181111561351a5761351a6131b1565b8060051b915061352b8483016131c7565b818152918301840191848101908884111561354557600080fd5b938501935b838510156135635784358252938501939085019061354a565b98975050505050505050565b80516001600160a01b031682526020808201516001600160401b0316908301526040908101511515910152565b6020808252825182820181905260009190848201906040850190845b81811015611024576135cb83855161356f565b92840192606092909201916001016135b8565b600080600080608085870312156135f457600080fd5b6135fd85613195565b93506020850135925060408501356001600160401b038082111561362057600080fd5b61362c888389016131f7565b9350606087013591508082111561364257600080fd5b5061364f878288016131f7565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b8181101561102457835183529284019291840191600101613677565b6000602082840312156136a557600080fd5b81356001600160401b038111156136bb57600080fd5b610b3f848285016131f7565b6000806000606084860312156136dc57600080fd5b6136e584613195565b95602085013595506040909401359392505050565b60008060006060848603121561370f57600080fd5b833592506133e060208501613195565b80151581146109c557600080fd5b6000806040838503121561374057600080fd5b61374983613195565b915060208301356137598161371f565b809150509250929050565b6000806020838503121561377757600080fd5b82356001600160401b038082111561378e57600080fd5b818501915085601f8301126137a257600080fd5b8135818111156137b157600080fd5b8660208260051b85010111156137c657600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561382f57603f1988860301845261381d85835161330a565b94509285019290850190600101613801565b5092979650505050505050565b6000806000806080858703121561385257600080fd5b61385b85613195565b935061386960208601613195565b92506040850135915060608501356001600160401b0381111561388b57600080fd5b61364f878288016131f7565b60608101610827828461356f565b600080604083850312156138b857600080fd5b6138c183613195565b91506138cf60208401613195565b90509250929050565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b600181811c9082168061391d57607f821691505b60208210810361393d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761082757610827613981565b634e487b7160e01b600052601260045260246000fd5b6000826139d3576139d36139ae565b500490565b6000808335601e198436030181126139ef57600080fd5b8301803591506001600160401b03821115613a0957600080fd5b602001915036819003821315612bf457600080fd5b6000808335601e19843603018112613a3557600080fd5b83016020810192503590506001600160401b03811115613a5457600080fd5b803603821315612bf457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b03811681146131ac57600080fd5b60208152613abc60208201613ab784613195565b613349565b6000613aca60208401613195565b613ad76040840182613349565b5060408301356060830152613aee60608401613195565b613afb6080840182613349565b50613b096080840184613a1e565b6101608060a0860152613b2161018086018385613a63565b925060a086013560c086015260c086013560e0860152613b4360e08701613195565b9150610100613b5481870184613349565b613b5f818801613a8c565b925050610120613b79818701846001600160801b03169052565b613b84818801613a8c565b925050610140613b9e818701846001600160801b03169052565b9590950135939094019290925250919050565b8284823760609190911b6001600160601b0319169101908152601401919050565b60008351613be48184602088016132e6565b835190830190613bf88183602088016132e6565b01949350505050565b601f821115610993576000816000526020600020601f850160051c81016020861015613c2a5750805b601f850160051c820191505b81811015613c4957828155600101613c36565b505050505050565b81516001600160401b03811115613c6a57613c6a6131b1565b613c7e81613c788454613909565b84613c01565b602080601f831160018114613cb35760008415613c9b5750858301515b600019600386901b1c1916600185901b178555613c49565b600085815260208120601f198616915b82811015613ce257888601518255948401946001909101908401613cc3565b5085821015613d005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215613d2257600080fd5b61122782613a8c565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b8082018082111561082757610827613981565b604081526000613d7a604083018561330a565b8281036020840152613d8c818561330a565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a859083018461330a565b600060208284031215613dda57600080fd5b8151611227816132b3565b600060018201613df757613df7613981565b5060010190565b8181038181111561082757610827613981565b600082613e2057613e206139ae565b500690565b8183823760009101908152919050565b60008251613e478184602087016132e6565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215613e7957600080fd5b81516112278161371f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b31d0da6a5147c3ba6c2ebb75876607fc203c1c6f9d3d157d52020cbfd6d397564736f6c63430008170033",
    "sourceMap": "905:3594:16:-:0;;;1167:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;1390:13:16;1405:5;1412:7;1421:17;1440:11;2238:5:11;2245:7;1891:5:25;1883;:13;;;;;;:::i;:::-;-1:-1:-1;1906:7:25;:17;1916:7;1906;:17;:::i;:::-;-1:-1:-1;;2119:7:25;1933:31;;-1:-1:-1;2264:26:11::1;2276:13:::0;2264:11:::1;:26::i;:::-;2300:56;2325:17:::0;-1:-1:-1;;;;;2300:56:11;::::1;:24;:56::i;:::-;-1:-1:-1::0;;2541:22:240;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:240;;2651:117;3633:73;;;5534:25:821;;;5575:18;;;5568:34;;;;-1:-1:-1;5618:18:821;;5611:34;;;;5661:18;;;;5654:34;;;;3700:4:240;5704:19:821;;;5697:61;;;3633:73:240;;;;;;;;;;5506:19:821;;;;3633:73:240;;;3623:84;;;;;;;2896:85;;2991:28;;;;-1:-1:-1;;3029:21:240;;-1:-1:-1;1463:49:16::1;1490:21:::0;1463:26:::1;:49::i;:::-;1167:352:::0;;;;;;905:3594;;1421:172:70;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;4951:2:821;3549:25:77;;;4933:21:821;4990:2;4970:18;;;4963:30;-1:-1:-1;;;5009:18:821;;;5002:45;5064:18;;3549:25:77;;;;;;;;3509:76;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;5239:25:821;;;3689:46:77;;5227:2:821;5212:18;3689:46:77;;;;;;;3408:334;;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;5971:2:821;1626:27:74;;;5953:21:821;6010:2;5990:18;;;5983:30;-1:-1:-1;;;6029:18:821;;;6022:47;6086:18;;1626:27:74;5769:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:844;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:821;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:821;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;914:3;907:4;902:2;894:6;890:15;886:26;883:35;880:55;;;931:1;928;921:12;880:55;953:1;944:10;;963:133;977:2;974:1;971:9;963:133;;;1065:14;;;1061:23;;1055:30;1034:14;;;1030:23;;1023:63;988:10;;;;963:133;;;1140:1;1133:4;1128:2;1120:6;1116:15;1112:26;1105:37;1160:6;1151:15;;;;;;328:844;;;;:::o;1177:987::-;1312:6;1320;1328;1336;1344;1352;1405:3;1393:9;1384:7;1380:23;1376:33;1373:53;;;1422:1;1419;1412:12;1373:53;1445:40;1475:9;1445:40;:::i;:::-;1529:2;1514:18;;1508:25;1435:50;;-1:-1:-1;;;;;;1582:14:821;;;1579:34;;;1609:1;1606;1599:12;1579:34;1632:61;1685:7;1676:6;1665:9;1661:22;1632:61;:::i;:::-;1622:71;;1739:2;1728:9;1724:18;1718:25;1702:41;;1768:2;1758:8;1755:16;1752:36;;;1784:1;1781;1774:12;1752:36;;1807:63;1862:7;1851:8;1840:9;1836:24;1807:63;:::i;:::-;1797:73;;;1889:49;1934:2;1923:9;1919:18;1889:49;:::i;:::-;1981:3;1966:19;;1960:26;1879:59;;-1:-1:-1;;;;;;2015:31:821;;2005:42;;1995:70;;2061:1;2058;2051:12;1995:70;2084:5;-1:-1:-1;2108:50:821;2153:3;2138:19;;2108:50;:::i;:::-;2098:60;;1177:987;;;;;;;;:::o;2169:380::-;2248:1;2244:12;;;;2291;;;2312:61;;2366:4;2358:6;2354:17;2344:27;;2312:61;2419:2;2411:6;2408:14;2388:18;2385:38;2382:161;;2465:10;2460:3;2456:20;2453:1;2446:31;2500:4;2497:1;2490:15;2528:4;2525:1;2518:15;2382:161;;2169:380;;;:::o;2680:543::-;2782:2;2777:3;2774:11;2771:446;;;2818:1;2842:5;2839:1;2832:16;2886:4;2883:1;2873:18;2956:2;2944:10;2940:19;2937:1;2933:27;2927:4;2923:38;2992:4;2980:10;2977:20;2974:47;;;-1:-1:-1;3015:4:821;2974:47;3070:2;3065:3;3061:12;3058:1;3054:20;3048:4;3044:31;3034:41;;3125:82;3143:2;3136:5;3133:13;3125:82;;;3188:17;;;3169:1;3158:13;3125:82;;;3129:3;;;2771:446;2680:543;;;:::o;3399:1345::-;3519:10;;-1:-1:-1;;;;;3541:30:821;;3538:56;;;3574:18;;:::i;:::-;3603:97;3693:6;3653:38;3685:4;3679:11;3653:38;:::i;:::-;3647:4;3603:97;:::i;:::-;3755:4;;3812:2;3801:14;;3829:1;3824:663;;;;4531:1;4548:6;4545:89;;;-1:-1:-1;4600:19:821;;;4594:26;4545:89;-1:-1:-1;;3356:1:821;3352:11;;;3348:24;3344:29;3334:40;3380:1;3376:11;;;3331:57;4647:81;;3794:944;;3824:663;2627:1;2620:14;;;2664:4;2651:18;;-1:-1:-1;;3860:20:821;;;3978:236;3992:7;3989:1;3986:14;3978:236;;;4081:19;;;4075:26;4060:42;;4173:27;;;;4141:1;4129:14;;;;4008:19;;3978:236;;;3982:3;4242:6;4233:7;4230:19;4227:201;;;4303:19;;;4297:26;-1:-1:-1;;4386:1:821;4382:14;;;4398:3;4378:24;4374:37;4370:42;4355:58;4340:74;;4227:201;-1:-1:-1;;;;;4474:1:821;4458:14;;;4454:22;4441:36;;-1:-1:-1;3399:1345:821:o;5769:341::-;905:3594:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101da5760003560e01c80636352211e116100fe5780636352211e146104cc57806363b45e2d146104ec5780636f4f28371461050157806370a0823114610521578063754a81d91461054157806383040532146105615780638462151c146105915780638da5cb5b146105be578063938e3d7b146105d357806395d89b41146105f357806399a2557a146106085780639bcf7a1514610628578063a22cb46514610648578063ac9650d814610668578063b24f2d3914610695578063b88d4fde146106c0578063c23dc68f146106e0578063c87b56dd1461070d578063e8a3d4851461072d578063e985e9c51461074257600080fd5b806275a317146101df57806301ffc9a71461020157806306fdde0314610236578063079fe40e14610258578063081812fc14610285578063095ea7b3146102a557806313af4035146102c557806318160ddd146102e557806323b872dd146103085780632419f51b14610328578063252e82e8146103485780632a55205a146103875780633b1475a7146103b557806342842e0e146103ca57806342966c68146103ea578063430c20811461040a578063439c7be51461042a5780634cc157df1461043d5780635bbb21771461047f578063600dd5ea146104ac575b600080fd5b3480156101eb57600080fd5b506101ff6101fa366004613266565b610762565b005b34801561020d57600080fd5b5061022161021c3660046132c9565b6107c0565b60405190151581526020015b60405180910390f35b34801561024257600080fd5b5061024b61082d565b60405161022d9190613336565b34801561026457600080fd5b5061026d6108bf565b6040516001600160a01b03909116815260200161022d565b34801561029157600080fd5b5061026d6102a0366004613356565b6108ce565b3480156102b157600080fd5b506101ff6102c036600461336f565b610912565b3480156102d157600080fd5b506101ff6102e0366004613399565b610998565b3480156102f157600080fd5b50600154600054035b60405190815260200161022d565b34801561031457600080fd5b506101ff6103233660046133b4565b6109c8565b34801561033457600080fd5b506102fa610343366004613356565b6109d3565b34801561035457600080fd5b506103686103633660046133f0565b610a41565b6040805192151583526001600160a01b0390911660208301520161022d565b34801561039357600080fd5b506103a76103a236600461348f565b610a85565b60405161022d9291906134b1565b3480156103c157600080fd5b506000546102fa565b3480156103d657600080fd5b506101ff6103e53660046133b4565b610ac2565b3480156103f657600080fd5b506101ff610405366004613356565b610add565b34801561041657600080fd5b5061022161042536600461336f565b610ae8565b61026d6104383660046133f0565b610b47565b34801561044957600080fd5b5061045d610458366004613356565b610ce2565b604080516001600160a01b03909316835261ffff90911660208301520161022d565b34801561048b57600080fd5b5061049f61049a3660046134ca565b610d4d565b60405161022d919061359c565b3480156104b857600080fd5b506101ff6104c736600461336f565b610e01565b3480156104d857600080fd5b5061026d6104e7366004613356565b610e2f565b3480156104f857600080fd5b50600c546102fa565b34801561050d57600080fd5b506101ff61051c366004613399565b610e41565b34801561052d57600080fd5b506102fa61053c366004613399565b610e6e565b34801561054d57600080fd5b506101ff61055c3660046135de565b610ebc565b34801561056d57600080fd5b5061022161057c366004613356565b600e6020526000908152604090205460ff1681565b34801561059d57600080fd5b506105b16105ac366004613399565b610f06565b60405161022d919061365b565b3480156105ca57600080fd5b5061026d611030565b3480156105df57600080fd5b506101ff6105ee366004613693565b61103f565b3480156105ff57600080fd5b5061024b61106c565b34801561061457600080fd5b506105b16106233660046136c7565b61107b565b34801561063457600080fd5b506101ff6106433660046136fa565b61122e565b34801561065457600080fd5b506101ff61066336600461372d565b61125d565b34801561067457600080fd5b50610688610683366004613764565b6112f2565b60405161022d91906137d8565b3480156106a157600080fd5b50600a546001600160a01b03811690600160a01b900461ffff1661045d565b3480156106cc57600080fd5b506101ff6106db36600461383c565b611457565b3480156106ec57600080fd5b506107006106fb366004613356565b6114a2565b60405161022d9190613897565b34801561071957600080fd5b5061024b610728366004613356565b61152a565b34801561073957600080fd5b5061024b611618565b34801561074e57600080fd5b5061022161075d3660046138a5565b6116a6565b61076a6116d4565b61078f5760405162461bcd60e51b8152600401610786906138d8565b60405180910390fd5b6107a161079b60005490565b826116f7565b6107bc82600160405180602001604052806000815250611769565b5050565b60006301ffc9a760e01b6001600160e01b0319831614806107f157506380ac58cd60e01b6001600160e01b03198316145b8061080c5750635b5e139f60e01b6001600160e01b03198316145b8061082757506001600160e01b0319821663152a902d60e11b145b92915050565b60606002805461083c90613909565b80601f016020809104026020016040519081016040528092919081815260200182805461086890613909565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b5050505050905090565b6010546001600160a01b031690565b60006108d982611905565b6108f6576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061091d82610e2f565b9050806001600160a01b0316836001600160a01b0316036109515760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146109885761096b81336116a6565b610988576040516367d9dca160e11b815260040160405180910390fd5b610993838383611930565b505050565b6109a06116d4565b6109bc5760405162461bcd60e51b815260040161078690613943565b6109c58161198c565b50565b6109938383836119de565b60006109de600c5490565b8210610a1c5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610786565b600c8281548110610a2f57610a2f61396b565b90600052602060002001549050919050565b600080610a4f858585611bb8565b61014086013560009081526011602052604090205490915060ff16158015610a7b5750610a7b81611c14565b9150935093915050565b600080600080610a9486610ce2565b90945084925061ffff169050612710610aad8287613997565b610ab791906139c4565b925050509250929050565b61099383838360405180602001604052806000815250611457565b6109c5816001611c39565b600080610af483610e2f565b9050806001600160a01b0316846001600160a01b03161480610b1b5750610b1b81856116a6565b80610b3f5750836001600160a01b0316610b34846108ce565b6001600160a01b0316145b949350505050565b60008360a00135600114610b915760405162461bcd60e51b81526020600482015260116024820152707175616e746979206d757374206265203160781b6044820152606401610786565b600054610b9f858585611de8565b91506000610bb06020870187613399565b9050610be5610bc56080880160608901613399565b60a0880135610bdb6101008a0160e08b01613399565b8960c00135611f70565b6000610bf76040880160208901613399565b6001600160a01b031614158015610c115750604086013515155b15610c3457610c3482610c2a6040890160208a01613399565b886040013561206d565b610c7f82610c4560808901896139d8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506116f792505050565b610c8d818760a00135612114565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c89604051610cd19190613aa3565b60405180910390a450509392505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610d295780516020820151610d43565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b80516060906000816001600160401b03811115610d6c57610d6c6131b1565b604051908082528060200260200182016040528015610da557816020015b610d92613175565b815260200190600190039081610d8a5790505b50905060005b828114610df957610dd4858281518110610dc757610dc761396b565b60200260200101516114a2565b828281518110610de657610de661396b565b6020908102919091010152600101610dab565b509392505050565b610e096116d4565b610e255760405162461bcd60e51b815260040161078690613943565b6107bc828261212e565b6000610e3a826121b2565b5192915050565b610e496116d4565b610e655760405162461bcd60e51b815260040161078690613943565b6109c5816122b7565b60006001600160a01b038216610e97576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610ec46116d4565b610ee05760405162461bcd60e51b8152600401610786906138d8565b610ef3610eec60005490565b848461234b565b5050610f00848483611769565b50505050565b60606000806000610f1685610e6e565b90506000816001600160401b03811115610f3257610f326131b1565b604051908082528060200260200182016040528015610f5b578160200160208202803683370190505b509050610f66613175565b60005b83861461102457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052925061101c5781516001600160a01b031615610fdd57815194505b876001600160a01b0316856001600160a01b03160361101c578083878060010198508151811061100f5761100f61396b565b6020026020010181815250505b600101610f69565b50909695505050505050565b6009546001600160a01b031690565b6110476116d4565b6110635760405162461bcd60e51b815260040161078690613943565b6109c5816123af565b60606003805461083c90613909565b606081831061109d57604051631960ccad60e11b815260040160405180910390fd5b60008054808411156110ad578093505b60006110b887610e6e565b9050848610156110d757858503818110156110d1578091505b506110db565b5060005b6000816001600160401b038111156110f5576110f56131b1565b60405190808252806020026020018201604052801561111e578160200160208202803683370190505b5090508160000361113457935061122792505050565b600061113f886114a2565b905060008160400151611150575080515b885b8881141580156111625750848714155b1561121b57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905293506112135782516001600160a01b0316156111d457825191505b8a6001600160a01b0316826001600160a01b03160361121357808488806001019950815181106112065761120661396b565b6020026020010181815250505b600101611152565b50505092835250909150505b9392505050565b6112366116d4565b6112525760405162461bcd60e51b815260040161078690613943565b61099383838361206d565b336001600160a01b038316036112865760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6060816001600160401b0381111561130c5761130c6131b1565b60405190808252806020026020018201604052801561133f57816020015b606081526020019060019003908161132a5790505b509050336000805b8481101561144e5781156113c6576113a43087878481811061136b5761136b61396b565b905060200281019061137d91906139d8565b8660405160200161139093929190613bb1565b60405160208183030381529060405261248b565b8482815181106113b6576113b661396b565b6020026020010181905250611446565b611428308787848181106113dc576113dc61396b565b90506020028101906113ee91906139d8565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061248b92505050565b84828151811061143a5761143a61396b565b60200260200101819052505b600101611347565b50505092915050565b6114628484846119de565b611474836001600160a01b03166124b0565b15610f0057611485848484846124bf565b610f00576040516368d2bf6b60e11b815260040160405180910390fd5b6114aa613175565b6114b2613175565b60005483106114c15792915050565b50600082815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615801592820192909252906115215792915050565b611227836121b2565b6000818152600f602052604081208054606092919061154890613909565b80601f016020809104026020016040519081016040528092919081815260200182805461157490613909565b80156115c15780601f10611596576101008083540402835291602001916115c1565b820191906000526020600020905b8154815290600101906020018083116115a457829003601f168201915b505050505090506000815111156115d85792915050565b60006115e3846125aa565b9050806115ef85612746565b604051602001611600929190613bd2565b60405160208183030381529060405292505050919050565b6008805461162590613909565b80601f016020809104026020016040519081016040528092919081815260200182805461165190613909565b801561169e5780601f106116735761010080835404028352916020019161169e565b820191906000526020600020905b81548152906001019060200180831161168157829003601f168201915b505050505081565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006116de611030565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f60205260409020805461171090613909565b1590506117515760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b6044820152606401610786565b6000828152600f602052604090206109938282613c51565b6000546001600160a01b03841661179257604051622e076360e81b815260040160405180910390fd5b826000036117b35760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061184c906124b0565b156118c2575b60405182906001600160a01b03881690600090600080516020613eac833981519152908290a461188b60008784806001019550876124bf565b6118a8576040516368d2bf6b60e11b815260040160405180910390fd5b8082106118525782600054146118bd57600080fd5b6118f5565b5b6040516001830192906001600160a01b03881690600090600080516020613eac833981519152908290a48082106118c3575b506000908155610f009085838684565b6000805482108015610827575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006119e9826121b2565b9050836001600160a01b031681600001516001600160a01b031614611a205760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611a3e5750611a3e85336116a6565b80611a59575033611a4e846108ce565b6001600160a01b0316145b905080611a7957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611aa057604051633a954ecd60e21b815260040160405180910390fd5b611aac60008487611930565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611b7f576000548214611b7f57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020613eac83398151915260405160405180910390a45050505050565b6000610b3f83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c0e9250611c029150889050612846565b8051906020012061298d565b906129ba565b6000611c1e611030565b6001600160a01b0316826001600160a01b0316149050919050565b6000611c44836121b2565b80519091508215611caa576000336001600160a01b0383161480611c6d5750611c6d82336116a6565b80611c88575033611c7d866108ce565b6001600160a01b0316145b905080611ca857604051632ce44b5f60e11b815260040160405180910390fd5b505b611cb660008583611930565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116611db0576000548214611db057805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020613eac833981519152908390a4505060018054810190555050565b600080611df6858585610a41565b9250905080611e355760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610786565b42611e4861012087016101008801613d10565b6001600160801b03161180611e765750611e6a61014086016101208701613d10565b6001600160801b031642115b15611eb15760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610786565b6000611ec06020870187613399565b6001600160a01b031603611f0c5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610786565b60008560a0013511611f485760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610786565b50610140909301356000908152601160205260409020805460ff191660011790555090919050565b80600003611fb4573415611faf5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610786565b610f00565b6000611fc08285613997565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601611ff25750348114611ff6565b5034155b806120375760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610786565b60006001600160a01b0387161561204e5786612056565b6120566108bf565b9050612064853383866129d6565b50505050505050565b61271081111561208f5760405162461bcd60e51b815260040161078690613d2b565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6107bc828260405180602001604052806000815250611769565b6127108111156121505760405162461bcd60e51b815260040161078690613d2b565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6121ba613175565b8160005481101561229e57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615159181018290529061229c5780516001600160a01b031615612233579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215612297579392505050565b612233565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166123015760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610786565b601080546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000806123588486613d54565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602052604090209092508291506123a68482613c51565b50935093915050565b6000600880546123be90613909565b80601f01602080910402602001604051908101604052809291908181526020018280546123ea90613909565b80156124375780601f1061240c57610100808354040283529160200191612437565b820191906000526020600020905b81548152906001019060200180831161241a57829003601f168201915b50505050509050816008908161244d9190613c51565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161247f929190613d67565b60405180910390a15050565b60606112278383604051806060016040528060278152602001613e8560279139612a17565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906124f4903390899088908890600401613d95565b6020604051808303816000875af192505050801561252f575060408051601f3d908101601f1916820190925261252c91810190613dc8565b60015b61258d573d80801561255d576040519150601f19603f3d011682016040523d82523d6000602084013e612562565b606091505b508051600003612585576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060006125b7600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561260757602002820191906000526020600020905b8154815260200190600101908083116125f3575b5050505050905060005b8281101561270b5781818151811061262b5761262b61396b565b60200260200101518510156126f957600d60008383815181106126505761265061396b565b60200260200101518152602001908152602001600020805461267190613909565b80601f016020809104026020016040519081016040528092919081815260200182805461269d90613909565b80156126ea5780601f106126bf576101008083540402835291602001916126ea565b820191906000526020600020905b8154815290600101906020018083116126cd57829003601f168201915b50505050509350505050919050565b612704600182613d54565b9050612611565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610786565b60608160000361276d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612797578061278181613de5565b91506127909050600a836139c4565b9150612771565b6000816001600160401b038111156127b1576127b16131b1565b6040519080825280601f01601f1916602001820160405280156127db576020820181803683370190505b5090505b8415610b3f576127f0600183613dfe565b91506127fd600a86613e11565b612808906030613d54565b60f81b81838151811061281d5761281d61396b565b60200101906001600160f81b031916908160001a90535061283f600a866139c4565b94506127df565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d446128766020840184613399565b6128866040850160208601613399565b604085013561289b6080870160608801613399565b6128a860808801886139d8565b6040516128b6929190613e25565b60405190819003902060a088013560c08901356128da6101008b0160e08c01613399565b6128ec6101208c016101008d01613d10565b6128fe6101408d016101208e01613d10565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b600061082761299a612a8f565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006129c98585612bb6565b91509150610df981612bfb565b8015610f005773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601612a0b57611faf8282612d40565b610f0084848484612de2565b6060600080856001600160a01b031685604051612a349190613e35565b600060405180830381855af49150503d8060008114612a6f576040519150601f19603f3d011682016040523d82523d6000602084013e612a74565b606091505b5091509150612a8586838387612e35565b9695505050505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612ae857507f000000000000000000000000000000000000000000000000000000000000000046145b15612b1257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103612bec5760208301516040840151606085015160001a612be087828585612eac565b94509450505050612bf4565b506000905060025b9250929050565b6000816004811115612c0f57612c0f613e51565b03612c175750565b6001816004811115612c2b57612c2b613e51565b03612c735760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610786565b6002816004811115612c8757612c87613e51565b03612cd45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610786565b6003816004811115612ce857612ce8613e51565b036109c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610786565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d8d576040519150601f19603f3d011682016040523d82523d6000602084013e612d92565b606091505b50509050806109935760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610786565b816001600160a01b0316836001600160a01b03160315610f0057306001600160a01b03841603612e2057611faf6001600160a01b0385168383612f66565b610f006001600160a01b038516848484612fbc565b60608315612ea2578251600003612e9b57612e4f856124b0565b612e9b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610786565b5081610b3f565b610b3f8383612ff4565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612ed95750600090506003612f5d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f2d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f5657600060019250925050612f5d565b9150600090505b94509492505050565b6109938363a9059cbb60e01b8484604051602401612f859291906134b1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261301e565b6040516001600160a01b0380851660248301528316604482015260648101829052610f009085906323b872dd60e01b90608401612f85565b8151156130045781518083602001fd5b8060405162461bcd60e51b81526004016107869190613336565b6000613073826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130f09092919063ffffffff16565b80519091501561099357808060200190518101906130919190613e67565b6109935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610786565b6060610b3f848460008585600080866001600160a01b031685876040516131179190613e35565b60006040518083038185875af1925050503d8060008114613154576040519150601f19603f3d011682016040523d82523d6000602084013e613159565b606091505b509150915061316a87838387612e35565b979650505050505050565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b03811681146131ac57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156131ef576131ef6131b1565b604052919050565b600082601f83011261320857600080fd5b81356001600160401b03811115613221576132216131b1565b613234601f8201601f19166020016131c7565b81815284602083860101111561324957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561327957600080fd5b61328283613195565b915060208301356001600160401b0381111561329d57600080fd5b6132a9858286016131f7565b9150509250929050565b6001600160e01b0319811681146109c557600080fd5b6000602082840312156132db57600080fd5b8135611227816132b3565b60005b838110156133015781810151838201526020016132e9565b50506000910152565b600081518084526133228160208601602086016132e6565b601f01601f19169290920160200192915050565b602081526000611227602083018461330a565b6001600160a01b03169052565b60006020828403121561336857600080fd5b5035919050565b6000806040838503121561338257600080fd5b61338b83613195565b946020939093013593505050565b6000602082840312156133ab57600080fd5b61122782613195565b6000806000606084860312156133c957600080fd5b6133d284613195565b92506133e060208501613195565b9150604084013590509250925092565b60008060006040848603121561340557600080fd5b83356001600160401b038082111561341c57600080fd5b90850190610160828803121561343157600080fd5b9093506020850135908082111561344757600080fd5b818601915086601f83011261345b57600080fd5b81358181111561346a57600080fd5b87602082850101111561347c57600080fd5b6020830194508093505050509250925092565b600080604083850312156134a257600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b600060208083850312156134dd57600080fd5b82356001600160401b03808211156134f457600080fd5b818501915085601f83011261350857600080fd5b81358181111561351a5761351a6131b1565b8060051b915061352b8483016131c7565b818152918301840191848101908884111561354557600080fd5b938501935b838510156135635784358252938501939085019061354a565b98975050505050505050565b80516001600160a01b031682526020808201516001600160401b0316908301526040908101511515910152565b6020808252825182820181905260009190848201906040850190845b81811015611024576135cb83855161356f565b92840192606092909201916001016135b8565b600080600080608085870312156135f457600080fd5b6135fd85613195565b93506020850135925060408501356001600160401b038082111561362057600080fd5b61362c888389016131f7565b9350606087013591508082111561364257600080fd5b5061364f878288016131f7565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b8181101561102457835183529284019291840191600101613677565b6000602082840312156136a557600080fd5b81356001600160401b038111156136bb57600080fd5b610b3f848285016131f7565b6000806000606084860312156136dc57600080fd5b6136e584613195565b95602085013595506040909401359392505050565b60008060006060848603121561370f57600080fd5b833592506133e060208501613195565b80151581146109c557600080fd5b6000806040838503121561374057600080fd5b61374983613195565b915060208301356137598161371f565b809150509250929050565b6000806020838503121561377757600080fd5b82356001600160401b038082111561378e57600080fd5b818501915085601f8301126137a257600080fd5b8135818111156137b157600080fd5b8660208260051b85010111156137c657600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561382f57603f1988860301845261381d85835161330a565b94509285019290850190600101613801565b5092979650505050505050565b6000806000806080858703121561385257600080fd5b61385b85613195565b935061386960208601613195565b92506040850135915060608501356001600160401b0381111561388b57600080fd5b61364f878288016131f7565b60608101610827828461356f565b600080604083850312156138b857600080fd5b6138c183613195565b91506138cf60208401613195565b90509250929050565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b600181811c9082168061391d57607f821691505b60208210810361393d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761082757610827613981565b634e487b7160e01b600052601260045260246000fd5b6000826139d3576139d36139ae565b500490565b6000808335601e198436030181126139ef57600080fd5b8301803591506001600160401b03821115613a0957600080fd5b602001915036819003821315612bf457600080fd5b6000808335601e19843603018112613a3557600080fd5b83016020810192503590506001600160401b03811115613a5457600080fd5b803603821315612bf457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b03811681146131ac57600080fd5b60208152613abc60208201613ab784613195565b613349565b6000613aca60208401613195565b613ad76040840182613349565b5060408301356060830152613aee60608401613195565b613afb6080840182613349565b50613b096080840184613a1e565b6101608060a0860152613b2161018086018385613a63565b925060a086013560c086015260c086013560e0860152613b4360e08701613195565b9150610100613b5481870184613349565b613b5f818801613a8c565b925050610120613b79818701846001600160801b03169052565b613b84818801613a8c565b925050610140613b9e818701846001600160801b03169052565b9590950135939094019290925250919050565b8284823760609190911b6001600160601b0319169101908152601401919050565b60008351613be48184602088016132e6565b835190830190613bf88183602088016132e6565b01949350505050565b601f821115610993576000816000526020600020601f850160051c81016020861015613c2a5750805b601f850160051c820191505b81811015613c4957828155600101613c36565b505050505050565b81516001600160401b03811115613c6a57613c6a6131b1565b613c7e81613c788454613909565b84613c01565b602080601f831160018114613cb35760008415613c9b5750858301515b600019600386901b1c1916600185901b178555613c49565b600085815260208120601f198616915b82811015613ce257888601518255948401946001909101908401613cc3565b5085821015613d005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215613d2257600080fd5b61122782613a8c565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b8082018082111561082757610827613981565b604081526000613d7a604083018561330a565b8281036020840152613d8c818561330a565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a859083018461330a565b600060208284031215613dda57600080fd5b8151611227816132b3565b600060018201613df757613df7613981565b5060010190565b8181038181111561082757610827613981565b600082613e2057613e206139ae565b500690565b8183823760009101908152919050565b60008251613e478184602087016132e6565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215613e7957600080fd5b81516112278161371f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b31d0da6a5147c3ba6c2ebb75876607fc203c1c6f9d3d157d52020cbfd6d397564736f6c63430008170033",
    "sourceMap": "905:3594:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4454:217:11;;;;;;;;;;-1:-1:-1;4454:217:11;;;;;:::i;:::-;;:::i;:::-;;2655:444;;;;;;;;;;-1:-1:-1;2655:444:11;;;;;:::i;:::-;;:::i;:::-;;;2092:14:821;;2085:22;2067:41;;2055:2;2040:18;2655:444:11;;;;;;;;6129:98:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3148:32:821;;;3130:51;;3118:2;3103:18;676:104:74;2984:203:821;7615:200:25;;;;;;;;;;-1:-1:-1;7615:200:25;;;;;:::i;:::-;;:::i;7162:392::-;;;;;;;;;;-1:-1:-1;7162:392:25;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;2282:306:25:-;;;;;;;;;;-1:-1:-1;2541:12:25;;2335:7;2525:13;:28;2282:306;;;3973:25:821;;;3961:2;3946:18;2282:306:25;3827:177:821;8454:134:25;;;;;;;;;;-1:-1:-1;8454:134:25;;;;;:::i;:::-;;:::i;2029:203:54:-;;;;;;;;;;-1:-1:-1;2029:203:54;;;;;:::i;:::-;;:::i;897:279:85:-;;;;;;;;;;-1:-1:-1;897:279:85;;;;;:::i;:::-;;:::i;:::-;;;;5401:14:821;;5394:22;5376:41;;-1:-1:-1;;;;;5453:32:821;;;5448:2;5433:18;;5426:60;5349:18;897:279:85;5208:284:821;1421:325:77;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6135:104:11:-;;;;;;;;;;-1:-1:-1;6193:7:11;6219:13;6135:104;;8654:149:25;;;;;;;;;;-1:-1:-1;8654:149:25;;;;;:::i;:::-;;:::i;5793:87:11:-;;;;;;;;;;-1:-1:-1;5793:87:11;;;;;:::i;:::-;;:::i;6571:343::-;;;;;;;;;;-1:-1:-1;6571:343:11;;;;;:::i;:::-;;:::i;1957:960:16:-;;;;;;:::i;:::-;;:::i;1986:381:77:-;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6219:32:821;;;6201:51;;6300:6;6288:19;;;6283:2;6268:18;;6261:47;6174:18;1986:381:77;6029:285:821;1514:459:44;;;;;;;;;;-1:-1:-1;1514:459:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;5944:123:25:-;;;;;;;;;;-1:-1:-1;5944:123:25;;;;;:::i;:::-;;:::i;1711:96:54:-;;;;;;;;;;-1:-1:-1;1785:8:54;:15;1711:96;;1189:228:74;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;3370:203:25:-;;;;;;;;;;-1:-1:-1;3370:203:25;;;;;:::i;:::-;;:::i;5232:287:11:-;;;;;;;;;;-1:-1:-1;5232:287:11;;;;;:::i;:::-;;:::i;954:43:54:-;;;;;;;;;;-1:-1:-1;954:43:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;5285:870:44;;;;;;;;;;-1:-1:-1;5285:870:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;871:86:70:-;;;;;;;;;;;;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;6291:102:25:-;;;;;;;;;;;;;:::i;2374:2448:44:-;;;;;;;;;;-1:-1:-1;2374:2448:44;;;;;:::i;:::-;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;7882:282:25:-;;;;;;;;;;-1:-1:-1;7882:282:25;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2477:144:77:-;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;8869:343:25;;;;;;;;;;-1:-1:-1;8869:343:25;;;;;:::i;:::-;;:::i;953:408:44:-;;;;;;;;;;-1:-1:-1;953:408:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3513:405:11:-;;;;;;;;;;-1:-1:-1;3513:405:11;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;8230:162:25:-;;;;;;;;;;-1:-1:-1;8230:162:25;;;;;:::i;:::-;;:::i;4454:217:11:-;4541:10;:8;:10::i;:::-;4533:46;;;;-1:-1:-1;;;4533:46:11;;;;;;;:::i;:::-;;;;;;;;;4589:44;4602:19;6193:7;6219:13;;6135:104;4602:19;4623:9;4589:12;:44::i;:::-;4643:21;4653:3;4658:1;4643:21;;;;;;;;;;;;:9;:21::i;:::-;4454:217;;:::o;2655:444::-;2758:4;-1:-1:-1;;;;;;;;;2793:25:11;;;;:100;;-1:-1:-1;;;;;;;;;;2868:25:11;;;2793:100;:175;;;-1:-1:-1;;;;;;;;;;2943:25:11;;;2793:175;:274;;;-1:-1:-1;;;;;;;3026:41:11;;-1:-1:-1;;;3026:41:11;2793:274;2774:293;2655:444;-1:-1:-1;;2655:444:11:o;6129:98:25:-;6183:13;6215:5;6208:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6129:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;7615:200:25:-;7683:7;7707:16;7715:7;7707;:16::i;:::-;7702:64;;7732:34;;-1:-1:-1;;;7732:34:25;;;;;;;;;;;7702:64;-1:-1:-1;7784:24:25;;;;:15;:24;;;;;;-1:-1:-1;;;;;7784:24:25;;7615:200::o;7162:392::-;7242:13;7258:24;7274:7;7258:15;:24::i;:::-;7242:40;;7302:5;-1:-1:-1;;;;;7296:11:25;:2;-1:-1:-1;;;;;7296:11:25;;7292:48;;7316:24;;-1:-1:-1;;;7316:24:25;;;;;;;;;;;7292:48;8521:10:11;-1:-1:-1;;;;;7355:21:25;;;7351:158;;7395:37;7412:5;8521:10:11;8230:162:25;:::i;7395:37::-;7390:119;;7459:35;;-1:-1:-1;;;7459:35:25;;;;;;;;;;;7390:119;7519:28;7528:2;7532:7;7541:5;7519:8;:28::i;:::-;7232:322;7162:392;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;8454:134:25:-;8553:28;8563:4;8569:2;8573:7;8553:9;:28::i;2029:203:54:-;2093:7;2126:17;1785:8;:15;;1711:96;2126:17;2116:6;:27;2112:81;;2159:23;;-1:-1:-1;;;2159:23:54;;14836:2:821;2159:23:54;;;14818:21:821;14875:2;14855:18;;;14848:30;-1:-1:-1;;;14894:18:821;;;14887:43;14947:18;;2159:23:54;14634:337:821;2112:81:54;2209:8;2218:6;2209:16;;;;;;;;:::i;:::-;;;;;;;;;2202:23;;2029:203;;;:::o;897:279:85:-;1019:12;1033:14;1068:33;1084:4;1090:10;;1068:15;:33::i;:::-;1129:8;;;;1122:16;;;;:6;:16;;;;;;1059:42;;-1:-1:-1;1122:16:85;;1121:17;:48;;;;;1142:27;1162:6;1142:19;:27::i;:::-;1111:58;;897:279;;;;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;8654:149:25:-;8757:39;8774:4;8780:2;8784:7;8757:39;;;;;;;;;;;;:16;:39::i;5793:87:11:-;5852:21;5858:8;5868:4;5852:5;:21::i;6571:343::-;6686:24;6722:13;6738:17;6746:8;6738:7;:17::i;:::-;6722:33;;6801:5;-1:-1:-1;;;;;6788:18:11;:9;-1:-1:-1;;;;;6788:18:11;;:68;;;;6822:34;6839:5;6846:9;6822:16;:34::i;:::-;6788:118;;;;6897:9;-1:-1:-1;;;;;6872:34:11;:21;6884:8;6872:11;:21::i;:::-;-1:-1:-1;;;;;6872:34:11;;6788:118;6765:142;6571:343;-1:-1:-1;;;;6571:343:11:o;1957:960:16:-;2103:14;2137:4;:13;;;2154:1;2137:18;2129:48;;;;-1:-1:-1;;;2129:48:16;;15872:2:821;2129:48:16;;;15854:21:821;15911:2;15891:18;;;15884:30;-1:-1:-1;;;15930:18:821;;;15923:47;15987:18;;2129:48:16;15670:341:821;2129:48:16;2188:21;6219:13:11;2290:33:16;2306:4;2312:10;;2290:15;:33::i;:::-;2281:42;-1:-1:-1;2334:16:16;2353:7;;;;:4;:7;:::i;:::-;2334:26;-1:-1:-1;2396:97:16;2417:25;;;;;;;;:::i;:::-;2444:13;;;;2459;;;;;;;;:::i;:::-;2474:4;:18;;;2396:20;:97::i;:::-;2582:1;2549:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2549:35:16;;;:59;;;;-1:-1:-1;2588:15:16;;;;:20;;2549:59;2545:170;;;2624:80;2650:13;2665:21;;;;;;;;:::i;:::-;2688:4;:15;;;2624:25;:80::i;:::-;2749:37;2762:13;2777:8;;;;:4;:8;:::i;:::-;2749:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2749:12:16;;-1:-1:-1;;;2749:37:16:i;:::-;2796:34;2806:8;2816:4;:13;;;2796:9;:34::i;:::-;2890:13;2880:8;-1:-1:-1;;;;;2846:64:16;2872:6;-1:-1:-1;;;;;2846:64:16;;2905:4;2846:64;;;;;;:::i;:::-;;;;;;;;2119:798;;1957:960;;;;;:::o;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;1514:459:44:-;1687:15;;1603:23;;1662:22;1687:15;-1:-1:-1;;;;;1753:36:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1716:73;;1808:9;1803:123;1824:14;1819:1;:19;1803:123;;1879:32;1899:8;1908:1;1899:11;;;;;;;;:::i;:::-;;;;;;;1879:19;:32::i;:::-;1863:10;1874:1;1863:13;;;;;;;;:::i;:::-;;;;;;;;;;:48;1840:3;;1803:123;;;-1:-1:-1;1946:10:44;1514:459;-1:-1:-1;;;1514:459:44:o;3065:256:77:-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;5944:123:25:-;6008:7;6034:21;6047:7;6034:12;:21::i;:::-;:26;;5944:123;-1:-1:-1;;5944:123:25:o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3370:203:25:-;3434:7;-1:-1:-1;;;;;3457:19:25;;3453:60;;3485:28;;-1:-1:-1;;;3485:28:25;;;;;;;;;;;3453:60;-1:-1:-1;;;;;;3538:19:25;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3538:27:25;;3370:203::o;5232:287:11:-;5362:10;:8;:10::i;:::-;5354:46;;;;-1:-1:-1;;;5354:46:11;;;;;;;:::i;:::-;5410:60;5429:19;6193:7;6219:13;;6135:104;5429:19;5450:9;5461:8;5410:18;:60::i;:::-;;;5480:32;5490:3;5495:9;5506:5;5480:9;:32::i;:::-;5232:287;;;;:::o;5285:870:44:-;5355:16;5407:19;5440:25;5479:22;5504:16;5514:5;5504:9;:16::i;:::-;5479:41;;5534:25;5576:14;-1:-1:-1;;;;;5562:29:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5562:29:44;;5534:57;;5605:31;;:::i;:::-;5655:9;5650:460;5699:14;5684:11;:29;5650:460;;5750:14;;;;:11;:14;;;;;;;;;5738:26;;;;;;;;;-1:-1:-1;;;;;5738:26:44;;;;-1:-1:-1;;;5738:26:44;;-1:-1:-1;;;;;5738:26:44;;;;;;;;-1:-1:-1;;;5738:26:44;;;;;;;;;;;;;;-1:-1:-1;5826:8:44;5782:71;5874:14;;-1:-1:-1;;;;;5874:28:44;;5870:109;;5946:14;;;-1:-1:-1;5870:109:44;6021:5;-1:-1:-1;;;;;6000:26:44;:17;-1:-1:-1;;;;;6000:26:44;;5996:100;;6076:1;6050:8;6059:13;;;;;;6050:23;;;;;;;;:::i;:::-;;;;;;:27;;;;;5996:100;5715:3;;5650:460;;;-1:-1:-1;6130:8:44;;5285:870;-1:-1:-1;;;;;;5285:870:44:o;871:86:70:-;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6291:102:25:-;6347:13;6379:7;6372:14;;;;;:::i;2374:2448:44:-;2505:16;2570:4;2561:5;:13;2557:45;;2583:19;;-1:-1:-1;;;2583:19:44;;;;;;;;;;;2557:45;2616:19;2669:13;;2917:9;2910:4;:16;2906:71;;;2953:9;2946:16;;2906:71;2990:25;3018:16;3028:5;3018:9;:16::i;:::-;2990:44;;3209:4;3201:5;:12;3197:271;;;3255:12;;;3289:31;;;3285:109;;;3364:11;3344:31;;3285:109;3215:193;3197:271;;;-1:-1:-1;3452:1:44;3197:271;3481:25;3523:17;-1:-1:-1;;;;;3509:32:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3509:32:44;;3481:60;;3559:17;3580:1;3559:22;3555:76;;3608:8;-1:-1:-1;3601:15:44;;-1:-1:-1;;;3601:15:44;3555:76;3772:31;3806:26;3826:5;3806:19;:26::i;:::-;3772:60;;3846:25;4088:9;:16;;;4083:90;;-1:-1:-1;4144:14:44;;4083:90;4203:5;4186:466;4215:4;4210:1;:9;;:45;;;;;4238:17;4223:11;:32;;4210:45;4186:466;;;4292:14;;;;:11;:14;;;;;;;;;4280:26;;;;;;;;;-1:-1:-1;;;;;4280:26:44;;;;-1:-1:-1;;;4280:26:44;;-1:-1:-1;;;;;4280:26:44;;;;;;;;-1:-1:-1;;;4280:26:44;;;;;;;;;;;;;;-1:-1:-1;4368:8:44;4324:71;4416:14;;-1:-1:-1;;;;;4416:28:44;;4412:109;;4488:14;;;-1:-1:-1;4412:109:44;4563:5;-1:-1:-1;;;;;4542:26:44;:17;-1:-1:-1;;;;;4542:26:44;;4538:100;;4618:1;4592:8;4601:13;;;;;;4592:23;;;;;;;;:::i;:::-;;;;;;:27;;;;;4538:100;4257:3;;4186:466;;;-1:-1:-1;;;4734:29:44;;;-1:-1:-1;4741:8:44;;-1:-1:-1;;2374:2448:44;;;;;;:::o;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;7882:282:25:-;8521:10:11;-1:-1:-1;;;;;7980:24:25;;;7976:54;;8013:17;;-1:-1:-1;;;8013:17:25;;;;;;;;;;;7976:54;8521:10:11;8041:32:25;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8041:42:25;;;;;;;;;;;;:53;;-1:-1:-1;;8041:53:25;;;;;;;;;;8109:48;;2067:41:821;;;8041:42:25;;8521:10:11;8109:48:25;;2040:18:821;8109:48:25;;;;;;;7882:282;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;8521:10:11;834:14:65;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;8869:343:25:-;8992:28;9002:4;9008:2;9012:7;8992:9;:28::i;:::-;9034:15;:2;-1:-1:-1;;;;;9034:13:25;;:15::i;:::-;9030:176;;;9068:56;9099:4;9105:2;9109:7;9118:5;9068:30;:56::i;:::-;9063:143;;9151:40;;-1:-1:-1;;;9151:40:25;;;;;;;;;;;953:408:44;1029:21;;:::i;:::-;1062:31;;:::i;:::-;1147:13;;1136:7;:24;1103:100;;1183:9;953:408;-1:-1:-1;;953:408:44:o;1103:100::-;-1:-1:-1;1224:20:44;;;;:11;:20;;;;;;;;;1212:32;;;;;;;;;-1:-1:-1;;;;;1212:32:44;;;;-1:-1:-1;;;1212:32:44;;-1:-1:-1;;;;;1212:32:44;;;;;;;;-1:-1:-1;;;1212:32:44;;;;;;;;;;;;;;;;1254:63;;1297:9;953:408;-1:-1:-1;;953:408:44:o;1254:63::-;1333:21;1346:7;1333:12;:21::i;3513:405:11:-;3638:29;3670:17;;;:7;:17;;;;;3638:49;;3613:13;;3638:29;3670:17;3638:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3733:1;3707:15;3701:29;:33;3697:86;;;3757:15;3513:405;-1:-1:-1;;3513:405:11:o;3697:86::-;3793:22;3818:21;3830:8;3818:11;:21::i;:::-;3793:46;;3880:8;3890:19;:8;:17;:19::i;:::-;3863:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3849:62;;;;3513:405;;;:::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8230:162:25:-;-1:-1:-1;;;;;8350:25:25;;;8327:4;8350:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8230:162::o;7835:102:11:-;7886:4;7923:7;:5;:7::i;:::-;-1:-1:-1;;;;;7909:21:11;:10;-1:-1:-1;;;;;7909:21:11;;7902:28;;7835:102;:::o;7327:202::-;7433:17;;;;:7;:17;;;;;7427:31;;;;;:::i;:::-;:36;;-1:-1:-1;7419:64:11;;;;-1:-1:-1;;;7419:64:11;;20741:2:821;7419:64:11;;;20723:21:821;20780:2;20760:18;;;20753:30;-1:-1:-1;;;20799:18:821;;;20792:45;20854:18;;7419:64:11;20539:339:821;7419:64:11;7493:17;;;;:7;:17;;;;;:29;7513:9;7493:17;:29;:::i;10171:1678:25:-;10259:20;10282:13;-1:-1:-1;;;;;10309:16:25;;10305:48;;10334:19;;-1:-1:-1;;;10334:19:25;;;;;;;;;;;10305:48;10367:8;10379:1;10367:13;10363:44;;10389:18;;-1:-1:-1;;;10389:18:25;;;;;;;;;;;10363:44;-1:-1:-1;;;;;10750:16:25;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;10808:49:25;;-1:-1:-1;;;;;10750:44:25;;;;;;;10808:49;;;-1:-1:-1;;;;;;;;;10750:44:25;;;;;;10808:49;;;;;;;;;;;;;;;;10872:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;10921:66:25;;;-1:-1:-1;;;10971:15:25;10921:66;;;;;;;;;;;;;10872:25;;11065:23;;;;11107:15;;:13;:15::i;:::-;11103:618;;;11142:308;11172:38;;11197:12;;-1:-1:-1;;;;;11172:38:25;;;11189:1;;-1:-1:-1;;;;;;;;;;;11172:38:25;11189:1;;11172:38;11237:69;11276:1;11280:2;11284:14;;;;;;11300:5;11237:30;:69::i;:::-;11232:172;;11341:40;;-1:-1:-1;;;11341:40:25;;;;;;;;;;;11232:172;11445:3;11430:12;:18;11142:308;;11529:12;11512:13;;:29;11508:43;;11543:8;;;11508:43;11103:618;;;11590:117;11620:40;;11645:14;;;;;-1:-1:-1;;;;;11620:40:25;;;11637:1;;-1:-1:-1;;;;;;;;;;;11620:40:25;11637:1;;11620:40;11702:3;11687:12;:18;11590:117;;11103:618;-1:-1:-1;11734:13:25;:28;;;11782:60;;11815:2;11819:12;11833:8;11782:60;:::i;9458:172::-;9515:4;9578:13;;9568:7;:23;9538:85;;;;-1:-1:-1;;9596:20:25;;;;:11;:20;;;;;:27;-1:-1:-1;;;9596:27:25;;;;9595:28;;9458:172::o;18379:159::-;18459:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18459:29:25;-1:-1:-1;;;;;18459:29:25;;;;;;;;;18503:28;;18459:24;;18503:28;;;;;;;18379:159;;;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;13484:2052:25:-;13564:35;13602:21;13615:7;13602:12;:21::i;:::-;13564:59;;13660:4;-1:-1:-1;;;;;13638:26:25;:13;:18;;;-1:-1:-1;;;;;13638:26:25;;13634:67;;13673:28;;-1:-1:-1;;;13673:28:25;;;;;;;;;;;13634:67;13712:22;8521:10:11;-1:-1:-1;;;;;13738:20:25;;;;:72;;-1:-1:-1;13774:36:25;13791:4;8521:10:11;8230:162:25;:::i;13774:36::-;13738:124;;;-1:-1:-1;8521:10:11;13826:20:25;13838:7;13826:11;:20::i;:::-;-1:-1:-1;;;;;13826:36:25;;13738:124;13712:151;;13879:17;13874:66;;13905:35;;-1:-1:-1;;;13905:35:25;;;;;;;;;;;13874:66;-1:-1:-1;;;;;13954:16:25;;13950:52;;13979:23;;-1:-1:-1;;;13979:23:25;;;;;;;;;;;13950:52;14118:35;14135:1;14139:7;14148:4;14118:8;:35::i;:::-;-1:-1:-1;;;;;14443:18:25;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;14443:31:25;;;-1:-1:-1;;;;;14443:31:25;;;-1:-1:-1;;14443:31:25;;;;;;;14488:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14488:29:25;;;;;;;;;;;14566:20;;;:11;:20;;;;;;14600:18;;-1:-1:-1;;;;;;14632:49:25;;;;-1:-1:-1;;;14665:15:25;14632:49;;;;;;;;;;14951:11;;15010:24;;;;;15052:13;;14566:20;;15010:24;;15052:13;15048:377;;15259:13;;15244:11;:28;15240:171;;15296:20;;15364:28;;;;-1:-1:-1;;;;;15338:54:25;-1:-1:-1;;;15338:54:25;-1:-1:-1;;;;;;15338:54:25;;;-1:-1:-1;;;;;15296:20:25;;15338:54;;;;15240:171;14419:1016;;;15469:7;15465:2;-1:-1:-1;;;;;15450:27:25;15459:4;-1:-1:-1;;;;;15450:27:25;-1:-1:-1;;;;;;;;;;;15450:27:25;;;;;;;;;13554:1982;;13484:2052;;;:::o;2059:204:85:-;2161:7;2187:69;2245:10;;2187:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2187:49:85;;-1:-1:-1;2214:20:85;;-1:-1:-1;2229:4:85;;-1:-1:-1;2214:14:85;:20::i;:::-;2204:31;;;;;;2187:16;:49::i;:::-;:57;;:69::i;3191:134:16:-;3277:4;3311:7;:5;:7::i;:::-;-1:-1:-1;;;;;3300:18:16;:7;-1:-1:-1;;;;;3300:18:16;;3293:25;;3191:134;;;:::o;15913:2355:25:-;15992:35;16030:21;16043:7;16030:12;:21::i;:::-;16077:18;;15992:59;;-1:-1:-1;16106:284:25;;;;16139:22;8521:10:11;-1:-1:-1;;;;;16165:20:25;;;;:76;;-1:-1:-1;16205:36:25;16222:4;8521:10:11;8230:162:25;:::i;16205:36::-;16165:132;;;-1:-1:-1;8521:10:11;16261:20:25;16273:7;16261:11;:20::i;:::-;-1:-1:-1;;;;;16261:36:25;;16165:132;16139:159;;16318:17;16313:66;;16344:35;;-1:-1:-1;;;16344:35:25;;;;;;;;;;;16313:66;16125:265;16106:284;16513:35;16530:1;16534:7;16543:4;16513:8;:35::i;:::-;-1:-1:-1;;;;;16872:18:25;;;16838:31;16872:18;;;:12;:18;;;;;;;;16904:24;;-1:-1:-1;;;;;;;;;;16904:24:25;;;;;;;;;-1:-1:-1;;;;;;16904:24:25;;;;16942:29;;;;;16927:1;16942:29;;;;;;;;-1:-1:-1;;;;;;16942:29:25;;;;;;;;;;17101:20;;;:11;:20;;;;;;17135;;-1:-1:-1;;;;17202:15:25;17169:49;;;-1:-1:-1;;;17169:49:25;-1:-1:-1;;;;;;17169:49:25;;;;;;;;;;17232:22;-1:-1:-1;;;17232:22:25;;;17520:11;;;17579:24;;;;;17621:13;;16872:18;;17579:24;;17621:13;17617:377;;17828:13;;17813:11;:28;17809:171;;17865:20;;17933:28;;;;-1:-1:-1;;;;;17907:54:25;-1:-1:-1;;;17907:54:25;-1:-1:-1;;;;;;17907:54:25;;;-1:-1:-1;;;;;17865:20:25;;17907:54;;;;17809:171;-1:-1:-1;;18019:35:25;;18046:7;;-1:-1:-1;18042:1:25;;-1:-1:-1;;;;;;18019:35:25;;;-1:-1:-1;;;;;;;;;;;18019:35:25;18042:1;;18019:35;-1:-1:-1;;18237:12:25;:14;;;;;;-1:-1:-1;;15913:2355:25:o;1423:562:85:-;1520:14;1546:12;1588:24;1595:4;1601:10;;1588:6;:24::i;:::-;1568:44;-1:-1:-1;1568:44:85;-1:-1:-1;1568:44:85;1623:60;;1651:21;;-1:-1:-1;;;1651:21:85;;23280:2:821;1651:21:85;;;23262::821;23319:2;23299:18;;;23292:30;-1:-1:-1;;;23338:18:821;;;23331:41;23389:18;;1651:21:85;23078:335:821;1623:60:85;1727:15;1697:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1697:45:85;;:92;;;-1:-1:-1;1764:25:85;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1746:43:85;:15;:43;1697:92;1693:144;;;1805:21;;-1:-1:-1;;;1805:21:85;;23811:2:821;1805:21:85;;;23793::821;23850:2;23830:18;;;23823:30;-1:-1:-1;;;23869:18:821;;;23862:41;23920:18;;1805:21:85;23609:335:821;1693:144:85;1873:1;1854:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1854:21:85;;1846:53;;;;-1:-1:-1;;;1846:53:85;;24151:2:821;1846:53:85;;;24133:21:821;24190:2;24170:18;;;24163:30;-1:-1:-1;;;24209:18:821;;;24202:49;24268:18;;1846:53:85;23949:343:821;1846:53:85;1933:1;1917:4;:13;;;:17;1909:35;;;;-1:-1:-1;;;1909:35:85;;24499:2:821;1909:35:85;;;24481:21:821;24538:1;24518:18;;;24511:29;-1:-1:-1;;;24556:18:821;;;24549:35;24601:18;;1909:35:85;24297:328:821;1909:35:85;-1:-1:-1;1962:8:85;;;;;1955:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;1955:23:85;1974:4;1955:23;;;-1:-1:-1;1423:562:85;;;-1:-1:-1;1423:562:85:o;3646:851:16:-;3845:14;3863:1;3845:19;3841:103;;3888:9;:14;3880:33;;;;-1:-1:-1;;;3880:33:16;;24832:2:821;3880:33:16;;;24814:21:821;24871:1;24851:18;;;24844:29;-1:-1:-1;;;24889:18:821;;;24882:36;24935:18;;3880:33:16;24630:329:821;3880:33:16;3927:7;;3841:103;3954:18;3975:33;3994:14;3975:16;:33;:::i;:::-;3954:54;-1:-1:-1;4019:18:16;-1:-1:-1;;;;;;;4051:45:16;;;4047:176;;-1:-1:-1;4128:9:16;:23;;4047:176;;;-1:-1:-1;4198:9:16;:14;4047:176;4240:13;4232:43;;;;-1:-1:-1;;;4232:43:16;;25166:2:821;4232:43:16;;;25148:21:821;25205:2;25185:18;;;25178:30;-1:-1:-1;;;25224:18:821;;;25217:47;25281:18;;4232:43:16;24964:341:821;4232:43:16;4286:21;-1:-1:-1;;;;;4310:35:16;;;:84;;4373:21;4310:84;;;4348:22;:20;:22::i;:::-;4286:108;;4404:86;4441:9;4452:10;4464:13;4479:10;4404:36;:86::i;:::-;3831:666;;;3646:851;;;;:::o;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;3973:25:821;;;4836:49:77;;4804:29;;4901:43;;3946:18:821;4901:43:77;;;;;;;4619:332;;;:::o;9709:102:25:-;9777:27;9787:2;9791:8;9777:27;;;;;;;;;;;;:9;:27::i;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;3973:25:821;;;3689:46:77;;3961:2:821;3946:18;3689:46:77;;;;;;;3408:334;;:::o;4713:1174:25:-;4775:21;;:::i;:::-;4823:7;4921:13;;4914:4;:20;4910:913;;;4958:31;4992:17;;;:11;:17;;;;;;;;;4958:51;;;;;;;;;-1:-1:-1;;;;;4958:51:25;;;;-1:-1:-1;;;4958:51:25;;-1:-1:-1;;;;;4958:51:25;;;;;;;;-1:-1:-1;;;4958:51:25;;;;;;;;;;;;;;5031:774;;5084:14;;-1:-1:-1;;;;;5084:28:25;;5080:107;;5151:9;4713:1174;-1:-1:-1;;;4713:1174:25:o;5080:107::-;-1:-1:-1;;;5547:6:25;5595:17;;;;:11;:17;;;;;;;;;5583:29;;;;;;;;;-1:-1:-1;;;;;5583:29:25;;;;;-1:-1:-1;;;5583:29:25;;-1:-1:-1;;;;;5583:29:25;;;;;;;;-1:-1:-1;;;5583:29:25;;;;;;;;;;;;;5646:28;5642:115;;5717:9;4713:1174;-1:-1:-1;;;4713:1174:25:o;5642:115::-;5504:279;;;4936:887;4910:913;5849:31;;-1:-1:-1;;;5849:31:25;;;;;;;;;;;1499:265:74;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;25856:2:821;1626:27:74;;;25838:21:821;25895:2;25875:18;;;25868:30;-1:-1:-1;;;25914:18:821;;;25907:47;25971:18;;1626:27:74;25654:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;4591:362:54:-;4741:25;;4805:24;4816:13;4805:8;:24;:::i;:::-;4877:8;:22;;;;;;;;;;;;;-1:-1:-1;4910:16:54;;;:7;4877:22;4910:16;;;;4795:34;;-1:-1:-1;4795:34:54;;-1:-1:-1;4910:36:54;4929:17;4910:16;:36;:::i;:::-;;4591:362;;;;;;:::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;1405:320::-;-1:-1:-1;;;;;1695:19:289;;:23;;;1405:320::o;19019:650:25:-;19197:72;;-1:-1:-1;;;19197:72:25;;19177:4;;-1:-1:-1;;;;;19197:36:25;;;;;:72;;8521:10:11;;19248:4:25;;19254:7;;19263:5;;19197:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19197:72:25;;;;;;;;-1:-1:-1;;19197:72:25;;;;;;;;;;;;:::i;:::-;;;19193:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19428:6;:13;19445:1;19428:18;19424:229;;19473:40;;-1:-1:-1;;;19473:40:25;;;;;;;;;;;19424:229;19613:6;19607:13;19598:6;19594:2;19590:15;19583:38;19193:470;-1:-1:-1;;;;;;19315:55:25;-1:-1:-1;;;19315:55:25;;-1:-1:-1;19019:650:25;;;;;;:::o;2905:390:54:-;2967:13;2992:25;3020:17;1785:8;:15;;1711:96;3020:17;2992:45;;3047:24;3074:8;3047:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:9;3093:161;3117:17;3113:1;:21;3093:161;;;3173:7;3181:1;3173:10;;;;;;;;:::i;:::-;;;;;;;3162:8;:21;3158:86;;;3210:7;:19;3218:7;3226:1;3218:10;;;;;;;;:::i;:::-;;;;;;;3210:19;;;;;;;;;;;3203:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:390;;;:::o;3158:86::-;3136:6;3141:1;3136:6;;:::i;:::-;;;3093:161;;;-1:-1:-1;3263:25:54;;-1:-1:-1;;;3263:25:54;;27468:2:821;3263:25:54;;;27450:21:821;27507:2;27487:18;;;27480:30;-1:-1:-1;;;27526:18:821;;;27519:45;27581:18;;3263:25:54;27266:339:821;303:703:298;359:13;576:5;585:1;576:10;572:51;;-1:-1:-1;;602:10:298;;;;;;;;;;;;-1:-1:-1;;;602:10:298;;;;;303:703::o;572:51::-;647:5;632:12;686:75;693:9;;686:75;;718:8;;;;:::i;:::-;;-1:-1:-1;740:10:298;;-1:-1:-1;748:2:298;740:10;;:::i;:::-;;;686:75;;;770:19;802:6;-1:-1:-1;;;;;792:17:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;792:17:298;;770:39;;819:150;826:10;;819:150;;852:11;862:1;852:11;;:::i;:::-;;-1:-1:-1;920:10:298;928:2;920:5;:10;:::i;:::-;907:24;;:2;:24;:::i;:::-;894:39;;877:6;884;877:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;877:56:298;;;;;;;;-1:-1:-1;947:11:298;956:2;947:11;;:::i;:::-;;;819:150;;2335:570:85;2409:12;354:270;2506:7;;;;:4;:7;:::i;:::-;2531:21;;;;;;;;:::i;:::-;2570:15;;;;2603:25;;;;;;;;:::i;:::-;2662:8;;;;:4;:8;:::i;:::-;2646:26;;;;;;;:::i;:::-;;;;;;;;;2690:13;;;;2721:18;;;;2757:13;;;;;;;;:::i;:::-;2788:27;;;;;;;;:::i;:::-;2833:25;;;;;;;;:::i;:::-;2452:446;;;;;;28733:25:821;;;;-1:-1:-1;;;;;28832:15:821;;;28812:18;;;28805:43;28884:15;;;28864:18;;;28857:43;28916:18;;;28909:34;;;;28980:15;;;28959:19;;;28952:44;29012:19;;;29005:35;;;;29056:19;;;29049:35;29100:19;;;29093:35;29165:15;;;29144:19;;;29137:44;-1:-1:-1;;;;;29256:15:821;;;2876:8:85;29235:19:821;;;29228:44;;;;29309:16;;29288:19;;;29281:45;2876:8:85;;;29342:19:821;;;29335:36;28705:19;;2452:446:85;;;;;;;;;;;;2433:465;;2335:570;;;:::o;4339:165:240:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8549:4:239;8543:11;-1:-1:-1;;;8567:23:239;;8619:4;8610:14;;8603:39;;;;8671:4;8662:14;;8655:34;8725:4;8710:20;;;8349:397;3674:227;3752:7;3772:17;3791:18;3813:27;3824:4;3830:9;3813:10;:27::i;:::-;3771:69;;;;3850:18;3862:5;3850:11;:18::i;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;702:173::-;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;3143:308:240:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:240;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:240;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:240;;;3392:10;3633:73;;;;32106:25:821;;;;3404:12:240;32147:18:821;;;32140:34;3418:15:240;32190:18:821;;;32183:34;3677:13:240;32233:18:821;;;32226:34;3700:4:240;32276:19:821;;;;32269:61;;;;3633:73:240;;;;;;;;;;32078:19:821;;;;3633:73:240;;;3623:84;;;;;;3143:308::o;2158:730:239:-;2239:7;2248:12;2276:9;:16;2296:2;2276:22;2272:610;;2612:4;2597:20;;2591:27;2661:4;2646:20;;2640:27;2718:4;2703:20;;2697:27;2314:9;2689:36;2759:25;2770:4;2689:36;2591:27;2640;2759:10;:25::i;:::-;2752:32;;;;;;;;;2272:610;-1:-1:-1;2831:1:239;;-1:-1:-1;2835:35:239;2272:610;2158:730;;;;;:::o;583:511::-;660:20;651:5;:29;;;;;;;;:::i;:::-;;647:441;;583:511;:::o;647:441::-;756:29;747:5;:38;;;;;;;;:::i;:::-;;743:345;;801:34;;-1:-1:-1;;;801:34:239;;30008:2:821;801:34:239;;;29990:21:821;30047:2;30027:18;;;30020:30;-1:-1:-1;;;30066:18:821;;;30059:54;30130:18;;801:34:239;29806:348:821;743:345:239;865:35;856:5;:44;;;;;;;;:::i;:::-;;852:236;;916:41;;-1:-1:-1;;;916:41:239;;30361:2:821;916:41:239;;;30343:21:821;30400:2;30380:18;;;30373:30;30439:33;30419:18;;;30412:61;30490:18;;916:41:239;30159:355:821;852:236:239;987:30;978:5;:39;;;;;;;;:::i;:::-;;974:114;;1033:44;;-1:-1:-1;;;1033:44:239;;30721:2:821;1033:44:239;;;30703:21:821;30760:2;30740:18;;;30733:30;30799:34;30779:18;;;30772:62;-1:-1:-1;;;30850:18:821;;;30843:32;30892:19;;1033:44:239;30519:398:821;2482:292:292;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;31334:2:821;2719:48:292;;;31316:21:821;31373:2;31353:18;;;31346:30;-1:-1:-1;;;31392:18:821;;;31385:58;31460:18;;2719:48:292;31132:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;31691:2:821;8110:60:289;;;31673:21:821;31730:2;31710:18;;;31703:30;31769:31;31749:18;;;31742:59;31818:18;;8110:60:289;31489:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;5022:1456:239:-;5110:7;;-1:-1:-1;;;;;6021:79:239;;6017:161;;;-1:-1:-1;6132:1:239;;-1:-1:-1;6136:30:239;6116:51;;6017:161;6289:24;;;6272:14;6289:24;;;;;;;;;32568:25:821;;;32641:4;32629:17;;32609:18;;;32602:45;;;;32663:18;;;32656:34;;;32706:18;;;32699:34;;;6289:24:239;;32540:19:821;;6289:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6289:24:239;;-1:-1:-1;;6289:24:239;;;-1:-1:-1;;;;;;;6327:20:239;;6323:101;;6379:1;6383:29;6363:50;;;;;;;6323:101;6442:6;-1:-1:-1;6450:20:239;;-1:-1:-1;5022:1456:239;;;;;;;;:::o;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;33002:15:821;;;1067:68:228;;;32984:34:821;33054:15;;33034:18;;;33027:43;33086:18;;;33079:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;32919:18:821;;1067:68:228;32744:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;33576:2:821;3711:85:228;;;33558:21:821;33615:2;33595:18;;;33588:30;33654:34;33634:18;;;33627:62;-1:-1:-1;;;33705:18:821;;;33698:40;33755:19;;3711:85:228;33374:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:821:-;82:20;;-1:-1:-1;;;;;131:31:821;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:275;395:2;389:9;460:2;441:13;;-1:-1:-1;;437:27:821;425:40;;-1:-1:-1;;;;;480:34:821;;516:22;;;477:62;474:88;;;542:18;;:::i;:::-;578:2;571:22;324:275;;-1:-1:-1;324:275:821:o;604:531::-;647:5;700:3;693:4;685:6;681:17;677:27;667:55;;718:1;715;708:12;667:55;754:6;741:20;-1:-1:-1;;;;;776:2:821;773:26;770:52;;;802:18;;:::i;:::-;846:55;889:2;870:13;;-1:-1:-1;;866:27:821;895:4;862:38;846:55;:::i;:::-;926:2;917:7;910:19;972:3;965:4;960:2;952:6;948:15;944:26;941:35;938:55;;;989:1;986;979:12;938:55;1054:2;1047:4;1039:6;1035:17;1028:4;1019:7;1015:18;1002:55;1102:1;1077:16;;;1095:4;1073:27;1066:38;;;;1081:7;604:531;-1:-1:-1;;;604:531:821:o;1140:396::-;1218:6;1226;1279:2;1267:9;1258:7;1254:23;1250:32;1247:52;;;1295:1;1292;1285:12;1247:52;1318:29;1337:9;1318:29;:::i;:::-;1308:39;;1398:2;1387:9;1383:18;1370:32;-1:-1:-1;;;;;1417:6:821;1414:30;1411:50;;;1457:1;1454;1447:12;1411:50;1480;1522:7;1513:6;1502:9;1498:22;1480:50;:::i;:::-;1470:60;;;1140:396;;;;;:::o;1541:131::-;-1:-1:-1;;;;;;1615:32:821;;1605:43;;1595:71;;1662:1;1659;1652:12;1677:245;1735:6;1788:2;1776:9;1767:7;1763:23;1759:32;1756:52;;;1804:1;1801;1794:12;1756:52;1843:9;1830:23;1862:30;1886:5;1862:30;:::i;2119:250::-;2204:1;2214:113;2228:6;2225:1;2222:13;2214:113;;;2304:11;;;2298:18;2285:11;;;2278:39;2250:2;2243:10;2214:113;;;-1:-1:-1;;2361:1:821;2343:16;;2336:27;2119:250::o;2374:271::-;2416:3;2454:5;2448:12;2481:6;2476:3;2469:19;2497:76;2566:6;2559:4;2554:3;2550:14;2543:4;2536:5;2532:16;2497:76;:::i;:::-;2627:2;2606:15;-1:-1:-1;;2602:29:821;2593:39;;;;2634:4;2589:50;;2374:271;-1:-1:-1;;2374:271:821:o;2650:220::-;2799:2;2788:9;2781:21;2762:4;2819:45;2860:2;2849:9;2845:18;2837:6;2819:45;:::i;2875:104::-;-1:-1:-1;;;;;2941:31:821;2929:44;;2875:104::o;3192:180::-;3251:6;3304:2;3292:9;3283:7;3279:23;3275:32;3272:52;;;3320:1;3317;3310:12;3272:52;-1:-1:-1;3343:23:821;;3192:180;-1:-1:-1;3192:180:821:o;3377:254::-;3445:6;3453;3506:2;3494:9;3485:7;3481:23;3477:32;3474:52;;;3522:1;3519;3512:12;3474:52;3545:29;3564:9;3545:29;:::i;:::-;3535:39;3621:2;3606:18;;;;3593:32;;-1:-1:-1;;;3377:254:821:o;3636:186::-;3695:6;3748:2;3736:9;3727:7;3723:23;3719:32;3716:52;;;3764:1;3761;3754:12;3716:52;3787:29;3806:9;3787:29;:::i;4009:328::-;4086:6;4094;4102;4155:2;4143:9;4134:7;4130:23;4126:32;4123:52;;;4171:1;4168;4161:12;4123:52;4194:29;4213:9;4194:29;:::i;:::-;4184:39;;4242:38;4276:2;4265:9;4261:18;4242:38;:::i;:::-;4232:48;;4327:2;4316:9;4312:18;4299:32;4289:42;;4009:328;;;;;:::o;4342:861::-;4453:6;4461;4469;4522:2;4510:9;4501:7;4497:23;4493:32;4490:52;;;4538:1;4535;4528:12;4490:52;4578:9;4565:23;-1:-1:-1;;;;;4648:2:821;4640:6;4637:14;4634:34;;;4664:1;4661;4654:12;4634:34;4687:22;;;;4743:3;4725:16;;;4721:26;4718:46;;;4760:1;4757;4750:12;4718:46;4783:2;;-1:-1:-1;4838:2:821;4823:18;;4810:32;;4854:16;;;4851:36;;;4883:1;4880;4873:12;4851:36;4921:8;4910:9;4906:24;4896:34;;4968:7;4961:4;4957:2;4953:13;4949:27;4939:55;;4990:1;4987;4980:12;4939:55;5030:2;5017:16;5056:2;5048:6;5045:14;5042:34;;;5072:1;5069;5062:12;5042:34;5117:7;5112:2;5103:6;5099:2;5095:15;5091:24;5088:37;5085:57;;;5138:1;5135;5128:12;5085:57;5169:2;5165;5161:11;5151:21;;5191:6;5181:16;;;;;4342:861;;;;;:::o;5497:248::-;5565:6;5573;5626:2;5614:9;5605:7;5601:23;5597:32;5594:52;;;5642:1;5639;5632:12;5594:52;-1:-1:-1;;5665:23:821;;;5735:2;5720:18;;;5707:32;;-1:-1:-1;5497:248:821:o;5750:274::-;-1:-1:-1;;;;;5942:32:821;;;;5924:51;;6006:2;5991:18;;5984:34;5912:2;5897:18;;5750:274::o;6319:946::-;6403:6;6434:2;6477;6465:9;6456:7;6452:23;6448:32;6445:52;;;6493:1;6490;6483:12;6445:52;6533:9;6520:23;-1:-1:-1;;;;;6603:2:821;6595:6;6592:14;6589:34;;;6619:1;6616;6609:12;6589:34;6657:6;6646:9;6642:22;6632:32;;6702:7;6695:4;6691:2;6687:13;6683:27;6673:55;;6724:1;6721;6714:12;6673:55;6760:2;6747:16;6782:2;6778;6775:10;6772:36;;;6788:18;;:::i;:::-;6834:2;6831:1;6827:10;6817:20;;6857:28;6881:2;6877;6873:11;6857:28;:::i;:::-;6919:15;;;6989:11;;;6985:20;;;6950:12;;;;7017:19;;;7014:39;;;7049:1;7046;7039:12;7014:39;7073:11;;;;7093:142;7109:6;7104:3;7101:15;7093:142;;;7175:17;;7163:30;;7126:12;;;;7213;;;;7093:142;;;7254:5;6319:946;-1:-1:-1;;;;;;;;6319:946:821:o;7270:278::-;7354:12;;-1:-1:-1;;;;;7350:38:821;7338:51;;7442:4;7431:16;;;7425:23;-1:-1:-1;;;;;7421:48:821;7405:14;;;7398:72;7533:4;7522:16;;;7516:23;7509:31;7502:39;7486:14;;7479:63;7270:278::o;7553:726::-;7790:2;7842:21;;;7912:13;;7815:18;;;7934:22;;;7761:4;;7790:2;8013:15;;;;7987:2;7972:18;;;7761:4;8056:197;8070:6;8067:1;8064:13;8056:197;;;8119:52;8167:3;8158:6;8152:13;8119:52;:::i;:::-;8228:15;;;;8200:4;8191:14;;;;;8092:1;8085:9;8056:197;;8284:685;8389:6;8397;8405;8413;8466:3;8454:9;8445:7;8441:23;8437:33;8434:53;;;8483:1;8480;8473:12;8434:53;8506:29;8525:9;8506:29;:::i;:::-;8496:39;;8582:2;8571:9;8567:18;8554:32;8544:42;;8637:2;8626:9;8622:18;8609:32;-1:-1:-1;;;;;8701:2:821;8693:6;8690:14;8687:34;;;8717:1;8714;8707:12;8687:34;8740:50;8782:7;8773:6;8762:9;8758:22;8740:50;:::i;:::-;8730:60;;8843:2;8832:9;8828:18;8815:32;8799:48;;8872:2;8862:8;8859:16;8856:36;;;8888:1;8885;8878:12;8856:36;;8911:52;8955:7;8944:8;8933:9;8929:24;8911:52;:::i;:::-;8901:62;;;8284:685;;;;;;;:::o;8974:632::-;9145:2;9197:21;;;9267:13;;9170:18;;;9289:22;;;9116:4;;9145:2;9368:15;;;;9342:2;9327:18;;;9116:4;9411:169;9425:6;9422:1;9419:13;9411:169;;;9486:13;;9474:26;;9555:15;;;;9520:12;;;;9447:1;9440:9;9411:169;;9611:322;9680:6;9733:2;9721:9;9712:7;9708:23;9704:32;9701:52;;;9749:1;9746;9739:12;9701:52;9789:9;9776:23;-1:-1:-1;;;;;9814:6:821;9811:30;9808:50;;;9854:1;9851;9844:12;9808:50;9877;9919:7;9910:6;9899:9;9895:22;9877:50;:::i;9938:322::-;10015:6;10023;10031;10084:2;10072:9;10063:7;10059:23;10055:32;10052:52;;;10100:1;10097;10090:12;10052:52;10123:29;10142:9;10123:29;:::i;:::-;10113:39;10199:2;10184:18;;10171:32;;-1:-1:-1;10250:2:821;10235:18;;;10222:32;;9938:322;-1:-1:-1;;;9938:322:821:o;10265:::-;10342:6;10350;10358;10411:2;10399:9;10390:7;10386:23;10382:32;10379:52;;;10427:1;10424;10417:12;10379:52;10463:9;10450:23;10440:33;;10492:38;10526:2;10515:9;10511:18;10492:38;:::i;10592:118::-;10678:5;10671:13;10664:21;10657:5;10654:32;10644:60;;10700:1;10697;10690:12;10715:315;10780:6;10788;10841:2;10829:9;10820:7;10816:23;10812:32;10809:52;;;10857:1;10854;10847:12;10809:52;10880:29;10899:9;10880:29;:::i;:::-;10870:39;;10959:2;10948:9;10944:18;10931:32;10972:28;10994:5;10972:28;:::i;:::-;11019:5;11009:15;;;10715:315;;;;;:::o;11035:626::-;11132:6;11140;11193:2;11181:9;11172:7;11168:23;11164:32;11161:52;;;11209:1;11206;11199:12;11161:52;11249:9;11236:23;-1:-1:-1;;;;;11319:2:821;11311:6;11308:14;11305:34;;;11335:1;11332;11325:12;11305:34;11373:6;11362:9;11358:22;11348:32;;11418:7;11411:4;11407:2;11403:13;11399:27;11389:55;;11440:1;11437;11430:12;11389:55;11480:2;11467:16;11506:2;11498:6;11495:14;11492:34;;;11522:1;11519;11512:12;11492:34;11575:7;11570:2;11560:6;11557:1;11553:14;11549:2;11545:23;11541:32;11538:45;11535:65;;;11596:1;11593;11586:12;11535:65;11627:2;11619:11;;;;;11649:6;;-1:-1:-1;11035:626:821;;-1:-1:-1;;;;11035:626:821:o;11666:801::-;11826:4;11855:2;11895;11884:9;11880:18;11925:2;11914:9;11907:21;11948:6;11983;11977:13;12014:6;12006;11999:22;12052:2;12041:9;12037:18;12030:25;;12114:2;12104:6;12101:1;12097:14;12086:9;12082:30;12078:39;12064:53;;12152:2;12144:6;12140:15;12173:1;12183:255;12197:6;12194:1;12191:13;12183:255;;;12290:2;12286:7;12274:9;12266:6;12262:22;12258:36;12253:3;12246:49;12318:40;12351:6;12342;12336:13;12318:40;:::i;:::-;12308:50;-1:-1:-1;12416:12:821;;;;12381:15;;;;12219:1;12212:9;12183:255;;;-1:-1:-1;12455:6:821;;11666:801;-1:-1:-1;;;;;;;11666:801:821:o;12472:538::-;12567:6;12575;12583;12591;12644:3;12632:9;12623:7;12619:23;12615:33;12612:53;;;12661:1;12658;12651:12;12612:53;12684:29;12703:9;12684:29;:::i;:::-;12674:39;;12732:38;12766:2;12755:9;12751:18;12732:38;:::i;:::-;12722:48;;12817:2;12806:9;12802:18;12789:32;12779:42;;12872:2;12861:9;12857:18;12844:32;-1:-1:-1;;;;;12891:6:821;12888:30;12885:50;;;12931:1;12928;12921:12;12885:50;12954;12996:7;12987:6;12976:9;12972:22;12954:50;:::i;13015:269::-;13215:2;13200:18;;13227:51;13204:9;13260:6;13227:51;:::i;13289:260::-;13357:6;13365;13418:2;13406:9;13397:7;13393:23;13389:32;13386:52;;;13434:1;13431;13424:12;13386:52;13457:29;13476:9;13457:29;:::i;:::-;13447:39;;13505:38;13539:2;13528:9;13524:18;13505:38;:::i;:::-;13495:48;;13289:260;;;;;:::o;13554:347::-;13756:2;13738:21;;;13795:2;13775:18;;;13768:30;-1:-1:-1;;;13829:2:821;13814:18;;13807:53;13892:2;13877:18;;13554:347::o;13906:380::-;13985:1;13981:12;;;;14028;;;14049:61;;14103:4;14095:6;14091:17;14081:27;;14049:61;14156:2;14148:6;14145:14;14125:18;14122:38;14119:161;;14202:10;14197:3;14193:20;14190:1;14183:31;14237:4;14234:1;14227:15;14265:4;14262:1;14255:15;14119:161;;13906:380;;;:::o;14291:338::-;14493:2;14475:21;;;14532:2;14512:18;;;14505:30;-1:-1:-1;;;14566:2:821;14551:18;;14544:44;14620:2;14605:18;;14291:338::o;14976:127::-;15037:10;15032:3;15028:20;15025:1;15018:31;15068:4;15065:1;15058:15;15092:4;15089:1;15082:15;15108:127;15169:10;15164:3;15160:20;15157:1;15150:31;15200:4;15197:1;15190:15;15224:4;15221:1;15214:15;15240:168;15313:9;;;15344;;15361:15;;;15355:22;;15341:37;15331:71;;15382:18;;:::i;15413:127::-;15474:10;15469:3;15465:20;15462:1;15455:31;15505:4;15502:1;15495:15;15529:4;15526:1;15519:15;15545:120;15585:1;15611;15601:35;;15616:18;;:::i;:::-;-1:-1:-1;15650:9:821;;15545:120::o;16016:522::-;16094:4;16100:6;16160:11;16147:25;16254:2;16250:7;16239:8;16223:14;16219:29;16215:43;16195:18;16191:68;16181:96;;16273:1;16270;16263:12;16181:96;16300:33;;16352:20;;;-1:-1:-1;;;;;;16384:30:821;;16381:50;;;16427:1;16424;16417:12;16381:50;16460:4;16448:17;;-1:-1:-1;16491:14:821;16487:27;;;16477:38;;16474:58;;;16528:1;16525;16518:12;16543:501;16602:5;16609:6;16669:3;16656:17;16755:2;16751:7;16740:8;16724:14;16720:29;16716:43;16696:18;16692:68;16682:96;;16774:1;16771;16764:12;16682:96;16802:33;;16906:4;16893:18;;;-1:-1:-1;16854:21:821;;-1:-1:-1;;;;;;16923:30:821;;16920:50;;;16966:1;16963;16956:12;16920:50;17013:6;16997:14;16993:27;16986:5;16982:39;16979:59;;;17034:1;17031;17024:12;17049:267;17138:6;17133:3;17126:19;17190:6;17183:5;17176:4;17171:3;17167:14;17154:43;-1:-1:-1;17242:1:821;17217:16;;;17235:4;17213:27;;;17206:38;;;;17298:2;17277:15;;;-1:-1:-1;;17273:29:821;17264:39;;;17260:50;;17049:267::o;17321:173::-;17389:20;;-1:-1:-1;;;;;17438:31:821;;17428:42;;17418:70;;17484:1;17481;17474:12;17608:1542;17799:2;17788:9;17781:21;17811:66;17873:2;17862:9;17858:18;17830:26;17849:6;17830:26;:::i;:::-;17811:66;:::i;:::-;17762:4;17906:35;17937:2;17929:6;17925:15;17906:35;:::i;:::-;17950:52;17998:2;17987:9;17983:18;17969:12;17950:52;:::i;:::-;;18063:2;18055:6;18051:15;18038:29;18033:2;18022:9;18018:18;18011:57;18099:35;18130:2;18122:6;18118:15;18099:35;:::i;:::-;18143:55;18193:3;18182:9;18178:19;18162:14;18143:55;:::i;:::-;;18243:57;18295:3;18287:6;18283:16;18275:6;18243:57;:::i;:::-;18319:6;18362:2;18356:3;18345:9;18341:19;18334:31;18388:77;18460:3;18449:9;18445:19;18431:12;18415:14;18388:77;:::i;:::-;18374:91;;18527:3;18519:6;18515:16;18502:30;18496:3;18485:9;18481:19;18474:59;18595:3;18587:6;18583:16;18570:30;18564:3;18553:9;18549:19;18542:59;18632:36;18663:3;18655:6;18651:16;18632:36;:::i;:::-;18610:58;;18687:3;18699:54;18749:2;18738:9;18734:18;18718:14;18699:54;:::i;:::-;18784:35;18815:2;18807:6;18803:15;18784:35;:::i;:::-;18762:57;;;18838:3;18850:54;18900:2;18889:9;18885:18;18869:14;-1:-1:-1;;;;;17565:31:821;17553:44;;17499:104;18850:54;18935:35;18966:2;18958:6;18954:15;18935:35;:::i;:::-;18913:57;;;18989:3;19001:54;19051:2;19040:9;19036:18;19020:14;-1:-1:-1;;;;;17565:31:821;17553:44;;17499:104;19001:54;19104:15;;;;19091:29;19071:18;;;;19064:57;;;;-1:-1:-1;19138:6:821;17608:1542;-1:-1:-1;17608:1542:821:o;19681:352::-;19892:6;19884;19879:3;19866:33;19987:2;19958:15;;;;-1:-1:-1;;;;;;19954:45:821;19918:16;;19943:57;;;20024:2;20016:11;;19681:352;-1:-1:-1;19681:352:821:o;20038:496::-;20217:3;20255:6;20249:13;20271:66;20330:6;20325:3;20318:4;20310:6;20306:17;20271:66;:::i;:::-;20400:13;;20359:16;;;;20422:70;20400:13;20359:16;20469:4;20457:17;;20422:70;:::i;:::-;20508:20;;20038:496;-1:-1:-1;;;;20038:496:821:o;21009:543::-;21111:2;21106:3;21103:11;21100:446;;;21147:1;21171:5;21168:1;21161:16;21215:4;21212:1;21202:18;21285:2;21273:10;21269:19;21266:1;21262:27;21256:4;21252:38;21321:4;21309:10;21306:20;21303:47;;;-1:-1:-1;21344:4:821;21303:47;21399:2;21394:3;21390:12;21387:1;21383:20;21377:4;21373:31;21363:41;;21454:82;21472:2;21465:5;21462:13;21454:82;;;21517:17;;;21498:1;21487:13;21454:82;;;21458:3;;;21009:543;;;:::o;21728:1345::-;21854:3;21848:10;-1:-1:-1;;;;;21873:6:821;21870:30;21867:56;;;21903:18;;:::i;:::-;21932:97;22022:6;21982:38;22014:4;22008:11;21982:38;:::i;:::-;21976:4;21932:97;:::i;:::-;22084:4;;22141:2;22130:14;;22158:1;22153:663;;;;22860:1;22877:6;22874:89;;;-1:-1:-1;22929:19:821;;;22923:26;22874:89;-1:-1:-1;;21685:1:821;21681:11;;;21677:24;21673:29;21663:40;21709:1;21705:11;;;21660:57;22976:81;;22123:944;;22153:663;20956:1;20949:14;;;20993:4;20980:18;;-1:-1:-1;;22189:20:821;;;22307:236;22321:7;22318:1;22315:14;22307:236;;;22410:19;;;22404:26;22389:42;;22502:27;;;;22470:1;22458:14;;;;22337:19;;22307:236;;;22311:3;22571:6;22562:7;22559:19;22556:201;;;22632:19;;;22626:26;-1:-1:-1;;22715:1:821;22711:14;;;22727:3;22707:24;22703:37;22699:42;22684:58;22669:74;;22556:201;-1:-1:-1;;;;;22803:1:821;22787:14;;;22783:22;22770:36;;-1:-1:-1;21728:1345:821:o;23418:186::-;23477:6;23530:2;23518:9;23509:7;23505:23;23501:32;23498:52;;;23546:1;23543;23536:12;23498:52;23569:29;23588:9;23569:29;:::i;25310:339::-;25512:2;25494:21;;;25551:2;25531:18;;;25524:30;-1:-1:-1;;;25585:2:821;25570:18;;25563:45;25640:2;25625:18;;25310:339::o;26000:125::-;26065:9;;;26086:10;;;26083:36;;;26099:18;;:::i;26130:383::-;26327:2;26316:9;26309:21;26290:4;26353:45;26394:2;26383:9;26379:18;26371:6;26353:45;:::i;:::-;26446:9;26438:6;26434:22;26429:2;26418:9;26414:18;26407:50;26474:33;26500:6;26492;26474:33;:::i;:::-;26466:41;26130:383;-1:-1:-1;;;;;26130:383:821:o;26518:489::-;-1:-1:-1;;;;;26787:15:821;;;26769:34;;26839:15;;26834:2;26819:18;;26812:43;26886:2;26871:18;;26864:34;;;26934:3;26929:2;26914:18;;26907:31;;;26712:4;;26955:46;;26981:19;;26973:6;26955:46;:::i;27012:249::-;27081:6;27134:2;27122:9;27113:7;27109:23;27105:32;27102:52;;;27150:1;27147;27140:12;27102:52;27182:9;27176:16;27201:30;27225:5;27201:30;:::i;27610:135::-;27649:3;27670:17;;;27667:43;;27690:18;;:::i;:::-;-1:-1:-1;27737:1:821;27726:13;;27610:135::o;27750:128::-;27817:9;;;27838:11;;;27835:37;;;27852:18;;:::i;27883:112::-;27915:1;27941;27931:35;;27946:18;;:::i;:::-;-1:-1:-1;27980:9:821;;27883:112::o;28000:271::-;28183:6;28175;28170:3;28157:33;28139:3;28209:16;;28234:13;;;28209:16;28000:271;-1:-1:-1;28000:271:821:o;29382:287::-;29511:3;29549:6;29543:13;29565:66;29624:6;29619:3;29612:4;29604:6;29600:17;29565:66;:::i;:::-;29647:16;;;;;29382:287;-1:-1:-1;;29382:287:821:o;29674:127::-;29735:10;29730:3;29726:20;29723:1;29716:31;29766:4;29763:1;29756:15;29790:4;29787:1;29780:15;33124:245;33191:6;33244:2;33232:9;33223:7;33219:23;33215:32;33212:52;;;33260:1;33257;33250:12;33212:52;33292:9;33286:16;33311:28;33333:5;33311:28;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "50547": [
        {
          "start": 10992,
          "length": 32
        }
      ],
      "50549": [
        {
          "start": 10950,
          "length": 32
        }
      ],
      "50551": [
        {
          "start": 10908,
          "length": 32
        }
      ],
      "50553": [
        {
          "start": 11075,
          "length": 32
        }
      ],
      "50555": [
        {
          "start": 11112,
          "length": 32
        }
      ],
      "50557": [
        {
          "start": 11033,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchFrozen(uint256)": "83040532",
    "batchMintTo(address,uint256,string,bytes)": "754a81d9",
    "burn(uint256)": "42966c68",
    "contractURI()": "e8a3d485",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "explicitOwnershipsOf(uint256[])": "5bbb2177",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "mintTo(address,string)": "0075a317",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokensMintedWithSignature(address,address,uint256,(address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32))\":{\"details\":\"Emitted when tokens are minted.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchMintTo(address,uint256,string,bytes)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_data\":\"Additional data to pass along during the minting of the NFT.\",\"_quantity\":\"The number of NFTs to mint.\",\"_to\":\"The recipient of the NFT to mint.\"}},\"burn(uint256)\":{\"details\":\"ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\",\"params\":{\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedOrOwner(address,uint256)\":{\"params\":{\"_operator\":\"The address to check.\",\"_tokenId\":\"The tokenId of the NFT to check.\"},\"returns\":{\"isApprovedOrOwnerOf\":\"Whether the given address is approved to transfer the given NFT.\"}},\"mintTo(address,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_to\":\"The recipient of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFT minted.\"}},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See `BatchMintMetadata` for handling of metadata in this contract.\",\"params\":{\"_tokenId\":\"The tokenId of an NFT.\"}},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an authorized account.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"}},\"kind\":\"user\",\"methods\":{\"batchMintTo(address,uint256,string,bytes)\":{\"notice\":\"Lets an authorized address mint multiple NFTs at once to a recipient.\"},\"burn(uint256)\":{\"notice\":\"Lets an owner or approved operator burn the NFT of the given tokenId.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the metadata URI for an NFT.\"}},\"notice\":\"BASE:      ERC721A      EXTENSION: SignatureMintERC721  The `ERC721SignatureMint` contract uses the `ERC721Base` contract, along with the `SignatureMintERC721` extension.  The 'signature minting' mechanism in the `SignatureMintERC721` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC721SignatureMint.sol\":\"ERC721SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC721Base.sol\":{\"keccak256\":\"0x111c72f624b88091267c2b88f8a1f517625b449df581c0f053e38f3f3e07c5c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7b1d67abd2200c55e5b369d62ecc8cfdab3b5ed826c7565b23ad17e231e1ec00\",\"dweb:/ipfs/QmYTaUuT8kZHyzYe9V7nPSJtL9Lffj9SfDv5jUMqZFCM3x\"]},\"contracts/base/ERC721SignatureMint.sol\":{\"keccak256\":\"0xaf9fb76d274534a16ac78b391da0f890aadc90954257a2919d9d057fb7d60e13\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ddf18b2ee9f90d67b8b0bf585dd33772237213c9db77a16ce9c41fb5a5092120\",\"dweb:/ipfs/QmRWZUua24vXC9Mrb4d7amViXt3nLWjuENyxVonb2YJ1YR\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0x6547a787b5ac8032fddbee8d058d520ef8da5c5808b89d47b11bd5ff27d32afc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fde24fcc2b49c889651aac81bff6f1fa8786e55a6f65c1e3f052666dff71143\",\"dweb:/ipfs/QmW6YArfXiUzQsDZHoTeWsZYkrMmAVTpttnEsmYGqPzQWx\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf\",\"dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/eip/queryable/ERC721AQueryable.sol\":{\"keccak256\":\"0x3767fb2bdfd037f933c736a0d303924a3d35ce5d452f1103d8d9c7b9b770a2b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dcc7057525dd0286daa665788993255bc720de7a67bf2888b3f2a1f28a39081\",\"dweb:/ipfs/QmSGawcbfNDjS4QoUfCP3B56Cks34Qs1GBmDyviFzUC2W1\"]},\"contracts/eip/queryable/IERC721AQueryable.sol\":{\"keccak256\":\"0x4366cfd26dedac76df02a75c9c2a310242323f9b2d0998047f2809f8c99064a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2bd543adb78da0ec0ebc776884e7d2de4a5f70ca9d5c428e3ca6cc91bfcc052\",\"dweb:/ipfs/QmNnoejSYCgWAv2abhQQm45twnxhih4xefv14spcfjGMCi\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365\",\"dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/SignatureMintERC721.sol\":{\"keccak256\":\"0x8bd9a65dfa1f627403dc514a9da2168a5ada049bf7703797a4f38207d5ce4643\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://430614237bf17affcd7d65c3a5fbe0f5d33b8f5ed877ddf66fce0e7b47f35cad\",\"dweb:/ipfs/QmPVv4frgEy4LLArfAXXrD5vgqoxsrhiL2LS9rQEvGDX6u\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xd11d6dc01294bbcfae4e79a98dd71ca524c898c7e8639ca607c0a3b55ccc0543\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c86bacbd6fc4eb6e1e8345de3c6edbb2be08502afc746984e7a303f0363a68b4\",\"dweb:/ipfs/QmRPZfT4jybAgnpyJbJziCJ3SEpzbTPAXwrDs1KJ7XNpXV\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe\",\"dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721A.TokenOwnership",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipsOf",
          "outputs": [
            {
              "internalType": "struct IERC721A.TokenOwnership[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchMintTo(address,uint256,string,bytes)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_data": "Additional data to pass along during the minting of the NFT.",
              "_quantity": "The number of NFTs to mint.",
              "_to": "The recipient of the NFT to mint."
            }
          },
          "burn(uint256)": {
            "details": "ERC721A's `_burn(uint256,bool)` internally checks for token approvals.",
            "params": {
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
          },
          "explicitOwnershipsOf(uint256[])": {
            "details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedOrOwner(address,uint256)": {
            "params": {
              "_operator": "The address to check.",
              "_tokenId": "The tokenId of the NFT to check."
            },
            "returns": {
              "isApprovedOrOwnerOf": "Whether the given address is approved to transfer the given NFT."
            }
          },
          "mintTo(address,string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_to": "The recipient of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFT minted."
            }
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See `BatchMintMetadata` for handling of metadata in this contract.",
            "params": {
              "_tokenId": "The tokenId of an NFT."
            }
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an authorized account."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchMintTo(address,uint256,string,bytes)": {
            "notice": "Lets an authorized address mint multiple NFTs at once to a recipient."
          },
          "burn(uint256)": {
            "notice": "Lets an owner or approved operator burn the NFT of the given tokenId."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "mintTo(address,string)": {
            "notice": "Lets an authorized address mint an NFT to a recipient."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the metadata URI for an NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC721SignatureMint.sol": "ERC721SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC721Base.sol": {
        "keccak256": "0x111c72f624b88091267c2b88f8a1f517625b449df581c0f053e38f3f3e07c5c1",
        "urls": [
          "bzz-raw://7b1d67abd2200c55e5b369d62ecc8cfdab3b5ed826c7565b23ad17e231e1ec00",
          "dweb:/ipfs/QmYTaUuT8kZHyzYe9V7nPSJtL9Lffj9SfDv5jUMqZFCM3x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC721SignatureMint.sol": {
        "keccak256": "0xaf9fb76d274534a16ac78b391da0f890aadc90954257a2919d9d057fb7d60e13",
        "urls": [
          "bzz-raw://ddf18b2ee9f90d67b8b0bf585dd33772237213c9db77a16ce9c41fb5a5092120",
          "dweb:/ipfs/QmRWZUua24vXC9Mrb4d7amViXt3nLWjuENyxVonb2YJ1YR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AVirtualApprove.sol": {
        "keccak256": "0x6547a787b5ac8032fddbee8d058d520ef8da5c5808b89d47b11bd5ff27d32afc",
        "urls": [
          "bzz-raw://1fde24fcc2b49c889651aac81bff6f1fa8786e55a6f65c1e3f052666dff71143",
          "dweb:/ipfs/QmW6YArfXiUzQsDZHoTeWsZYkrMmAVTpttnEsmYGqPzQWx"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea",
        "urls": [
          "bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf",
          "dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryable.sol": {
        "keccak256": "0x3767fb2bdfd037f933c736a0d303924a3d35ce5d452f1103d8d9c7b9b770a2b2",
        "urls": [
          "bzz-raw://6dcc7057525dd0286daa665788993255bc720de7a67bf2888b3f2a1f28a39081",
          "dweb:/ipfs/QmSGawcbfNDjS4QoUfCP3B56Cks34Qs1GBmDyviFzUC2W1"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryable.sol": {
        "keccak256": "0x4366cfd26dedac76df02a75c9c2a310242323f9b2d0998047f2809f8c99064a0",
        "urls": [
          "bzz-raw://d2bd543adb78da0ec0ebc776884e7d2de4a5f70ca9d5c428e3ca6cc91bfcc052",
          "dweb:/ipfs/QmNnoejSYCgWAv2abhQQm45twnxhih4xefv14spcfjGMCi"
        ],
        "license": "MIT"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345",
        "urls": [
          "bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365",
          "dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721.sol": {
        "keccak256": "0x8bd9a65dfa1f627403dc514a9da2168a5ada049bf7703797a4f38207d5ce4643",
        "urls": [
          "bzz-raw://430614237bf17affcd7d65c3a5fbe0f5d33b8f5ed877ddf66fce0e7b47f35cad",
          "dweb:/ipfs/QmPVv4frgEy4LLArfAXXrD5vgqoxsrhiL2LS9rQEvGDX6u"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xd11d6dc01294bbcfae4e79a98dd71ca524c898c7e8639ca607c0a3b55ccc0543",
        "urls": [
          "bzz-raw://c86bacbd6fc4eb6e1e8345de3c6edbb2be08502afc746984e7a303f0363a68b4",
          "dweb:/ipfs/QmRPZfT4jybAgnpyJbJziCJ3SEpzbTPAXwrDs1KJ7XNpXV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b",
        "urls": [
          "bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe",
          "dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC721SignatureMint.sol",
    "id": 5807,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "BatchMintMetadata": [
        17840
      ],
      "Context": [
        49279
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ECDSA": [
        50541
      ],
      "EIP712": [
        50695
      ],
      "ERC165": [
        7939
      ],
      "ERC721A": [
        12340
      ],
      "ERC721AQueryable": [
        14739
      ],
      "ERC721Base": [
        4048
      ],
      "ERC721SignatureMint": [
        5806
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC165": [
        13945
      ],
      "IERC2981": [
        14089
      ],
      "IERC721": [
        14221
      ],
      "IERC721A": [
        14292
      ],
      "IERC721AQueryable": [
        17205
      ],
      "IERC721Metadata": [
        14338
      ],
      "IERC721Receiver": [
        14356
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IPrimarySale": [
        33997
      ],
      "IRoyalty": [
        34061
      ],
      "ISignatureMintERC721": [
        34561
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "PrimarySale": [
        22703
      ],
      "Royalty": [
        23031
      ],
      "SignatureMintERC721": [
        24569
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4461:16",
    "nodes": [
      {
        "id": 5561,
        "nodeType": "PragmaDirective",
        "src": "39:23:16",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 5562,
        "nodeType": "ImportDirective",
        "src": "86:26:16",
        "nodes": [],
        "absolutePath": "contracts/base/ERC721Base.sol",
        "file": "./ERC721Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5807,
        "sourceUnit": 4049,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5563,
        "nodeType": "ImportDirective",
        "src": "114:38:16",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5807,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5564,
        "nodeType": "ImportDirective",
        "src": "153:48:16",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5807,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5565,
        "nodeType": "ImportDirective",
        "src": "202:46:16",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721.sol",
        "file": "../extension/SignatureMintERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5807,
        "sourceUnit": 24570,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5567,
        "nodeType": "ImportDirective",
        "src": "250:69:16",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5807,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5566,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "259:19:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5806,
        "nodeType": "ContractDefinition",
        "src": "905:3594:16",
        "nodes": [
          {
            "id": 5601,
            "nodeType": "FunctionDefinition",
            "src": "1167:352:16",
            "nodes": [],
            "body": {
              "id": 5600,
              "nodeType": "Block",
              "src": "1453:66:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5597,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5586,
                        "src": "1490:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5596,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "1463:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5599,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:49:16"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5589,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5576,
                    "src": "1390:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 5590,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5578,
                    "src": "1405:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5591,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5580,
                    "src": "1412:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5592,
                    "name": "_royaltyRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5582,
                    "src": "1421:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 5593,
                    "name": "_royaltyBps",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5584,
                    "src": "1440:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  }
                ],
                "id": 5594,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5588,
                  "name": "ERC721Base",
                  "nameLocations": [
                    "1379:10:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4048,
                  "src": "1379:10:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1379:73:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5576,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1196:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "1188:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5578,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1233:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "1219:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5577,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5580,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1262:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "1248:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5579,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5582,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1287:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "1279:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5584,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1322:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "1314:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 5583,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5586,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1351:21:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "1343:29:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:200:16"
            },
            "returnParameters": {
              "id": 5595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:16"
            },
            "scope": 5806,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5691,
            "nodeType": "FunctionDefinition",
            "src": "1957:960:16",
            "nodes": [],
            "body": {
              "id": 5690,
              "nodeType": "Block",
              "src": "2119:798:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5614,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5605,
                            "src": "2137:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                              "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                            }
                          },
                          "id": 5615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2142:8:16",
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34513,
                          "src": "2137:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 5616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2154:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2137:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e746979206d7573742062652031",
                        "id": 5618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2157:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_403941308fab4adac3b4202ae6eec0d958f8667c849593cca07bfa4f63d40758",
                          "typeString": "literal_string \"quantiy must be 1\""
                        },
                        "value": "quantiy must be 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_403941308fab4adac3b4202ae6eec0d958f8667c849593cca07bfa4f63d40758",
                          "typeString": "literal_string \"quantiy must be 1\""
                        }
                      ],
                      "id": 5613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2129:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5620,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:48:16"
                },
                {
                  "assignments": [
                    5622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5622,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "2196:13:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5690,
                      "src": "2188:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5621,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2188:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5625,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5623,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3916,
                      "src": "2212:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 5624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:19:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2188:43:16"
                },
                {
                  "expression": {
                    "id": 5631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5626,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5611,
                      "src": "2281:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5628,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2306:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 5629,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5607,
                          "src": "2312:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 5627,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24503,
                        "src": "2290:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34524_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 5630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2290:33:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2281:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5632,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:42:16"
                },
                {
                  "assignments": [
                    5634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5634,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2342:8:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5690,
                      "src": "2334:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5633,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2334:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5637,
                  "initialValue": {
                    "expression": {
                      "id": 5635,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5605,
                      "src": "2353:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 5636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2358:2:16",
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34503,
                    "src": "2353:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2334:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5639,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2417:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2422:20:16",
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34509,
                        "src": "2417:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5641,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2444:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2449:8:16",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34513,
                        "src": "2444:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 5643,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2459:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2464:8:16",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34517,
                        "src": "2459:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5645,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2474:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2479:13:16",
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34515,
                        "src": "2474:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5638,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5805,
                      "src": "2396:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 5647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5648,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:97:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5649,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2549:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2554:16:16",
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34505,
                        "src": "2549:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2582:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2574:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5651,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2574:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2574:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2549:35:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5656,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2588:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2593:10:16",
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34507,
                        "src": "2588:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 5658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2607:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2588:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2549:59:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5670,
                  "nodeType": "IfStatement",
                  "src": "2545:170:16",
                  "trueBody": {
                    "id": 5669,
                    "nodeType": "Block",
                    "src": "2610:105:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5662,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5622,
                              "src": "2650:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 5663,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5605,
                                "src": "2665:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 5664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2670:16:16",
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34505,
                              "src": "2665:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 5665,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5605,
                                "src": "2688:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 5666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2693:10:16",
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34507,
                              "src": "2688:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5661,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23024,
                            "src": "2624:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 5667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2624:80:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5668,
                        "nodeType": "ExpressionStatement",
                        "src": "2624:80:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5672,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5622,
                        "src": "2762:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 5673,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2777:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2782:3:16",
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34511,
                        "src": "2777:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 5671,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3979,
                      "src": "2749:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 5675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5676,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:37:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5678,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "2806:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5679,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "2816:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 5680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2821:8:16",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34513,
                        "src": "2816:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5677,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11590,
                        11753
                      ],
                      "referencedDeclaration": 11590,
                      "src": "2796:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2796:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5682,
                  "nodeType": "ExpressionStatement",
                  "src": "2796:34:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5684,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5611,
                        "src": "2872:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5685,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "2880:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5686,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5622,
                        "src": "2890:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5687,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5605,
                        "src": "2905:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 5683,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34536,
                      "src": "2846:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$34524_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 5688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5689,
                  "nodeType": "EmitStatement",
                  "src": "2841:69:16"
                }
              ]
            },
            "baseFunctions": [
              34560
            ],
            "documentation": {
              "id": 5602,
              "nodeType": "StructuredDocumentation",
              "src": "1712:240:16",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1966:17:16",
            "overrides": {
              "id": 5609,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2085:8:16"
            },
            "parameters": {
              "id": 5608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5605,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "2014:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5691,
                  "src": "1993:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 5604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5603,
                      "name": "MintRequest",
                      "nameLocations": [
                        "1993:11:16"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34524,
                      "src": "1993:11:16"
                    },
                    "referencedDeclaration": 34524,
                    "src": "1993:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34524_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5607,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2043:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5691,
                  "src": "2028:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5606,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1983:76:16"
            },
            "returnParameters": {
              "id": 5612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5611,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2111:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5691,
                  "src": "2103:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2103:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2102:16:16"
            },
            "scope": 5806,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5706,
            "nodeType": "FunctionDefinition",
            "src": "3191:134:16",
            "nodes": [],
            "body": {
              "id": 5705,
              "nodeType": "Block",
              "src": "3283:42:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5700,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5694,
                      "src": "3300:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5701,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3311:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3311:7:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3300:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5699,
                  "id": 5704,
                  "nodeType": "Return",
                  "src": "3293:25:16"
                }
              ]
            },
            "baseFunctions": [
              24428
            ],
            "documentation": {
              "id": 5692,
              "nodeType": "StructuredDocumentation",
              "src": "3109:77:16",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3200:19:16",
            "overrides": {
              "id": 5696,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3259:8:16"
            },
            "parameters": {
              "id": 5695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5694,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3228:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5706,
                  "src": "3220:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3219:17:16"
            },
            "returnParameters": {
              "id": 5699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5706,
                  "src": "3277:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3277:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3276:6:16"
            },
            "scope": 5806,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5720,
            "nodeType": "FunctionDefinition",
            "src": "3426:130:16",
            "nodes": [],
            "body": {
              "id": 5719,
              "nodeType": "Block",
              "src": "3511:45:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5713,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3528:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3532:6:16",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3528:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5715,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3542:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3542:7:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3528:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5712,
                  "id": 5718,
                  "nodeType": "Return",
                  "src": "3521:28:16"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 5707,
              "nodeType": "StructuredDocumentation",
              "src": "3331:90:16",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3435:27:16",
            "overrides": {
              "id": 5709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3487:8:16"
            },
            "parameters": {
              "id": 5708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:2:16"
            },
            "returnParameters": {
              "id": 5712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5720,
                  "src": "3505:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3505:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3504:6:16"
            },
            "scope": 5806,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5805,
            "nodeType": "FunctionDefinition",
            "src": "3646:851:16",
            "nodes": [],
            "body": {
              "id": 5804,
              "nodeType": "Block",
              "src": "3831:666:16",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5732,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5729,
                      "src": "3845:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3863:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3845:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5745,
                  "nodeType": "IfStatement",
                  "src": "3841:103:16",
                  "trueBody": {
                    "id": 5744,
                    "nodeType": "Block",
                    "src": "3866:78:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5736,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3888:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 5737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3892:5:16",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3888:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 5738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3901:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3888:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 5740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3904:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 5735,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3880:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3880:33:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5742,
                        "nodeType": "ExpressionStatement",
                        "src": "3880:33:16"
                      },
                      {
                        "functionReturnParameters": 5731,
                        "id": 5743,
                        "nodeType": "Return",
                        "src": "3927:7:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5747,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "3962:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5804,
                      "src": "3954:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3954:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5751,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5748,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5725,
                      "src": "3975:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 5749,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5729,
                      "src": "3994:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3975:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3954:54:16"
                },
                {
                  "assignments": [
                    5753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5753,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "4024:13:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5804,
                      "src": "4019:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5752,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4019:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5754,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4019:18:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5755,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5727,
                      "src": "4051:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 5756,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4064:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 5757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4084:12:16",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "4064:32:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4051:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5774,
                    "nodeType": "Block",
                    "src": "4168:55:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 5772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5767,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5753,
                            "src": "4182:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5768,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4198:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4202:5:16",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4198:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 5770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4211:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4198:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4182:30:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5773,
                        "nodeType": "ExpressionStatement",
                        "src": "4182:30:16"
                      }
                    ]
                  },
                  "id": 5775,
                  "nodeType": "IfStatement",
                  "src": "4047:176:16",
                  "trueBody": {
                    "id": 5766,
                    "nodeType": "Block",
                    "src": "4098:64:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 5764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5759,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5753,
                            "src": "4112:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5760,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4128:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4132:5:16",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4128:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 5762,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5747,
                              "src": "4141:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4128:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4112:39:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5765,
                        "nodeType": "ExpressionStatement",
                        "src": "4112:39:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5777,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5753,
                        "src": "4240:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 5778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4255:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 5776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4232:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4232:43:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5780,
                  "nodeType": "ExpressionStatement",
                  "src": "4232:43:16"
                },
                {
                  "assignments": [
                    5782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5782,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "4294:13:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5804,
                      "src": "4286:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5781,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4286:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5793,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5783,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5723,
                        "src": "4310:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4343:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4335:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4335:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4335:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4310:35:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 5791,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5723,
                      "src": "4373:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4310:84:16",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5789,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "4348:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 5790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4348:22:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4286:108:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5797,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5727,
                        "src": "4441:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5798,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4452:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4456:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4452:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5800,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5782,
                        "src": "4464:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5801,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5747,
                        "src": "4479:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5794,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4404:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 5796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4424:16:16",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "4404:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 5802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:86:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5803,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:86:16"
                }
              ]
            },
            "documentation": {
              "id": 5721,
              "nodeType": "StructuredDocumentation",
              "src": "3562:79:16",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3655:20:16",
            "parameters": {
              "id": 5730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5723,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3693:21:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5805,
                  "src": "3685:29:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3685:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5725,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "3732:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5805,
                  "src": "3724:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3724:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5727,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3766:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5805,
                  "src": "3758:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5729,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "3793:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5805,
                  "src": "3785:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3785:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3675:138:16"
            },
            "returnParameters": {
              "id": 5731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3831:0:16"
            },
            "scope": 5806,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5569,
              "name": "ERC721Base",
              "nameLocations": [
                "937:10:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4048,
              "src": "937:10:16"
            },
            "id": 5570,
            "nodeType": "InheritanceSpecifier",
            "src": "937:10:16"
          },
          {
            "baseName": {
              "id": 5571,
              "name": "PrimarySale",
              "nameLocations": [
                "949:11:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "949:11:16"
            },
            "id": 5572,
            "nodeType": "InheritanceSpecifier",
            "src": "949:11:16"
          },
          {
            "baseName": {
              "id": 5573,
              "name": "SignatureMintERC721",
              "nameLocations": [
                "962:19:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24569,
              "src": "962:19:16"
            },
            "id": 5574,
            "nodeType": "InheritanceSpecifier",
            "src": "962:19:16"
          }
        ],
        "canonicalName": "ERC721SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5568,
          "nodeType": "StructuredDocumentation",
          "src": "321:582:16",
          "text": "      BASE:      ERC721A\n      EXTENSION: SignatureMintERC721\n  The `ERC721SignatureMint` contract uses the `ERC721Base` contract, along with the `SignatureMintERC721` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC721` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5806,
          24569,
          34561,
          50695,
          22703,
          33997,
          4048,
          17840,
          23031,
          34061,
          14089,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084,
          14739,
          17205,
          12340,
          14292,
          14338,
          14221,
          7939,
          13945,
          49279
        ],
        "name": "ERC721SignatureMint",
        "nameLocation": "914:19:16",
        "scope": 5807,
        "usedErrors": [
          14233,
          14236,
          14239,
          14242,
          14245,
          14248,
          14251,
          14254,
          14257,
          14260,
          14263,
          14266,
          14269,
          17162
        ],
        "usedEvents": [
          14120,
          14129,
          14138,
          17530,
          17537,
          33083,
          33833,
          33996,
          34051,
          34060,
          34536
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 16
}