{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedContents",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        }
      ],
      "name": "TokensUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ITokenBundle.Token[]",
          "name": "wrappedContents",
          "type": "tuple[]"
        }
      ],
      "name": "TokensWrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getTokenCountOfBundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTokenOfBundle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getUriOfBundle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getWrappedContents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "contents",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "_tokensToWrap",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "_uriForWrappedToken",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200506838038062005068833981016040819052620000349162000159565b6001600160a01b038116608052600054610100900460ff1615808015620000625750600054600160ff909116105b806200007e5750303b1580156200007e575060005460ff166001145b620000e65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156200010a576000805461ff0019166101001790555b801562000151576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50506200018b565b6000602082840312156200016c57600080fd5b81516001600160a01b03811681146200018457600080fd5b9392505050565b608051614eba620001ae6000396000818161025201526133dd0152614eba6000f3fe6080604052600436106102425760003560e01c8063754b8fe711610135578063754b8fe7146106475780637647691d146106675780638da5cb5b146106875780639010d07c146106a557806391d14854146106c5578063938e3d7b146106e557806395d89b41146107055780639bcf7a151461071a578063a0a8e4601461073a578063a217fddf14610756578063a22cb4651461076b578063a32fa5b31461078b578063ac9650d8146107ab578063b24f2d39146107d8578063b88d4fde14610803578063bc197c8114610823578063c87b56dd1461084f578063ca15c8731461086f578063cb2ef6f71461088f578063d0d2fe25146108ae578063d547741f146108db578063d5576d26146108fb578063e8a3d48514610928578063e985e9c51461093d578063f23a6e611461095d57600080fd5b806301ffc9a7146102cb57806306fdde0314610300578063081812fc14610322578063095ea7b31461035a57806313af40351461037a578063150b7a021461039a57806318160ddd146103d35780631da799c9146103f357806323b872dd14610420578063248a9ca31461044057806329e471dd1461046d5780632a55205a146104805780632f2ff15d146104ae5780632f745c59146104ce57806336568abe146104ee5780633b1475a71461050e57806342842e0e146105255780634cc157df146105455780634f6ccce714610587578063572b6c05146105a7578063600dd5ea146105c757806361195e94146105e75780636352211e1461060757806370a082311461062757600080fd5b366102c657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102c45760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613cdf565b610989565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b506103156109eb565b6040516102f79190613d4c565b34801561032e57600080fd5b5061034261033d366004613d5f565b610a7d565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b506102c4610375366004613d9d565b610aa4565b34801561038657600080fd5b506102c4610395366004613dc9565b610bcb565b3480156103a657600080fd5b506103ba6103b5366004613e9b565b610bfb565b6040516001600160e01b031990911681526020016102f7565b3480156103df57600080fd5b50610105545b6040519081526020016102f7565b3480156103ff57600080fd5b5061041361040e366004613f06565b610c0c565b6040516102f79190613f96565b34801561042c57600080fd5b506102c461043b366004613fa4565b610c98565b34801561044c57600080fd5b506103e561045b366004613d5f565b60009081526007602052604090205490565b6103e561047b36600461402d565b610cd0565b34801561048c57600080fd5b506104a061049b366004613f06565b610e61565b6040516102f79291906140db565b3480156104ba57600080fd5b506102c46104c93660046140f4565b610e9e565b3480156104da57600080fd5b506103e56104e9366004613d9d565b610f38565b3480156104fa57600080fd5b506102c46105093660046140f4565b610fcf565b34801561051a57600080fd5b506103e56101355481565b34801561053157600080fd5b506102c4610540366004613fa4565b61102e565b34801561055157600080fd5b50610565610560366004613d5f565b611049565b604080516001600160a01b03909316835261ffff9091166020830152016102f7565b34801561059357600080fd5b506103e56105a2366004613d5f565b6110b4565b3480156105b357600080fd5b506102eb6105c2366004613dc9565b611149565b3480156105d357600080fd5b506102c46105e2366004613d9d565b611167565b3480156105f357600080fd5b50610315610602366004613d5f565b611195565b34801561061357600080fd5b50610342610622366004613d5f565b61123a565b34801561063357600080fd5b506103e5610642366004613dc9565b61126e565b34801561065357600080fd5b506102c46106623660046141c6565b6112f4565b34801561067357600080fd5b506102c46106823660046140f4565b6114ec565b34801561069357600080fd5b506005546001600160a01b0316610342565b3480156106b157600080fd5b506103426106c0366004613f06565b611635565b3480156106d157600080fd5b506102eb6106e03660046140f4565b611723565b3480156106f157600080fd5b506102c461070036600461429d565b61174e565b34801561071157600080fd5b5061031561177b565b34801561072657600080fd5b506102c46107353660046142d1565b61178a565b34801561074657600080fd5b50604051600181526020016102f7565b34801561076257600080fd5b506103e5600081565b34801561077757600080fd5b506102c4610786366004614306565b6117b9565b34801561079757600080fd5b506102eb6107a63660046140f4565b6117cb565b3480156107b757600080fd5b506107cb6107c6366004614334565b611821565b6040516102f791906143a8565b3480156107e457600080fd5b506003546001600160a01b03811690600160a01b900461ffff16610565565b34801561080f57600080fd5b506102c461081e366004613e9b565b611994565b34801561082f57600080fd5b506103ba61083e366004614477565b63bc197c8160e01b95945050505050565b34801561085b57600080fd5b5061031561086a366004613d5f565b6119d3565b34801561087b57600080fd5b506103e561088a366004613d5f565b6119de565b34801561089b57600080fd5b506804d756c7469777261760bc1b6103e5565b3480156108ba57600080fd5b506103e56108c9366004613d5f565b60009081526002602052604090205490565b3480156108e757600080fd5b506102c46108f63660046140f4565b611a67565b34801561090757600080fd5b5061091b610916366004613d5f565b611a80565b6040516102f79190614524565b34801561093457600080fd5b50610315611b31565b34801561094957600080fd5b506102eb610958366004614572565b611bbf565b34801561096957600080fd5b506103ba6109783660046145a0565b63f23a6e6160e01b95945050505050565b600061099482611bed565b806109af57506001600160e01b031982166380ac58cd60e01b145b806109ca57506001600160e01b03198216630271189760e51b145b806109e557506001600160e01b0319821663152a902d60e11b145b92915050565b606060d180546109fa90614608565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2690614608565b8015610a735780601f10610a4857610100808354040283529160200191610a73565b820191906000526020600020905b815481529060010190602001808311610a5657829003601f168201915b5050505050905090565b6000610a8882611c12565b50600090815260d560205260409020546001600160a01b031690565b6000610aaf8261123a565b9050806001600160a01b0316836001600160a01b031603610b1c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016102bb565b806001600160a01b0316610b2e611c37565b6001600160a01b03161480610b4a5750610b4a81610958611c37565b610bbc5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016102bb565b610bc68383611c46565b505050565b610bd3611cb4565b610bef5760405162461bcd60e51b81526004016102bb9061463c565b610bf881611cc2565b50565b630a85bd0160e11b5b949350505050565b610c14613ca0565b6000838152600260208181526040808420868552830182529283902083516080810190945280546001600160a01b0381168552909291840191600160a01b90910460ff1690811115610c6857610c68613f28565b6002811115610c7957610c79613f28565b8152600182015460208201526002909101546040909101529392505050565b610ca9610ca3611c37565b82611d14565b610cc55760405162461bcd60e51b81526004016102bb90614664565b610bc6838383611d72565b6000610cda611ed1565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610d0c81610d07611c37565b611f2a565b610d25600080516020614e1e8339815191526000611723565b610d875760005b86811015610d8557610d73600080516020614e1e833981519152898984818110610d5857610d586146b1565b610d6e9260206080909202019081019150613dc9565b611f8e565b610d7e6001826146dd565b9050610d2c565b505b610135805492506001906000610d9d83866146dd565b90915550610dee9050610dae611c37565b888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250611fcc915050565b610df88383612045565b81836001600160a01b0316610e0b611c37565b6001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a604051610e459291906146fd565b60405180910390a450610e586001600955565b95945050505050565b600080600080610e7086611049565b90945084925061ffff169050612710610e89828761477c565b610e939190614793565b925050509250929050565b600082815260076020526040902054610eb79033611f8e565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff1615610f2a5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016102bb565b610f348282612066565b5050565b6000610f438361126e565b8210610fa55760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016102bb565b506001600160a01b0391909116600090815261010360209081526040808320938352929052205490565b336001600160a01b038216146110245760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016102bb565b610f34828261207a565b610bc683838360405180602001604052806000815250611994565b6000818152600460209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561109057805160208201516110aa565b6003546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60006110c06101055490565b82106111235760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016102bb565b6101058281548110611137576111376146b1565b90600052602060002001549050919050565b6001600160a01b03166000908152606d602052604090205460ff1690565b61116f611cb4565b61118b5760405162461bcd60e51b81526004016102bb9061463c565b610f3482826120d1565b60008181526002602052604090206001018054606091906111b590614608565b80601f01602080910402602001604051908101604052809291908181526020018280546111e190614608565b801561122e5780601f106112035761010080835404028352916020019161122e565b820191906000526020600020905b81548152906001019060200180831161121157829003601f168201915b50505050509050919050565b60008061124683612155565b90506001600160a01b0381166109e55760405162461bcd60e51b81526004016102bb906147b5565b60006001600160a01b0382166112d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016102bb565b506001600160a01b0316600090815260d4602052604090205490565b600054610100900460ff16158080156113145750600054600160ff909116105b80611335575061132330612170565b158015611335575060005460ff166001145b6113985760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102bb565b6000805460ff1916600117905580156113bb576000805461ff0019166101001790555b6113c361217f565b6113cc846121b0565b6113d687876121e8565b6113e083836120d1565b6113e988611cc2565b6113f285612219565b6113fd600089612066565b6114277f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a689612066565b61143f600080516020614dfe83398151915289612066565b611458600080516020614dfe8339815191526000612066565b6114837fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f05436000612066565b61149c600080516020614e1e8339815191526000612066565b80156114e2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6114f4611ed1565b7fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054361152181610d07611c37565b6101355483106115665760405162461bcd60e51b815260206004820152601060248201526f3bb930b83832b21027232a102227229760811b60448201526064016102bb565b611577611571611c37565b84611d14565b6115cf5760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b60648201526084016102bb565b6115d8836122f5565b6115e28284612386565b82826001600160a01b03166115f5611c37565b6001600160a01b03167fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7360405160405180910390a450610f346001600955565b60008281526008602052604081205481805b8281101561171a5760008681526008602090815260408083208484526001019091529020546001600160a01b0316156116c3578482036116b15760008681526008602090815260408083209383526001909301905220546001600160a01b031692506109e5915050565b6116bc6001836146dd565b9150611708565b6116ce866000611723565b80156116f55750600086815260086020908152604080832083805260020190915290205481145b15611708576117056001836146dd565b91505b6117136001826146dd565b9050611647565b50505092915050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611756611cb4565b6117725760405162461bcd60e51b81526004016102bb9061463c565b610bf881612219565b606060d280546109fa90614608565b611792611cb4565b6117ae5760405162461bcd60e51b81526004016102bb9061463c565b610bc6838383612443565b610f346117c4611c37565b83836124eb565b600082815260066020908152604080832083805290915281205460ff16611818575060008281526006602090815260408083206001600160a01b038516845290915290205460ff166109e5565b50600192915050565b6060816001600160401b0381111561183b5761183b613de6565b60405190808252806020026020018201604052801561186e57816020015b60608152602001906001900390816118595790505b509050600061187b611c37565b9050336001600160a01b038216141560005b8481101561171a57811561190c576118ea308787848181106118b1576118b16146b1565b90506020028101906118c391906147e7565b866040516020016118d69392919061482d565b6040516020818303038152906040526125ad565b8482815181106118fc576118fc6146b1565b602002602001018190525061198c565b61196e30878784818110611922576119226146b1565b905060200281019061193491906147e7565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125ad92505050565b848281518110611980576119806146b1565b60200260200101819052505b60010161188d565b6119a561199f611c37565b83611d14565b6119c15760405162461bcd60e51b81526004016102bb90614664565b6119cd848484846125d9565b50505050565b60606109e582611195565b600081815260086020526040812054815b81811015611a425760008481526008602090815260408083208484526001019091529020546001600160a01b031615611a3057611a2d6001846146dd565b92505b611a3b6001826146dd565b90506119ef565b50611a4e836000611723565b15611a6157611a5e6001836146dd565b91505b50919050565b6000828152600760205260409020546110249033611f8e565b600081815260026020526040902054606090806001600160401b03811115611aaa57611aaa613de6565b604051908082528060200260200182016040528015611ae357816020015b611ad0613ca0565b815260200190600190039081611ac85790505b50915060005b81811015611b2a57611afb8482610c0c565b838281518110611b0d57611b0d6146b1565b6020908102919091010152611b236001826146dd565b9050611ae9565b5050919050565b60018054611b3e90614608565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6a90614608565b8015611bb75780601f10611b8c57610100808354040283529160200191611bb7565b820191906000526020600020905b815481529060010190602001808311611b9a57829003601f168201915b505050505081565b6001600160a01b03918216600090815260d66020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806109e557506109e58261260c565b611c1b8161265c565b610bf85760405162461bcd60e51b81526004016102bb906147b5565b6000611c41612679565b905090565b600081815260d56020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c7b8261123a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611c41816106e0611c37565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600080611d208361123a565b9050806001600160a01b0316846001600160a01b03161480611d475750611d478185611bbf565b80610c045750836001600160a01b0316611d6084610a7d565b6001600160a01b031614949350505050565b826001600160a01b0316611d858261123a565b6001600160a01b031614611dab5760405162461bcd60e51b81526004016102bb9061484e565b6001600160a01b038216611e0d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016102bb565b611e1a838383600161269e565b826001600160a01b0316611e2d8261123a565b6001600160a01b031614611e535760405162461bcd60e51b81526004016102bb9061484e565b600081815260d56020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260d4855283862080546000190190559087168086528386208054600101905586865260d39094528285208054909216841790915590518493600080516020614e6583398151915291a4505050565b600260095403611f235760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102bb565b6002600955565b611f3482826117cb565b610f3457611f4c816001600160a01b03166014612764565b611f57836020612764565b604051602001611f68929190614893565b60408051601f198184030181529082905262461bcd60e51b82526102bb91600401613d4c565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16610f3457611f4c816001600160a01b03166014612764565b611fd78484836128ff565b611fe18282612a27565b61203e85308686808060200260200160405190810160405280939291908181526020016000905b828210156120345761202560808302860136819003810190614900565b81526020019060010190612008565b5050505050612a42565b5050505050565b610f34828260405180602001604052806000815250612b5e565b6001600955565b6120708282612b91565b610f348282612bec565b6120848282612c59565b60008281526008602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6127108111156120f35760405162461bcd60e51b81526004016102bb90614974565b600380546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600090815260d360205260409020546001600160a01b031690565b6001600160a01b03163b151590565b600054610100900460ff166121a65760405162461bcd60e51b81526004016102bb9061499d565b6121ae612cbb565b565b600054610100900460ff166121d75760405162461bcd60e51b81526004016102bb9061499d565b6121df612ce2565b610bf881612d09565b600054610100900460ff1661220f5760405162461bcd60e51b81526004016102bb9061499d565b610f348282612d8e565b60006001805461222890614608565b80601f016020809104026020016040519081016040528092919081815260200182805461225490614608565b80156122a15780601f10612276576101008083540402835291602001916122a1565b820191906000526020600020905b81548152906001019060200180831161228457829003601f168201915b5050505050905081600190816122b79190614a38565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516122e9929190614af7565b60405180910390a15050565b60006123008261123a565b905061231081600084600161269e565b6123198261123a565b600083815260d56020908152604080832080546001600160a01b03199081169091556001600160a01b03851680855260d48452828520805460001901905587855260d390935281842080549091169055519293508492600080516020614e65833981519152908390a45050565b60008181526002602052604081205490816001600160401b038111156123ae576123ae613de6565b6040519080825280602002602001820160405280156123e757816020015b6123d4613ca0565b8152602001906001900390816123cc5790505b50905060005b8281101561242e576123ff8482610c0c565b828281518110612411576124116146b1565b60209081029190910101526124276001826146dd565b90506123ed565b5061243883612dce565b6119cd308583612a42565b6127108111156124655760405162461bcd60e51b81526004016102bb90614974565b6040805180820182526001600160a01b038481168083526020808401868152600089815260048352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b816001600160a01b0316836001600160a01b0316036125485760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016102bb565b6001600160a01b03838116600081815260d66020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191016124de565b60606125d28383604051806060016040528060278152602001614e3e60279139612e41565b9392505050565b6125e4848484611d72565b6125f084848484612eb9565b6119cd5760405162461bcd60e51b81526004016102bb90614b1c565b60006001600160e01b031982166380ac58cd60e01b148061263d57506001600160e01b03198216635b5e139f60e01b145b806109e557506301ffc9a760e01b6001600160e01b03198316146109e5565b60008061266883612155565b6001600160a01b0316141592915050565b600061268433611149565b15612696575060131936013560601c90565b503390565b90565b6126aa84848484612fc5565b6126c3600080516020614dfe8339815191526000611723565b1580156126d857506001600160a01b03841615155b80156126ec57506001600160a01b03831615155b156119cd57612709600080516020614dfe83398151915285611723565b806127275750612727600080516020614dfe83398151915284611723565b6119cd5760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b60448201526064016102bb565b6060600061277383600261477c565b61277e9060026146dd565b6001600160401b0381111561279557612795613de6565b6040519080825280601f01601f1916602001820160405280156127bf576020820181803683370190505b509050600360fc1b816000815181106127da576127da6146b1565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612809576128096146b1565b60200101906001600160f81b031916908160001a905350600061282d84600261477c565b6128389060016146dd565b90505b60018111156128b0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061286c5761286c6146b1565b1a60f81b828281518110612882576128826146b1565b60200101906001600160f81b031916908160001a90535060049490941c936128a981614b6e565b905061283b565b5083156125d25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102bb565b81806129375760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b60448201526064016102bb565b6000828152600260205260409020541561297f5760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b60448201526064016102bb565b60005b81811015612a12576129ba85858381811061299f5761299f6146b1565b9050608002018036038101906129b59190614900565b6130f4565b8484828181106129cc576129cc6146b1565b6000868152600260208181526040808420888552909201905290206080909102929092019190506129fd8282614b85565b50612a0b90506001826146dd565b9050612982565b50600091825260026020526040909120555050565b6000818152600260205260409020600101610bc68382614a38565b6000805b8251811015612b145773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316838281518110612a7f57612a7f6146b1565b6020026020010151600001516001600160a01b0316148015612aa957506001600160a01b03841630145b15612ade57828181518110612ac057612ac06146b1565b60200260200101516060015182612ad791906146dd565b9150612b02565b612b028585858481518110612af557612af56146b1565b60200260200101516133af565b612b0d6001826146dd565b9050612a46565b5080156119cd576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152600060208201819052918101919091526060810182905261203e8585836133af565b612b688383613509565b612b756000848484612eb9565b610bc65760405162461bcd60e51b81526004016102bb90614b1c565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260086020526040812080549160019190612c0b83856146dd565b9091555050600092835260086020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612c638282611f8e565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661205f5760405162461bcd60e51b81526004016102bb9061499d565b600054610100900460ff166121ae5760405162461bcd60e51b81526004016102bb9061499d565b600054610100900460ff16612d305760405162461bcd60e51b81526004016102bb9061499d565b60005b8151811015610f34576001606d6000848481518110612d5457612d546146b1565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101612d33565b600054610100900460ff16612db55760405162461bcd60e51b81526004016102bb9061499d565b60d1612dc18382614a38565b5060d2610bc68282614a38565b60005b600082815260026020526040902054811015612e2f5760008281526002602081815260408084208585528301909152822080546001600160a81b03191681556001808201849055910191909155612e2890826146dd565b9050612dd1565b50600090815260026020526040812055565b6060600080856001600160a01b031685604051612e5e9190614c11565b600060405180830381855af49150503d8060008114612e99576040519150601f19603f3d011682016040523d82523d6000602084013e612e9e565b606091505b5091509150612eaf86838387613612565b9695505050505050565b6000612ecd846001600160a01b0316612170565b15612fbd57836001600160a01b031663150b7a02612ee9611c37565b8786866040518563ffffffff1660e01b8152600401612f0b9493929190614c2d565b6020604051808303816000875af1925050508015612f46575060408051601f3d908101601f19168201909252612f4391810190614c60565b60015b612fa3573d808015612f74576040519150601f19603f3d011682016040523d82523d6000602084013e612f79565b606091505b508051600003612f9b5760405162461bcd60e51b81526004016102bb90614b1c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c04565b506001610c04565b60018111156130345760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016102bb565b816001600160a01b0385166130925761308d816101058054600083815261010660205260408120829055600182018355919091527ffc62abc8c0fc47c2d92f5aec99bf8b60f375828e14394d89345cae11a98673710155565b6130b5565b836001600160a01b0316856001600160a01b0316146130b5576130b58582613689565b6001600160a01b0384166130d1576130cc8161372b565b61203e565b846001600160a01b0316846001600160a01b03161461203e5761203e84826137e0565b60018160200151600281111561310c5761310c613f28565b036131b65780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790613144906380ac58cd90600401614c7d565b602060405180830381865afa92505050801561317d575060408051601f3d908101601f1916820190925261317a91810190614c95565b60015b6131995760405162461bcd60e51b81526004016102bb90614cb2565b80610f345760405162461bcd60e51b81526004016102bb90614cb2565b6002816020015160028111156131ce576131ce613f28565b036132065780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906131449063d9b67a2690600401614c7d565b60008160200151600281111561321e5761321e613f28565b03610bf85780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bf85780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a79061327b906380ac58cd90600401614c7d565b602060405180830381865afa9250505080156132b4575060408051601f3d908101601f191682019092526132b191810190614c95565b60015b6132dd576132c0614cd6565b806308c379a003610f3457506132d4614cf1565b80610f34575050565b80156132fb5760405162461bcd60e51b81526004016102bb90614cb2565b81516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a79061332e9063d9b67a2690600401614c7d565b602060405180830381865afa925050508015613367575060408051601f3d908101601f1916820190925261336491810190614c95565b60015b61339157613373614cd6565b806308c379a003610bc65750613387614cf1565b80610bc657505050565b8015610bc65760405162461bcd60e51b81526004016102bb90614cb2565b6000816020015160028111156133c7576133c7613f28565b0361340157610bc68160000151848484606001517f0000000000000000000000000000000000000000000000000000000000000000613826565b60018160200151600281111561341957613419613f28565b0361348b5780516040808301519051632142170760e11b81526001600160a01b03909216916342842e0e916134549187918791600401614d7a565b600060405180830381600087803b15801561346e57600080fd5b505af1158015613482573d6000803e3d6000fd5b50505050505050565b6002816020015160028111156134a3576134a3613f28565b03610bc657805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c401613454565b6001600160a01b03821661355f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016102bb565b6135688161265c565b156135855760405162461bcd60e51b81526004016102bb90614d9e565b61359360008383600161269e565b61359c8161265c565b156135b95760405162461bcd60e51b81526004016102bb90614d9e565b6001600160a01b038216600081815260d4602090815260408083208054600101905584835260d390915280822080546001600160a01b031916841790555183929190600080516020614e65833981519152908290a45050565b6060831561367f5782516000036136785761362c85612170565b6136785760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b5081610c04565b610c04838361398b565b600060016136968461126e565b6136a09190614dd4565b600083815261010460205260409020549091508082146136f6576001600160a01b038416600090815261010360209081526040808320858452825280832054848452818420819055835261010490915290208190555b506000918252610104602090815260408084208490556001600160a01b03909416835261010381528383209183525290812055565b6101055460009061373e90600190614dd4565b600083815261010660205260408120546101058054939450909284908110613768576137686146b1565b9060005260206000200154905080610105838154811061378a5761378a6146b1565b600091825260208083209091019290925582815261010690915260408082208490558582528120556101058054806137c4576137c4614de7565b6001900381819060005260206000200160009055905550505050565b60006137eb8361126e565b6001600160a01b0390931660009081526101036020908152604080832086845282528083208590559382526101049052919091209190915550565b811561203e5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0386160161397f57306001600160a01b038516036138c657604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b1580156138a357600080fd5b505af11580156138b7573d6000803e3d6000fd5b505050506130cc8383836139b5565b306001600160a01b038416036139745734821461391b5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b60448201526064016102bb565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561395657600080fd5b505af115801561396a573d6000803e3d6000fd5b505050505061203e565b6130cc8383836139b5565b61203e85858585613a7a565b81511561399b5781518083602001fd5b8060405162461bcd60e51b81526004016102bb9190613d4c565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114613a02576040519150601f19603f3d011682016040523d82523d6000602084013e613a07565b606091505b50509050806119cd57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015613a4b57600080fd5b505af1158015613a5f573d6000803e3d6000fd5b506119cd935050506001600160a01b03841690508585613ad2565b816001600160a01b0316836001600160a01b031603156119cd57306001600160a01b03841603613abd57613ab86001600160a01b0385168383613ad2565b6119cd565b6119cd6001600160a01b038516848484613b28565b610bc68363a9059cbb60e01b8484604051602401613af19291906140db565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613b49565b6119cd846323b872dd60e01b858585604051602401613af193929190614d7a565b6000613b9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c1b9092919063ffffffff16565b805190915015610bc65780806020019051810190613bbc9190614c95565b610bc65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b6060610c04848460008585600080866001600160a01b03168587604051613c429190614c11565b60006040518083038185875af1925050503d8060008114613c7f576040519150601f19603f3d011682016040523d82523d6000602084013e613c84565b606091505b5091509150613c9587838387613612565b979650505050505050565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b6001600160e01b031981168114610bf857600080fd5b600060208284031215613cf157600080fd5b81356125d281613cc9565b60005b83811015613d17578181015183820152602001613cff565b50506000910152565b60008151808452613d38816020860160208601613cfc565b601f01601f19169290920160200192915050565b6020815260006125d26020830184613d20565b600060208284031215613d7157600080fd5b5035919050565b6001600160a01b0381168114610bf857600080fd5b8035613d9881613d78565b919050565b60008060408385031215613db057600080fd5b8235613dbb81613d78565b946020939093013593505050565b600060208284031215613ddb57600080fd5b81356125d281613d78565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613e2157613e21613de6565b6040525050565b600082601f830112613e3957600080fd5b81356001600160401b03811115613e5257613e52613de6565b604051613e69601f8301601f191660200182613dfc565b818152846020838601011115613e7e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613eb157600080fd5b8435613ebc81613d78565b93506020850135613ecc81613d78565b92506040850135915060608501356001600160401b03811115613eee57600080fd5b613efa87828801613e28565b91505092959194509250565b60008060408385031215613f1957600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60038110613f5c57634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260208082015190613f8090840182613f3e565b5060408181015190830152606090810151910152565b608081016109e58284613f60565b600080600060608486031215613fb957600080fd5b8335613fc481613d78565b92506020840135613fd481613d78565b929592945050506040919091013590565b60008083601f840112613ff757600080fd5b5081356001600160401b0381111561400e57600080fd5b60208301915083602082850101111561402657600080fd5b9250929050565b60008060008060006060868803121561404557600080fd5b85356001600160401b038082111561405c57600080fd5b818801915088601f83011261407057600080fd5b81358181111561407f57600080fd5b8960208260071b850101111561409457600080fd5b6020928301975095509087013590808211156140af57600080fd5b506140bc88828901613fe5565b90945092506140cf905060408701613d8d565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561410757600080fd5b82359150602083013561411981613d78565b809150509250929050565b60006001600160401b0382111561413d5761413d613de6565b5060051b60200190565b600082601f83011261415857600080fd5b8135602061416582614124565b6040516141728282613dfc565b80915083815260208101915060208460051b87010193508684111561419657600080fd5b602086015b848110156141bb5780356141ae81613d78565b835291830191830161419b565b509695505050505050565b600080600080600080600060e0888a0312156141e157600080fd5b6141ea88613d8d565b965060208801356001600160401b038082111561420657600080fd5b6142128b838c01613e28565b975060408a013591508082111561422857600080fd5b6142348b838c01613e28565b965060608a013591508082111561424a57600080fd5b6142568b838c01613e28565b955060808a013591508082111561426c57600080fd5b506142798a828b01614147565b93505061428860a08901613d8d565b915060c0880135905092959891949750929550565b6000602082840312156142af57600080fd5b81356001600160401b038111156142c557600080fd5b610c0484828501613e28565b6000806000606084860312156142e657600080fd5b833592506020840135613fd481613d78565b8015158114610bf857600080fd5b6000806040838503121561431957600080fd5b823561432481613d78565b91506020830135614119816142f8565b6000806020838503121561434757600080fd5b82356001600160401b038082111561435e57600080fd5b818501915085601f83011261437257600080fd5b81358181111561438157600080fd5b8660208260051b850101111561439657600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156143ff57603f198886030184526143ed858351613d20565b945092850192908501906001016143d1565b5092979650505050505050565b600082601f83011261441d57600080fd5b8135602061442a82614124565b6040516144378282613dfc565b80915083815260208101915060208460051b87010193508684111561445b57600080fd5b602086015b848110156141bb5780358352918301918301614460565b600080600080600060a0868803121561448f57600080fd5b853561449a81613d78565b945060208601356144aa81613d78565b935060408601356001600160401b03808211156144c657600080fd5b6144d289838a0161440c565b945060608801359150808211156144e857600080fd5b6144f489838a0161440c565b9350608088013591508082111561450a57600080fd5b5061451788828901613e28565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b8181101561456657614553838551613f60565b9284019260809290920191600101614540565b50909695505050505050565b6000806040838503121561458557600080fd5b823561459081613d78565b9150602083013561411981613d78565b600080600080600060a086880312156145b857600080fd5b85356145c381613d78565b945060208601356145d381613d78565b9350604086013592506060860135915060808601356001600160401b038111156145fc57600080fd5b61451788828901613e28565b600181811c9082168061461c57607f821691505b602082108103611a6157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109e5576109e56146c7565b60038110610bf857600080fd5b6020808252818101839052600090604080840186845b8781101561476f57813561472681613d78565b6001600160a01b031683528185013561473e816146f0565b61474a86850182613f3e565b5081840135838501526060808301359084015260809283019290910190600101614713565b5090979650505050505050565b80820281158282048414176109e5576109e56146c7565b6000826147b057634e487b7160e01b600052601260045260246000fd5b500490565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6000808335601e198436030181126147fe57600080fd5b8301803591506001600160401b0382111561481857600080fd5b60200191503681900382131561402657600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516148c3816015850160208801613cfc565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516148f4816026840160208801613cfc565b01602601949350505050565b60006080828403121561491257600080fd5b604051608081018181106001600160401b038211171561493457614934613de6565b604052823561494281613d78565b81526020830135614952816146f0565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610bc6576000816000526020600020601f850160051c81016020861015614a115750805b601f850160051c820191505b81811015614a3057828155600101614a1d565b505050505050565b81516001600160401b03811115614a5157614a51613de6565b614a6581614a5f8454614608565b846149e8565b602080601f831160018114614a9a5760008415614a825750858301515b600019600386901b1c1916600185901b178555614a30565b600085815260208120601f198616915b82811015614ac957888601518255948401946001909101908401614aaa565b5085821015614ae75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000614b0a6040830185613d20565b8281036020840152610e588185613d20565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600081614b7d57614b7d6146c7565b506000190190565b8135614b9081613d78565b81546001600160a01b031981166001600160a01b039290921691821783556020840135614bbc816146f0565b60038110614bda57634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b60008251614c23818460208701613cfc565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612eaf90830184613d20565b600060208284031215614c7257600080fd5b81516125d281613cc9565b60e09190911b6001600160e01b031916815260200190565b600060208284031215614ca757600080fd5b81516125d2816142f8565b6020808252600a908201526921546f6b656e5479706560b01b604082015260600190565b600060033d111561269b5760046000803e5060005160e01c90565b600060443d1015614cff5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715614d2e57505050505090565b8285019150815181811115614d465750505050505090565b843d8701016020828501011115614d605750505050505090565b614d6f60208286010187613dfc565b509095945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601c908201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604082015260600190565b818103818111156109e5576109e56146c7565b634e487b7160e01b600052603160045260246000fdfe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122022075cc963d51d591655c16464fcc9613b4a2d4f30c509ca77035f728a9a97c864736f6c63430008170033",
    "sourceMap": "1563:8820:369:-:0;;;3062:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1067:40:95;;;;3279:19:450::1;3302:13:::0;::::1;::::0;::::1;;;3301:14;::::0;3347:34;::::1;;;-1:-1:-1::0;3365:12:450::1;::::0;3380:1:::1;3365:12;::::0;;::::1;:16;3347:34;3346:108;;;-1:-1:-1::0;3426:4:450::1;1713:19:476::0;:23;;;3387:66:450::1;;-1:-1:-1::0;3436:12:450::1;::::0;::::1;;::::0;:17:::1;3387:66;3325:201;;;::::0;-1:-1:-1;;;3325:201:450;;511:2:821;3325:201:450::1;::::0;::::1;493:21:821::0;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:821;;;633:44;694:19;;3325:201:450::1;;;;;;;;3536:12;:16:::0;;-1:-1:-1;;3536:16:450::1;3551:1;3536:16;::::0;;3562:65;::::1;;;3596:13;:20:::0;;-1:-1:-1;;3596:20:450::1;;;::::0;;3562:65:::1;3651:14;3647:99;;;3697:5;3681:21:::0;;-1:-1:-1;;3681:21:450::1;::::0;;3721:14:::1;::::0;-1:-1:-1;876:36:821;;3721:14:450::1;::::0;864:2:821;849:18;3721:14:450::1;;;;;;;3647:99;3269:483;3062:87:369::0;1563:8820;;14:290:821;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:821;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:821:o;724:194::-;1563:8820:369;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102425760003560e01c8063754b8fe711610135578063754b8fe7146106475780637647691d146106675780638da5cb5b146106875780639010d07c146106a557806391d14854146106c5578063938e3d7b146106e557806395d89b41146107055780639bcf7a151461071a578063a0a8e4601461073a578063a217fddf14610756578063a22cb4651461076b578063a32fa5b31461078b578063ac9650d8146107ab578063b24f2d39146107d8578063b88d4fde14610803578063bc197c8114610823578063c87b56dd1461084f578063ca15c8731461086f578063cb2ef6f71461088f578063d0d2fe25146108ae578063d547741f146108db578063d5576d26146108fb578063e8a3d48514610928578063e985e9c51461093d578063f23a6e611461095d57600080fd5b806301ffc9a7146102cb57806306fdde0314610300578063081812fc14610322578063095ea7b31461035a57806313af40351461037a578063150b7a021461039a57806318160ddd146103d35780631da799c9146103f357806323b872dd14610420578063248a9ca31461044057806329e471dd1461046d5780632a55205a146104805780632f2ff15d146104ae5780632f745c59146104ce57806336568abe146104ee5780633b1475a71461050e57806342842e0e146105255780634cc157df146105455780634f6ccce714610587578063572b6c05146105a7578063600dd5ea146105c757806361195e94146105e75780636352211e1461060757806370a082311461062757600080fd5b366102c657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102c45760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613cdf565b610989565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b506103156109eb565b6040516102f79190613d4c565b34801561032e57600080fd5b5061034261033d366004613d5f565b610a7d565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b506102c4610375366004613d9d565b610aa4565b34801561038657600080fd5b506102c4610395366004613dc9565b610bcb565b3480156103a657600080fd5b506103ba6103b5366004613e9b565b610bfb565b6040516001600160e01b031990911681526020016102f7565b3480156103df57600080fd5b50610105545b6040519081526020016102f7565b3480156103ff57600080fd5b5061041361040e366004613f06565b610c0c565b6040516102f79190613f96565b34801561042c57600080fd5b506102c461043b366004613fa4565b610c98565b34801561044c57600080fd5b506103e561045b366004613d5f565b60009081526007602052604090205490565b6103e561047b36600461402d565b610cd0565b34801561048c57600080fd5b506104a061049b366004613f06565b610e61565b6040516102f79291906140db565b3480156104ba57600080fd5b506102c46104c93660046140f4565b610e9e565b3480156104da57600080fd5b506103e56104e9366004613d9d565b610f38565b3480156104fa57600080fd5b506102c46105093660046140f4565b610fcf565b34801561051a57600080fd5b506103e56101355481565b34801561053157600080fd5b506102c4610540366004613fa4565b61102e565b34801561055157600080fd5b50610565610560366004613d5f565b611049565b604080516001600160a01b03909316835261ffff9091166020830152016102f7565b34801561059357600080fd5b506103e56105a2366004613d5f565b6110b4565b3480156105b357600080fd5b506102eb6105c2366004613dc9565b611149565b3480156105d357600080fd5b506102c46105e2366004613d9d565b611167565b3480156105f357600080fd5b50610315610602366004613d5f565b611195565b34801561061357600080fd5b50610342610622366004613d5f565b61123a565b34801561063357600080fd5b506103e5610642366004613dc9565b61126e565b34801561065357600080fd5b506102c46106623660046141c6565b6112f4565b34801561067357600080fd5b506102c46106823660046140f4565b6114ec565b34801561069357600080fd5b506005546001600160a01b0316610342565b3480156106b157600080fd5b506103426106c0366004613f06565b611635565b3480156106d157600080fd5b506102eb6106e03660046140f4565b611723565b3480156106f157600080fd5b506102c461070036600461429d565b61174e565b34801561071157600080fd5b5061031561177b565b34801561072657600080fd5b506102c46107353660046142d1565b61178a565b34801561074657600080fd5b50604051600181526020016102f7565b34801561076257600080fd5b506103e5600081565b34801561077757600080fd5b506102c4610786366004614306565b6117b9565b34801561079757600080fd5b506102eb6107a63660046140f4565b6117cb565b3480156107b757600080fd5b506107cb6107c6366004614334565b611821565b6040516102f791906143a8565b3480156107e457600080fd5b506003546001600160a01b03811690600160a01b900461ffff16610565565b34801561080f57600080fd5b506102c461081e366004613e9b565b611994565b34801561082f57600080fd5b506103ba61083e366004614477565b63bc197c8160e01b95945050505050565b34801561085b57600080fd5b5061031561086a366004613d5f565b6119d3565b34801561087b57600080fd5b506103e561088a366004613d5f565b6119de565b34801561089b57600080fd5b506804d756c7469777261760bc1b6103e5565b3480156108ba57600080fd5b506103e56108c9366004613d5f565b60009081526002602052604090205490565b3480156108e757600080fd5b506102c46108f63660046140f4565b611a67565b34801561090757600080fd5b5061091b610916366004613d5f565b611a80565b6040516102f79190614524565b34801561093457600080fd5b50610315611b31565b34801561094957600080fd5b506102eb610958366004614572565b611bbf565b34801561096957600080fd5b506103ba6109783660046145a0565b63f23a6e6160e01b95945050505050565b600061099482611bed565b806109af57506001600160e01b031982166380ac58cd60e01b145b806109ca57506001600160e01b03198216630271189760e51b145b806109e557506001600160e01b0319821663152a902d60e11b145b92915050565b606060d180546109fa90614608565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2690614608565b8015610a735780601f10610a4857610100808354040283529160200191610a73565b820191906000526020600020905b815481529060010190602001808311610a5657829003601f168201915b5050505050905090565b6000610a8882611c12565b50600090815260d560205260409020546001600160a01b031690565b6000610aaf8261123a565b9050806001600160a01b0316836001600160a01b031603610b1c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016102bb565b806001600160a01b0316610b2e611c37565b6001600160a01b03161480610b4a5750610b4a81610958611c37565b610bbc5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016102bb565b610bc68383611c46565b505050565b610bd3611cb4565b610bef5760405162461bcd60e51b81526004016102bb9061463c565b610bf881611cc2565b50565b630a85bd0160e11b5b949350505050565b610c14613ca0565b6000838152600260208181526040808420868552830182529283902083516080810190945280546001600160a01b0381168552909291840191600160a01b90910460ff1690811115610c6857610c68613f28565b6002811115610c7957610c79613f28565b8152600182015460208201526002909101546040909101529392505050565b610ca9610ca3611c37565b82611d14565b610cc55760405162461bcd60e51b81526004016102bb90614664565b610bc6838383611d72565b6000610cda611ed1565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610d0c81610d07611c37565b611f2a565b610d25600080516020614e1e8339815191526000611723565b610d875760005b86811015610d8557610d73600080516020614e1e833981519152898984818110610d5857610d586146b1565b610d6e9260206080909202019081019150613dc9565b611f8e565b610d7e6001826146dd565b9050610d2c565b505b610135805492506001906000610d9d83866146dd565b90915550610dee9050610dae611c37565b888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250611fcc915050565b610df88383612045565b81836001600160a01b0316610e0b611c37565b6001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a604051610e459291906146fd565b60405180910390a450610e586001600955565b95945050505050565b600080600080610e7086611049565b90945084925061ffff169050612710610e89828761477c565b610e939190614793565b925050509250929050565b600082815260076020526040902054610eb79033611f8e565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff1615610f2a5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016102bb565b610f348282612066565b5050565b6000610f438361126e565b8210610fa55760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016102bb565b506001600160a01b0391909116600090815261010360209081526040808320938352929052205490565b336001600160a01b038216146110245760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016102bb565b610f34828261207a565b610bc683838360405180602001604052806000815250611994565b6000818152600460209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561109057805160208201516110aa565b6003546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60006110c06101055490565b82106111235760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016102bb565b6101058281548110611137576111376146b1565b90600052602060002001549050919050565b6001600160a01b03166000908152606d602052604090205460ff1690565b61116f611cb4565b61118b5760405162461bcd60e51b81526004016102bb9061463c565b610f3482826120d1565b60008181526002602052604090206001018054606091906111b590614608565b80601f01602080910402602001604051908101604052809291908181526020018280546111e190614608565b801561122e5780601f106112035761010080835404028352916020019161122e565b820191906000526020600020905b81548152906001019060200180831161121157829003601f168201915b50505050509050919050565b60008061124683612155565b90506001600160a01b0381166109e55760405162461bcd60e51b81526004016102bb906147b5565b60006001600160a01b0382166112d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016102bb565b506001600160a01b0316600090815260d4602052604090205490565b600054610100900460ff16158080156113145750600054600160ff909116105b80611335575061132330612170565b158015611335575060005460ff166001145b6113985760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102bb565b6000805460ff1916600117905580156113bb576000805461ff0019166101001790555b6113c361217f565b6113cc846121b0565b6113d687876121e8565b6113e083836120d1565b6113e988611cc2565b6113f285612219565b6113fd600089612066565b6114277f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a689612066565b61143f600080516020614dfe83398151915289612066565b611458600080516020614dfe8339815191526000612066565b6114837fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f05436000612066565b61149c600080516020614e1e8339815191526000612066565b80156114e2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6114f4611ed1565b7fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054361152181610d07611c37565b6101355483106115665760405162461bcd60e51b815260206004820152601060248201526f3bb930b83832b21027232a102227229760811b60448201526064016102bb565b611577611571611c37565b84611d14565b6115cf5760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b60648201526084016102bb565b6115d8836122f5565b6115e28284612386565b82826001600160a01b03166115f5611c37565b6001600160a01b03167fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7360405160405180910390a450610f346001600955565b60008281526008602052604081205481805b8281101561171a5760008681526008602090815260408083208484526001019091529020546001600160a01b0316156116c3578482036116b15760008681526008602090815260408083209383526001909301905220546001600160a01b031692506109e5915050565b6116bc6001836146dd565b9150611708565b6116ce866000611723565b80156116f55750600086815260086020908152604080832083805260020190915290205481145b15611708576117056001836146dd565b91505b6117136001826146dd565b9050611647565b50505092915050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611756611cb4565b6117725760405162461bcd60e51b81526004016102bb9061463c565b610bf881612219565b606060d280546109fa90614608565b611792611cb4565b6117ae5760405162461bcd60e51b81526004016102bb9061463c565b610bc6838383612443565b610f346117c4611c37565b83836124eb565b600082815260066020908152604080832083805290915281205460ff16611818575060008281526006602090815260408083206001600160a01b038516845290915290205460ff166109e5565b50600192915050565b6060816001600160401b0381111561183b5761183b613de6565b60405190808252806020026020018201604052801561186e57816020015b60608152602001906001900390816118595790505b509050600061187b611c37565b9050336001600160a01b038216141560005b8481101561171a57811561190c576118ea308787848181106118b1576118b16146b1565b90506020028101906118c391906147e7565b866040516020016118d69392919061482d565b6040516020818303038152906040526125ad565b8482815181106118fc576118fc6146b1565b602002602001018190525061198c565b61196e30878784818110611922576119226146b1565b905060200281019061193491906147e7565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125ad92505050565b848281518110611980576119806146b1565b60200260200101819052505b60010161188d565b6119a561199f611c37565b83611d14565b6119c15760405162461bcd60e51b81526004016102bb90614664565b6119cd848484846125d9565b50505050565b60606109e582611195565b600081815260086020526040812054815b81811015611a425760008481526008602090815260408083208484526001019091529020546001600160a01b031615611a3057611a2d6001846146dd565b92505b611a3b6001826146dd565b90506119ef565b50611a4e836000611723565b15611a6157611a5e6001836146dd565b91505b50919050565b6000828152600760205260409020546110249033611f8e565b600081815260026020526040902054606090806001600160401b03811115611aaa57611aaa613de6565b604051908082528060200260200182016040528015611ae357816020015b611ad0613ca0565b815260200190600190039081611ac85790505b50915060005b81811015611b2a57611afb8482610c0c565b838281518110611b0d57611b0d6146b1565b6020908102919091010152611b236001826146dd565b9050611ae9565b5050919050565b60018054611b3e90614608565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6a90614608565b8015611bb75780601f10611b8c57610100808354040283529160200191611bb7565b820191906000526020600020905b815481529060010190602001808311611b9a57829003601f168201915b505050505081565b6001600160a01b03918216600090815260d66020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806109e557506109e58261260c565b611c1b8161265c565b610bf85760405162461bcd60e51b81526004016102bb906147b5565b6000611c41612679565b905090565b600081815260d56020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c7b8261123a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611c41816106e0611c37565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600080611d208361123a565b9050806001600160a01b0316846001600160a01b03161480611d475750611d478185611bbf565b80610c045750836001600160a01b0316611d6084610a7d565b6001600160a01b031614949350505050565b826001600160a01b0316611d858261123a565b6001600160a01b031614611dab5760405162461bcd60e51b81526004016102bb9061484e565b6001600160a01b038216611e0d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016102bb565b611e1a838383600161269e565b826001600160a01b0316611e2d8261123a565b6001600160a01b031614611e535760405162461bcd60e51b81526004016102bb9061484e565b600081815260d56020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260d4855283862080546000190190559087168086528386208054600101905586865260d39094528285208054909216841790915590518493600080516020614e6583398151915291a4505050565b600260095403611f235760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102bb565b6002600955565b611f3482826117cb565b610f3457611f4c816001600160a01b03166014612764565b611f57836020612764565b604051602001611f68929190614893565b60408051601f198184030181529082905262461bcd60e51b82526102bb91600401613d4c565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16610f3457611f4c816001600160a01b03166014612764565b611fd78484836128ff565b611fe18282612a27565b61203e85308686808060200260200160405190810160405280939291908181526020016000905b828210156120345761202560808302860136819003810190614900565b81526020019060010190612008565b5050505050612a42565b5050505050565b610f34828260405180602001604052806000815250612b5e565b6001600955565b6120708282612b91565b610f348282612bec565b6120848282612c59565b60008281526008602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6127108111156120f35760405162461bcd60e51b81526004016102bb90614974565b600380546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600090815260d360205260409020546001600160a01b031690565b6001600160a01b03163b151590565b600054610100900460ff166121a65760405162461bcd60e51b81526004016102bb9061499d565b6121ae612cbb565b565b600054610100900460ff166121d75760405162461bcd60e51b81526004016102bb9061499d565b6121df612ce2565b610bf881612d09565b600054610100900460ff1661220f5760405162461bcd60e51b81526004016102bb9061499d565b610f348282612d8e565b60006001805461222890614608565b80601f016020809104026020016040519081016040528092919081815260200182805461225490614608565b80156122a15780601f10612276576101008083540402835291602001916122a1565b820191906000526020600020905b81548152906001019060200180831161228457829003601f168201915b5050505050905081600190816122b79190614a38565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516122e9929190614af7565b60405180910390a15050565b60006123008261123a565b905061231081600084600161269e565b6123198261123a565b600083815260d56020908152604080832080546001600160a01b03199081169091556001600160a01b03851680855260d48452828520805460001901905587855260d390935281842080549091169055519293508492600080516020614e65833981519152908390a45050565b60008181526002602052604081205490816001600160401b038111156123ae576123ae613de6565b6040519080825280602002602001820160405280156123e757816020015b6123d4613ca0565b8152602001906001900390816123cc5790505b50905060005b8281101561242e576123ff8482610c0c565b828281518110612411576124116146b1565b60209081029190910101526124276001826146dd565b90506123ed565b5061243883612dce565b6119cd308583612a42565b6127108111156124655760405162461bcd60e51b81526004016102bb90614974565b6040805180820182526001600160a01b038481168083526020808401868152600089815260048352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b816001600160a01b0316836001600160a01b0316036125485760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016102bb565b6001600160a01b03838116600081815260d66020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191016124de565b60606125d28383604051806060016040528060278152602001614e3e60279139612e41565b9392505050565b6125e4848484611d72565b6125f084848484612eb9565b6119cd5760405162461bcd60e51b81526004016102bb90614b1c565b60006001600160e01b031982166380ac58cd60e01b148061263d57506001600160e01b03198216635b5e139f60e01b145b806109e557506301ffc9a760e01b6001600160e01b03198316146109e5565b60008061266883612155565b6001600160a01b0316141592915050565b600061268433611149565b15612696575060131936013560601c90565b503390565b90565b6126aa84848484612fc5565b6126c3600080516020614dfe8339815191526000611723565b1580156126d857506001600160a01b03841615155b80156126ec57506001600160a01b03831615155b156119cd57612709600080516020614dfe83398151915285611723565b806127275750612727600080516020614dfe83398151915284611723565b6119cd5760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b60448201526064016102bb565b6060600061277383600261477c565b61277e9060026146dd565b6001600160401b0381111561279557612795613de6565b6040519080825280601f01601f1916602001820160405280156127bf576020820181803683370190505b509050600360fc1b816000815181106127da576127da6146b1565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612809576128096146b1565b60200101906001600160f81b031916908160001a905350600061282d84600261477c565b6128389060016146dd565b90505b60018111156128b0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061286c5761286c6146b1565b1a60f81b828281518110612882576128826146b1565b60200101906001600160f81b031916908160001a90535060049490941c936128a981614b6e565b905061283b565b5083156125d25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102bb565b81806129375760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b60448201526064016102bb565b6000828152600260205260409020541561297f5760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b60448201526064016102bb565b60005b81811015612a12576129ba85858381811061299f5761299f6146b1565b9050608002018036038101906129b59190614900565b6130f4565b8484828181106129cc576129cc6146b1565b6000868152600260208181526040808420888552909201905290206080909102929092019190506129fd8282614b85565b50612a0b90506001826146dd565b9050612982565b50600091825260026020526040909120555050565b6000818152600260205260409020600101610bc68382614a38565b6000805b8251811015612b145773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316838281518110612a7f57612a7f6146b1565b6020026020010151600001516001600160a01b0316148015612aa957506001600160a01b03841630145b15612ade57828181518110612ac057612ac06146b1565b60200260200101516060015182612ad791906146dd565b9150612b02565b612b028585858481518110612af557612af56146b1565b60200260200101516133af565b612b0d6001826146dd565b9050612a46565b5080156119cd576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152600060208201819052918101919091526060810182905261203e8585836133af565b612b688383613509565b612b756000848484612eb9565b610bc65760405162461bcd60e51b81526004016102bb90614b1c565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260086020526040812080549160019190612c0b83856146dd565b9091555050600092835260086020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612c638282611f8e565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661205f5760405162461bcd60e51b81526004016102bb9061499d565b600054610100900460ff166121ae5760405162461bcd60e51b81526004016102bb9061499d565b600054610100900460ff16612d305760405162461bcd60e51b81526004016102bb9061499d565b60005b8151811015610f34576001606d6000848481518110612d5457612d546146b1565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101612d33565b600054610100900460ff16612db55760405162461bcd60e51b81526004016102bb9061499d565b60d1612dc18382614a38565b5060d2610bc68282614a38565b60005b600082815260026020526040902054811015612e2f5760008281526002602081815260408084208585528301909152822080546001600160a81b03191681556001808201849055910191909155612e2890826146dd565b9050612dd1565b50600090815260026020526040812055565b6060600080856001600160a01b031685604051612e5e9190614c11565b600060405180830381855af49150503d8060008114612e99576040519150601f19603f3d011682016040523d82523d6000602084013e612e9e565b606091505b5091509150612eaf86838387613612565b9695505050505050565b6000612ecd846001600160a01b0316612170565b15612fbd57836001600160a01b031663150b7a02612ee9611c37565b8786866040518563ffffffff1660e01b8152600401612f0b9493929190614c2d565b6020604051808303816000875af1925050508015612f46575060408051601f3d908101601f19168201909252612f4391810190614c60565b60015b612fa3573d808015612f74576040519150601f19603f3d011682016040523d82523d6000602084013e612f79565b606091505b508051600003612f9b5760405162461bcd60e51b81526004016102bb90614b1c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c04565b506001610c04565b60018111156130345760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016102bb565b816001600160a01b0385166130925761308d816101058054600083815261010660205260408120829055600182018355919091527ffc62abc8c0fc47c2d92f5aec99bf8b60f375828e14394d89345cae11a98673710155565b6130b5565b836001600160a01b0316856001600160a01b0316146130b5576130b58582613689565b6001600160a01b0384166130d1576130cc8161372b565b61203e565b846001600160a01b0316846001600160a01b03161461203e5761203e84826137e0565b60018160200151600281111561310c5761310c613f28565b036131b65780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790613144906380ac58cd90600401614c7d565b602060405180830381865afa92505050801561317d575060408051601f3d908101601f1916820190925261317a91810190614c95565b60015b6131995760405162461bcd60e51b81526004016102bb90614cb2565b80610f345760405162461bcd60e51b81526004016102bb90614cb2565b6002816020015160028111156131ce576131ce613f28565b036132065780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906131449063d9b67a2690600401614c7d565b60008160200151600281111561321e5761321e613f28565b03610bf85780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bf85780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a79061327b906380ac58cd90600401614c7d565b602060405180830381865afa9250505080156132b4575060408051601f3d908101601f191682019092526132b191810190614c95565b60015b6132dd576132c0614cd6565b806308c379a003610f3457506132d4614cf1565b80610f34575050565b80156132fb5760405162461bcd60e51b81526004016102bb90614cb2565b81516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a79061332e9063d9b67a2690600401614c7d565b602060405180830381865afa925050508015613367575060408051601f3d908101601f1916820190925261336491810190614c95565b60015b61339157613373614cd6565b806308c379a003610bc65750613387614cf1565b80610bc657505050565b8015610bc65760405162461bcd60e51b81526004016102bb90614cb2565b6000816020015160028111156133c7576133c7613f28565b0361340157610bc68160000151848484606001517f0000000000000000000000000000000000000000000000000000000000000000613826565b60018160200151600281111561341957613419613f28565b0361348b5780516040808301519051632142170760e11b81526001600160a01b03909216916342842e0e916134549187918791600401614d7a565b600060405180830381600087803b15801561346e57600080fd5b505af1158015613482573d6000803e3d6000fd5b50505050505050565b6002816020015160028111156134a3576134a3613f28565b03610bc657805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c401613454565b6001600160a01b03821661355f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016102bb565b6135688161265c565b156135855760405162461bcd60e51b81526004016102bb90614d9e565b61359360008383600161269e565b61359c8161265c565b156135b95760405162461bcd60e51b81526004016102bb90614d9e565b6001600160a01b038216600081815260d4602090815260408083208054600101905584835260d390915280822080546001600160a01b031916841790555183929190600080516020614e65833981519152908290a45050565b6060831561367f5782516000036136785761362c85612170565b6136785760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b5081610c04565b610c04838361398b565b600060016136968461126e565b6136a09190614dd4565b600083815261010460205260409020549091508082146136f6576001600160a01b038416600090815261010360209081526040808320858452825280832054848452818420819055835261010490915290208190555b506000918252610104602090815260408084208490556001600160a01b03909416835261010381528383209183525290812055565b6101055460009061373e90600190614dd4565b600083815261010660205260408120546101058054939450909284908110613768576137686146b1565b9060005260206000200154905080610105838154811061378a5761378a6146b1565b600091825260208083209091019290925582815261010690915260408082208490558582528120556101058054806137c4576137c4614de7565b6001900381819060005260206000200160009055905550505050565b60006137eb8361126e565b6001600160a01b0390931660009081526101036020908152604080832086845282528083208590559382526101049052919091209190915550565b811561203e5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0386160161397f57306001600160a01b038516036138c657604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b1580156138a357600080fd5b505af11580156138b7573d6000803e3d6000fd5b505050506130cc8383836139b5565b306001600160a01b038416036139745734821461391b5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b60448201526064016102bb565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561395657600080fd5b505af115801561396a573d6000803e3d6000fd5b505050505061203e565b6130cc8383836139b5565b61203e85858585613a7a565b81511561399b5781518083602001fd5b8060405162461bcd60e51b81526004016102bb9190613d4c565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114613a02576040519150601f19603f3d011682016040523d82523d6000602084013e613a07565b606091505b50509050806119cd57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015613a4b57600080fd5b505af1158015613a5f573d6000803e3d6000fd5b506119cd935050506001600160a01b03841690508585613ad2565b816001600160a01b0316836001600160a01b031603156119cd57306001600160a01b03841603613abd57613ab86001600160a01b0385168383613ad2565b6119cd565b6119cd6001600160a01b038516848484613b28565b610bc68363a9059cbb60e01b8484604051602401613af19291906140db565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613b49565b6119cd846323b872dd60e01b858585604051602401613af193929190614d7a565b6000613b9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c1b9092919063ffffffff16565b805190915015610bc65780806020019051810190613bbc9190614c95565b610bc65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b6060610c04848460008585600080866001600160a01b03168587604051613c429190614c11565b60006040518083038185875af1925050503d8060008114613c7f576040519150601f19603f3d011682016040523d82523d6000602084013e613c84565b606091505b5091509150613c9587838387613612565b979650505050505050565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b6001600160e01b031981168114610bf857600080fd5b600060208284031215613cf157600080fd5b81356125d281613cc9565b60005b83811015613d17578181015183820152602001613cff565b50506000910152565b60008151808452613d38816020860160208601613cfc565b601f01601f19169290920160200192915050565b6020815260006125d26020830184613d20565b600060208284031215613d7157600080fd5b5035919050565b6001600160a01b0381168114610bf857600080fd5b8035613d9881613d78565b919050565b60008060408385031215613db057600080fd5b8235613dbb81613d78565b946020939093013593505050565b600060208284031215613ddb57600080fd5b81356125d281613d78565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613e2157613e21613de6565b6040525050565b600082601f830112613e3957600080fd5b81356001600160401b03811115613e5257613e52613de6565b604051613e69601f8301601f191660200182613dfc565b818152846020838601011115613e7e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613eb157600080fd5b8435613ebc81613d78565b93506020850135613ecc81613d78565b92506040850135915060608501356001600160401b03811115613eee57600080fd5b613efa87828801613e28565b91505092959194509250565b60008060408385031215613f1957600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60038110613f5c57634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260208082015190613f8090840182613f3e565b5060408181015190830152606090810151910152565b608081016109e58284613f60565b600080600060608486031215613fb957600080fd5b8335613fc481613d78565b92506020840135613fd481613d78565b929592945050506040919091013590565b60008083601f840112613ff757600080fd5b5081356001600160401b0381111561400e57600080fd5b60208301915083602082850101111561402657600080fd5b9250929050565b60008060008060006060868803121561404557600080fd5b85356001600160401b038082111561405c57600080fd5b818801915088601f83011261407057600080fd5b81358181111561407f57600080fd5b8960208260071b850101111561409457600080fd5b6020928301975095509087013590808211156140af57600080fd5b506140bc88828901613fe5565b90945092506140cf905060408701613d8d565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561410757600080fd5b82359150602083013561411981613d78565b809150509250929050565b60006001600160401b0382111561413d5761413d613de6565b5060051b60200190565b600082601f83011261415857600080fd5b8135602061416582614124565b6040516141728282613dfc565b80915083815260208101915060208460051b87010193508684111561419657600080fd5b602086015b848110156141bb5780356141ae81613d78565b835291830191830161419b565b509695505050505050565b600080600080600080600060e0888a0312156141e157600080fd5b6141ea88613d8d565b965060208801356001600160401b038082111561420657600080fd5b6142128b838c01613e28565b975060408a013591508082111561422857600080fd5b6142348b838c01613e28565b965060608a013591508082111561424a57600080fd5b6142568b838c01613e28565b955060808a013591508082111561426c57600080fd5b506142798a828b01614147565b93505061428860a08901613d8d565b915060c0880135905092959891949750929550565b6000602082840312156142af57600080fd5b81356001600160401b038111156142c557600080fd5b610c0484828501613e28565b6000806000606084860312156142e657600080fd5b833592506020840135613fd481613d78565b8015158114610bf857600080fd5b6000806040838503121561431957600080fd5b823561432481613d78565b91506020830135614119816142f8565b6000806020838503121561434757600080fd5b82356001600160401b038082111561435e57600080fd5b818501915085601f83011261437257600080fd5b81358181111561438157600080fd5b8660208260051b850101111561439657600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156143ff57603f198886030184526143ed858351613d20565b945092850192908501906001016143d1565b5092979650505050505050565b600082601f83011261441d57600080fd5b8135602061442a82614124565b6040516144378282613dfc565b80915083815260208101915060208460051b87010193508684111561445b57600080fd5b602086015b848110156141bb5780358352918301918301614460565b600080600080600060a0868803121561448f57600080fd5b853561449a81613d78565b945060208601356144aa81613d78565b935060408601356001600160401b03808211156144c657600080fd5b6144d289838a0161440c565b945060608801359150808211156144e857600080fd5b6144f489838a0161440c565b9350608088013591508082111561450a57600080fd5b5061451788828901613e28565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b8181101561456657614553838551613f60565b9284019260809290920191600101614540565b50909695505050505050565b6000806040838503121561458557600080fd5b823561459081613d78565b9150602083013561411981613d78565b600080600080600060a086880312156145b857600080fd5b85356145c381613d78565b945060208601356145d381613d78565b9350604086013592506060860135915060808601356001600160401b038111156145fc57600080fd5b61451788828901613e28565b600181811c9082168061461c57607f821691505b602082108103611a6157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109e5576109e56146c7565b60038110610bf857600080fd5b6020808252818101839052600090604080840186845b8781101561476f57813561472681613d78565b6001600160a01b031683528185013561473e816146f0565b61474a86850182613f3e565b5081840135838501526060808301359084015260809283019290910190600101614713565b5090979650505050505050565b80820281158282048414176109e5576109e56146c7565b6000826147b057634e487b7160e01b600052601260045260246000fd5b500490565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6000808335601e198436030181126147fe57600080fd5b8301803591506001600160401b0382111561481857600080fd5b60200191503681900382131561402657600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516148c3816015850160208801613cfc565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516148f4816026840160208801613cfc565b01602601949350505050565b60006080828403121561491257600080fd5b604051608081018181106001600160401b038211171561493457614934613de6565b604052823561494281613d78565b81526020830135614952816146f0565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610bc6576000816000526020600020601f850160051c81016020861015614a115750805b601f850160051c820191505b81811015614a3057828155600101614a1d565b505050505050565b81516001600160401b03811115614a5157614a51613de6565b614a6581614a5f8454614608565b846149e8565b602080601f831160018114614a9a5760008415614a825750858301515b600019600386901b1c1916600185901b178555614a30565b600085815260208120601f198616915b82811015614ac957888601518255948401946001909101908401614aaa565b5085821015614ae75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000614b0a6040830185613d20565b8281036020840152610e588185613d20565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600081614b7d57614b7d6146c7565b506000190190565b8135614b9081613d78565b81546001600160a01b031981166001600160a01b039290921691821783556020840135614bbc816146f0565b60038110614bda57634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b60008251614c23818460208701613cfc565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612eaf90830184613d20565b600060208284031215614c7257600080fd5b81516125d281613cc9565b60e09190911b6001600160e01b031916815260200190565b600060208284031215614ca757600080fd5b81516125d2816142f8565b6020808252600a908201526921546f6b656e5479706560b01b604082015260600190565b600060033d111561269b5760046000803e5060005160e01c90565b600060443d1015614cff5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715614d2e57505050505090565b8285019150815181811115614d465750505050505090565b843d8701016020828501011115614d605750505050505090565b614d6f60208286010187613dfc565b509095945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601c908201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604082015260600190565b818103818111156109e5576109e56146c7565b634e487b7160e01b600052603160045260246000fdfe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122022075cc963d51d591655c16464fcc9613b4a2d4f30c509ca77035f728a9a97c864736f6c63430008170033",
    "sourceMap": "1563:8820:369:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5293:10;-1:-1:-1;;;;;5307:18:369;5293:32;;5285:77;;;;-1:-1:-1;;;5285:77:369;;216:2:821;5285:77:369;;;198:21:821;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;5285:77:369;;;;;;;;;1563:8820;;;;;5776:432;;;;;;;;;;-1:-1:-1;5776:432:369;;;;;:::i;:::-;;:::i;:::-;;;926:14:821;;919:22;901:41;;889:2;874:18;5776:432:369;;;;;;;;2932:98:469;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4407:167::-;;;;;;;;;;-1:-1:-1;4407:167:469;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2058:32:821;;;2040:51;;2028:2;2013:18;4407:167:469;1894:203:821;3929:417:469;;;;;;;;;;-1:-1:-1;3929:417:469;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;611:162:237:-;;;;;;;;;;-1:-1:-1;611:162:237;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4727:33:821;;;4709:52;;4697:2;4682:18;611:162:237;4565:202:821;1950:111:472;;;;;;;;;;-1:-1:-1;2037:10:472;:17;1950:111;;;4918:25:821;;;4906:2;4891:18;1950:111:472;4772:177:821;1036:150:94;;;;;;;;;;-1:-1:-1;1036:150:94;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5084:296:469:-;;;;;;;;;;-1:-1:-1;5084:296:469;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;6486:712:369;;;;;;:::i;:::-;;:::i;1421:325:77:-;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3253:271:71:-;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;1615:264:472:-;;;;;;;;;;-1:-1:-1;1615:264:472;;;;;:::i;:::-;;:::i;4464:217:71:-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;2831:32:369:-;;;;;;;;;;;;;;;;5446:149:469;;;;;;;;;;-1:-1:-1;5446:149:469;;;;;:::i;:::-;;:::i;1986:381:77:-;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9163:32:821;;;9145:51;;9244:6;9232:19;;;9227:2;9212:18;;9205:47;9118:18;1986:381:77;8973:285:821;2133:241:472;;;;;;;;;;-1:-1:-1;2133:241:472;;;;;:::i;:::-;;:::i;918:134:211:-;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;1245:124:94:-;;;;;;;;;;-1:-1:-1;1245:124:94;;;;;:::i;:::-;;:::i;2651:219:469:-;;;;;;;;;;-1:-1:-1;2651:219:469;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;;;;;-1:-1:-1;2390:204:469;;;;;:::i;:::-;;:::i;3214:1182:369:-;;;;;;;;;;-1:-1:-1;3214:1182:369;;;;;:::i;:::-;;:::i;7292:421::-;;;;;;;;;;-1:-1:-1;7292:421:369;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;3094:102:469:-;;;;;;;;;;;;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;5077:95:369:-;;;;;;;;;;-1:-1:-1;5077:95:369;;2111:1;12881:36:821;;12869:2;12854:18;5077:95:369;12739:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;4641:153:469;;;;;;;;;;-1:-1:-1;4641:153:469;;;;;:::i;:::-;;:::i;2204:211:71:-;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2477:144:77:-;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;5661:276:469;;;;;;;;;;-1:-1:-1;5661:276:469;;;;;:::i;:::-;;:::i;724:247:235:-;;;;;;;;;;-1:-1:-1;724:247:235;;;;;:::i;:::-;-1:-1:-1;;;724:247:235;;;;;;;;5616:129:369;;;;;;;;;;-1:-1:-1;5616:129:369;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;4930:91:369:-;;;;;;;;;;-1:-1:-1;;;;4930:91:369;;816:127:94;;;;;;;;;;-1:-1:-1;816:127:94;;;;;:::i;:::-;887:7;913:17;;;:6;:17;;;;;:23;;816:127;3895:171:71;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;7963:314:369:-;;;;;;;;;;-1:-1:-1;7963:314:369;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;4860:162:469:-;;;;;;;;;;-1:-1:-1;4860:162:469;;;;;:::i;:::-;;:::i;499:219:235:-;;;;;;;;;;-1:-1:-1;499:219:235;;;;;:::i;:::-;-1:-1:-1;;;499:219:235;;;;;;;;5776:432:369;5930:4;5965:36;5989:11;5965:23;:36::i;:::-;:103;;;-1:-1:-1;;;;;;;6017:51:369;;-1:-1:-1;;;6017:51:369;5965:103;:168;;;-1:-1:-1;;;;;;;6084:49:369;;-1:-1:-1;;;6084:49:369;5965:168;:236;;;-1:-1:-1;;;;;;;6149:52:369;;-1:-1:-1;;;6149:52:369;5965:236;5946:255;5776:432;-1:-1:-1;;5776:432:369:o;2932:98:469:-;2986:13;3018:5;3011:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:98;:::o;4407:167::-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:469;;;;:15;:24;;;;;;-1:-1:-1;;;;;4543:24:469;;4407:167::o;3929:417::-;4009:13;4025:34;4051:7;4025:25;:34::i;:::-;4009:50;;4083:5;-1:-1:-1;;;;;4077:11:469;:2;-1:-1:-1;;;;;4077:11:469;;4069:57;;;;-1:-1:-1;;;4069:57:469;;19109:2:821;4069:57:469;;;19091:21:821;19148:2;19128:18;;;19121:30;19187:34;19167:18;;;19160:62;-1:-1:-1;;;19238:18:821;;;19231:31;19279:19;;4069:57:469;18907:397:821;4069:57:469;4174:5;-1:-1:-1;;;;;4158:21:469;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4158:21:469;;:62;;;;4183:37;4200:5;4207:12;:10;:12::i;4183:37::-;4137:170;;;;-1:-1:-1;;;4137:170:469;;19511:2:821;4137:170:469;;;19493:21:821;19550:2;19530:18;;;19523:30;19589:34;19569:18;;;19562:62;19660:31;19640:18;;;19633:59;19709:19;;4137:170:469;19309:425:821;4137:170:469;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3999:347;3929:417;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;611:162:237:-;-1:-1:-1;;;611:162:237;;;;;;;:::o;1036:150:94:-;1117:12;;:::i;:::-;1148:17;;;;:6;:17;;;;;;;;:31;;;:24;;:31;;;;;;1141:38;;;;;;;;;;-1:-1:-1;;;;;1141:38:94;;;;1148:31;;1141:38;;;;-1:-1:-1;;;1141:38:94;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1036:150;-1:-1:-1;;;1036:150:94:o;5084:296:469:-;5243:41;5262:12;:10;:12::i;:::-;5276:7;5243:18;:41::i;:::-;5235:99;;;;-1:-1:-1;;;5235:99:469;;;;;;;:::i;:::-;5345:28;5355:4;5361:2;5365:7;5345:9;:28::i;6486:712:369:-;6690:15;2505:21:452;:19;:21::i;:::-;2418:24:369::1;4632:40;4653:4;4659:12;:10;:12::i;:::-;4632:20;:40::i;:::-;6722:31:::2;-1:-1:-1::0;;;;;;;;;;;6750:1:369::2;6722:7;:31::i;:::-;6717:203;;6774:9;6769:141;6789:24:::0;;::::2;6769:141;;;6841:54;-1:-1:-1::0;;;;;;;;;;;6864:13:369::2;;6878:1;6864:16;;;;;;;:::i;:::-;:30;::::0;::::2;:16;::::0;;::::2;;:30:::0;;::::2;::::0;-1:-1:-1;6864:30:369::2;:::i;:::-;6841:10;:54::i;:::-;6815:6;6820:1;6815:6:::0;::::2;:::i;:::-;;;6769:141;;;;6717:203;6940:17;::::0;;;-1:-1:-1;6988:1:369::2;::::0;6967:17:::2;:22;6988:1:::0;6940:17;6967:22:::2;:::i;:::-;::::0;;;-1:-1:-1;7000:71:369::2;::::0;-1:-1:-1;7013:12:369::2;:10;:12::i;:::-;7027:13;;7042:19;;7000:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;7063:7:369;;-1:-1:-1;7000:12:369::2;::::0;-1:-1:-1;;7000:71:369:i:2;:::-;7082:30;7092:10;7104:7;7082:9;:30::i;:::-;7168:7;7156:10;-1:-1:-1::0;;;;;7128:63:369::2;7142:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;7128:63:369::2;;7177:13;;7128:63;;;;;;;:::i;:::-;;;;;;;;2536:1:452::1;2547:20:::0;1787:1;3053:7;:22;2873:209;2547:20;6486:712:369;;;;;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;22734:2:821;3433:39:71;;;22716:21:821;22773:2;22753:18;;;22746:30;22812:31;22792:18;;;22785:59;22861:18;;3433:39:71;22532:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;:::-;3253:271;;:::o;1615:264:472:-;1712:7;1747:34;1775:5;1747:27;:34::i;:::-;1739:5;:42;1731:98;;;;-1:-1:-1;;;1731:98:472;;23092:2:821;1731:98:472;;;23074:21:821;23131:2;23111:18;;;23104:30;23170:34;23150:18;;;23143:62;-1:-1:-1;;;23221:18:821;;;23214:41;23272:19;;1731:98:472;22890:407:821;1731:98:472;-1:-1:-1;;;;;;1846:19:472;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1615:264::o;4464:217:71:-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;23504:2:821;4592:36:71;;;23486:21:821;23543:2;23523:18;;;23516:30;-1:-1:-1;;;23562:18:821;;;23555:56;23628:18;;4592:36:71;23302:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;5446:149:469:-;5549:39;5566:4;5572:2;5576:7;5549:39;;;;;;;;;;;;:16;:39::i;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;2133:241:472:-;2208:7;2243:41;2037:10;:17;;1950:111;2243:41;2235:5;:49;2227:106;;;;-1:-1:-1;;;2227:106:472;;23859:2:821;2227:106:472;;;23841:21:821;23898:2;23878:18;;;23871:30;23937:34;23917:18;;;23910:62;-1:-1:-1;;;23988:18:821;;;23981:42;24040:19;;2227:106:472;23657:408:821;2227:106:472;2350:10;2361:5;2350:17;;;;;;;;:::i;:::-;;;;;;;;;2343:24;;2133:241;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3065:256:77:-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;1245:124:94:-;1341:17;;;;:6;:17;;;;;:21;;1334:28;;1309:13;;1341:21;1334:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:124;;;:::o;2651:219:469:-;2723:7;2742:13;2758:17;2767:7;2758:8;:17::i;:::-;2742:33;-1:-1:-1;;;;;;2793:19:469;;2785:56;;;;-1:-1:-1;;;2785:56:469;;;;;;;:::i;2390:204::-;2462:7;-1:-1:-1;;;;;2489:19:469;;2481:73;;;;-1:-1:-1;;;2481:73:469;;24625:2:821;2481:73:469;;;24607:21:821;24664:2;24644:18;;;24637:30;24703:34;24683:18;;;24676:62;-1:-1:-1;;;24754:18:821;;;24747:39;24803:19;;2481:73:469;24423:405:821;2481:73:469;-1:-1:-1;;;;;;2571:16:469;;;;;:9;:16;;;;;;;2390:204::o;3214:1182:369:-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;25035:2:821;3325:201:450;;;25017:21:821;25074:2;25054:18;;;25047:30;25113:34;25093:18;;;25086:62;-1:-1:-1;;;25164:18:821;;;25157:44;25218:19;;3325:201:450;24833:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3582:24:369::1;:22;:24::i;:::-;3616:41;3638:18;3616:21;:41::i;:::-;3667:29;3681:5;3688:7;3667:13;:29::i;:::-;3752:56;3777:17;3796:11;3752:24;:56::i;:::-;3818:26;3830:13;3818:11;:26::i;:::-;3854:31;3872:12;3854:17;:31::i;:::-;3896:45;785:4:71;3927:13:369::0;3896:10:::1;:45::i;:::-;3951:38;2418:24;3975:13;3951:10;:38::i;:::-;3999:40;-1:-1:-1::0;;;;;;;;;;;4025:13:369::1;3999:10;:40::i;:::-;4123:37;-1:-1:-1::0;;;;;;;;;;;4157:1:369::1;4123:10;:37::i;:::-;4240:35;2575:24;4272:1;4240:10;:35::i;:::-;4355:34;-1:-1:-1::0;;;;;;;;;;;4386:1:369::1;4355:10;:34::i;:::-;3651:14:450::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;12881:36:821;;3721:14:450;;12869:2:821;12854:18;3721:14:450;;;;;;;3647:99;3269:483;3214:1182:369;;;;;;;:::o;7292:421::-;2505:21:452;:19;:21::i;:::-;2575:24:369::1;4632:40;4653:4;4659:12;:10;:12::i;4632:40::-;7429:17:::2;;7418:8;:28;7410:57;;;::::0;-1:-1:-1;;;7410:57:369;;25649:2:821;7410:57:369::2;::::0;::::2;25631:21:821::0;25688:2;25668:18;;;25661:30;-1:-1:-1;;;25707:18:821;;;25700:46;25763:18;;7410:57:369::2;25447:340:821::0;7410:57:369::2;7485:42;7504:12;:10;:12::i;:::-;7518:8;7485:18;:42::i;:::-;7477:90;;;::::0;-1:-1:-1;;;7477:90:369;;25994:2:821;7477:90:369::2;::::0;::::2;25976:21:821::0;26033:2;26013:18;;;26006:30;26072:34;26052:18;;;26045:62;-1:-1:-1;;;26123:18:821;;;26116:33;26166:19;;7477:90:369::2;25792:399:821::0;7477:90:369::2;7578:15;7584:8;7578:5;:15::i;:::-;7603:36;7618:10;7630:8;7603:14;:36::i;:::-;7697:8;7685:10;-1:-1:-1::0;;;;;7655:51:369::2;7671:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;7655:51:369::2;;;;;;;;;;;2536:1:452::1;2547:20:::0;1787:1;3053:7;:22;2873:209;1643:633:72;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;3094:102:469:-;3150:13;3182:7;3175:14;;;;;:::i;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;4641:153:469:-;4735:52;4754:12;:10;:12::i;:::-;4768:8;4778;4735:18;:52::i;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;5661:276:469;5791:41;5810:12;:10;:12::i;:::-;5824:7;5791:18;:41::i;:::-;5783:99;;;;-1:-1:-1;;;5783:99:469;;;;;;;:::i;:::-;5892:38;5906:4;5912:2;5916:7;5925:4;5892:13;:38::i;:::-;5661:276;;;;:::o;5616:129:369:-;5682:13;5714:24;5729:8;5714:14;:24::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;7963:314:369:-;8067:13;913:17:94;;;:6;:17;;;;;:23;8032::369;;913::94;-1:-1:-1;;;;;8135:18:369;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8124:29;;8169:9;8164:107;8188:5;8184:1;:9;8164:107;;;8231:29;8248:8;8258:1;8231:16;:29::i;:::-;8217:8;8226:1;8217:11;;;;;;;;:::i;:::-;;;;;;;;;;:43;8195:6;8200:1;8195:6;;:::i;:::-;;;8164:107;;;;8057:220;7963:314;;;:::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4860:162:469:-;-1:-1:-1;;;;;4980:25:469;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162::o;1281:255:472:-;1405:4;-1:-1:-1;;;;;;1428:61:472;;-1:-1:-1;;;1428:61:472;;:101;;;1493:36;1517:11;1493:23;:36::i;13778:133:469:-;13859:16;13867:7;13859;:16::i;:::-;13851:53;;;;-1:-1:-1;;;13851:53:469;;;;;;;:::i;9906:242:369:-;10066:14;10103:38;:36;:38::i;:::-;10096:45;;9906:242;:::o;13099:182:469:-;13173:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13173:29:469;-1:-1:-1;;;;;13173:29:469;;;;;;;;:24;;13226:34;13173:24;13226:25;:34::i;:::-;-1:-1:-1;;;;;13217:57:469;;;;;;;;;;;13099:182;;:::o;8544:127:369:-;8600:4;8623:41;8600:4;8651:12;:10;:12::i;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;7876:272:469:-;7969:4;7985:13;8001:34;8027:7;8001:25;:34::i;:::-;7985:50;;8064:5;-1:-1:-1;;;;;8053:16:469;:7;-1:-1:-1;;;;;8053:16:469;;:52;;;;8073:32;8090:5;8097:7;8073:16;:32::i;:::-;8053:87;;;;8133:7;-1:-1:-1;;;;;8109:31:469;:20;8121:7;8109:11;:20::i;:::-;-1:-1:-1;;;;;8109:31:469;;8045:96;7876:272;-1:-1:-1;;;;7876:272:469:o;11762:1225::-;11897:4;-1:-1:-1;;;;;11859:42:469;:34;11885:7;11859:25;:34::i;:::-;-1:-1:-1;;;;;11859:42:469;;11851:92;;;;-1:-1:-1;;;11851:92:469;;;;;;;:::i;:::-;-1:-1:-1;;;;;11961:16:469;;11953:65;;;;-1:-1:-1;;;11953:65:469;;27687:2:821;11953:65:469;;;27669:21:821;27726:2;27706:18;;;27699:30;27765:34;27745:18;;;27738:62;-1:-1:-1;;;27816:18:821;;;27809:34;27860:19;;11953:65:469;27485:400:821;11953:65:469;12029:42;12050:4;12056:2;12060:7;12069:1;12029:20;:42::i;:::-;12209:4;-1:-1:-1;;;;;12171:42:469;:34;12197:7;12171:25;:34::i;:::-;-1:-1:-1;;;;;12171:42:469;;12163:92;;;;-1:-1:-1;;;12163:92:469;;;;;;;:::i;:::-;12324:24;;;;:15;:24;;;;;;;;12317:31;;-1:-1:-1;;;;;;12317:31:469;;;;;;-1:-1:-1;;;;;12792:15:469;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12792:20:469;;;12826:13;;;;;;;;;:18;;12317:31;12826:18;;;12864:16;;;:7;:16;;;;;;:21;;;;;;;;;;12901:27;;12340:7;;-1:-1:-1;;;;;;;;;;;12901:27:469;;3999:347;3929:417;;:::o;2580:287:452:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:452;;28092:2:821;2704:63:452;;;28074:21:821;28131:2;28111:18;;;28104:30;28170:33;28150:18;;;28143:61;28221:18;;2704:63:452;27890:355:821;2704:63:452;1830:1;2842:7;:18;2580:287::o;6146:510:71:-;6244:32;6262:4;6268:7;6244:17;:32::i;:::-;6239:411;;6435:41;6463:7;-1:-1:-1;;;;;6435:41:71;6473:2;6435:19;:41::i;:::-;6547:38;6575:4;6582:2;6547:19;:38::i;:::-;6344:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6344:263:71;;;;;;;;;;-1:-1:-1;;;6292:347:71;;;;;;;:::i;5555:491::-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;1188:340:95:-;1365:36;1379:7;;1388:12;1365:13;:36::i;:::-;1411:44;1427:13;1442:12;1411:15;:44::i;:::-;1465:56;1485:11;1506:4;1513:7;;1465:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:19;:56::i;:::-;1188:340;;;;;:::o;8478:108:469:-;8553:26;8563:2;8567:7;8553:26;;;;;;;;;;;;:9;:26::i;2873:209:452:-;1787:1;3053:7;:22;2873:209::o;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;3253:271:71;;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;4918:25:821;;;3689:46:77;;4906:2:821;4891:18;3689:46:77;;;;;;;3408:334;;:::o;7174:115:469:-;7240:7;7266:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7266:16:469;;7174:115::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;1868:111:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1938:34:452::1;:32;:34::i;:::-;1868:111::o:0;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;1605:149:469:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1708:39:469::1;1732:5;1739:7;1708:23;:39::i;1273:185:56:-:0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;10654:784:469:-;10713:13;10729:34;10755:7;10729:25;:34::i;:::-;10713:50;;10774:51;10795:5;10810:1;10814:7;10823:1;10774:20;:51::i;:::-;10935:34;10961:7;10935:25;:34::i;:::-;11014:24;;;;:15;:24;;;;;;;;11007:31;;-1:-1:-1;;;;;;11007:31:469;;;;;;-1:-1:-1;;;;;11254:16:469;;;;;:9;:16;;;;;:21;;-1:-1:-1;;11254:21:469;;;11302:16;;;:7;:16;;;;;;11295:23;;;;;;;11334:36;10927:42;;-1:-1:-1;11030:7:469;;-1:-1:-1;;;;;;;;;;;11334:36:469;11014:24;;11334:36;3253:271:71;;:::o;1604:448:95:-;1690:13;913:17:94;;;:6;:17;;;;;:23;;;-1:-1:-1;;;;;1785:18:95;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1752:51;;1819:9;1814:119;1838:5;1834:1;:9;1814:119;;;1888:34;1905:13;1920:1;1888:16;:34::i;:::-;1867:15;1883:1;1867:18;;;;;;;;:::i;:::-;;;;;;;;;;:55;1845:6;1850:1;1845:6;;:::i;:::-;;;1814:119;;;;1943:28;1957:13;1943;:28::i;:::-;1982:63;2010:4;2017:10;2029:15;1982:19;:63::i;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;4918:25:821;;;4836:49:77;;4804:29;;4901:43;;4891:18:821;4901:43:77;;;;;;;;4619:332;;;:::o;13417:277:469:-;13537:8;-1:-1:-1;;;;;13528:17:469;:5;-1:-1:-1;;;;;13528:17:469;;13520:55;;;;-1:-1:-1;;;13520:55:469;;33395:2:821;13520:55:469;;;33377:21:821;33434:2;33414:18;;;33407:30;-1:-1:-1;;;33453:18:821;;;33446:55;33518:18;;13520:55:469;33193:349:821;13520:55:469;-1:-1:-1;;;;;13585:25:469;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13585:46:469;;;;;;;;;;13646:41;;901::821;;;13646::469;;874:18:821;13646:41:469;761:187:821;6671:198:289;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;6798:267:469:-;6910:28;6920:4;6926:2;6930:7;6910:9;:28::i;:::-;6956:47;6979:4;6985:2;6989:7;6998:4;6956:22;:47::i;:::-;6948:110;;;;-1:-1:-1;;;6948:110:469;;;;;;;:::i;1987:344::-;2111:4;-1:-1:-1;;;;;;2146:51:469;;-1:-1:-1;;;2146:51:469;;:126;;-1:-1:-1;;;;;;;2213:59:469;;-1:-1:-1;;;2213:59:469;2146:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:484;;;2288:36:469;1060:166:484;7592:126:469;7657:4;;7680:17;7689:7;7680:8;:17::i;:::-;-1:-1:-1;;;;;7680:31:469;;;;7592:126;-1:-1:-1;;7592:126:469:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;9906:242:369:o;1146:307:211:-;1058:401;:::o;9371:529:369:-;9537:56;9564:4;9570:2;9574:7;9583:9;9537:26;:56::i;:::-;9706:34;-1:-1:-1;;;;;;;;;;;9737:1:369;9706:7;:34::i;:::-;9705:35;:57;;;;-1:-1:-1;;;;;;9744:18:369;;;;9705:57;:77;;;;-1:-1:-1;;;;;;9766:16:369;;;;9705:77;9701:193;;;9806:28;-1:-1:-1;;;;;;;;;;;9829:4:369;9806:7;:28::i;:::-;:58;;;;9838:26;-1:-1:-1;;;;;;;;;;;9861:2:369;9838:7;:26::i;:::-;9798:85;;;;-1:-1:-1;;;9798:85:369;;34168:2:821;9798:85:369;;;34150:21:821;34207:2;34187:18;;;34180:30;-1:-1:-1;;;34226:18:821;;;34219:44;34280:18;;9798:85:369;33966:338:821;1563:441:298;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;34652:2:821;1911:55:298;;;34634:21:821;;;34671:18;;;34664:30;34730:34;34710:18;;;34703:62;34782:18;;1911:55:298;34450:356:821;1479:469:94;1594:13;1633:15;1625:35;;;;-1:-1:-1;;;1625:35:94;;35013:2:821;1625:35:94;;;34995:21:821;35052:1;35032:18;;;35025:29;-1:-1:-1;;;35070:18:821;;;35063:37;35117:18;;1625:35:94;34811:330:821;1625:35:94;1678:17;;;;:6;:17;;;;;:23;:28;1670:50;;;;-1:-1:-1;;;1670:50:94;;35348:2:821;1670:50:94;;;35330:21:821;35387:1;35367:18;;;35360:29;-1:-1:-1;;;35405:18:821;;;35398:39;35454:18;;1670:50:94;35146:332:821;1670:50:94;1736:9;1731:163;1755:11;1751:1;:15;1731:163;;;1790:33;1806:13;;1820:1;1806:16;;;;;;;:::i;:::-;;;;;;1790:33;;;;;;;;;;:::i;:::-;:15;:33::i;:::-;1867:13;;1881:1;1867:16;;;;;;;:::i;:::-;1837:17;;;;:6;:17;;;;;;;;:27;;;:24;;;:27;;;;1867:16;;;;;;;;;1837:27;-1:-1:-1;1837:46:94;1867:16;1837:27;:46;:::i;:::-;-1:-1:-1;1768:6:94;;-1:-1:-1;1773:1:94;1768:6;;:::i;:::-;;;1731:163;;;-1:-1:-1;1904:17:94;;;;:6;:17;;;;;;:37;-1:-1:-1;;1479:469:94:o;4980:118::-;5063:17;;;;:6;:17;;;;;:21;;:28;5087:4;5063:21;:28;:::i;2906:815:95:-;3006:24;;3040:314;3064:7;:14;3060:1;:18;3040:314;;;434:42:292;-1:-1:-1;;;;;3106:60:95;:7;3114:1;3106:10;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;3106:60:95;;:84;;;;-1:-1:-1;;;;;;3170:20:95;;3185:4;3170:20;3106:84;3102:242;;;3230:7;3238:1;3230:10;;;;;;;;:::i;:::-;;;;;;;:22;;;3210:42;;;;;:::i;:::-;;;3102:242;;;3291:38;3306:5;3313:3;3318:7;3326:1;3318:10;;;;;;;;:::i;:::-;;;;;;;3291:14;:38::i;:::-;3080:6;3085:1;3080:6;;:::i;:::-;;;3040:314;;;-1:-1:-1;3367:21:95;;3363:352;;3432:218;;;;;;;;434:42:292;3432:218:95;;-1:-1:-1;3432:218:95;;;;;;;;;;;;;;;;;;;3664:40;3679:5;3686:3;3432:218;3664:14;:40::i;8807:279:469:-;8901:18;8907:2;8911:7;8901:5;:18::i;:::-;8950:53;8981:1;8985:2;8989:7;8998:4;8950:22;:53::i;:::-;8929:150;;;;-1:-1:-1;;;8929:150:469;;;;;;;:::i;5034:168:71:-;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;1985:109:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;776::478:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;1760:160:469::0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1873:5:469::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:469::1;:17;1906:7:::0;1896;:17:::1;:::i;5171:220:94:-:0;5237:9;5232:116;5256:17;;;;:6;:17;;;;;:23;5252:27;;5232:116;;;5310:17;;;;:6;:17;;;;;;;;:27;;;:24;;:27;;;;;5303:34;;-1:-1:-1;;;;;;5303:34:94;;;;;;;;;;;;;;;;5281:6;;5335:1;5281:6;:::i;:::-;;;5232:116;;;-1:-1:-1;5383:1:94;5357:17;;;:6;:17;;;;;:27;5171:220::o;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;14463:853:469:-;14612:4;14632:15;:2;-1:-1:-1;;;;;14632:13:469;;:15::i;:::-;14628:682;;;14694:2;-1:-1:-1;;;;;14667:47:469;;14715:12;:10;:12::i;:::-;14729:4;14735:7;14744:4;14667:82;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14667:82:469;;;;;;;;-1:-1:-1;;14667:82:469;;;;;;;;;;;;:::i;:::-;;;14663:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14927:6;:13;14944:1;14927:18;14923:321;;14969:60;;-1:-1:-1;;;14969:60:469;;;;;;;:::i;14923:321::-;15196:6;15190:13;15181:6;15177:2;15173:15;15166:38;14663:595;-1:-1:-1;;;;;;14799:62:469;-1:-1:-1;;;14799:62:469;;-1:-1:-1;14792:69:469;;14628:682;-1:-1:-1;15295:4:469;15288:11;;2443:890:472;2702:1;2690:9;:13;2686:219;;;2831:63;;-1:-1:-1;;;2831:63:472;;37573:2:821;2831:63:472;;;37555:21:821;37612:2;37592:18;;;37585:30;37651:34;37631:18;;;37624:62;-1:-1:-1;;;37702:18:821;;;37695:51;37763:19;;2831:63:472;37371:417:821;2686:219:472;2933:12;-1:-1:-1;;;;;2960:18:472;;2956:183;;2994:40;3026:7;4153:10;:17;;4126:24;;;;:15;:24;;;;;:44;;;4180:24;;;;;;;;;;;;4050:161;2994:40;2956:183;;;3063:2;-1:-1:-1;;;;;3055:10:472;:4;-1:-1:-1;;;;;3055:10:472;;3051:88;;3081:47;3114:4;3120:7;3081:32;:47::i;:::-;-1:-1:-1;;;;;3152:16:472;;3148:179;;3184:45;3221:7;3184:36;:45::i;:::-;3148:179;;;3256:4;-1:-1:-1;;;;;3250:10:472;:2;-1:-1:-1;;;;;3250:10:472;;3246:81;;3276:40;3304:2;3308:7;3276:27;:40::i;3592:1300:94:-;3686:16;3666:6;:16;;;:36;;;;;;;;:::i;:::-;;3662:1224;;3730:20;;3722:59;;-1:-1:-1;;;3722:59:94;;-1:-1:-1;;;;;3722:47:94;;;;;;:59;;3770:10;;3722:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;3722:59:94;;;;;;;;-1:-1:-1;;3722:59:94;;;;;;;;;;;;:::i;:::-;;;3718:220;;3903:20;;-1:-1:-1;;;3903:20:94;;;;;;;:::i;3718:220::-;3836:12;3828:35;;;;-1:-1:-1;;;3828:35:94;;;;;;;:::i;3662:1224::-;3978:17;3958:6;:16;;;:37;;;;;;;;:::i;:::-;;3954:932;;4023:20;;4015:59;;-1:-1:-1;;;4015:59:94;;-1:-1:-1;;;;;4015:47:94;;;;;;:59;;4063:10;;4015:59;;;:::i;3954:932::-;4273:15;4253:6;:16;;;:35;;;;;;;;:::i;:::-;;4249:637;;4308:20;;-1:-1:-1;;;;;4308:56:94;434:42:292;4308:56:94;4304:572;;4426:20;;4418:59;;-1:-1:-1;;;4418:59:94;;-1:-1:-1;;;;;4418:47:94;;;;;;:59;;4466:10;;4418:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4418:59:94;;;;;;;;-1:-1:-1;;4418:59:94;;;;;;;;;;;;:::i;:::-;;;4414:448;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;1133:173:70;:::o;4414:448:94:-;4537:12;4536:13;4528:36;;;;-1:-1:-1;;;4528:36:94;;;;;;;:::i;:::-;4599:20;;4591:59;;-1:-1:-1;;;4591:59:94;;-1:-1:-1;;;;;4591:47:94;;;;;;:59;;4639:10;;4591:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4591:59:94;;;;;;;;-1:-1:-1;;4591:59:94;;;;;;;;;;;;:::i;:::-;;;4587:218;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;3253:271:71;;:::o;4587:218:94:-;4715:13;4714:14;4706:37;;;;-1:-1:-1;;;4706:37:94;;;;;;;:::i;2126:699:95:-;2242:15;2222:6;:16;;;:35;;;;;;;;:::i;:::-;;2218:601;;2273:215;2338:6;:20;;;2376:5;2399:3;2420:6;:18;;;2456;2273:47;:215::i;2218:601::-;2529:16;2509:6;:16;;;:36;;;;;;;;:::i;:::-;;2505:314;;2569:20;;2620:14;;;;;2561:74;;-1:-1:-1;;;2561:74:95;;-1:-1:-1;;;;;2561:46:95;;;;;;:74;;2608:5;;2615:3;;2561:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:347:469;3929:417;;:::o;2505:314:95:-;2676:17;2656:6;:16;;;:37;;;;;;;;:::i;:::-;;2652:167;;2718:20;;2769:14;;;;;2785:18;;;;2709:99;;-1:-1:-1;;;2709:99:95;;-1:-1:-1;;;;;40443:15:821;;;2709:99:95;;;40425:34:821;40495:15;;;40475:18;;;40468:43;40527:18;;;40520:34;;;;40570:18;;;40563:34;;;;40405:3;40613:19;;;40606:32;-1:-1:-1;40654:19:821;;;40647:30;2709:47:95;;;;;;40694:19:821;;2709:99:95;40092:627:821;9408:920:469;-1:-1:-1;;;;;9487:16:469;;9479:61;;;;-1:-1:-1;;;9479:61:469;;40926:2:821;9479:61:469;;;40908:21:821;;;40945:18;;;40938:30;41004:34;40984:18;;;40977:62;41056:18;;9479:61:469;40724:356:821;9479:61:469;9559:16;9567:7;9559;:16::i;:::-;9558:17;9550:58;;;;-1:-1:-1;;;9550:58:469;;;;;;;:::i;:::-;9619:48;9648:1;9652:2;9656:7;9665:1;9619:20;:48::i;:::-;9763:16;9771:7;9763;:16::i;:::-;9762:17;9754:58;;;;-1:-1:-1;;;9754:58:469;;;;;;;:::i;:::-;-1:-1:-1;;;;;10154:13:469;;;;;;:9;:13;;;;;;;;:18;;10171:1;10154:18;;;10193:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10193:21:469;;;;;10230:33;10201:7;;10154:13;;-1:-1:-1;;;;;;;;;;;10230:33:469;10154:13;;10230:33;3253:271:71;;:::o;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;41644:2:821;8110:60:289;;;41626:21:821;41683:2;41663:18;;;41656:30;41722:31;41702:18;;;41695:59;41771:18;;8110:60:289;41442:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;4828:981:472:-;5090:22;5151:1;5115:33;5143:4;5115:27;:33::i;:::-;:37;;;;:::i;:::-;5162:18;5183:26;;;:17;:26;;;;;;5090:62;;-1:-1:-1;5313:28:472;;;5309:323;;-1:-1:-1;;;;;5379:18:472;;5357:19;5379:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5428:30;;;;;;:44;;;5544:30;;:17;:30;;;;;:43;;;5309:323;-1:-1:-1;5725:26:472;;;;:17;:26;;;;;;;;5718:33;;;-1:-1:-1;;;;;5768:18:472;;;;;:12;:18;;;;;:34;;;;;;;5761:41;4828:981::o;6097:1061::-;6371:10;:17;6346:22;;6371:21;;6391:1;;6371:21;:::i;:::-;6402:18;6423:24;;;:15;:24;;;;;;6791:10;:26;;6346:46;;-1:-1:-1;6423:24:472;;6346:46;;6791:26;;;;;;:::i;:::-;;;;;;;;;6769:48;;6853:11;6828:10;6839;6828:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6932:28;;;:15;:28;;;;;;;:41;;;7101:24;;;;;7094:31;7135:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6168:990;;;6097:1061;:::o;3627:228::-;3711:14;3728:31;3756:2;3728:27;:31::i;:::-;-1:-1:-1;;;;;3769:16:472;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3813:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3627:228:472:o;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;4918:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;4891:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;1266:626::-;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;42267:2:821;1645:52:292;;;42249:21:821;42306:2;42286:18;;;42279:30;-1:-1:-1;;;42325:18:821;;;42318:49;42384:18;;1645:52:292;42065:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3148:179:472;;1552:340:292;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;8818:540:289:-;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;2866:439:292:-;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1040:96;1060:5;1090:27;;;1119:4;1125:2;1129:5;1067:68;;;;;;;;;;:::i;3107:706::-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;42825:2:821;3711:85:228;;;42807:21:821;42864:2;42844:18;;;42837:30;42903:34;42883:18;;;42876:62;-1:-1:-1;;;42954:18:821;;;42947:40;43004:19;;3711:85:228;42623:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;375:131:821:-;-1:-1:-1;;;;;;449:32:821;;439:43;;429:71;;496:1;493;486:12;511:245;569:6;622:2;610:9;601:7;597:23;593:32;590:52;;;638:1;635;628:12;590:52;677:9;664:23;696:30;720:5;696:30;:::i;953:250::-;1038:1;1048:113;1062:6;1059:1;1056:13;1048:113;;;1138:11;;;1132:18;1119:11;;;1112:39;1084:2;1077:10;1048:113;;;-1:-1:-1;;1195:1:821;1177:16;;1170:27;953:250::o;1208:271::-;1250:3;1288:5;1282:12;1315:6;1310:3;1303:19;1331:76;1400:6;1393:4;1388:3;1384:14;1377:4;1370:5;1366:16;1331:76;:::i;:::-;1461:2;1440:15;-1:-1:-1;;1436:29:821;1427:39;;;;1468:4;1423:50;;1208:271;-1:-1:-1;;1208:271:821:o;1484:220::-;1633:2;1622:9;1615:21;1596:4;1653:45;1694:2;1683:9;1679:18;1671:6;1653:45;:::i;1709:180::-;1768:6;1821:2;1809:9;1800:7;1796:23;1792:32;1789:52;;;1837:1;1834;1827:12;1789:52;-1:-1:-1;1860:23:821;;1709:180;-1:-1:-1;1709:180:821:o;2102:131::-;-1:-1:-1;;;;;2177:31:821;;2167:42;;2157:70;;2223:1;2220;2213:12;2238:134;2306:20;;2335:31;2306:20;2335:31;:::i;:::-;2238:134;;;:::o;2377:315::-;2445:6;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2561:9;2548:23;2580:31;2605:5;2580:31;:::i;:::-;2630:5;2682:2;2667:18;;;;2654:32;;-1:-1:-1;;;2377:315:821:o;2697:247::-;2756:6;2809:2;2797:9;2788:7;2784:23;2780:32;2777:52;;;2825:1;2822;2815:12;2777:52;2864:9;2851:23;2883:31;2908:5;2883:31;:::i;2949:127::-;3010:10;3005:3;3001:20;2998:1;2991:31;3041:4;3038:1;3031:15;3065:4;3062:1;3055:15;3081:249;3191:2;3172:13;;-1:-1:-1;;3168:27:821;3156:40;;-1:-1:-1;;;;;3211:34:821;;3247:22;;;3208:62;3205:88;;;3273:18;;:::i;:::-;3309:2;3302:22;-1:-1:-1;;3081:249:821:o;3335:555::-;3377:5;3430:3;3423:4;3415:6;3411:17;3407:27;3397:55;;3448:1;3445;3438:12;3397:55;3484:6;3471:20;-1:-1:-1;;;;;3506:2:821;3503:26;3500:52;;;3532:18;;:::i;:::-;3581:2;3575:9;3593:67;3648:2;3629:13;;-1:-1:-1;;3625:27:821;3654:4;3621:38;3575:9;3593:67;:::i;:::-;3684:2;3676:6;3669:18;3730:3;3723:4;3718:2;3710:6;3706:15;3702:26;3699:35;3696:55;;;3747:1;3744;3737:12;3696:55;3811:2;3804:4;3796:6;3792:17;3785:4;3777:6;3773:17;3760:54;3858:1;3834:15;;;3851:4;3830:26;3823:37;;;;3838:6;3335:555;-1:-1:-1;;;3335:555:821:o;3895:665::-;3990:6;3998;4006;4014;4067:3;4055:9;4046:7;4042:23;4038:33;4035:53;;;4084:1;4081;4074:12;4035:53;4123:9;4110:23;4142:31;4167:5;4142:31;:::i;:::-;4192:5;-1:-1:-1;4249:2:821;4234:18;;4221:32;4262:33;4221:32;4262:33;:::i;:::-;4314:7;-1:-1:-1;4368:2:821;4353:18;;4340:32;;-1:-1:-1;4423:2:821;4408:18;;4395:32;-1:-1:-1;;;;;4439:30:821;;4436:50;;;4482:1;4479;4472:12;4436:50;4505:49;4546:7;4537:6;4526:9;4522:22;4505:49;:::i;:::-;4495:59;;;3895:665;;;;;;;:::o;4954:248::-;5022:6;5030;5083:2;5071:9;5062:7;5058:23;5054:32;5051:52;;;5099:1;5096;5089:12;5051:52;-1:-1:-1;;5122:23:821;;;5192:2;5177:18;;;5164:32;;-1:-1:-1;4954:248:821:o;5207:127::-;5268:10;5263:3;5259:20;5256:1;5249:31;5299:4;5296:1;5289:15;5323:4;5320:1;5313:15;5339:237;5420:1;5413:5;5410:12;5400:143;;5465:10;5460:3;5456:20;5453:1;5446:31;5500:4;5497:1;5490:15;5528:4;5525:1;5518:15;5400:143;5552:18;;5339:237::o;5581:344::-;5656:12;;-1:-1:-1;;;;;5652:38:821;5640:51;;5737:4;5726:16;;;5720:23;;5752:55;;5792:14;;5720:23;5752:55;:::i;:::-;-1:-1:-1;5856:4:821;5845:16;;;5839:23;5823:14;;;5816:47;5912:4;5901:16;;;5895:23;5879:14;;5872:47;5581:344::o;5930:243::-;6112:3;6097:19;;6125:42;6101:9;6149:6;6125:42;:::i;6178:456::-;6255:6;6263;6271;6324:2;6312:9;6303:7;6299:23;6295:32;6292:52;;;6340:1;6337;6330:12;6292:52;6379:9;6366:23;6398:31;6423:5;6398:31;:::i;:::-;6448:5;-1:-1:-1;6505:2:821;6490:18;;6477:32;6518:33;6477:32;6518:33;:::i;:::-;6178:456;;6570:7;;-1:-1:-1;;;6624:2:821;6609:18;;;;6596:32;;6178:456::o;7006:348::-;7058:8;7068:6;7122:3;7115:4;7107:6;7103:17;7099:27;7089:55;;7140:1;7137;7130:12;7089:55;-1:-1:-1;7163:20:821;;-1:-1:-1;;;;;7195:30:821;;7192:50;;;7238:1;7235;7228:12;7192:50;7275:4;7267:6;7263:17;7251:29;;7327:3;7320:4;7311:6;7303;7299:19;7295:30;7292:39;7289:59;;;7344:1;7341;7334:12;7289:59;7006:348;;;;;:::o;7359:1010::-;7501:6;7509;7517;7525;7533;7586:2;7574:9;7565:7;7561:23;7557:32;7554:52;;;7602:1;7599;7592:12;7554:52;7642:9;7629:23;-1:-1:-1;;;;;7712:2:821;7704:6;7701:14;7698:34;;;7728:1;7725;7718:12;7698:34;7766:6;7755:9;7751:22;7741:32;;7811:7;7804:4;7800:2;7796:13;7792:27;7782:55;;7833:1;7830;7823:12;7782:55;7873:2;7860:16;7899:2;7891:6;7888:14;7885:34;;;7915:1;7912;7905:12;7885:34;7970:7;7963:4;7953:6;7950:1;7946:14;7942:2;7938:23;7934:34;7931:47;7928:67;;;7991:1;7988;7981:12;7928:67;8022:4;8014:13;;;;-1:-1:-1;8046:6:821;-1:-1:-1;8090:20:821;;;8077:34;;8123:16;;;8120:36;;;8152:1;8149;8142:12;8120:36;;8191:61;8244:7;8233:8;8222:9;8218:24;8191:61;:::i;:::-;8271:8;;-1:-1:-1;8165:87:821;-1:-1:-1;8325:38:821;;-1:-1:-1;8359:2:821;8344:18;;8325:38;:::i;:::-;8315:48;;7359:1010;;;;;;;;:::o;8374:274::-;-1:-1:-1;;;;;8566:32:821;;;;8548:51;;8630:2;8615:18;;8608:34;8536:2;8521:18;;8374:274::o;8653:315::-;8721:6;8729;8782:2;8770:9;8761:7;8757:23;8753:32;8750:52;;;8798:1;8795;8788:12;8750:52;8834:9;8821:23;8811:33;;8894:2;8883:9;8879:18;8866:32;8907:31;8932:5;8907:31;:::i;:::-;8957:5;8947:15;;;8653:315;;;;;:::o;9263:183::-;9323:4;-1:-1:-1;;;;;9348:6:821;9345:30;9342:56;;;9378:18;;:::i;:::-;-1:-1:-1;9423:1:821;9419:14;9435:4;9415:25;;9263:183::o;9451:805::-;9505:5;9558:3;9551:4;9543:6;9539:17;9535:27;9525:55;;9576:1;9573;9566:12;9525:55;9612:6;9599:20;9638:4;9661:43;9701:2;9661:43;:::i;:::-;9733:2;9727:9;9745:31;9773:2;9765:6;9745:31;:::i;:::-;9796:6;9785:17;;9826:2;9818:6;9811:18;9857:4;9849:6;9845:17;9838:24;;9914:4;9908:2;9905:1;9901:10;9893:6;9889:23;9885:34;9871:48;;9942:3;9934:6;9931:15;9928:35;;;9959:1;9956;9949:12;9928:35;9995:4;9987:6;9983:17;10009:217;10025:6;10020:3;10017:15;10009:217;;;10105:3;10092:17;10122:31;10147:5;10122:31;:::i;:::-;10166:18;;10204:12;;;;10042;;10009:217;;;-1:-1:-1;10244:6:821;9451:805;-1:-1:-1;;;;;;9451:805:821:o;10261:1186::-;10429:6;10437;10445;10453;10461;10469;10477;10530:3;10518:9;10509:7;10505:23;10501:33;10498:53;;;10547:1;10544;10537:12;10498:53;10570:29;10589:9;10570:29;:::i;:::-;10560:39;;10650:2;10639:9;10635:18;10622:32;-1:-1:-1;;;;;10714:2:821;10706:6;10703:14;10700:34;;;10730:1;10727;10720:12;10700:34;10753:49;10794:7;10785:6;10774:9;10770:22;10753:49;:::i;:::-;10743:59;;10855:2;10844:9;10840:18;10827:32;10811:48;;10884:2;10874:8;10871:16;10868:36;;;10900:1;10897;10890:12;10868:36;10923:51;10966:7;10955:8;10944:9;10940:24;10923:51;:::i;:::-;10913:61;;11027:2;11016:9;11012:18;10999:32;10983:48;;11056:2;11046:8;11043:16;11040:36;;;11072:1;11069;11062:12;11040:36;11095:51;11138:7;11127:8;11116:9;11112:24;11095:51;:::i;:::-;11085:61;;11199:3;11188:9;11184:19;11171:33;11155:49;;11229:2;11219:8;11216:16;11213:36;;;11245:1;11242;11235:12;11213:36;;11268:63;11323:7;11312:8;11301:9;11297:24;11268:63;:::i;:::-;11258:73;;;11350:39;11384:3;11373:9;11369:19;11350:39;:::i;:::-;11340:49;;11436:3;11425:9;11421:19;11408:33;11398:43;;10261:1186;;;;;;;;;;:::o;12025:321::-;12094:6;12147:2;12135:9;12126:7;12122:23;12118:32;12115:52;;;12163:1;12160;12153:12;12115:52;12203:9;12190:23;-1:-1:-1;;;;;12228:6:821;12225:30;12222:50;;;12268:1;12265;12258:12;12222:50;12291:49;12332:7;12323:6;12312:9;12308:22;12291:49;:::i;12351:383::-;12428:6;12436;12444;12497:2;12485:9;12476:7;12472:23;12468:32;12465:52;;;12513:1;12510;12503:12;12465:52;12549:9;12536:23;12526:33;;12609:2;12598:9;12594:18;12581:32;12622:31;12647:5;12622:31;:::i;12928:118::-;13014:5;13007:13;13000:21;12993:5;12990:32;12980:60;;13036:1;13033;13026:12;13051:382;13116:6;13124;13177:2;13165:9;13156:7;13152:23;13148:32;13145:52;;;13193:1;13190;13183:12;13145:52;13232:9;13219:23;13251:31;13276:5;13251:31;:::i;:::-;13301:5;-1:-1:-1;13358:2:821;13343:18;;13330:32;13371:30;13330:32;13371:30;:::i;13438:626::-;13535:6;13543;13596:2;13584:9;13575:7;13571:23;13567:32;13564:52;;;13612:1;13609;13602:12;13564:52;13652:9;13639:23;-1:-1:-1;;;;;13722:2:821;13714:6;13711:14;13708:34;;;13738:1;13735;13728:12;13708:34;13776:6;13765:9;13761:22;13751:32;;13821:7;13814:4;13810:2;13806:13;13802:27;13792:55;;13843:1;13840;13833:12;13792:55;13883:2;13870:16;13909:2;13901:6;13898:14;13895:34;;;13925:1;13922;13915:12;13895:34;13978:7;13973:2;13963:6;13960:1;13956:14;13952:2;13948:23;13944:32;13941:45;13938:65;;;13999:1;13996;13989:12;13938:65;14030:2;14022:11;;;;;14052:6;;-1:-1:-1;13438:626:821;;-1:-1:-1;;;;13438:626:821:o;14069:801::-;14229:4;14258:2;14298;14287:9;14283:18;14328:2;14317:9;14310:21;14351:6;14386;14380:13;14417:6;14409;14402:22;14455:2;14444:9;14440:18;14433:25;;14517:2;14507:6;14504:1;14500:14;14489:9;14485:30;14481:39;14467:53;;14555:2;14547:6;14543:15;14576:1;14586:255;14600:6;14597:1;14594:13;14586:255;;;14693:2;14689:7;14677:9;14669:6;14665:22;14661:36;14656:3;14649:49;14721:40;14754:6;14745;14739:13;14721:40;:::i;:::-;14711:50;-1:-1:-1;14819:12:821;;;;14784:15;;;;14622:1;14615:9;14586:255;;;-1:-1:-1;14858:6:821;;14069:801;-1:-1:-1;;;;;;;14069:801:821:o;14875:730::-;14929:5;14982:3;14975:4;14967:6;14963:17;14959:27;14949:55;;15000:1;14997;14990:12;14949:55;15036:6;15023:20;15062:4;15085:43;15125:2;15085:43;:::i;:::-;15157:2;15151:9;15169:31;15197:2;15189:6;15169:31;:::i;:::-;15220:6;15209:17;;15250:2;15242:6;15235:18;15281:4;15273:6;15269:17;15262:24;;15338:4;15332:2;15329:1;15325:10;15317:6;15313:23;15309:34;15295:48;;15366:3;15358:6;15355:15;15352:35;;;15383:1;15380;15373:12;15352:35;15419:4;15411:6;15407:17;15433:142;15449:6;15444:3;15441:15;15433:142;;;15515:17;;15503:30;;15553:12;;;;15466;;15433:142;;15610:1071;15764:6;15772;15780;15788;15796;15849:3;15837:9;15828:7;15824:23;15820:33;15817:53;;;15866:1;15863;15856:12;15817:53;15905:9;15892:23;15924:31;15949:5;15924:31;:::i;:::-;15974:5;-1:-1:-1;16031:2:821;16016:18;;16003:32;16044:33;16003:32;16044:33;:::i;:::-;16096:7;-1:-1:-1;16154:2:821;16139:18;;16126:32;-1:-1:-1;;;;;16207:14:821;;;16204:34;;;16234:1;16231;16224:12;16204:34;16257:61;16310:7;16301:6;16290:9;16286:22;16257:61;:::i;:::-;16247:71;;16371:2;16360:9;16356:18;16343:32;16327:48;;16400:2;16390:8;16387:16;16384:36;;;16416:1;16413;16406:12;16384:36;16439:63;16494:7;16483:8;16472:9;16468:24;16439:63;:::i;:::-;16429:73;;16555:3;16544:9;16540:19;16527:33;16511:49;;16585:2;16575:8;16572:16;16569:36;;;16601:1;16598;16591:12;16569:36;;16624:51;16667:7;16656:8;16645:9;16641:24;16624:51;:::i;:::-;16614:61;;;15610:1071;;;;;;;;:::o;16686:699::-;16905:2;16957:21;;;17027:13;;16930:18;;;17049:22;;;16876:4;;16905:2;17128:15;;;;17102:2;17087:18;;;16876:4;17171:188;17185:6;17182:1;17179:13;17171:188;;;17234:43;17273:3;17264:6;17258:13;17234:43;:::i;:::-;17334:15;;;;17306:4;17297:14;;;;;17207:1;17200:9;17171:188;;;-1:-1:-1;17376:3:821;;16686:699;-1:-1:-1;;;;;;16686:699:821:o;17390:388::-;17458:6;17466;17519:2;17507:9;17498:7;17494:23;17490:32;17487:52;;;17535:1;17532;17525:12;17487:52;17574:9;17561:23;17593:31;17618:5;17593:31;:::i;:::-;17643:5;-1:-1:-1;17700:2:821;17685:18;;17672:32;17713:33;17672:32;17713:33;:::i;17783:734::-;17887:6;17895;17903;17911;17919;17972:3;17960:9;17951:7;17947:23;17943:33;17940:53;;;17989:1;17986;17979:12;17940:53;18028:9;18015:23;18047:31;18072:5;18047:31;:::i;:::-;18097:5;-1:-1:-1;18154:2:821;18139:18;;18126:32;18167:33;18126:32;18167:33;:::i;:::-;18219:7;-1:-1:-1;18273:2:821;18258:18;;18245:32;;-1:-1:-1;18324:2:821;18309:18;;18296:32;;-1:-1:-1;18379:3:821;18364:19;;18351:33;-1:-1:-1;;;;;18396:30:821;;18393:50;;;18439:1;18436;18429:12;18393:50;18462:49;18503:7;18494:6;18483:9;18479:22;18462:49;:::i;18522:380::-;18601:1;18597:12;;;;18644;;;18665:61;;18719:4;18711:6;18707:17;18697:27;;18665:61;18772:2;18764:6;18761:14;18741:18;18738:38;18735:161;;18818:10;18813:3;18809:20;18806:1;18799:31;18853:4;18850:1;18843:15;18881:4;18878:1;18871:15;19739:338;19941:2;19923:21;;;19980:2;19960:18;;;19953:30;-1:-1:-1;;;20014:2:821;19999:18;;19992:44;20068:2;20053:18;;19739:338::o;20082:409::-;20284:2;20266:21;;;20323:2;20303:18;;;20296:30;20362:34;20357:2;20342:18;;20335:62;-1:-1:-1;;;20428:2:821;20413:18;;20406:43;20481:3;20466:19;;20082:409::o;20496:127::-;20557:10;20552:3;20548:20;20545:1;20538:31;20588:4;20585:1;20578:15;20612:4;20609:1;20602:15;20628:127;20689:10;20684:3;20680:20;20677:1;20670:31;20720:4;20717:1;20710:15;20744:4;20741:1;20734:15;20760:125;20825:9;;;20846:10;;;20843:36;;;20859:18;;:::i;20890:108::-;20972:1;20965:5;20962:12;20952:40;;20988:1;20985;20978:12;21003:1129;21234:2;21286:21;;;21259:18;;;21342:22;;;21205:4;;21383:2;21401:18;;;21442:6;21205:4;21476:630;21490:6;21487:1;21484:13;21476:630;;;21565:6;21552:20;21585:31;21610:5;21585:31;:::i;:::-;-1:-1:-1;;;;;21641:31:821;21629:44;;21714:15;;;21701:29;21743:40;21701:29;21743:40;:::i;:::-;21796:48;21840:2;21835:3;21831:12;21822:7;21796:48;:::i;:::-;-1:-1:-1;21891:15:821;;;21878:29;21864:12;;;21857:51;21931:4;21982:15;;;21969:29;21955:12;;;21948:51;22022:4;22046:12;;;;22081:15;;;;21512:1;21505:9;21476:630;;;-1:-1:-1;22123:3:821;;21003:1129;-1:-1:-1;;;;;;;21003:1129:821:o;22137:168::-;22210:9;;;22241;;22258:15;;;22252:22;;22238:37;22228:71;;22279:18;;:::i;22310:217::-;22350:1;22376;22366:132;;22420:10;22415:3;22411:20;22408:1;22401:31;22455:4;22452:1;22445:15;22483:4;22480:1;22473:15;22366:132;-1:-1:-1;22512:9:821;;22310:217::o;24070:348::-;24272:2;24254:21;;;24311:2;24291:18;;;24284:30;-1:-1:-1;;;24345:2:821;24330:18;;24323:54;24409:2;24394:18;;24070:348::o;26196:521::-;26273:4;26279:6;26339:11;26326:25;26433:2;26429:7;26418:8;26402:14;26398:29;26394:43;26374:18;26370:68;26360:96;;26452:1;26449;26442:12;26360:96;26479:33;;26531:20;;;-1:-1:-1;;;;;;26563:30:821;;26560:50;;;26606:1;26603;26596:12;26560:50;26639:4;26627:17;;-1:-1:-1;26670:14:821;26666:27;;;26656:38;;26653:58;;;26707:1;26704;26697:12;26722:352;26933:6;26925;26920:3;26907:33;27028:2;26999:15;;;;-1:-1:-1;;;;;;26995:45:821;26959:16;;26984:57;;;27065:2;27057:11;;26722:352;-1:-1:-1;26722:352:821:o;27079:401::-;27281:2;27263:21;;;27320:2;27300:18;;;27293:30;27359:34;27354:2;27339:18;;27332:62;-1:-1:-1;;;27425:2:821;27410:18;;27403:35;27470:3;27455:19;;27079:401::o;28250:810::-;-1:-1:-1;;;28656:3:821;28649:36;28631:3;28714:6;28708:13;28730:75;28798:6;28793:2;28788:3;28784:12;28777:4;28769:6;28765:17;28730:75;:::i;:::-;-1:-1:-1;;;28864:2:821;28824:16;;;28856:11;;;28849:40;28914:13;;28936:76;28914:13;28998:2;28990:11;;28983:4;28971:17;;28936:76;:::i;:::-;29032:17;29051:2;29028:26;;28250:810;-1:-1:-1;;;;28250:810:821:o;29065:784::-;29148:6;29201:3;29189:9;29180:7;29176:23;29172:33;29169:53;;;29218:1;29215;29208:12;29169:53;29251:2;29245:9;29293:3;29285:6;29281:16;29363:6;29351:10;29348:22;-1:-1:-1;;;;;29315:10:821;29312:34;29309:62;29306:88;;;29374:18;;:::i;:::-;29410:2;29403:22;29447:23;;29479:31;29447:23;29479:31;:::i;:::-;29519:21;;29592:2;29577:18;;29564:32;29605:40;29564:32;29605:40;:::i;:::-;29673:2;29661:15;;29654:32;29747:2;29732:18;;;29719:32;29702:15;;;29695:57;29813:2;29798:18;;;29785:32;29768:15;;;29761:57;;;;-1:-1:-1;29665:6:821;29065:784;-1:-1:-1;29065:784:821:o;29854:339::-;30056:2;30038:21;;;30095:2;30075:18;;;30068:30;-1:-1:-1;;;30129:2:821;30114:18;;30107:45;30184:2;30169:18;;29854:339::o;30198:407::-;30400:2;30382:21;;;30439:2;30419:18;;;30412:30;30478:34;30473:2;30458:18;;30451:62;-1:-1:-1;;;30544:2:821;30529:18;;30522:41;30595:3;30580:19;;30198:407::o;30736:543::-;30838:2;30833:3;30830:11;30827:446;;;30874:1;30898:5;30895:1;30888:16;30942:4;30939:1;30929:18;31012:2;31000:10;30996:19;30993:1;30989:27;30983:4;30979:38;31048:4;31036:10;31033:20;31030:47;;;-1:-1:-1;31071:4:821;31030:47;31126:2;31121:3;31117:12;31114:1;31110:20;31104:4;31100:31;31090:41;;31181:82;31199:2;31192:5;31189:13;31181:82;;;31244:17;;;31225:1;31214:13;31181:82;;;31185:3;;;30736:543;;;:::o;31455:1345::-;31581:3;31575:10;-1:-1:-1;;;;;31600:6:821;31597:30;31594:56;;;31630:18;;:::i;:::-;31659:97;31749:6;31709:38;31741:4;31735:11;31709:38;:::i;:::-;31703:4;31659:97;:::i;:::-;31811:4;;31868:2;31857:14;;31885:1;31880:663;;;;32587:1;32604:6;32601:89;;;-1:-1:-1;32656:19:821;;;32650:26;32601:89;-1:-1:-1;;31412:1:821;31408:11;;;31404:24;31400:29;31390:40;31436:1;31432:11;;;31387:57;32703:81;;31850:944;;31880:663;30683:1;30676:14;;;30720:4;30707:18;;-1:-1:-1;;31916:20:821;;;32034:236;32048:7;32045:1;32042:14;32034:236;;;32137:19;;;32131:26;32116:42;;32229:27;;;;32197:1;32185:14;;;;32064:19;;32034:236;;;32038:3;32298:6;32289:7;32286:19;32283:201;;;32359:19;;;32353:26;-1:-1:-1;;32442:1:821;32438:14;;;32454:3;32434:24;32430:37;32426:42;32411:58;32396:74;;32283:201;-1:-1:-1;;;;;32530:1:821;32514:14;;;32510:22;32497:36;;-1:-1:-1;31455:1345:821:o;32805:383::-;33002:2;32991:9;32984:21;32965:4;33028:45;33069:2;33058:9;33054:18;33046:6;33028:45;:::i;:::-;33121:9;33113:6;33109:22;33104:2;33093:9;33089:18;33082:50;33149:33;33175:6;33167;33149:33;:::i;33547:414::-;33749:2;33731:21;;;33788:2;33768:18;;;33761:30;33827:34;33822:2;33807:18;;33800:62;-1:-1:-1;;;33893:2:821;33878:18;;33871:48;33951:3;33936:19;;33547:414::o;34309:136::-;34348:3;34376:5;34366:39;;34385:18;;:::i;:::-;-1:-1:-1;;;34421:18:821;;34309:136::o;35483:843::-;35646:5;35633:19;35661:33;35686:7;35661:33;:::i;:::-;35765:11;;-1:-1:-1;;;;;;35801:33:821;;-1:-1:-1;;;;;35713:33:821;;;;35798:41;;;35785:55;;35888:2;35877:14;;35864:28;35901:40;35864:28;35901:40;:::i;:::-;35972:1;35963:7;35960:14;35950:145;;36017:10;36012:3;36008:20;36005:1;35998:31;36052:4;36049:1;36042:15;36080:4;36077:1;36070:15;35950:145;-1:-1:-1;;;;;;36123:33:821;;;;36120:41;;;36190:3;36167:17;;;;-1:-1:-1;;;36163:37:821;36117:84;36104:98;;36256:2;36245:14;;36232:28;36152:1;36218:12;;36211:50;36315:2;36304:14;;;36291:28;36287:1;36277:12;;;36270:50;35483:843::o;36331:287::-;36460:3;36498:6;36492:13;36514:66;36573:6;36568:3;36561:4;36553:6;36549:17;36514:66;:::i;:::-;36596:16;;;;;36331:287;-1:-1:-1;;36331:287:821:o;36623:489::-;-1:-1:-1;;;;;36892:15:821;;;36874:34;;36944:15;;36939:2;36924:18;;36917:43;36991:2;36976:18;;36969:34;;;37039:3;37034:2;37019:18;;37012:31;;;36817:4;;37060:46;;37086:19;;37078:6;37060:46;:::i;37117:249::-;37186:6;37239:2;37227:9;37218:7;37214:23;37210:32;37207:52;;;37255:1;37252;37245:12;37207:52;37287:9;37281:16;37306:30;37330:5;37306:30;:::i;37793:230::-;37999:3;37977:16;;;;-1:-1:-1;;;;;;37973:43:821;37955:62;;37943:2;37928:18;;37793:230::o;38028:245::-;38095:6;38148:2;38136:9;38127:7;38123:23;38119:32;38116:52;;;38164:1;38161;38154:12;38116:52;38196:9;38190:16;38215:28;38237:5;38215:28;:::i;38278:334::-;38480:2;38462:21;;;38519:2;38499:18;;;38492:30;-1:-1:-1;;;38553:2:821;38538:18;;38531:40;38603:2;38588:18;;38278:334::o;38852:179::-;38887:3;38929:1;38911:16;38908:23;38905:120;;;38975:1;38972;38969;38954:23;-1:-1:-1;39012:1:821;39006:8;39001:3;38997:18;38852:179;:::o;39036:671::-;39075:3;39117:4;39099:16;39096:26;39093:39;;;39036:671;:::o;39093:39::-;39159:2;39153:9;-1:-1:-1;;39224:16:821;39220:25;;39217:1;39153:9;39196:50;39275:4;39269:11;39299:16;-1:-1:-1;;;;;39405:2:821;39398:4;39390:6;39386:17;39383:25;39378:2;39370:6;39367:14;39364:45;39361:58;;;39412:5;;;;;39036:671;:::o;39361:58::-;39449:6;39443:4;39439:17;39428:28;;39485:3;39479:10;39512:2;39504:6;39501:14;39498:27;;;39518:5;;;;;;39036:671;:::o;39498:27::-;39602:2;39583:16;39577:4;39573:27;39569:36;39562:4;39553:6;39548:3;39544:16;39540:27;39537:69;39534:82;;;39609:5;;;;;;39036:671;:::o;39534:82::-;39625:57;39676:4;39667:6;39659;39655:19;39651:30;39645:4;39625:57;:::i;:::-;-1:-1:-1;39698:3:821;;39036:671;-1:-1:-1;;;;;39036:671:821:o;39712:375::-;-1:-1:-1;;;;;39970:15:821;;;39952:34;;40022:15;;;;40017:2;40002:18;;39995:43;40069:2;40054:18;;40047:34;;;;39902:2;39887:18;;39712:375::o;41085:352::-;41287:2;41269:21;;;41326:2;41306:18;;;41299:30;-1:-1:-1;;;41360:2:821;41345:18;;41338:58;41428:2;41413:18;;41085:352::o;41800:128::-;41867:9;;;41888:11;;;41885:37;;;41902:18;;:::i;41933:127::-;41994:10;41989:3;41985:20;41982:1;41975:31;42025:4;42022:1;42015:15;42049:4;42046:1;42039:15",
    "linkReferences": {},
    "immutableReferences": {
      "32281": [
        {
          "start": 594,
          "length": 32
        },
        {
          "start": 13277,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getTokenCountOfBundle(uint256)": "d0d2fe25",
    "getTokenOfBundle(uint256,uint256)": "1da799c9",
    "getUriOfBundle(uint256)": "61195e94",
    "getWrappedContents(uint256)": "d5576d26",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,uint256)": "754b8fe7",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unwrap(uint256,address)": "7647691d",
    "wrap((address,uint8,uint256,uint256)[],string,address)": "29e471dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedContents\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"}],\"name\":\"TokensUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"wrappedContents\",\"type\":\"tuple[]\"}],\"name\":\"TokensWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getTokenCountOfBundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenOfBundle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getUriOfBundle\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getWrappedContents\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"contents\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"_tokensToWrap\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"_uriForWrappedToken\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokensUnwrapped(address,address,uint256)\":{\"details\":\"Emitted when tokens are unwrapped.\"},\"TokensWrapped(address,address,uint256,(address,uint8,uint256,uint256)[])\":{\"details\":\"Emitted when tokens are wrapped.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"contractType()\":{\"details\":\"Returns the type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getTokenCountOfBundle(uint256)\":{\"details\":\"Returns the total number of assets in a particular bundle.\"},\"getTokenOfBundle(uint256,uint256)\":{\"details\":\"Returns an asset contained in a particular bundle, at a particular index.\"},\"getUriOfBundle(uint256)\":{\"details\":\"Returns the uri of a particular bundle.\"},\"getWrappedContents(uint256)\":{\"details\":\"Returns the underlying contents of a wrapped NFT.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,uint256)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unwrap(uint256,address)\":{\"details\":\"Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\"},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"details\":\"Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\"}},\"stateVariables\":{\"ASSET_ROLE\":{\"details\":\"Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"},\"UNWRAP_ROLE\":{\"details\":\"Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted.\"},\"nextTokenIdToMint\":{\"details\":\"The next token ID of the NFT to mint.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/multiwrap/Multiwrap.sol\":\"Multiwrap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5\",\"dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf\",\"dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/TokenBundle.sol\":{\"keccak256\":\"0x0f14ee2261baa4c4ede0ceacf8a573c900aeb8a7dcb28480f812f583402c42a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fee767474c0b07e96383810e5a6cc2e40a0f0390198b3a85f543a015a0a70523\",\"dweb:/ipfs/QmeUunQ1xCs1MSm387fqivURk25S1Ye65rZBam4AchsS6y\"]},\"contracts/extension/TokenStore.sol\":{\"keccak256\":\"0xafeff5d43380e45fcd0e5d6fba5cca9063c3e05835aa60c7a89b4f135f58fd3b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10a62935e832834541f67073434dd574ad05d82ab8d59ab9f91eea548a06ef44\",\"dweb:/ipfs/QmXofRx3M6yXThm378VRccpMKDv9aegaGeyGWHtSEaJ48N\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/extension/interface/ITokenBundle.sol\":{\"keccak256\":\"0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0\",\"dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Receiver.sol\":{\"keccak256\":\"0x0e661571b96f5cb573793f26917d2a9e6c67730eb5bdc797554d6174daeeeb3e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f9a3090c66448ca9702a35b10ae33cef5ece212f260fe1fb85f7bb5d03497e94\",\"dweb:/ipfs/QmWnsKyCG7qVhds4eY8zfEJyBmgTunishm8SMF8Bc2SNFC\"]},\"contracts/external-deps/openzeppelin/utils/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xfe8fa2e1e95883eb06de7715682e3c1a0a6bcdd9c5d6859b259dbae87c9aff1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70df822499f69ccca17e08c3ac03fcf9b7c37541d9501775d6e96b017f4c684\",\"dweb:/ipfs/QmcXHWiWUnZ5dkb3nvfi1pZGYbMcaEzVxPCappx4w72F7t\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/interface/IMultiwrap.sol\":{\"keccak256\":\"0x38ec704445e9d6a7ea5f8e2b249dce160b6892975480f365a18b2ed6419a18fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29ee2c7290696e04fa06d84e3a1093d92704ebd310bfb5e99f45191b98ee4df\",\"dweb:/ipfs/Qmea1Dh3i3EJM68qqTUJv8f1mZwq1yMEXKNxLanjR3WZen\"]},\"contracts/prebuilts/multiwrap/Multiwrap.sol\":{\"keccak256\":\"0xc303ff436f15b9993bf11177bcc83e50b645839be851356ba0fb7f806d7f47fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://71441a9b1c1f1cc93859add730123408a1dd2b5e38e6956b676419cadef4adf5\",\"dweb:/ipfs/QmaYjgzn4Pwgx1EsWwDniJV2upjTfe57pzDnzvah8KjdEj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b\",\"dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0x2c98457c4171d86094adf9a4fd8cd2402b7e3e309e961f07910a60a576dd100f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04d2ed5d0fc239e80a6b3f3044b423d4b5b1d1d5d9a08ba3454ea98b556760f9\",\"dweb:/ipfs/QmQQNic6ZcSqH6HZXLvm4woYbZ59er2szVQMdouwJPouhv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d\",\"dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "unwrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedContents",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensUnwrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "wrappedContents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCountOfBundle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenOfBundle",
          "outputs": [
            {
              "internalType": "struct ITokenBundle.Token",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUriOfBundle",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWrappedContents",
          "outputs": [
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "contents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "_tokensToWrap",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "_uriForWrappedToken",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "contractType()": {
            "details": "Returns the type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getTokenCountOfBundle(uint256)": {
            "details": "Returns the total number of assets in a particular bundle."
          },
          "getTokenOfBundle(uint256,uint256)": {
            "details": "Returns an asset contained in a particular bundle, at a particular index."
          },
          "getUriOfBundle(uint256)": {
            "details": "Returns the uri of a particular bundle."
          },
          "getWrappedContents(uint256)": {
            "details": "Returns the underlying contents of a wrapped NFT."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,uint256)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenByIndex(uint256)": {
            "details": "See {IERC721Enumerable-tokenByIndex}."
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "See {IERC721Enumerable-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "unwrap(uint256,address)": {
            "details": "Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
          },
          "wrap((address,uint8,uint256,uint256)[],string,address)": {
            "details": "Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/multiwrap/Multiwrap.sol": "Multiwrap"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4",
        "urls": [
          "bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5",
          "dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea",
        "urls": [
          "bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf",
          "dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenBundle.sol": {
        "keccak256": "0x0f14ee2261baa4c4ede0ceacf8a573c900aeb8a7dcb28480f812f583402c42a6",
        "urls": [
          "bzz-raw://fee767474c0b07e96383810e5a6cc2e40a0f0390198b3a85f543a015a0a70523",
          "dweb:/ipfs/QmeUunQ1xCs1MSm387fqivURk25S1Ye65rZBam4AchsS6y"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenStore.sol": {
        "keccak256": "0xafeff5d43380e45fcd0e5d6fba5cca9063c3e05835aa60c7a89b4f135f58fd3b",
        "urls": [
          "bzz-raw://10a62935e832834541f67073434dd574ad05d82ab8d59ab9f91eea548a06ef44",
          "dweb:/ipfs/QmXofRx3M6yXThm378VRccpMKDv9aegaGeyGWHtSEaJ48N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ITokenBundle.sol": {
        "keccak256": "0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949",
        "urls": [
          "bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0",
          "dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/ERC1155/ERC1155Receiver.sol": {
        "keccak256": "0x0e661571b96f5cb573793f26917d2a9e6c67730eb5bdc797554d6174daeeeb3e",
        "urls": [
          "bzz-raw://f9a3090c66448ca9702a35b10ae33cef5ece212f260fe1fb85f7bb5d03497e94",
          "dweb:/ipfs/QmWnsKyCG7qVhds4eY8zfEJyBmgTunishm8SMF8Bc2SNFC"
        ],
        "license": "Apache 2.0"
      },
      "contracts/external-deps/openzeppelin/utils/ERC721/ERC721Holder.sol": {
        "keccak256": "0xfe8fa2e1e95883eb06de7715682e3c1a0a6bcdd9c5d6859b259dbae87c9aff1f",
        "urls": [
          "bzz-raw://b70df822499f69ccca17e08c3ac03fcf9b7c37541d9501775d6e96b017f4c684",
          "dweb:/ipfs/QmcXHWiWUnZ5dkb3nvfi1pZGYbMcaEzVxPCappx4w72F7t"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/interface/IMultiwrap.sol": {
        "keccak256": "0x38ec704445e9d6a7ea5f8e2b249dce160b6892975480f365a18b2ed6419a18fe",
        "urls": [
          "bzz-raw://b29ee2c7290696e04fa06d84e3a1093d92704ebd310bfb5e99f45191b98ee4df",
          "dweb:/ipfs/Qmea1Dh3i3EJM68qqTUJv8f1mZwq1yMEXKNxLanjR3WZen"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/multiwrap/Multiwrap.sol": {
        "keccak256": "0xc303ff436f15b9993bf11177bcc83e50b645839be851356ba0fb7f806d7f47fe",
        "urls": [
          "bzz-raw://71441a9b1c1f1cc93859add730123408a1dd2b5e38e6956b676419cadef4adf5",
          "dweb:/ipfs/QmaYjgzn4Pwgx1EsWwDniJV2upjTfe57pzDnzvah8KjdEj"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf",
        "urls": [
          "bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b",
          "dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad",
        "urls": [
          "bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a",
          "dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol": {
        "keccak256": "0x2c98457c4171d86094adf9a4fd8cd2402b7e3e309e961f07910a60a576dd100f",
        "urls": [
          "bzz-raw://04d2ed5d0fc239e80a6b3f3044b423d4b5b1d1d5d9a08ba3454ea98b556760f9",
          "dweb:/ipfs/QmQQNic6ZcSqH6HZXLvm4woYbZ59er2szVQMdouwJPouhv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol": {
        "keccak256": "0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff",
        "urls": [
          "bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d",
          "dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/multiwrap/Multiwrap.sol",
    "id": 87131,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "ERC1155Receiver": [
        49549
      ],
      "ERC165Upgradeable": [
        162692
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "ERC721EnumerableUpgradeable": [
        159674
      ],
      "ERC721Upgradeable": [
        159166
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC1155Receiver": [
        13921
      ],
      "IERC165": [
        13945
      ],
      "IERC165Upgradeable": [
        162704
      ],
      "IERC2981": [
        14089
      ],
      "IERC2981Upgradeable": [
        153941
      ],
      "IERC721EnumerableUpgradeable": [
        159705
      ],
      "IERC721MetadataUpgradeable": [
        159732
      ],
      "IERC721ReceiverUpgradeable": [
        159184
      ],
      "IERC721Upgradeable": [
        159300
      ],
      "IMulticall": [
        33577
      ],
      "IMultiwrap": [
        76806
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IRoyalty": [
        34061
      ],
      "ITokenBundle": [
        34909
      ],
      "Initializable": [
        154159
      ],
      "MathUpgradeable": [
        163570
      ],
      "Multicall": [
        21206
      ],
      "Multiwrap": [
        87130
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "ReentrancyGuardUpgradeable": [
        154370
      ],
      "Royalty": [
        23031
      ],
      "SignedMathUpgradeable": [
        165216
      ],
      "Strings": [
        66084
      ],
      "StringsUpgradeable": [
        161995
      ],
      "TokenStore": [
        32544
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10345:369",
    "nodes": [
      {
        "id": 86557,
        "nodeType": "PragmaDirective",
        "src": "39:24:369",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 86558,
        "nodeType": "ImportDirective",
        "src": "774:101:369",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 159675,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86559,
        "nodeType": "ImportDirective",
        "src": "876:85:369",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 154371,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86560,
        "nodeType": "ImportDirective",
        "src": "962:80:369",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 153942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86561,
        "nodeType": "ImportDirective",
        "src": "1092:37:369",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/IMultiwrap.sol",
        "file": "../interface/IMultiwrap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 76807,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86562,
        "nodeType": "ImportDirective",
        "src": "1130:39:369",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86563,
        "nodeType": "ImportDirective",
        "src": "1170:79:369",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86564,
        "nodeType": "ImportDirective",
        "src": "1291:46:369",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86565,
        "nodeType": "ImportDirective",
        "src": "1338:37:369",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 23032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86566,
        "nodeType": "ImportDirective",
        "src": "1376:37:369",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86567,
        "nodeType": "ImportDirective",
        "src": "1414:51:369",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86571,
        "nodeType": "ImportDirective",
        "src": "1466:95:369",
        "nodes": [],
        "absolutePath": "contracts/extension/TokenStore.sol",
        "file": "../../extension/TokenStore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87131,
        "sourceUnit": 32545,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86568,
              "name": "TokenStore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32544,
              "src": "1475:10:369",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86569,
              "name": "ERC1155Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49549,
              "src": "1487:15:369",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86570,
              "name": "IERC1155Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13921,
              "src": "1504:16:369",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87130,
        "nodeType": "ContractDefinition",
        "src": "1563:8820:369",
        "nodes": [
          {
            "id": 86599,
            "nodeType": "VariableDeclaration",
            "src": "2011:59:369",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "2036:11:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 86594,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2011:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d756c746977726170",
                  "id": 86597,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2058:11:369",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_67c7d06bf7013ca1eb81dc0e70a66133cfc4b8467eb03ddc3f3ff371e7012a32",
                    "typeString": "literal_string \"Multiwrap\""
                  },
                  "value": "Multiwrap"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_67c7d06bf7013ca1eb81dc0e70a66133cfc4b8467eb03ddc3f3ff371e7012a32",
                    "typeString": "literal_string \"Multiwrap\""
                  }
                ],
                "id": 86596,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2050:7:369",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 86595,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2050:7:369",
                  "typeDescriptions": {}
                }
              },
              "id": 86598,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2050:20:369",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86602,
            "nodeType": "VariableDeclaration",
            "src": "2076:36:369",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "2101:7:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86600,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2076:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 86601,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2111:1:369",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 86608,
            "nodeType": "VariableDeclaration",
            "src": "2222:67:369",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 86603,
              "nodeType": "StructuredDocumentation",
              "src": "2119:98:369",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2247:13:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 86604,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2222:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 86606,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2273:15:369",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 86605,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2263:9:369",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 86607,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2263:26:369",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86614,
            "nodeType": "VariableDeclaration",
            "src": "2379:63:369",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 86609,
              "nodeType": "StructuredDocumentation",
              "src": "2295:79:369",
              "text": "@dev Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2404:11:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 86610,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2379:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 86612,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2428:13:369",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 86611,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2418:9:369",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 86613,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2418:24:369",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86620,
            "nodeType": "VariableDeclaration",
            "src": "2536:63:369",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 86615,
              "nodeType": "StructuredDocumentation",
              "src": "2448:83:369",
              "text": "@dev Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted."
            },
            "mutability": "constant",
            "name": "UNWRAP_ROLE",
            "nameLocation": "2561:11:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 86616,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2536:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "554e575241505f524f4c45",
                  "id": 86618,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2585:13:369",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  },
                  "value": "UNWRAP_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  }
                ],
                "id": 86617,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2575:9:369",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 86619,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2575:24:369",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86626,
            "nodeType": "VariableDeclaration",
            "src": "2712:61:369",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 86621,
              "nodeType": "StructuredDocumentation",
              "src": "2605:102:369",
              "text": "@dev Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets."
            },
            "mutability": "constant",
            "name": "ASSET_ROLE",
            "nameLocation": "2737:10:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 86622,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2712:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41535345545f524f4c45",
                  "id": 86624,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2760:12:369",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  },
                  "value": "ASSET_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  }
                ],
                "id": 86623,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2750:9:369",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 86625,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2750:23:369",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86629,
            "nodeType": "VariableDeclaration",
            "src": "2831:32:369",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 86627,
              "nodeType": "StructuredDocumentation",
              "src": "2780:46:369",
              "text": "@dev The next token ID of the NFT to mint."
            },
            "functionSelector": "3b1475a7",
            "mutability": "mutable",
            "name": "nextTokenIdToMint",
            "nameLocation": "2846:17:369",
            "scope": 87130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2831:7:369",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 86640,
            "nodeType": "FunctionDefinition",
            "src": "3062:87:369",
            "nodes": [],
            "body": {
              "id": 86639,
              "nodeType": "Block",
              "src": "3147:2:369",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86634,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86631,
                    "src": "3114:19:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 86635,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86633,
                  "name": "TokenStore",
                  "nameLocations": [
                    "3103:10:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32544,
                  "src": "3103:10:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "3103:31:369"
              },
              {
                "id": 86637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86636,
                  "name": "initializer",
                  "nameLocations": [
                    "3135:11:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "3135:11:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "3135:11:369"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86631,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "3082:19:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86640,
                  "src": "3074:27:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:29:369"
            },
            "returnParameters": {
              "id": 86638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3147:0:369"
            },
            "scope": 87130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86726,
            "nodeType": "FunctionDefinition",
            "src": "3214:1182:369",
            "nodes": [],
            "body": {
              "id": 86725,
              "nodeType": "Block",
              "src": "3497:899:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86661,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154309,
                      "src": "3582:22:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3582:24:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86663,
                  "nodeType": "ExpressionStatement",
                  "src": "3582:24:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86665,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86652,
                        "src": "3638:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 86664,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "3616:21:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 86666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:41:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86667,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:41:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86669,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86645,
                        "src": "3681:5:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 86670,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86647,
                        "src": "3688:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 86668,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158279,
                      "src": "3667:13:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 86671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:29:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86672,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:29:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86674,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86654,
                        "src": "3777:17:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86675,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86656,
                        "src": "3796:11:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86673,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "3752:24:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 86676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3752:56:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86677,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:56:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86679,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86643,
                        "src": "3830:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86678,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "3818:11:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 86680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:26:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86681,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:26:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86683,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86649,
                        "src": "3872:12:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 86682,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "3854:17:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 86684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:31:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86685,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:31:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86687,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3907:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 86688,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86643,
                        "src": "3927:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86686,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3896:10:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 86689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:45:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86690,
                  "nodeType": "ExpressionStatement",
                  "src": "3896:45:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86692,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86614,
                        "src": "3962:11:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 86693,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86643,
                        "src": "3975:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86691,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3951:10:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 86694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3951:38:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86695,
                  "nodeType": "ExpressionStatement",
                  "src": "3951:38:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86697,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86608,
                        "src": "4010:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 86698,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86643,
                        "src": "4025:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86696,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3999:10:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 86699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3999:40:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86700,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:40:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86702,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86608,
                        "src": "4134:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4157:1:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4149:7:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4149:7:369",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4149:10:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86701,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4123:10:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 86707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4123:37:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86708,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:37:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86710,
                        "name": "UNWRAP_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86620,
                        "src": "4251:11:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4272:1:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4264:7:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86711,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4264:7:369",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4264:10:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86709,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4240:10:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 86715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4240:35:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86716,
                  "nodeType": "ExpressionStatement",
                  "src": "4240:35:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86718,
                        "name": "ASSET_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86626,
                        "src": "4366:10:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4386:1:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4378:7:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4378:7:369",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4378:10:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86717,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4355:10:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 86723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:34:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86724,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:34:369"
                }
              ]
            },
            "documentation": {
              "id": 86641,
              "nodeType": "StructuredDocumentation",
              "src": "3155:54:369",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "754b8fe7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86658,
                  "name": "initializer",
                  "nameLocations": [
                    "3485:11:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "3485:11:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "3485:11:369"
              }
            ],
            "name": "initialize",
            "nameLocation": "3223:10:369",
            "parameters": {
              "id": 86657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86643,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3251:13:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3243:21:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86645,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3288:5:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3274:19:369",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86644,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:6:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86647,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3317:7:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3303:21:369",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:6:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86649,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3348:12:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3334:26:369",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:6:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86652,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3387:18:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3370:35:369",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86650,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3370:7:369",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 86651,
                    "nodeType": "ArrayTypeName",
                    "src": "3370:9:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86654,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3423:17:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3415:25:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86656,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3458:11:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "3450:19:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3233:242:369"
            },
            "returnParameters": {
              "id": 86660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3497:0:369"
            },
            "scope": 87130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86738,
            "nodeType": "ModifierDefinition",
            "src": "4580:110:369",
            "nodes": [],
            "body": {
              "id": 86737,
              "nodeType": "Block",
              "src": "4622:68:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86731,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86728,
                        "src": "4653:4:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 86732,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "4659:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 86733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4659:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86730,
                      "name": "_checkRoleWithSwitch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22110,
                      "src": "4632:20:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) view"
                      }
                    },
                    "id": 86734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:40:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86735,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:40:369"
                },
                {
                  "id": 86736,
                  "nodeType": "PlaceholderStatement",
                  "src": "4682:1:369"
                }
              ]
            },
            "name": "onlyRoleWithSwitch",
            "nameLocation": "4589:18:369",
            "parameters": {
              "id": 86729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86728,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "4616:4:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86738,
                  "src": "4608:12:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86727,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4608:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4607:14:369"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86747,
            "nodeType": "FunctionDefinition",
            "src": "4930:91:369",
            "nodes": [],
            "body": {
              "id": 86746,
              "nodeType": "Block",
              "src": "4986:35:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 86744,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86599,
                    "src": "5003:11:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 86743,
                  "id": 86745,
                  "nodeType": "Return",
                  "src": "4996:18:369"
                }
              ]
            },
            "documentation": {
              "id": 86739,
              "nodeType": "StructuredDocumentation",
              "src": "4883:42:369",
              "text": "@dev Returns the type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "4939:12:369",
            "parameters": {
              "id": 86740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4951:2:369"
            },
            "returnParameters": {
              "id": 86743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86747,
                  "src": "4977:7:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4977:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4976:9:369"
            },
            "scope": 87130,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86759,
            "nodeType": "FunctionDefinition",
            "src": "5077:95:369",
            "nodes": [],
            "body": {
              "id": 86758,
              "nodeType": "Block",
              "src": "5134:38:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86755,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86602,
                        "src": "5157:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5151:5:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 86753,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5151:5:369",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 86756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:14:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 86752,
                  "id": 86757,
                  "nodeType": "Return",
                  "src": "5144:21:369"
                }
              ]
            },
            "documentation": {
              "id": 86748,
              "nodeType": "StructuredDocumentation",
              "src": "5027:45:369",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "5086:15:369",
            "parameters": {
              "id": 86749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5101:2:369"
            },
            "returnParameters": {
              "id": 86752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86759,
                  "src": "5127:5:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 86750,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5127:5:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5126:7:369"
            },
            "scope": 87130,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86772,
            "nodeType": "FunctionDefinition",
            "src": "5248:121:369",
            "nodes": [],
            "body": {
              "id": 86771,
              "nodeType": "Block",
              "src": "5275:94:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 86767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 86764,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5293:3:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 86765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5297:6:369",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5293:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 86766,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32281,
                          "src": "5307:18:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5293:32:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 86768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5327:34:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 86763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5285:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5285:77:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86770,
                  "nodeType": "ExpressionStatement",
                  "src": "5285:77:369"
                }
              ]
            },
            "documentation": {
              "id": 86760,
              "nodeType": "StructuredDocumentation",
              "src": "5178:65:369",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5255:2:369"
            },
            "returnParameters": {
              "id": 86762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5275:0:369"
            },
            "scope": 87130,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86786,
            "nodeType": "FunctionDefinition",
            "src": "5616:129:369",
            "nodes": [],
            "body": {
              "id": 86785,
              "nodeType": "Block",
              "src": "5697:48:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86782,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86775,
                        "src": "5729:8:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86781,
                      "name": "getUriOfBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31832,
                      "src": "5714:14:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 86783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5714:24:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 86780,
                  "id": 86784,
                  "nodeType": "Return",
                  "src": "5707:31:369"
                }
              ]
            },
            "baseFunctions": [
              158439
            ],
            "documentation": {
              "id": 86773,
              "nodeType": "StructuredDocumentation",
              "src": "5566:45:369",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5625:8:369",
            "overrides": {
              "id": 86777,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5664:8:369"
            },
            "parameters": {
              "id": 86776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86775,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5642:8:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86786,
                  "src": "5634:16:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5633:18:369"
            },
            "returnParameters": {
              "id": 86780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86786,
                  "src": "5682:13:369",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5682:6:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5681:15:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86825,
            "nodeType": "FunctionDefinition",
            "src": "5776:432:369",
            "nodes": [],
            "body": {
              "id": 86824,
              "nodeType": "Block",
              "src": "5936:272:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 86822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 86815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 86800,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86789,
                              "src": "5989:11:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 86798,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "5965:5:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Multiwrap_$87130_$",
                                "typeString": "type(contract super Multiwrap)"
                              }
                            },
                            "id": 86799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5971:17:369",
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 159365,
                            "src": "5965:23:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view returns (bool)"
                            }
                          },
                          "id": 86801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5965:36:369",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 86807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86802,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86789,
                            "src": "6017:11:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 86804,
                                  "name": "IERC721Upgradeable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159300,
                                  "src": "6037:18:369",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$159300_$",
                                    "typeString": "type(contract IERC721Upgradeable)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$159300_$",
                                    "typeString": "type(contract IERC721Upgradeable)"
                                  }
                                ],
                                "id": 86803,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "6032:4:369",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 86805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6032:24:369",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Upgradeable_$159300",
                                "typeString": "type(contract IERC721Upgradeable)"
                              }
                            },
                            "id": 86806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6057:11:369",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "6032:36:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6017:51:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5965:103:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 86814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86809,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86789,
                          "src": "6084:11:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 86811,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13921,
                                "src": "6104:16:369",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13921_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13921_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              ],
                              "id": 86810,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "6099:4:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 86812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6099:22:369",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$13921",
                              "typeString": "type(contract IERC1155Receiver)"
                            }
                          },
                          "id": 86813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6122:11:369",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "6099:34:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "6084:49:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5965:168:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 86821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 86816,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86789,
                        "src": "6149:11:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86818,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153941,
                              "src": "6169:19:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 86817,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6164:4:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6164:25:369",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$153941",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 86820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6190:11:369",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6164:37:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6149:52:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5965:236:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 86797,
                  "id": 86823,
                  "nodeType": "Return",
                  "src": "5946:255:369"
                }
              ]
            },
            "baseFunctions": [
              13944,
              49548,
              159365
            ],
            "documentation": {
              "id": 86787,
              "nodeType": "StructuredDocumentation",
              "src": "5751:20:369",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5785:17:369",
            "overrides": {
              "id": 86794,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 86791,
                  "name": "ERC1155Receiver",
                  "nameLocations": [
                    "5866:15:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49549,
                  "src": "5866:15:369"
                },
                {
                  "id": 86792,
                  "name": "ERC721EnumerableUpgradeable",
                  "nameLocations": [
                    "5883:27:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159674,
                  "src": "5883:27:369"
                },
                {
                  "id": 86793,
                  "name": "IERC165",
                  "nameLocations": [
                    "5912:7:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "5912:7:369"
                }
              ],
              "src": "5857:63:369"
            },
            "parameters": {
              "id": 86790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86789,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5819:11:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86825,
                  "src": "5812:18:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 86788,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5812:6:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5802:34:369"
            },
            "returnParameters": {
              "id": 86797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86796,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86825,
                  "src": "5930:4:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 86795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5930:4:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5929:6:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 86906,
            "nodeType": "FunctionDefinition",
            "src": "6486:712:369",
            "nodes": [],
            "body": {
              "id": 86905,
              "nodeType": "Block",
              "src": "6707:491:369",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 86851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6721:32:369",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 86845,
                          "name": "ASSET_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86626,
                          "src": "6730:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 86848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6750:1:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 86847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6742:7:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 86846,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6742:7:369",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6742:10:369",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86844,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21818,
                        "src": "6722:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 86850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6722:31:369",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86875,
                  "nodeType": "IfStatement",
                  "src": "6717:203:369",
                  "trueBody": {
                    "id": 86874,
                    "nodeType": "Block",
                    "src": "6755:165:369",
                    "statements": [
                      {
                        "body": {
                          "id": 86872,
                          "nodeType": "Block",
                          "src": "6823:87:369",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 86865,
                                    "name": "ASSET_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86626,
                                    "src": "6852:10:369",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 86866,
                                        "name": "_tokensToWrap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 86830,
                                        "src": "6864:13:369",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                                        }
                                      },
                                      "id": 86868,
                                      "indexExpression": {
                                        "id": 86867,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 86853,
                                        "src": "6878:1:369",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6864:16:369",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$34897_calldata_ptr",
                                        "typeString": "struct ITokenBundle.Token calldata"
                                      }
                                    },
                                    "id": 86869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:13:369",
                                    "memberName": "assetContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34889,
                                    "src": "6864:30:369",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 86864,
                                  "name": "_checkRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22067,
                                  "src": "6841:10:369",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address) view"
                                  }
                                },
                                "id": 86870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6841:54:369",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86871,
                              "nodeType": "ExpressionStatement",
                              "src": "6841:54:369"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86856,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86853,
                            "src": "6789:1:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 86857,
                              "name": "_tokensToWrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86830,
                              "src": "6793:13:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ITokenBundle.Token calldata[] calldata"
                              }
                            },
                            "id": 86858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6807:6:369",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6793:20:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6789:24:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86873,
                        "initializationExpression": {
                          "assignments": [
                            86853
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 86853,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6782:1:369",
                              "nodeType": "VariableDeclaration",
                              "scope": 86873,
                              "src": "6774:9:369",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 86852,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6774:7:369",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 86855,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 86854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6786:1:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6774:13:369"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 86862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 86860,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86853,
                              "src": "6815:1:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 86861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6820:1:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6815:6:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 86863,
                          "nodeType": "ExpressionStatement",
                          "src": "6815:6:369"
                        },
                        "nodeType": "ForStatement",
                        "src": "6769:141:369"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 86878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86876,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86842,
                      "src": "6930:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86877,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86629,
                      "src": "6940:17:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6930:27:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86879,
                  "nodeType": "ExpressionStatement",
                  "src": "6930:27:369"
                },
                {
                  "expression": {
                    "id": 86882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86880,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86629,
                      "src": "6967:17:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 86881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6988:1:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6967:22:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86883,
                  "nodeType": "ExpressionStatement",
                  "src": "6967:22:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 86885,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "7013:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 86886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7013:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86887,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86830,
                        "src": "7027:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      },
                      {
                        "id": 86888,
                        "name": "_uriForWrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86832,
                        "src": "7042:19:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 86889,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86842,
                        "src": "7063:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86884,
                      "name": "_storeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32325,
                      "src": "7000:12:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,struct ITokenBundle.Token calldata[] calldata,string memory,uint256)"
                      }
                    },
                    "id": 86890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7000:71:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86891,
                  "nodeType": "ExpressionStatement",
                  "src": "7000:71:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86893,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86834,
                        "src": "7092:10:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86894,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86842,
                        "src": "7104:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86892,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        158729,
                        158758
                      ],
                      "referencedDeclaration": 158729,
                      "src": "7082:9:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 86895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7082:30:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86896,
                  "nodeType": "ExpressionStatement",
                  "src": "7082:30:369"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 86898,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "7142:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 86899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7142:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86900,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86834,
                        "src": "7156:10:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86901,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86842,
                        "src": "7168:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86902,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86830,
                        "src": "7177:13:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      ],
                      "id": 86897,
                      "name": "TokensWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76774,
                      "src": "7128:13:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ITokenBundle.Token memory[] memory)"
                      }
                    },
                    "id": 86903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7128:63:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86904,
                  "nodeType": "EmitStatement",
                  "src": "7123:68:369"
                }
              ]
            },
            "baseFunctions": [
              76797
            ],
            "documentation": {
              "id": 86826,
              "nodeType": "StructuredDocumentation",
              "src": "6402:79:369",
              "text": "@dev Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
            },
            "functionSelector": "29e471dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86837,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86836,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "6636:12:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "6636:12:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "6636:12:369"
              },
              {
                "arguments": [
                  {
                    "id": 86839,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86614,
                    "src": "6668:11:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 86840,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86838,
                  "name": "onlyRoleWithSwitch",
                  "nameLocations": [
                    "6649:18:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86738,
                  "src": "6649:18:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "6649:31:369"
              }
            ],
            "name": "wrap",
            "nameLocation": "6495:4:369",
            "parameters": {
              "id": 86835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86830,
                  "mutability": "mutable",
                  "name": "_tokensToWrap",
                  "nameLocation": "6526:13:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86906,
                  "src": "6509:30:369",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$34897_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86828,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 86827,
                        "name": "Token",
                        "nameLocations": [
                          "6509:5:369"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34897,
                        "src": "6509:5:369"
                      },
                      "referencedDeclaration": 34897,
                      "src": "6509:5:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$34897_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 86829,
                    "nodeType": "ArrayTypeName",
                    "src": "6509:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$34897_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86832,
                  "mutability": "mutable",
                  "name": "_uriForWrappedToken",
                  "nameLocation": "6565:19:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86906,
                  "src": "6549:35:369",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86831,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6549:6:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86834,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "6602:10:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86906,
                  "src": "6594:18:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6594:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6499:119:369"
            },
            "returnParameters": {
              "id": 86843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86842,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6698:7:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86906,
                  "src": "6690:15:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6690:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6689:17:369"
            },
            "scope": 87130,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86952,
            "nodeType": "FunctionDefinition",
            "src": "7292:421:369",
            "nodes": [],
            "body": {
              "id": 86951,
              "nodeType": "Block",
              "src": "7400:313:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86920,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86909,
                          "src": "7418:8:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 86921,
                          "name": "nextTokenIdToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86629,
                          "src": "7429:17:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7418:28:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726170706564204e465420444e452e",
                        "id": 86923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7448:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        },
                        "value": "wrapped NFT DNE."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        }
                      ],
                      "id": 86919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7410:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7410:57:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86925,
                  "nodeType": "ExpressionStatement",
                  "src": "7410:57:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 86928,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                87116
                              ],
                              "referencedDeclaration": 87116,
                              "src": "7504:10:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 86929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7504:12:369",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 86930,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86909,
                            "src": "7518:8:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 86927,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158714,
                          "src": "7485:18:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 86931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7485:42:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f7420617070726f76656420666f7220756e7772617070696e672e",
                        "id": 86932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7529:37:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        },
                        "value": "caller not approved for unwrapping."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        }
                      ],
                      "id": 86926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7477:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7477:90:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86934,
                  "nodeType": "ExpressionStatement",
                  "src": "7477:90:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86936,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86909,
                        "src": "7584:8:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86935,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158902,
                      "src": "7578:5:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 86937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7578:15:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86938,
                  "nodeType": "ExpressionStatement",
                  "src": "7578:15:369"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86940,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86911,
                        "src": "7618:10:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86941,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86909,
                        "src": "7630:8:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86939,
                      "name": "_releaseTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32387,
                      "src": "7603:14:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 86942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7603:36:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86943,
                  "nodeType": "ExpressionStatement",
                  "src": "7603:36:369"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 86945,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "7671:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 86946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7671:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86947,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86911,
                        "src": "7685:10:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86948,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86909,
                        "src": "7697:8:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86944,
                      "name": "TokensUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76783,
                      "src": "7655:15:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7655:51:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86950,
                  "nodeType": "EmitStatement",
                  "src": "7650:56:369"
                }
              ]
            },
            "baseFunctions": [
              76805
            ],
            "documentation": {
              "id": 86907,
              "nodeType": "StructuredDocumentation",
              "src": "7204:83:369",
              "text": "@dev Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
            },
            "functionSelector": "7647691d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86914,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86913,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7355:12:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "7355:12:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "7355:12:369"
              },
              {
                "arguments": [
                  {
                    "id": 86916,
                    "name": "UNWRAP_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86620,
                    "src": "7387:11:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 86917,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86915,
                  "name": "onlyRoleWithSwitch",
                  "nameLocations": [
                    "7368:18:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86738,
                  "src": "7368:18:369"
                },
                "nodeType": "ModifierInvocation",
                "src": "7368:31:369"
              }
            ],
            "name": "unwrap",
            "nameLocation": "7301:6:369",
            "parameters": {
              "id": 86912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86909,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7316:8:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86952,
                  "src": "7308:16:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7308:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86911,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "7334:10:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 86952,
                  "src": "7326:18:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7326:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7307:38:369"
            },
            "returnParameters": {
              "id": 86918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7400:0:369"
            },
            "scope": 87130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87000,
            "nodeType": "FunctionDefinition",
            "src": "7963:314:369",
            "nodes": [],
            "body": {
              "id": 86999,
              "nodeType": "Block",
              "src": "8057:220:369",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86963,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "8075:5:369",
                      "nodeType": "VariableDeclaration",
                      "scope": 86999,
                      "src": "8067:13:369",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86962,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8067:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86967,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86965,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86955,
                        "src": "8105:8:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86964,
                      "name": "getTokenCountOfBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31799,
                      "src": "8083:21:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 86966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8083:31:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8067:47:369"
                },
                {
                  "expression": {
                    "id": 86975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86968,
                      "name": "contents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86960,
                      "src": "8124:8:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ITokenBundle.Token memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 86973,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86963,
                          "src": "8147:5:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 86972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8135:11:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct ITokenBundle.Token memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 86970,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 86969,
                              "name": "Token",
                              "nameLocations": [
                                "8139:5:369"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 34897,
                              "src": "8139:5:369"
                            },
                            "referencedDeclaration": 34897,
                            "src": "8139:5:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$34897_storage_ptr",
                              "typeString": "struct ITokenBundle.Token"
                            }
                          },
                          "id": 86971,
                          "nodeType": "ArrayTypeName",
                          "src": "8139:7:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$34897_storage_$dyn_storage_ptr",
                            "typeString": "struct ITokenBundle.Token[]"
                          }
                        }
                      },
                      "id": 86974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8135:18:369",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ITokenBundle.Token memory[] memory"
                      }
                    },
                    "src": "8124:29:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ITokenBundle.Token memory[] memory"
                    }
                  },
                  "id": 86976,
                  "nodeType": "ExpressionStatement",
                  "src": "8124:29:369"
                },
                {
                  "body": {
                    "id": 86997,
                    "nodeType": "Block",
                    "src": "8203:68:369",
                    "statements": [
                      {
                        "expression": {
                          "id": 86995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 86988,
                              "name": "contents",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86960,
                              "src": "8217:8:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ITokenBundle.Token memory[] memory"
                              }
                            },
                            "id": 86990,
                            "indexExpression": {
                              "id": 86989,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86978,
                              "src": "8226:1:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8217:11:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$34897_memory_ptr",
                              "typeString": "struct ITokenBundle.Token memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 86992,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86955,
                                "src": "8248:8:369",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 86993,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86978,
                                "src": "8258:1:369",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 86991,
                              "name": "getTokenOfBundle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31818,
                              "src": "8231:16:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Token_$34897_memory_ptr_$",
                                "typeString": "function (uint256,uint256) view returns (struct ITokenBundle.Token memory)"
                              }
                            },
                            "id": 86994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8231:29:369",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$34897_memory_ptr",
                              "typeString": "struct ITokenBundle.Token memory"
                            }
                          },
                          "src": "8217:43:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$34897_memory_ptr",
                            "typeString": "struct ITokenBundle.Token memory"
                          }
                        },
                        "id": 86996,
                        "nodeType": "ExpressionStatement",
                        "src": "8217:43:369"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86981,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86978,
                      "src": "8184:1:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 86982,
                      "name": "total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86963,
                      "src": "8188:5:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8184:9:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86998,
                  "initializationExpression": {
                    "assignments": [
                      86978
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 86978,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8177:1:369",
                        "nodeType": "VariableDeclaration",
                        "scope": 86998,
                        "src": "8169:9:369",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86977,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8169:7:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 86980,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 86979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8181:1:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8169:13:369"
                  },
                  "isSimpleCounterLoop": false,
                  "loopExpression": {
                    "expression": {
                      "id": 86986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 86984,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86978,
                        "src": "8195:1:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 86985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8200:1:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8195:6:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86987,
                    "nodeType": "ExpressionStatement",
                    "src": "8195:6:369"
                  },
                  "nodeType": "ForStatement",
                  "src": "8164:107:369"
                }
              ]
            },
            "documentation": {
              "id": 86953,
              "nodeType": "StructuredDocumentation",
              "src": "7900:58:369",
              "text": "@dev Returns the underlying contents of a wrapped NFT."
            },
            "functionSelector": "d5576d26",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWrappedContents",
            "nameLocation": "7972:18:369",
            "parameters": {
              "id": 86956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86955,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7999:8:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87000,
                  "src": "7991:16:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7991:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7990:18:369"
            },
            "returnParameters": {
              "id": 86961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86960,
                  "mutability": "mutable",
                  "name": "contents",
                  "nameLocation": "8047:8:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87000,
                  "src": "8032:23:369",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$34897_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86958,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 86957,
                        "name": "Token",
                        "nameLocations": [
                          "8032:5:369"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34897,
                        "src": "8032:5:369"
                      },
                      "referencedDeclaration": 34897,
                      "src": "8032:5:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$34897_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 86959,
                    "nodeType": "ArrayTypeName",
                    "src": "8032:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$34897_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8031:25:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87014,
            "nodeType": "FunctionDefinition",
            "src": "8544:127:369",
            "nodes": [],
            "body": {
              "id": 87013,
              "nodeType": "Block",
              "src": "8606:65:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87008,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "8631:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87009,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "8651:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8651:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87007,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "8623:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8623:41:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87006,
                  "id": 87012,
                  "nodeType": "Return",
                  "src": "8616:48:369"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 87001,
              "nodeType": "StructuredDocumentation",
              "src": "8466:73:369",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "8553:12:369",
            "overrides": {
              "id": 87003,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8582:8:369"
            },
            "parameters": {
              "id": 87002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8565:2:369"
            },
            "returnParameters": {
              "id": 87006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87014,
                  "src": "8600:4:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8600:4:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8599:6:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87028,
            "nodeType": "FunctionDefinition",
            "src": "8762:133:369",
            "nodes": [],
            "body": {
              "id": 87027,
              "nodeType": "Block",
              "src": "8830:65:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87022,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "8855:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87023,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "8875:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8875:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87021,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "8847:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8847:41:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87020,
                  "id": 87026,
                  "nodeType": "Return",
                  "src": "8840:48:369"
                }
              ]
            },
            "baseFunctions": [
              23030
            ],
            "documentation": {
              "id": 87015,
              "nodeType": "StructuredDocumentation",
              "src": "8677:80:369",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "8771:18:369",
            "overrides": {
              "id": 87017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8806:8:369"
            },
            "parameters": {
              "id": 87016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8789:2:369"
            },
            "returnParameters": {
              "id": 87020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87028,
                  "src": "8824:4:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8824:4:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8823:6:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87042,
            "nodeType": "FunctionDefinition",
            "src": "8991:133:369",
            "nodes": [],
            "body": {
              "id": 87041,
              "nodeType": "Block",
              "src": "9059:65:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87036,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "9084:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87037,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87116
                          ],
                          "referencedDeclaration": 87116,
                          "src": "9104:10:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9104:12:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87035,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "9076:7:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 87039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9076:41:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87034,
                  "id": 87040,
                  "nodeType": "Return",
                  "src": "9069:48:369"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 87029,
              "nodeType": "StructuredDocumentation",
              "src": "8901:85:369",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "9000:18:369",
            "overrides": {
              "id": 87031,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9035:8:369"
            },
            "parameters": {
              "id": 87030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9018:2:369"
            },
            "returnParameters": {
              "id": 87034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87033,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87042,
                  "src": "9053:4:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87032,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9053:4:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9052:6:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87102,
            "nodeType": "FunctionDefinition",
            "src": "9371:529:369",
            "nodes": [],
            "body": {
              "id": 87101,
              "nodeType": "Block",
              "src": "9527:373:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87058,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87045,
                        "src": "9564:4:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87059,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87047,
                        "src": "9570:2:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87060,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87049,
                        "src": "9574:7:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87061,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87051,
                        "src": "9583:9:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87055,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9537:5:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Multiwrap_$87130_$",
                          "typeString": "type(contract super Multiwrap)"
                        }
                      },
                      "id": 87057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9543:20:369",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 159507,
                      "src": "9537:26:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 87062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9537:56:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87063,
                  "nodeType": "ExpressionStatement",
                  "src": "9537:56:369"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 87078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9705:35:369",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 87065,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86608,
                              "src": "9714:13:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 87068,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9737:1:369",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 87067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9729:7:369",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87066,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9729:7:369",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9729:10:369",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87064,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21818,
                            "src": "9706:7:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 87070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9706:34:369",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87072,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87045,
                          "src": "9744:4:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 87075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9760:1:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 87074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9752:7:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87073,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9752:7:369",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9752:10:369",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9744:18:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9705:57:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 87084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87079,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87047,
                        "src": "9766:2:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9780:1:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9772:7:369",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87080,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9772:7:369",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9772:10:369",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9766:16:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9705:77:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87100,
                  "nodeType": "IfStatement",
                  "src": "9701:193:369",
                  "trueBody": {
                    "id": 87099,
                    "nodeType": "Block",
                    "src": "9784:110:369",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 87095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 87088,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86608,
                                    "src": "9814:13:369",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 87089,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87045,
                                    "src": "9829:4:369",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 87087,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21818,
                                  "src": "9806:7:369",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 87090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9806:28:369",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 87092,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86608,
                                    "src": "9846:13:369",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 87093,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87047,
                                    "src": "9861:2:369",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 87091,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21818,
                                  "src": "9838:7:369",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 87094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9838:26:369",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9806:58:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "215452414e534645525f524f4c45",
                              "id": 87096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9866:16:369",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9ea1468ca8317e9b6840862ccf0a85b5fb83560bab47947c35ac0dba17fc72ad",
                                "typeString": "literal_string \"!TRANSFER_ROLE\""
                              },
                              "value": "!TRANSFER_ROLE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9ea1468ca8317e9b6840862ccf0a85b5fb83560bab47947c35ac0dba17fc72ad",
                                "typeString": "literal_string \"!TRANSFER_ROLE\""
                              }
                            ],
                            "id": 87086,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9798:7:369",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 87097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9798:85:369",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87098,
                        "nodeType": "ExpressionStatement",
                        "src": "9798:85:369"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              159507
            ],
            "documentation": {
              "id": 87043,
              "nodeType": "StructuredDocumentation",
              "src": "9308:58:369",
              "text": " @dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9380:20:369",
            "overrides": {
              "id": 87053,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9518:8:369"
            },
            "parameters": {
              "id": 87052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87045,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9418:4:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87102,
                  "src": "9410:12:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9410:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87047,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9440:2:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87102,
                  "src": "9432:10:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9432:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87049,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9460:7:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87102,
                  "src": "9452:15:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9452:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87051,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "9485:9:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87102,
                  "src": "9477:17:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9477:7:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9400:100:369"
            },
            "returnParameters": {
              "id": 87054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9527:0:369"
            },
            "scope": 87130,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 87116,
            "nodeType": "FunctionDefinition",
            "src": "9906:242:369",
            "nodes": [],
            "body": {
              "id": 87115,
              "nodeType": "Block",
              "src": "10086:62:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87111,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "10103:25:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 87112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10129:10:369",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "10103:36:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 87113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10103:38:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 87110,
                  "id": 87114,
                  "nodeType": "Return",
                  "src": "10096:45:369"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370,
              161677
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9915:10:369",
            "overrides": {
              "id": 87107,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 87104,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "9991:18:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "9991:18:369"
                },
                {
                  "id": 87105,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "10011:25:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "10011:25:369"
                },
                {
                  "id": 87106,
                  "name": "Multicall",
                  "nameLocations": [
                    "10038:9:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "10038:9:369"
                }
              ],
              "src": "9982:66:369"
            },
            "parameters": {
              "id": 87103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9925:2:369"
            },
            "returnParameters": {
              "id": 87110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87109,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "10074:6:369",
                  "nodeType": "VariableDeclaration",
                  "scope": 87116,
                  "src": "10066:14:369",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10066:7:369",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10065:16:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 87129,
            "nodeType": "FunctionDefinition",
            "src": "10154:227:369",
            "nodes": [],
            "body": {
              "id": 87128,
              "nodeType": "Block",
              "src": "10321:60:369",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87124,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "10338:25:369",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 87125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10364:8:369",
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46397,
                      "src": "10338:34:369",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 87126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10338:36:369",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 87123,
                  "id": 87127,
                  "nodeType": "Return",
                  "src": "10331:43:369"
                }
              ]
            },
            "baseFunctions": [
              46397,
              161686
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "10163:8:369",
            "overrides": {
              "id": 87120,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 87118,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "10237:18:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "10237:18:369"
                },
                {
                  "id": 87119,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "10257:25:369"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "10257:25:369"
                }
              ],
              "src": "10228:55:369"
            },
            "parameters": {
              "id": 87117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10171:2:369"
            },
            "returnParameters": {
              "id": 87123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87129,
                  "src": "10301:14:369",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87121,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10301:5:369",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10300:16:369"
            },
            "scope": 87130,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86572,
              "name": "Initializable",
              "nameLocations": [
                "1589:13:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1589:13:369"
            },
            "id": 86573,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:13:369"
          },
          {
            "baseName": {
              "id": 86574,
              "name": "ContractMetadata",
              "nameLocations": [
                "1608:16:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1608:16:369"
            },
            "id": 86575,
            "nodeType": "InheritanceSpecifier",
            "src": "1608:16:369"
          },
          {
            "baseName": {
              "id": 86576,
              "name": "Royalty",
              "nameLocations": [
                "1630:7:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23031,
              "src": "1630:7:369"
            },
            "id": 86577,
            "nodeType": "InheritanceSpecifier",
            "src": "1630:7:369"
          },
          {
            "baseName": {
              "id": 86578,
              "name": "Ownable",
              "nameLocations": [
                "1643:7:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1643:7:369"
            },
            "id": 86579,
            "nodeType": "InheritanceSpecifier",
            "src": "1643:7:369"
          },
          {
            "baseName": {
              "id": 86580,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1656:21:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1656:21:369"
            },
            "id": 86581,
            "nodeType": "InheritanceSpecifier",
            "src": "1656:21:369"
          },
          {
            "baseName": {
              "id": 86582,
              "name": "TokenStore",
              "nameLocations": [
                "1683:10:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32544,
              "src": "1683:10:369"
            },
            "id": 86583,
            "nodeType": "InheritanceSpecifier",
            "src": "1683:10:369"
          },
          {
            "baseName": {
              "id": 86584,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1699:26:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154370,
              "src": "1699:26:369"
            },
            "id": 86585,
            "nodeType": "InheritanceSpecifier",
            "src": "1699:26:369"
          },
          {
            "baseName": {
              "id": 86586,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1731:25:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1731:25:369"
            },
            "id": 86587,
            "nodeType": "InheritanceSpecifier",
            "src": "1731:25:369"
          },
          {
            "baseName": {
              "id": 86588,
              "name": "Multicall",
              "nameLocations": [
                "1762:9:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1762:9:369"
            },
            "id": 86589,
            "nodeType": "InheritanceSpecifier",
            "src": "1762:9:369"
          },
          {
            "baseName": {
              "id": 86590,
              "name": "ERC721EnumerableUpgradeable",
              "nameLocations": [
                "1777:27:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 159674,
              "src": "1777:27:369"
            },
            "id": 86591,
            "nodeType": "InheritanceSpecifier",
            "src": "1777:27:369"
          },
          {
            "baseName": {
              "id": 86592,
              "name": "IMultiwrap",
              "nameLocations": [
                "1810:10:369"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76806,
              "src": "1810:10:369"
            },
            "id": 86593,
            "nodeType": "InheritanceSpecifier",
            "src": "1810:10:369"
          }
        ],
        "canonicalName": "Multiwrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87130,
          76806,
          159674,
          159705,
          159166,
          159732,
          159300,
          162692,
          162704,
          21206,
          33577,
          46402,
          161692,
          154370,
          32544,
          49515,
          49549,
          13921,
          7939,
          22411,
          22111,
          33932,
          33907,
          21764,
          33834,
          23031,
          34061,
          14089,
          13945,
          49576,
          14356,
          32260,
          34909,
          18093,
          154159,
          33084
        ],
        "name": "Multiwrap",
        "nameLocation": "1572:9:369",
        "scope": 87131,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33833,
          33846,
          33855,
          33864,
          34051,
          34060,
          76774,
          76783,
          154005,
          159199,
          159208,
          159217
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 369
}