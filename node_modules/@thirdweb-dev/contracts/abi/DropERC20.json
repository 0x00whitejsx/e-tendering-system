{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLOCK_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clock",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1516:7923:332:-:0;;;2620:28;;;;;;;;;-1:-1:-1;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:450;1713:19:476;:23;;;3387:66:450;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;216:2:821;3325:201:450;;;198:21:821;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:821;;;338:44;399:19;;3325:201:450;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3651:14;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;581:36:821;;3721:14:450;;569:2:821;554:18;3721:14:450;;;;;;;3647:99;3269:483;1516:7923:332;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1516:7923:332:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98:461;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:74;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;934:32:821;;;916:51;;904:2;889:18;676:104:74;770:203:821;4781:197:461;;;;;;;;;;-1:-1:-1;4781:197:461;;;;;:::i;:::-;;:::i;:::-;;;1834:14:821;;1827:22;1809:41;;1797:2;1782:18;4781:197:461;1669:187:821;3592:106:461;;;;;;;;;;-1:-1:-1;3679:12:461;;3592:106;;;2007:25:821;;;1995:2;1980:18;3592:106:461;1861:177:821;2030:269:73;;;;;;;;;;-1:-1:-1;2030:269:73;;;;;:::i;:::-;;:::i;:::-;;4800:2425:58;;;;;;;;;;-1:-1:-1;4800:2425:58;;;;;:::i;:::-;;:::i;5540:256:461:-;;;;;;;;;;-1:-1:-1;5540:256:461;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;2264:29:332;;;;;;;;;;;;;;;;3253:271:71;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;3441:91:461:-;;;;;;;;;;-1:-1:-1;3523:2:461;3441:91;;;4390:4:821;4378:17;;;4360:36;;4348:2;4333:18;3441:91:461;4218:184:821;3264:113:464;;;;;;;;;;;;;:::i;4464:217:71:-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;6191:234:461:-;;;;;;;;;;-1:-1:-1;6191:234:461;;;;;:::i;:::-;;:::i;3785:248:465:-;;;;;;;;;;-1:-1:-1;3785:248:465;;;;;:::i;:::-;;:::i;4332:192:332:-;;;;;;;;;;-1:-1:-1;4332:192:332;;;;;:::i;:::-;;:::i;848:89:463:-;;;;;;;;;;-1:-1:-1;848:89:463;;;;;:::i;:::-;;:::i;2713:958:332:-;;;;;;;;;;-1:-1:-1;2713:958:332;;;;;:::i;:::-;;:::i;2355:254:465:-;;;;;;;;;;;;;:::i;918:134:211:-;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;3157:126:465:-;;;;;;;;;;-1:-1:-1;3157:126:465;;;;;:::i;:::-;;:::i;6616:112::-;;;;;;;;;;-1:-1:-1;6616:112:465;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;7745:177:58:-;;;;;;;;;;-1:-1:-1;7745:177:58;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2909:160:465:-;;;;;;;;;;-1:-1:-1;2909:160:465;;;;;:::i;:::-;;:::i;:::-;;;9145:10:821;9133:23;;;9115:42;;9103:2;9088:18;2909:160:465;8971:192:821;3756:125:461;;;;;;;;;;-1:-1:-1;3756:125:461;;;;;:::i;:::-;;:::i;1949:2754:58:-;;;;;;;;;;-1:-1:-1;1949:2754:58;;;;;:::i;:::-;;:::i;1243:161:463:-;;;;;;;;;;-1:-1:-1;1243:161:463;;;;;:::i;:::-;;:::i;2910:255:73:-;;;;;;;;;;-1:-1:-1;2910:255:73;;;;;:::i;:::-;;:::i;3014:126:464:-;;;;;;;;;;-1:-1:-1;3014:126:464;;;;;:::i;:::-;;:::i;4500:861:482:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;699:1187:58:-;;;;;;:::i;:::-;;:::i;4295:239:465:-;;;;;;;;;;-1:-1:-1;4295:239:465;;;;;:::i;:::-;;:::i;1643:633:72:-;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;2114:129:465:-;;;;;;;;;;;;;:::i;:::-;;;13146:14:821;13134:27;;;13116:46;;13104:2;13089:18;2114:129:465;12972:196:821;1003:188:56;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;2706:102:461:-;;;;;;;;;;;;;:::i;3362:243:465:-;;;;;;;;;;-1:-1:-1;3362:243:465;;;;;:::i;:::-;;:::i;3968:89:332:-;;;;;;;;;;-1:-1:-1;4048:1:332;3968:89;;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;2204:211;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;6912:427:461:-;;;;;;;;;;-1:-1:-1;6912:427:461;;;;;:::i;:::-;;:::i;4077:189::-;;;;;;;;;;-1:-1:-1;4077:189:461;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8004:249:58:-;;;;;;;;;;-1:-1:-1;8004:249:58;;;;;:::i;:::-;8121:29;8186:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;8186:60:58;;;;;;;;;;;;8004:249;3544:200:73;;;;;;;;;;-1:-1:-1;3544:200:73;;;;;:::i;:::-;;:::i;6805:585:465:-;;;;;;;;;;-1:-1:-1;6805:585:465;;;;;:::i;:::-;;:::i;7313:367:58:-;;;;;;;;;;;;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;3862:100:332:-;;;;;;;;;;-1:-1:-1;;;;3862:100:332;;1058:147:73;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;16332:32:821;;;16314:51;;16413:6;16401:19;;;16396:2;16381:18;;16374:47;16287:18;1058:147:73;16142:285:821;2316:637:464;;;;;;;;;;-1:-1:-1;2316:637:464;;;;;:::i;:::-;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;430:40:58:-;;;;;;;;;;-1:-1:-1;430:40:58;;;;;;;;;;;;;17345:25:821;;;17401:2;17386:18;;17379:34;;;;17318:18;430:40:58;17171:248:821;4324:149:461;;;;;;;;;;-1:-1:-1;4324:149:461;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136;;;;;;;;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;2686:148:465:-;;;;;;;;;;-1:-1:-1;2686:148:465;;;;;:::i;:::-;;:::i;:::-;;;;18748:13:821;;18763:10;18744:30;18726:49;;18835:4;18823:17;;;18817:24;-1:-1:-1;;;;;18813:50:821;18791:20;;;18784:80;;;;18699:18;2686:148:465;18520:350:821;1454:107:73;;;;;;;;;;-1:-1:-1;1539:15:73;;-1:-1:-1;;;1539:15:73;;;;1454:107;;;;;;:::i;2495:98:461:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;4781:197:461:-;4864:4;4880:13;4896:12;:10;:12::i;:::-;4880:28;;4918:32;4927:5;4934:7;4943:6;4918:8;:32::i;:::-;4967:4;4960:11;;;4781:197;;;;;:::o;2030:269:73:-;2147:24;:22;:24::i;:::-;2142:80;;2187:24;;-1:-1:-1;;;2187:24:73;;;;;;;:::i;:::-;;;;;;;;2142:80;2231:61;2253:21;2276:15;2231:21;:61::i;:::-;2030:269;;:::o;4800:2425:58:-;5047:15;5116:39;;;:25;:39;;;;;;;;5074:81;;;;;;;;;;;;;;;;;;;;;;5116:25;5074:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5074:81:58;;;;;;;;;;5047:15;;5074:81;5116:39;5074:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5074:81:58;;;;-1:-1:-1;;;5186:40:58;;;;5257:31;;;;5322:26;;;;5558:28;;;;5074:81;;-1:-1:-1;5186:40:58;;5257:31;;5322:26;5558:42;5554:515;;5633:425;5669:21;:15;;:21;:::i;:::-;5633:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5708:28:58;;;;;;-1:-1:-1;5827:8:58;;5861:38;;;;;5925:29;;;;;5980:24;;;;;;;;:::i;:::-;5785:241;;-1:-1:-1;;;;;;20874:2:821;20910:15;;;20906:24;;5785:241:58;;;20894:37:821;20947:12;;;20940:28;;;;20984:12;;;20977:28;;;;21039:15;;;21035:24;21021:12;;;21014:46;21076:13;;5785:241:58;;;;;;;;;;;;5754:290;;;;;;5633:18;:425::i;:::-;-1:-1:-1;5616:442:58;-1:-1:-1;5554:515:58;6083:10;6079:534;;;6122:15;:38;;;6164:1;6122:43;:129;;6241:10;6122:129;;;6184:15;:38;;;6122:129;6109:142;;-1:-1:-1;;6278:15:58;:29;;;:50;:127;;6395:10;6278:127;;;6347:15;:29;;;6278:127;6265:140;;-1:-1:-1;;6435:15:58;:29;;;:50;;:92;;;;-1:-1:-1;6525:1:58;6489:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6489:38:58;;;6435:92;:167;;6589:13;6435:167;;;6546:24;;;;;;;;:::i;:::-;6419:183;;6079:534;6623:29;6655:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6655:60:58;;;;;;;;;;;;6730:26;;;;;;;;;:58;;;6778:10;6760:14;:28;;6730:58;6726:115;;;6804:26;;-1:-1:-1;;;6804:26:58;;21302:2:821;6804:26:58;;;21284:21:821;21341:2;21321:18;;;21314:30;-1:-1:-1;;;21360:18:821;;;21353:46;21416:18;;6804:26:58;21100:340:821;6726:115:58;6855:14;;;:66;;-1:-1:-1;6910:10:58;6874:33;6886:21;6874:9;:33;:::i;:::-;:46;6855:66;6851:111;;;6937:14;;-1:-1:-1;;;6937:14:58;;;;;;21909:2:821;21891:21;;;21948:1;21928:18;;;21921:29;-1:-1:-1;;;21981:2:821;21966:18;;21959:34;22025:2;22010:18;;21707:327;6851:111:58;7021:17;:36;;;7009:9;6975:17;:31;;;:43;;;;:::i;:::-;:82;6971:133;;;7073:20;;-1:-1:-1;;;7073:20:58;;22241:2:821;7073:20:58;;;22223:21:821;22280:2;22260:18;;;22253:30;-1:-1:-1;;;22299:18:821;;;22292:40;22349:18;;7073:20:58;22039:334:821;6971:133:58;7118:32;;7153:15;-1:-1:-1;7114:105:58;;;7184:24;;-1:-1:-1;;;7184:24:58;;22580:2:821;7184:24:58;;;22562:21:821;22619:2;22599:18;;;22592:30;-1:-1:-1;;;22638:18:821;;;22631:44;22692:18;;7184:24:58;22378:338:821;7114:105:58;5064:2161;;;;;4800:2425;;;;;;;;:::o;5540:256:461:-;5637:4;5653:15;5671:12;:10;:12::i;:::-;5653:30;;5693:38;5709:4;5715:7;5724:6;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;-1:-1:-1;5785:4:461;;5540:256;-1:-1:-1;;;;5540:256:461:o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;22923:2:821;3433:39:71;;;22905:21:821;22962:2;22942:18;;;22935:30;23001:31;22981:18;;;22974:59;23050:18;;3433:39:71;22721:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;3264:113:464:-;3324:7;3350:20;:18;:20::i;:::-;3343:27;;3264:113;:::o;4464:217:71:-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;23281:2:821;4592:36:71;;;23263:21:821;23320:2;23300:18;;;23293:30;-1:-1:-1;;;23339:18:821;;;23332:56;23405:18;;4592:36:71;23079:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;6191:234:461:-;6279:4;6295:13;6311:12;:10;:12::i;:::-;6295:28;;6333:64;6342:5;6349:7;6386:10;6358:25;6368:5;6375:7;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;3785:248:465:-;3881:7;3920;:5;:7::i;:::-;3908:19;;:9;:19;3900:57;;;;-1:-1:-1;;;3900:57:465;;;;;;;:::i;:::-;-1:-1:-1;;;;;3993:21:465;;;;;;:12;:21;;;;;3974:52;;4016:9;3974:18;:52::i;:::-;3967:59;3785:248;-1:-1:-1;;;3785:248:465:o;4332:192:332:-;785:4:71;929:28;785:4;946:10;929;:28::i;:::-;4432:14:332::1;:32:::0;;;4479:38:::1;::::0;2007:25:821;;;4479:38:332::1;::::0;1995:2:821;1980:18;4479:38:332::1;;;;;;;;4332:192:::0;;:::o;848:89:463:-;903:27;909:12;:10;:12::i;:::-;923:6;903:5;:27::i;:::-;848:89;:::o;2713:958:332:-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;23990:2:821;3325:201:450;;;23972:21:821;24029:2;24009:18;;;24002:30;24068:34;24048:18;;;24041:62;-1:-1:-1;;;24119:18:821;;;24112:44;24173:19;;3325:201:450;23788:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3070:26:332::1;3182:41;3204:18:::0;3182:21:::1;:41::i;:::-;3233:25;3252:5;3233:18;:25::i;:::-;3268:38;3291:5;3298:7;3268:22;:38::i;:::-;3317:31;3335:12;3317:17;:31::i;:::-;3359:45;785:4:71;3390:13:332::0;3359:10:::1;:45::i;:::-;3414:40;3425:13;3440;3414:10;:40::i;:::-;3464:37;3475:13;3498:1;3464:10;:37::i;:::-;3512:61;3534:21;3557:15;-1:-1:-1::0;;;;;3512:61:332::1;:21;:61::i;:::-;3583:42;3610:14;3583:26;:42::i;:::-;3636:12;:28:::0;3647:99:450;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;4360:36:821;;3721:14:450;;4348:2:821;4333:18;3721:14:450;;;;;;;3647:99;3269:483;2713:958:332;;;;;;;;:::o;2355:254:465:-;2415:13;2508:12;2497:7;:5;:7::i;:::-;:23;;;2489:65;;;;-1:-1:-1;;;2489:65:465;;24604:2:821;2489:65:465;;;24586:21:821;24643:2;24623:18;;;24616:30;24682:31;24662:18;;;24655:59;24731:18;;2489:65:465;24402:353:821;2489:65:465;-1:-1:-1;2564:38:465;;;;;;;;;;;;;;;;;;2355:254::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3157:126:465:-;-1:-1:-1;;;;;3257:19:465;;;3231:7;3257:19;;;:10;:19;;;;;;;;3157:126::o;6616:112::-;6687:34;6697:12;:10;:12::i;:::-;6711:9;6687;:34::i;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7745:177:58:-;7821:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7821:31:58;7876:39;;;;:25;:39;;;;;;;;;7864:51;;;;;;;;;;;;;;;;;;;;;;7876:25;7864:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7864:51:58;;;;;;;;;;;;7876:39;7864:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7745:177;;;:::o;2909:160:465:-;-1:-1:-1;;;;;3033:21:465;;2979:6;3033:21;;;:12;:21;;;;;:28;3004:58;;:28;:58::i;3756:125:461:-;-1:-1:-1;;;;;3856:18:461;3830:7;3856:18;;;:9;:18;;;;;;;3756:125::o;1949:2754:58:-;2108:24;:22;:24::i;:::-;2103:80;;2148:24;;-1:-1:-1;;;2148:24:58;;;;;;;:::i;2103:80::-;2222:14;:29;2290:20;;2222:29;2727:108;;;;2785:39;2806:18;2785;:39;:::i;:::-;2769:55;;2727:108;2845:20;:41;;;:14;2896:45;;;:29;;2997:643;3017:22;;;2997:643;;;3068:6;;;:69;;;3108:11;;3120:1;3108:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3078:59;;3068:69;3060:84;;;;-1:-1:-1;;;3060:84:58;;25432:2:821;3060:84:58;;;25414:21:821;25471:1;25451:18;;;25444:29;-1:-1:-1;;;25489:18:821;;;25482:32;25531:18;;3060:84:58;25230:325:821;3060:84:58;3159:28;3190:25;3159:28;3216:17;3232:1;3216:13;:17;:::i;:::-;3190:44;;;;;;;;;;;:58;;;3159:89;;3289:11;;3301:1;3289:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3266:20;:56;3262:123;;;3342:28;;-1:-1:-1;;;3342:28:58;;25762:2:821;3342:28:58;;;25744:21:821;25801:2;25781:18;;;25774:30;-1:-1:-1;;;25820:18:821;;;25813:48;25878:18;;3342:28:58;25560:342:821;3262:123:58;3446:11;;3458:1;3446:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3399:25;:44;3425:17;3441:1;3425:13;:17;:::i;:::-;3399:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3535:20:58;;-1:-1:-1;3474:25:58;:44;3500:17;3516:1;3500:13;:17;:::i;:::-;3474:44;;;;;;;;;;;-1:-1:-1;3474:44:58;:58;;:81;3600:11;;3612:1;3600:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;;3041:3:58;;2997:643;;;;4180:22;4176:446;;;4235:18;4218:129;4259:13;4255:1;:17;4218:129;;;4304:28;;;;:25;:28;;;;;4297:35;;;;;;;;;4304:25;4297:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4297:35:58;;;4304:28;4297:35;;;;4304:28;4297:35;:::i;:::-;-1:-1:-1;;4274:3:58;;4218:129;;;;4176:446;;;4381:39;;;4377:235;;;4457:11;4440:158;4481:18;4477:1;:22;4440:158;;;4535:25;:44;4561:17;4577:1;4561:13;:17;:::i;:::-;4535:44;;;;;;;;;;;-1:-1:-1;4535:44:58;;;4528:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4528:51:58;;;4535:44;4528:51;;;;-1:-1:-1;4528:51:58;:::i;:::-;-1:-1:-1;;4501:3:58;;4440:158;;;;4377:235;4637:59;4660:11;;4673:22;4637:59;;;;;;;;:::i;:::-;;;;;;;;2093:2610;;;;1949:2754;;;:::o;1243:161:463:-;1319:46;1335:7;1344:12;:10;:12::i;:::-;1358:6;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2910:255:73:-;3015:24;:22;:24::i;:::-;3010:80;;3055:24;;-1:-1:-1;;;3055:24:73;;;;;;;:::i;3010:80::-;3100:58;3126:21;3149:8;3100:25;:58::i;3014:126:464:-;-1:-1:-1;;;;;3109:14:464;;3083:7;3109:14;;;:7;:14;;;;;929::479;3109:24:464;838:112:479;4500:861:482;4615:13;4642:18;4674:21;4709:15;4738:25;4777:12;4803:27;5066:11;;5081:1;5066:16;;;:39;;;;-1:-1:-1;5086:14:482;;:19;5066:39;5058:73;;;;-1:-1:-1;;;5058:73:482;;32459:2:821;5058:73:482;;;32441:21:821;32498:2;32478:18;;;32471:30;-1:-1:-1;;;32517:18:821;;;32510:51;32578:18;;5058:73:482;32257:345:821;5058:73:482;5193:13;:11;:13::i;:::-;5220:16;:14;:16::i;:::-;5328;;;5312:1;5328:16;;;;;;;;;-1:-1:-1;;;5142:212:482;;;-1:-1:-1;5142:212:482;;-1:-1:-1;5250:13:482;;-1:-1:-1;5285:4:482;;-1:-1:-1;5312:1:482;-1:-1:-1;5328:16:482;-1:-1:-1;5142:212:482;-1:-1:-1;4500:861:482:o;699:1187:58:-;952:85;965:9;976;987;998:14;1014:15;1031:5;952:12;:85::i;:::-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:58;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:58;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:58;-1:-1:-1;;;;;1343:73:58;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:58;;-1:-1:-1;1515:1:58;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:58;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:58;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;17345:25:821;;;17401:2;17386:18;;17379:34;17333:2;17318:18;;17171:248;1698:86:58;;;;;;;;942:944;;699:1187;;;;;;:::o;4295:239:465:-;4380:7;4419;:5;:7::i;:::-;4407:19;;:9;:19;4399:57;;;;-1:-1:-1;;;4399:57:465;;;;;;;:::i;:::-;4473:54;4492:23;4517:9;4473:18;:54::i;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;2114:129:465:-;2169:6;2194:42;2223:12;2194:28;:42::i;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2706:102:461:-;2762:13;2794:7;2787:14;;;;;:::i;3362:243:465:-;-1:-1:-1;;;;;3468:21:465;;3435:7;3468:21;;;:12;:21;;;;;:28;3537:8;;:51;;-1:-1:-1;;;;;3552:21:465;;;;;;:12;:21;;;;;:30;;-1:-1:-1;;3574:7:465;;;3552:30;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;3552:36:465;;-1:-1:-1;;;;;3552:36:465;3537:51;;;3548:1;3537:51;-1:-1:-1;;;;;3530:58:465;;3362:243;-1:-1:-1;;;3362:243:465:o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;6912:427:461:-;7005:4;7021:13;7037:12;:10;:12::i;:::-;7021:28;;7059:24;7086:25;7096:5;7103:7;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;-1:-1:-1;;;7121:85:461;;32809:2:821;7121:85:461;;;32791:21:821;32848:2;32828:18;;;32821:30;32887:34;32867:18;;;32860:62;-1:-1:-1;;;32938:18:821;;;32931:35;32983:19;;7121:85:461;32607:401:821;7121:85:461;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;4077:189::-;4156:4;4172:13;4188:12;:10;:12::i;:::-;4172:28;;4210;4220:5;4227:2;4231:6;4210:9;:28::i;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;3544:200:73;3622:24;:22;:24::i;:::-;3617:80;;3662:24;;-1:-1:-1;;;3662:24:73;;;;;;;:::i;3617:80::-;3706:31;3728:8;3706:21;:31::i;6805:585:465:-;7024:6;7005:15;:25;;6997:67;;;;-1:-1:-1;;;6997:67:465;;34098:2:821;6997:67:465;;;34080:21:821;34137:2;34117:18;;;34110:30;34176:31;34156:18;;;34149:59;34225:18;;6997:67:465;33896:353:821;6997:67:465;7156:58;;;1736:71;7156:58;;;34485:25:821;-1:-1:-1;;;;;34546:32:821;;34526:18;;;34519:60;;;;34595:18;;;34588:34;;;34638:18;;;34631:34;;;7074:14:465;;7091:180;;7129:87;;34457:19:821;;7156:58:465;;;;;;;;;;;;7146:69;;;;;;7129:16;:87::i;:::-;7230:1;7245;7260;7091:24;:180::i;:::-;7074:197;;7298:17;7308:6;7298:9;:17::i;:::-;7289:5;:26;7281:64;;;;-1:-1:-1;;;7281:64:465;;34878:2:821;7281:64:465;;;34860:21:821;34917:2;34897:18;;;34890:30;-1:-1:-1;;;34936:18:821;;;34929:55;35001:18;;7281:64:465;34676:349:821;7281:64:465;7355:28;7365:6;7373:9;7355;:28::i;:::-;6987:403;6805:585;;;;;;:::o;7313:367:58:-;7439:20;;:14;7407:29;7371:7;;;;7407:52;;7439:20;7407:52;:::i;:::-;7395:64;;7390:252;7465:14;:29;7461:33;;7390:252;;;7538:25;:32;7564:5;7568:1;7564;:5;:::i;:::-;7538:32;;;;;;;;;;;:47;;;7519:15;:66;7515:117;;7612:5;7616:1;7612;:5;:::i;:::-;7605:12;;;7313:367;:::o;7515:117::-;7496:3;;;;:::i;:::-;;;;7390:252;;;-1:-1:-1;7652:21:58;;-1:-1:-1;;;7652:21:58;;35506:2:821;7652:21:58;;;35488::821;35545:2;35525:18;;;35518:30;-1:-1:-1;;;35564:18:821;;;35557:41;35615:18;;7652:21:58;35304:335:821;2683:398:72;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;2316:637:464:-;2551:8;2532:15;:27;;2524:69;;;;-1:-1:-1;;;2524:69:464;;35846:2:821;2524:69:464;;;35828:21:821;35885:2;35865:18;;;35858:30;35924:31;35904:18;;;35897:59;35973:18;;2524:69:464;35644:353:821;2524:69:464;2604:18;1351:95;2664:5;2671:7;2680:5;2687:16;2697:5;2687:9;:16::i;:::-;2635:79;;;;;;36289:25:821;;;;-1:-1:-1;;;;;36388:15:821;;;36368:18;;;36361:43;36440:15;;;;36420:18;;;36413:43;36472:18;;;36465:34;36515:19;;;36508:35;36559:19;;;36552:35;;;36261:19;;2635:79:464;;;;;;;;;;;;2625:90;;;;;;2604:111;;2726:12;2741:28;2758:10;2741:16;:28::i;:::-;2726:43;;2780:14;2797:39;2822:4;2828:1;2831;2834;2797:24;:39::i;:::-;2780:56;;2864:5;-1:-1:-1;;;;;2854:15:464;:6;-1:-1:-1;;;;;2854:15:464;;2846:58;;;;-1:-1:-1;;;2846:58:464;;36800:2:821;2846:58:464;;;36782:21:821;36839:2;36819:18;;;36812:30;36878:32;36858:18;;;36851:60;36928:18;;2846:58:464;36598:354:821;2846:58:464;2915:31;2924:5;2931:7;2940:5;2915:8;:31::i;:::-;2514:439;;;2316:637;;;;;;;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;4324:149:461:-;-1:-1:-1;;;;;4439:18:461;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2686:148:465:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2801:21:465;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2794:33;;;;;;;;;2801:26;;2794:33;;;;;;-1:-1:-1;;;2794:33:465;;-1:-1:-1;;;;;2794:33:465;;;;;;;;;2686:148;-1:-1:-1;;;2686:148:465:o;8962:242:332:-;9122:14;9159:38;:36;:38::i;10794:340:461:-;-1:-1:-1;;;;;10895:19:461;;10887:68;;;;-1:-1:-1;;;10887:68:461;;37159:2:821;10887:68:461;;;37141:21:821;37198:2;37178:18;;;37171:30;37237:34;37217:18;;;37210:62;-1:-1:-1;;;37288:18:821;;;37281:34;37332:19;;10887:68:461;36957:400:821;10887:68:461;-1:-1:-1;;;;;10973:21:461;;10965:68;;;;-1:-1:-1;;;10965:68:461;;37564:2:821;10965:68:461;;;37546:21:821;37603:2;37583:18;;;37576:30;37642:34;37622:18;;;37615:62;-1:-1:-1;;;37693:18:821;;;37686:32;37735:19;;10965:68:461;37362:398:821;10965:68:461;-1:-1:-1;;;;;11044:18:461;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;2007:25:821;;;11095:32:461;;1980:18:821;11095:32:461;;;;;;;10794:340;;;:::o;6837:137:332:-;6903:4;6926:41;6903:4;6954:12;:10;:12::i;2358:477:73:-;2486:6;2468:15;:24;2464:80;;;2508:25;;-1:-1:-1;;;2508:25:73;;37967:2:821;2508:25:73;;;37949:21:821;38006:2;37986:18;;;37979:30;-1:-1:-1;;;38025:18:821;;;38018:45;38080:18;;2508:25:73;37765:339:821;2464:80:73;-1:-1:-1;;;;;2557:35:73;;2553:93;;2608:27;;-1:-1:-1;;;2608:27:73;;;;;;;:::i;2553:93::-;2656:14;:40;;-1:-1:-1;;;;;;2706:44:73;-1:-1:-1;;;2656:40:73;;;;-1:-1:-1;;;;;;2706:44:73;;-1:-1:-1;;;;;2706:44:73;;;;;;;;2766:62;;2007:25:821;;;2766:62:73;;1995:2:821;1980:18;2766:62:73;;;;;;;2358:477;;:::o;112:876:294:-;203:4;;251;203;;293:567;317:5;:12;313:1;:16;293:567;;;350:10;359:1;350:10;;:::i;:::-;;;374:20;397:5;403:1;397:8;;;;;;;;:::i;:::-;;;;;;;374:31;;440:12;424;:28;420:430;;575:44;;;;;;38785:19:821;;;38820:12;;;38813:28;;;38857:12;;575:44:294;;;;;;;;;;;;565:55;;;;;;550:70;;420:430;;;762:44;;;;;;38785:19:821;;;38820:12;;;38813:28;;;38857:12;;762:44:294;;;;;;;;;;;;752:55;;;;;;737:70;;834:1;825:10;;;;;:::i;:::-;;;420:430;-1:-1:-1;331:3:294;;293:567;;;-1:-1:-1;953:20:294;;;;;-1:-1:-1;;;;112:876:294:o;11415:411:461:-;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;-1:-1:-1;;11581:16:461;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:461;;39082:2:821;11634:68:461;;;39064:21:821;39121:2;39101:18;;;39094:30;39160:31;39140:18;;;39133:59;39209:18;;11634:68:461;38880:353:821;11634:68:461;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;-1:-1:-1;;;;;7889:18:461;;7881:68;;;;-1:-1:-1;;;7881:68:461;;39440:2:821;7881:68:461;;;39422:21:821;39479:2;39459:18;;;39452:30;39518:34;39498:18;;;39491:62;-1:-1:-1;;;39569:18:821;;;39562:35;39614:19;;7881:68:461;39238:401:821;7881:68:461;-1:-1:-1;;;;;7967:16:461;;7959:64;;;;-1:-1:-1;;;7959:64:461;;39846:2:821;7959:64:461;;;39828:21:821;39885:2;39865:18;;;39858:30;39924:34;39904:18;;;39897:62;-1:-1:-1;;;39975:18:821;;;39968:33;40018:19;;7959:64:461;39644:399:821;7959:64:461;8034:38;8055:4;8061:2;8065:6;8034:20;:38::i;:::-;-1:-1:-1;;;;;8105:15:461;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:461;;40250:2:821;8130:72:461;;;40232:21:821;40289:2;40269:18;;;40262:30;40328:34;40308:18;;;40301:62;-1:-1:-1;;;40379:18:821;;;40372:36;40425:19;;8130:72:461;40048:402:821;8130:72:461;-1:-1:-1;;;;;8236:15:461;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;-1:-1:-1;;;;;;;;;;;8500:26:461;;;8268:6;2007:25:821;;1995:2;1980:18;;1861:177;8500:26:461;;;;;;;;8537:37;8557:4;8563:2;8567:6;8537:19;:37::i;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3304:109:482:-;3357:7;3383:23;:21;:23::i;3205:157:72:-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2030:269:73;;:::o;4618:1917:465:-;5829:12;;4715:7;;;5829:12;5922:1;5913:10;;5909:253;;;5939:11;5962:28;5983:6;5962:20;:28::i;:::-;5953:37;;:6;:37;:::i;:::-;11011:25;11071:21;;;11137:4;11124:18;;5939:51;;-1:-1:-1;6046:9:465;;11120:28;;6008:35;;;:47;6004:148;;;6082:3;6075:10;;6004:148;;;6130:7;:3;6136:1;6130:7;:::i;:::-;6124:13;;6004:148;5925:237;5909:253;6185:4;6179:3;:10;6172:253;;;6205:11;6219:34;6243:3;6248:4;6219:23;:34::i;:::-;11011:25;11071:21;;;11137:4;11124:18;;6205:48;;-1:-1:-1;6309:9:465;;11120:28;;6271:35;;;:47;6267:148;;;6345:3;6338:10;;6267:148;;;6393:7;:3;6399:1;6393:7;:::i;:::-;6387:13;;6267:148;6191:234;6172:253;;;6466:9;;:52;;11011:25;11071:21;;;11137:4;11124:18;;11120:28;;-1:-1:-1;;11120:28:465;6482:36;-1:-1:-1;;;6482:36:465;;-1:-1:-1;;;;;6482:36:465;6466:52;;;6478:1;6466:52;-1:-1:-1;;;;;6459:59:465;;4618:1917;-1:-1:-1;;;;;;4618:1917:465:o;8026:160:332:-;8151:28;8163:7;8172:6;8151:11;:28::i;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2043:125:464:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2127:34:464::1;2151:4;2127:34;;;;;;;;;;;;;-1:-1:-1::0;;;2127:34:464::1;;::::0;:23:::1;:34::i;2271:159:461:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2383:5:461::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:461::1;:17;2416:7:::0;2406;:17:::1;:::i;:::-;;2271:159:::0;;:::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;;;;;;:::i;1578:86::-;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;8783:380:465:-;8867:23;8893:20;8903:9;8893;:20::i;:::-;8867:46;;8923:24;8950:20;8960:9;8950;:20::i;:::-;-1:-1:-1;;;;;8980:21:465;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;8980:33:465;;;;;;;;;;9029:54;;8923:47;;-1:-1:-1;8980:33:465;9029:54;;;;;;8980:21;9029:54;9094:62;9111:15;9128:9;9139:16;9094;:62::i;15275:187:487:-;15331:6;15366:16;15357:25;;;15349:76;;;;-1:-1:-1;;;15349:76:487;;43622:2:821;15349:76:487;;;43604:21:821;43661:2;43641:18;;;43634:30;43700:34;43680:18;;;43673:62;-1:-1:-1;;;43751:18:821;;;43744:36;43797:19;;15349:76:487;43420:402:821;15349:76:487;-1:-1:-1;15449:5:487;15275:187::o;3218:261:73:-;3321:15;:26;;;3357:20;:44;;-1:-1:-1;;;;;;3357:44:73;-1:-1:-1;;;;;3357:44:73;;;;;3417:55;;;;;;3357:44;;3321:26;;3417:55;:::i;5585:98:482:-;5639:13;5671:5;5664:12;;;;;:::i;5910:104::-;5967:13;5999:8;5992:15;;;;;:::i;4767:356:332:-;4987:14;;5019:20;;;:68;;;5072:15;5059:9;5043:13;3679:12:461;;;3592:106;5043:13:332;:25;;;;:::i;:::-;:44;;5019:68;5011:105;;;;-1:-1:-1;;;5011:105:332;;44029:2:821;5011:105:332;;;44011:21:821;44068:2;44048:18;;;44041:30;-1:-1:-1;;;44087:18:821;;;44080:54;44151:18;;5011:105:332;43827:348:821;8845:111:332;8911:7;8937:12;:10;:12::i;5215:1292::-;5415:14;5433:1;5415:19;5411:103;;5458:9;:14;5450:33;;;;-1:-1:-1;;;5450:33:332;;44382:2:821;5450:33:332;;;44364:21:821;44421:1;44401:18;;;44394:29;-1:-1:-1;;;44439:18:821;;;44432:36;44485:18;;5450:33:332;44180:329:821;5450:33:332;5497:7;;5411:103;5525:28;5555:21;5580:20;:18;:20::i;:::-;5524:76;;-1:-1:-1;5524:76:332;-1:-1:-1;5611:21:332;-1:-1:-1;;;;;5635:35:332;;;:84;;5698:21;5635:84;;;5673:22;:20;:22::i;:::-;5611:108;-1:-1:-1;5820:18:332;5879:7;5842:33;5861:14;5842:16;:33;:::i;:::-;5841:45;;;;:::i;:::-;5820:66;;5917:1;5904:10;:14;5896:43;;;;-1:-1:-1;;;5896:43:332;;45070:2:821;5896:43:332;;;45052:21:821;45109:2;45089:18;;;45082:30;-1:-1:-1;;;45128:18:821;;;45121:46;45184:18;;5896:43:332;44868:340:821;5896:43:332;5950:20;2203:6;5974:27;;;;:10;:27;:::i;:::-;5973:39;;;;:::i;:::-;5950:62;-1:-1:-1;6023:18:332;-1:-1:-1;;;;;;;6055:45:332;;;6051:176;;-1:-1:-1;6132:9:332;:23;;6051:176;;;-1:-1:-1;6202:9:332;:14;6051:176;6244:13;6236:43;;;;-1:-1:-1;;;6236:43:332;;45415:2:821;6236:43:332;;;45397:21:821;45454:2;45434:18;;;45427:30;-1:-1:-1;;;45473:18:821;;;45466:47;45530:18;;6236:43:332;45213:341:821;6236:43:332;6290:97;6327:9;6338:12;:10;:12::i;:::-;6352:20;6374:12;6290:36;:97::i;:::-;6397:103;6434:9;6445:12;:10;:12::i;:::-;6459:13;6474:25;6487:12;6474:10;:25;:::i;:::-;6397:36;:103::i;6562:180::-;6665:7;6684:33;6690:3;6695:21;6684:5;:33::i;:::-;-1:-1:-1;6734:1:332;6562:180;;;;:::o;8992:236:58:-;;;;;;;:::o;14251:187:487:-;14307:6;14342:16;14333:25;;;14325:76;;;;-1:-1:-1;;;14325:76:487;;45761:2:821;14325:76:487;;;45743:21:821;45800:2;45780:18;;;45773:30;45839:34;45819:18;;;45812:62;-1:-1:-1;;;45890:18:821;;;45883:36;45936:19;;14325:76:487;45559:402:821;6671:198:289;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;3787:157:73:-;3863:15;:26;;3881:8;;3863:15;-1:-1:-1;;;;3863:26:73;-1:-1:-1;;;3881:8:73;3863:26;;;;;;;;:::i;:::-;;;;;;3905:32;3928:8;3905:32;;;;;;:::i;:::-;;;;;;;;3787:157;:::o;4236:176:482:-;4313:7;4339:66;4372:20;:18;:20::i;:::-;4394:10;8569:4:481;8563:11;-1:-1:-1;;;8587:23:481;;8639:4;8630:14;;8623:39;;;;8691:4;8682:14;;8675:34;8745:4;8730:20;;;8369:397;6620:232;6705:7;6725:17;6744:18;6766:25;6777:4;6783:1;6786;6789;6766:10;:25::i;:::-;6724:67;;;;6801:18;6813:5;6801:11;:18::i;:::-;-1:-1:-1;6836:9:481;-1:-1:-1;6620:232:481;;;;;;;:::o;3508:214:464:-;-1:-1:-1;;;;;3639:14:464;;3568:15;3639:14;;;:7;:14;;;;;929::479;;1061:1;1043:19;;;;929:14;3698:17:464;956:123:479;1058:401:211;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;3264:113:464:o;8463:376:332:-;8641:33;8649:12;;8671:1;8641:7;:33::i;:::-;8640:34;:56;;;;-1:-1:-1;;;;;;8678:18:332;;;;8640:56;:76;;;;-1:-1:-1;;;;;;8700:16:332;;;;8640:76;8636:197;;;8740:27;8748:12;;8762:4;8740:7;:27::i;:::-;:56;;;;8771:25;8779:12;;8793:2;8771:7;:25::i;:::-;8732:90;;;;-1:-1:-1;;;8732:90:332;;46168:2:821;8732:90:332;;;46150:21:821;46207:2;46187:18;;;46180:30;-1:-1:-1;;;46226:18:821;;;46219:51;46287:18;;8732:90:332;45966:345:821;8192:228:332;8370:43;8396:4;8402:2;8406:6;8370:25;:43::i;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;46518:2:821;1911:55:298;;;46500:21:821;;;46537:18;;;46530:30;46596:34;46576:18;;;46569:62;46648:18;;1911:55:298;46316:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;3419:192:482:-;3474:7;1913:95;3533:17;:15;:17::i;:::-;3552:20;:18;:20::i;:::-;3510:93;;;;;;46936:25:821;;;;46977:18;;46970:34;;;;47020:18;;;47013:34;3574:13:482;47063:18:821;;;47056:34;3597:4:482;47106:19:821;;;47099:61;46908:19;;3510:93:482;;;;;;;;;;;;3500:104;;;;;;3493:111;;3419:192;:::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;6541:1642:486:-;6589:7;6612:1;6617;6612:6;6608:45;;-1:-1:-1;6641:1:486;;6541:1642;-1:-1:-1;6541:1642:486:o;6608:45::-;7332:14;7366:1;7355:7;7360:1;7355:4;:7::i;:::-;:12;;7349:1;:19;;7332:36;;7827:1;7816:6;7812:1;:10;;;;;:::i;:::-;;7803:6;:19;7802:26;;7793:35;;7876:1;7865:6;7861:1;:10;;;;;:::i;:::-;;7852:6;:19;7851:26;;7842:35;;7925:1;7914:6;7910:1;:10;;;;;:::i;:::-;;7901:6;:19;7900:26;;7891:35;;7974:1;7963:6;7959:1;:10;;;;;:::i;:::-;;7950:6;:19;7949:26;;7940:35;;8023:1;8012:6;8008:1;:10;;;;;:::i;:::-;;7999:6;:19;7998:26;;7989:35;;8072:1;8061:6;8057:1;:10;;;;;:::i;:::-;;8048:6;:19;8047:26;;8038:35;;8121:1;8110:6;8106:1;:10;;;;;:::i;:::-;;8097:6;:19;8096:26;;8087:35;;8143:23;8147:6;8159;8155:1;:10;;;;;:::i;:::-;;8143:3;:23::i;816:153::-;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;8058:190:465:-;8142:28;8154:7;8163:6;8142:11;:28::i;:::-;8181:60;8198:23;8223:9;8234:6;8181:16;:60::i;776:69:478:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;776::478:o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;2951:267:482::0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;3063:5:482::1;:12;3071:4:::0;3063:5;:12:::1;:::i;:::-;-1:-1:-1::0;3085:8:482::1;:18;3096:7:::0;3085:8;:18:::1;:::i;:::-;-1:-1:-1::0;;3182:1:482::1;3168:11;:15:::0;;;3193:14:::1;:18:::0;-1:-1:-1;2951:267:482:o;9169:597:465:-;9266:3;-1:-1:-1;;;;;9259:10:465;:3;-1:-1:-1;;;;;9259:10:465;;;:24;;;;;9282:1;9273:6;:10;9259:24;9255:505;;;-1:-1:-1;;;;;9303:17:465;;;9299:221;;-1:-1:-1;;;;;9398:17:465;;9341;9398;;;:12;:17;;;;;9341;;9381:54;;9417:9;9428:6;9381:16;:54::i;:::-;9340:95;;;;9479:3;-1:-1:-1;;;;;9458:47:465;;9484:9;9495;9458:47;;;;;;17345:25:821;;;17401:2;17386:18;;17379:34;17333:2;17318:18;;17171:248;9458:47:465;;;;;;;;9322:198;;9299:221;-1:-1:-1;;;;;9538:17:465;;;9534:216;;-1:-1:-1;;;;;9633:17:465;;9576;9633;;;:12;:17;;;;;9576;;9616:49;;9652:4;9658:6;9616:16;:49::i;:::-;9575:90;;;;9709:3;-1:-1:-1;;;;;9688:47:465;;9714:9;9725;9688:47;;;;;;17345:25:821;;;17401:2;17386:18;;17379:34;17333:2;17318:18;;17171:248;9688:47:465;;;;;;;;9557:193;;9169:597;;;:::o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;702:173::-;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;7860:160:332:-;7985:28;7997:7;8006:6;7985:11;:28::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;5031:1456:481:-;5119:7;;-1:-1:-1;;;;;6030:79:481;;6026:161;;;-1:-1:-1;6141:1:481;;-1:-1:-1;6145:30:481;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;47690:25:821;;;47763:4;47751:17;;47731:18;;;47724:45;;;;47785:18;;;47778:34;;;47828:18;;;47821:34;;;6298:24:481;;47662:19:821;;6298:24:481;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:481;;-1:-1:-1;;6298:24:481;;;-1:-1:-1;;;;;;;6336:20:481;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:481;;-1:-1:-1;5031:1456:481;;;;;;;;:::o;592:511::-;669:20;660:5;:29;;;;;;;;:::i;:::-;;656:441;;592:511;:::o;656:441::-;765:29;756:5;:38;;;;;;;;:::i;:::-;;752:345;;810:34;;-1:-1:-1;;;810:34:481;;48068:2:821;810:34:481;;;48050:21:821;48107:2;48087:18;;;48080:30;-1:-1:-1;;;48126:18:821;;;48119:54;48190:18;;810:34:481;47866:348:821;752:345:481;874:35;865:5;:44;;;;;;;;:::i;:::-;;861:236;;925:41;;-1:-1:-1;;;925:41:481;;48421:2:821;925:41:481;;;48403:21:821;48460:2;48440:18;;;48433:30;48499:33;48479:18;;;48472:61;48550:18;;925:41:481;48219:355:821;861:236:481;996:30;987:5;:39;;;;;;;;:::i;:::-;;983:114;;1042:44;;-1:-1:-1;;;1042:44:481;;48781:2:821;1042:44:481;;;48763:21:821;48820:2;48800:18;;;48793:30;48859:34;48839:18;;;48832:62;-1:-1:-1;;;48910:18:821;;;48903:32;48952:19;;1042:44:481;48579:398:821;8388:224:465;8549:56;8566:15;8576:4;8566:9;:15::i;:::-;8583:13;8593:2;8583:9;:13::i;:::-;8598:6;8549:16;:56::i;6229:630:482:-;6279:7;6298:18;6319:13;:11;:13::i;:::-;6346:18;;6298:34;;-1:-1:-1;6346:22:482;6342:511;;6391:22;;;;;;;;6229:630;-1:-1:-1;6229:630:482:o;6342:511::-;6688:11;;6717:15;;6713:130;;6759:10;6229:630;-1:-1:-1;;6229:630:482:o;6713:130::-;6815:13;6808:20;;;;6229:630;:::o;7080:666::-;7133:7;7152:21;7176:16;:14;:16::i;:::-;7206:21;;7152:40;;-1:-1:-1;7206:25:482;7202:538;;7254:25;;;;;;;;7080:666;-1:-1:-1;7080:666:482:o;7202:538::-;7566:14;;7598:18;;7594:136;;7643:13;7080:666;-1:-1:-1;;7080:666:482:o;8644:983:486:-;8696:7;;8780:3;8771:12;;;:16;8767:99;;8817:3;8807:13;;;;8838;8767:99;8892:2;8883:11;;;:15;8879:96;;8928:2;8918:12;;;;8948;8879:96;9001:2;8992:11;;;:15;8988:96;;9037:2;9027:12;;;;9057;8988:96;9110:2;9101:11;;;:15;9097:96;;9146:2;9136:12;;;;9166;9097:96;9219:1;9210:10;;;:14;9206:93;;9254:1;9244:11;;;;9273;9206:93;9325:1;9316:10;;;:14;9312:93;;9360:1;9350:11;;;;9379;9312:93;9431:1;9422:10;;;:14;9418:93;;9466:1;9456:11;;;;9485;9418:93;9537:1;9528:10;;;:14;9524:64;;9572:1;9562:11;9614:6;8644:983;-1:-1:-1;;8644:983:486:o;599:104::-;657:7;687:1;683;:5;:13;;695:1;683:13;;;-1:-1:-1;691:1:486;;599:104;-1:-1:-1;599:104:486:o;9712:659:461:-;-1:-1:-1;;;;;9795:21:461;;9787:67;;;;-1:-1:-1;;;9787:67:461;;49184:2:821;9787:67:461;;;49166:21:821;49223:2;49203:18;;;49196:30;49262:34;49242:18;;;49235:62;-1:-1:-1;;;49313:18:821;;;49306:31;49354:19;;9787:67:461;48982:397:821;9787:67:461;9865:49;9886:7;9903:1;9907:6;9865:20;:49::i;:::-;-1:-1:-1;;;;;9950:18:461;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:461;;49586:2:821;9978:71:461;;;49568:21:821;49625:2;49605:18;;;49598:30;49664:34;49644:18;;;49637:62;-1:-1:-1;;;49715:18:821;;;49708:32;49757:19;;9978:71:461;49384:398:821;9978:71:461;-1:-1:-1;;;;;10083:18:461;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;2007:25:821;;;10083:18:461;;;-1:-1:-1;;;;;;;;;;;10268:37:461;1980:18:821;10268:37:461;;;;;;;10316:48;10336:7;10353:1;10357:6;10316:19;:48::i;10681:101:465:-;10744:7;10770:5;10774:1;10770;:5;:::i;9772:801::-;10004:12;;9942:17;;;;;10079:8;;:59;;11011:25;11071:21;;;11137:4;11124:18;;11120:28;;-1:-1:-1;;11120:28:465;10079:59;;;;;;;;;;;;;;;;-1:-1:-1;;;10079:59:465;;-1:-1:-1;;;;;10079:59:465;;;;;;;;10090:16;;;;;;;;;-1:-1:-1;10090:16:465;;;;;;;10079:59;10051:87;;10165:7;:13;;;-1:-1:-1;;;;;10153:25:465;;;10204:20;10207:9;10218:5;10204:2;:20;;:::i;:::-;10192:32;;10249:1;10243:3;:7;:39;;;;;10275:7;:5;:7::i;:::-;10254:28;;:7;:17;;;:28;;;10243:39;10239:318;;;10340:40;10370:9;10340:29;:40::i;:::-;11011:25;11071:21;;;11137:4;11124:18;;11120:28;;-1:-1:-1;;11120:28:465;10302:78;;-1:-1:-1;;;;;10302:78:465;;;;-1:-1:-1;;;10302:78:465;;;;;;;;;;;10239:318;;;10419:5;10430:111;;;;;;;;10453:37;10482:7;:5;:7::i;:::-;10453:37;;:28;:37::i;:::-;10430:111;;;;;;10499:40;10529:9;10499:29;:40::i;:::-;-1:-1:-1;;;;;10430:111:465;;;;;;10419:123;;;;;;;-1:-1:-1;10419:123:465;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10419:123:465;;;;;;;;;;;;10239:318;10027:540;9980:593;9772:801;;;;;;:::o;10579:96::-;10637:7;10663:5;10667:1;10663;:5;:::i;2482:292:292:-;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;50199:2:821;2719:48:292;;;50181:21:821;50238:2;50218:18;;;50211:30;-1:-1:-1;;;50257:18:821;;;50250:58;50325:18;;2719:48:292;49997:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7684:285:465:-;7768:28;7780:7;7789:6;7768:11;:28::i;:::-;3679:12:461;;-1:-1:-1;;;;;;7814:29:465;7806:90;;;;-1:-1:-1;;;7806:90:465;;50556:2:821;7806:90:465;;;50538:21:821;50595:2;50575:18;;;50568:30;50634:34;50614:18;;;50607:62;-1:-1:-1;;;50685:18:821;;;50678:46;50741:19;;7806:90:465;50354:412:821;7806:90:465;7907:55;7924:23;7949:4;7955:6;7907:16;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;50973:2:821;8110:60:289;;;50955:21:821;51012:2;50992:18;;;50985:30;51051:31;51031:18;;;51024:59;51100:18;;8110:60:289;50771:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;2847:192:487:-;2904:7;-1:-1:-1;;;;;2931:26:487;;;2923:78;;;;-1:-1:-1;;;2923:78:487;;51331:2:821;2923:78:487;;;51313:21:821;51370:2;51350:18;;;51343:30;51409:34;51389:18;;;51382:62;-1:-1:-1;;;51460:18:821;;;51453:37;51507:19;;2923:78:487;51129:403:821;759:175:228;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;51795:15:821;;;1067:68:228;;;51777:34:821;51847:15;;51827:18;;;51820:43;51879:18;;;51872:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;51712:18:821;;1067:68:228;51537:375:821;8857:535:461;-1:-1:-1;;;;;8940:21:461;;8932:65;;;;-1:-1:-1;;;8932:65:461;;52119:2:821;8932:65:461;;;52101:21:821;52158:2;52138:18;;;52131:30;52197:33;52177:18;;;52170:61;52248:18;;8932:65:461;51917:355:821;8932:65:461;9008:49;9037:1;9041:7;9050:6;9008:20;:49::i;:::-;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:461;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;2007:25:821;;;-1:-1:-1;;;;;;;;;;;9289:37:461;1980:18:821;9289:37:461;;;;;;;9337:48;9365:1;9369:7;9378:6;9337:19;:48::i;8818:540:289:-;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;52729:2:821;3711:85:228;;;52711:21:821;52768:2;52748:18;;;52741:30;52807:34;52787:18;;;52780:62;-1:-1:-1;;;52858:18:821;;;52851:40;52908:19;;3711:85:228;52527:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:250:821;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:821;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:821;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:821:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;978:131::-;-1:-1:-1;;;;;1053:31:821;;1043:42;;1033:70;;1099:1;1096;1089:12;1114:134;1182:20;;1211:31;1182:20;1211:31;:::i;:::-;1114:134;;;:::o;1253:315::-;1321:6;1329;1382:2;1370:9;1361:7;1357:23;1353:32;1350:52;;;1398:1;1395;1388:12;1350:52;1437:9;1424:23;1456:31;1481:5;1456:31;:::i;:::-;1506:5;1558:2;1543:18;;;;1530:32;;-1:-1:-1;;;1253:315:821:o;2043:163::-;2110:5;2155:3;2146:6;2141:3;2137:16;2133:26;2130:46;;;2172:1;2169;2162:12;2211:854;2350:6;2358;2366;2374;2382;2390;2443:3;2431:9;2422:7;2418:23;2414:33;2411:53;;;2460:1;2457;2450:12;2411:53;2496:9;2483:23;2473:33;;2556:2;2545:9;2541:18;2528:32;2569:31;2594:5;2569:31;:::i;:::-;2619:5;-1:-1:-1;2671:2:821;2656:18;;2643:32;;-1:-1:-1;2727:2:821;2712:18;;2699:32;2740:33;2699:32;2740:33;:::i;:::-;2792:7;-1:-1:-1;2846:3:821;2831:19;;2818:33;;-1:-1:-1;2902:3:821;2887:19;;2874:33;-1:-1:-1;;;;;2919:30:821;;2916:50;;;2962:1;2959;2952:12;2916:50;2985:74;3051:7;3042:6;3031:9;3027:22;2985:74;:::i;:::-;2975:84;;;2211:854;;;;;;;;:::o;3070:456::-;3147:6;3155;3163;3216:2;3204:9;3195:7;3191:23;3187:32;3184:52;;;3232:1;3229;3222:12;3184:52;3271:9;3258:23;3290:31;3315:5;3290:31;:::i;:::-;3340:5;-1:-1:-1;3397:2:821;3382:18;;3369:32;3410:33;3369:32;3410:33;:::i;:::-;3070:456;;3462:7;;-1:-1:-1;;;3516:2:821;3501:18;;;;3488:32;;3070:456::o;3531:180::-;3590:6;3643:2;3631:9;3622:7;3618:23;3614:32;3611:52;;;3659:1;3656;3649:12;3611:52;-1:-1:-1;3682:23:821;;3531:180;-1:-1:-1;3531:180:821:o;3898:315::-;3966:6;3974;4027:2;4015:9;4006:7;4002:23;3998:32;3995:52;;;4043:1;4040;4033:12;3995:52;4079:9;4066:23;4056:33;;4139:2;4128:9;4124:18;4111:32;4152:31;4177:5;4152:31;:::i;:::-;4202:5;4192:15;;;3898:315;;;;;:::o;4592:127::-;4653:10;4648:3;4644:20;4641:1;4634:31;4684:4;4681:1;4674:15;4708:4;4705:1;4698:15;4724:275;4795:2;4789:9;4860:2;4841:13;;-1:-1:-1;;4837:27:821;4825:40;;-1:-1:-1;;;;;4880:34:821;;4916:22;;;4877:62;4874:88;;;4942:18;;:::i;:::-;4978:2;4971:22;4724:275;;-1:-1:-1;4724:275:821:o;5004:407::-;5069:5;-1:-1:-1;;;;;5095:6:821;5092:30;5089:56;;;5125:18;;:::i;:::-;5163:57;5208:2;5187:15;;-1:-1:-1;;5183:29:821;5214:4;5179:40;5163:57;:::i;:::-;5154:66;;5243:6;5236:5;5229:21;5283:3;5274:6;5269:3;5265:16;5262:25;5259:45;;;5300:1;5297;5290:12;5259:45;5349:6;5344:3;5337:4;5330:5;5326:16;5313:43;5403:1;5396:4;5387:6;5380:5;5376:18;5372:29;5365:40;5004:407;;;;;:::o;5416:222::-;5459:5;5512:3;5505:4;5497:6;5493:17;5489:27;5479:55;;5530:1;5527;5520:12;5479:55;5552:80;5628:3;5619:6;5606:20;5599:4;5591:6;5587:17;5552:80;:::i;5643:787::-;5697:5;5750:3;5743:4;5735:6;5731:17;5727:27;5717:55;;5768:1;5765;5758:12;5717:55;5804:6;5791:20;5830:4;-1:-1:-1;;;;;5849:2:821;5846:26;5843:52;;;5875:18;;:::i;:::-;5921:2;5918:1;5914:10;5944:28;5968:2;5964;5960:11;5944:28;:::i;:::-;6006:15;;;6076;;;6072:24;;;6037:12;;;;6108:15;;;6105:35;;;6136:1;6133;6126:12;6105:35;6172:2;6164:6;6160:15;6149:26;;6184:217;6200:6;6195:3;6192:15;6184:217;;;6280:3;6267:17;6297:31;6322:5;6297:31;:::i;:::-;6341:18;;6217:12;;;;6379;;;;6184:217;;6435:173;6503:20;;-1:-1:-1;;;;;6552:31:821;;6542:42;;6532:70;;6598:1;6595;6588:12;6613:1270;6790:6;6798;6806;6814;6822;6830;6838;6846;6899:3;6887:9;6878:7;6874:23;6870:33;6867:53;;;6916:1;6913;6906:12;6867:53;6939:29;6958:9;6939:29;:::i;:::-;6929:39;;7019:2;7008:9;7004:18;6991:32;-1:-1:-1;;;;;7083:2:821;7075:6;7072:14;7069:34;;;7099:1;7096;7089:12;7069:34;7122:50;7164:7;7155:6;7144:9;7140:22;7122:50;:::i;:::-;7112:60;;7225:2;7214:9;7210:18;7197:32;7181:48;;7254:2;7244:8;7241:16;7238:36;;;7270:1;7267;7260:12;7238:36;7293:52;7337:7;7326:8;7315:9;7311:24;7293:52;:::i;:::-;7283:62;;7398:2;7387:9;7383:18;7370:32;7354:48;;7427:2;7417:8;7414:16;7411:36;;;7443:1;7440;7433:12;7411:36;7466:52;7510:7;7499:8;7488:9;7484:24;7466:52;:::i;:::-;7456:62;;7571:3;7560:9;7556:19;7543:33;7527:49;;7601:2;7591:8;7588:16;7585:36;;;7617:1;7614;7607:12;7585:36;;7640:63;7695:7;7684:8;7673:9;7669:24;7640:63;:::i;:::-;7630:73;;;7722:39;7756:3;7745:9;7741:19;7722:39;:::i;:::-;7712:49;;7780:39;7814:3;7803:9;7799:19;7780:39;:::i;:::-;7770:49;;7838:39;7872:3;7861:9;7857:19;7838:39;:::i;:::-;7828:49;;6613:1270;;;;;;;;;;;:::o;7888:247::-;7947:6;8000:2;7988:9;7979:7;7975:23;7971:32;7968:52;;;8016:1;8013;8006:12;7968:52;8055:9;8042:23;8074:31;8099:5;8074:31;:::i;8140:826::-;8335:2;8324:9;8317:21;8380:6;8374:13;8369:2;8358:9;8354:18;8347:41;8442:2;8434:6;8430:15;8424:22;8419:2;8408:9;8404:18;8397:50;8501:2;8493:6;8489:15;8483:22;8478:2;8467:9;8463:18;8456:50;8561:2;8553:6;8549:15;8543:22;8537:3;8526:9;8522:19;8515:51;8621:3;8613:6;8609:16;8603:23;8597:3;8586:9;8582:19;8575:52;8682:3;8674:6;8670:16;8664:23;8658:3;8647:9;8643:19;8636:52;8771:1;8767;8762:3;8758:11;8754:19;8747:3;8739:6;8735:16;8729:23;8725:49;8719:3;8708:9;8704:19;8697:78;8298:4;8822:3;8814:6;8810:16;8804:23;8846:6;8888:2;8883;8872:9;8868:18;8861:30;;8908:52;8955:3;8944:9;8940:19;8926:12;8908:52;:::i;9168:390::-;9254:8;9264:6;9318:3;9311:4;9303:6;9299:17;9295:27;9285:55;;9336:1;9333;9326:12;9285:55;-1:-1:-1;9359:20:821;;-1:-1:-1;;;;;9391:30:821;;9388:50;;;9434:1;9431;9424:12;9388:50;9471:4;9463:6;9459:17;9447:29;;9531:3;9524:4;9514:6;9511:1;9507:14;9499:6;9495:27;9491:38;9488:47;9485:67;;;9548:1;9545;9538:12;9485:67;9168:390;;;;;:::o;9563:118::-;9649:5;9642:13;9635:21;9628:5;9625:32;9615:60;;9671:1;9668;9661:12;9686:624;9813:6;9821;9829;9882:2;9870:9;9861:7;9857:23;9853:32;9850:52;;;9898:1;9895;9888:12;9850:52;9938:9;9925:23;-1:-1:-1;;;;;9963:6:821;9960:30;9957:50;;;10003:1;10000;9993:12;9957:50;10042:93;10127:7;10118:6;10107:9;10103:22;10042:93;:::i;:::-;10154:8;;-1:-1:-1;10016:119:821;-1:-1:-1;;10239:2:821;10224:18;;10211:32;10252:28;10211:32;10252:28;:::i;:::-;10299:5;10289:15;;;9686:624;;;;;:::o;10315:1259::-;10721:3;10716;10712:13;10704:6;10700:26;10689:9;10682:45;10663:4;10746:2;10784:3;10779:2;10768:9;10764:18;10757:31;10811:46;10852:3;10841:9;10837:19;10829:6;10811:46;:::i;:::-;10905:9;10897:6;10893:22;10888:2;10877:9;10873:18;10866:50;10939:33;10965:6;10957;10939:33;:::i;:::-;11003:2;10988:18;;10981:34;;;-1:-1:-1;;;;;11052:32:821;;11046:3;11031:19;;11024:61;11072:3;11101:19;;11094:35;;;11166:22;;;11160:3;11145:19;;11138:51;11238:13;;11260:22;;;11310:2;11336:15;;;;-1:-1:-1;11298:15:821;;;;-1:-1:-1;11379:169:821;11393:6;11390:1;11387:13;11379:169;;;11454:13;;11442:26;;11523:15;;;;11488:12;;;;11415:1;11408:9;11379:169;;;-1:-1:-1;11565:3:821;;10315:1259;-1:-1:-1;;;;;;;;;;;;10315:1259:821:o;11579:1135::-;11727:6;11735;11743;11751;11759;11767;11820:3;11808:9;11799:7;11795:23;11791:33;11788:53;;;11837:1;11834;11827:12;11788:53;11876:9;11863:23;11895:31;11920:5;11895:31;:::i;:::-;11945:5;-1:-1:-1;11997:2:821;11982:18;;11969:32;;-1:-1:-1;12053:2:821;12038:18;;12025:32;12066:33;12025:32;12066:33;:::i;:::-;12118:7;-1:-1:-1;12172:2:821;12157:18;;12144:32;;-1:-1:-1;12227:3:821;12212:19;;12199:33;-1:-1:-1;;;;;12281:14:821;;;12278:34;;;12308:1;12305;12298:12;12278:34;12331:74;12397:7;12388:6;12377:9;12373:22;12331:74;:::i;:::-;12321:84;;12458:3;12447:9;12443:19;12430:33;12414:49;;12488:2;12478:8;12475:16;12472:36;;;12504:1;12501;12494:12;12472:36;-1:-1:-1;12527:24:821;;12582:4;12574:13;;12570:27;-1:-1:-1;12560:55:821;;12611:1;12608;12601:12;12560:55;12634:74;12700:7;12695:2;12682:16;12677:2;12673;12669:11;12634:74;:::i;12719:248::-;12787:6;12795;12848:2;12836:9;12827:7;12823:23;12819:32;12816:52;;;12864:1;12861;12854:12;12816:52;-1:-1:-1;;12887:23:821;;;12957:2;12942:18;;;12929:32;;-1:-1:-1;12719:248:821:o;13173:322::-;13242:6;13295:2;13283:9;13274:7;13270:23;13266:32;13263:52;;;13311:1;13308;13301:12;13263:52;13351:9;13338:23;-1:-1:-1;;;;;13376:6:821;13373:30;13370:50;;;13416:1;13413;13406:12;13370:50;13439;13481:7;13472:6;13461:9;13457:22;13439:50;:::i;13500:471::-;13597:6;13605;13658:2;13646:9;13637:7;13633:23;13629:32;13626:52;;;13674:1;13671;13664:12;13626:52;13714:9;13701:23;-1:-1:-1;;;;;13739:6:821;13736:30;13733:50;;;13779:1;13776;13769:12;13733:50;13818:93;13903:7;13894:6;13883:9;13879:22;13818:93;:::i;:::-;13930:8;;13792:119;;-1:-1:-1;13500:471:821;-1:-1:-1;;;;13500:471:821:o;13976:801::-;14136:4;14165:2;14205;14194:9;14190:18;14235:2;14224:9;14217:21;14258:6;14293;14287:13;14324:6;14316;14309:22;14362:2;14351:9;14347:18;14340:25;;14424:2;14414:6;14411:1;14407:14;14396:9;14392:30;14388:39;14374:53;;14462:2;14454:6;14450:15;14483:1;14493:255;14507:6;14504:1;14501:13;14493:255;;;14600:2;14596:7;14584:9;14576:6;14572:22;14568:36;14563:3;14556:49;14628:40;14661:6;14652;14646:13;14628:40;:::i;:::-;14618:50;-1:-1:-1;14726:12:821;;;;14691:15;;;;14529:1;14522:9;14493:255;;;-1:-1:-1;14765:6:821;;13976:801;-1:-1:-1;;;;;;;13976:801:821:o;15102:277::-;15182:6;15235:2;15223:9;15214:7;15210:23;15206:32;15203:52;;;15251:1;15248;15241:12;15203:52;15290:9;15277:23;15329:1;15322:5;15319:12;15309:40;;15345:1;15342;15335:12;15384:156;15450:20;;15510:4;15499:16;;15489:27;;15479:55;;15530:1;15527;15520:12;15545:592;15647:6;15655;15663;15671;15679;15687;15740:3;15728:9;15719:7;15715:23;15711:33;15708:53;;;15757:1;15754;15747:12;15708:53;15796:9;15783:23;15815:31;15840:5;15815:31;:::i;:::-;15865:5;-1:-1:-1;15917:2:821;15902:18;;15889:32;;-1:-1:-1;15968:2:821;15953:18;;15940:32;;-1:-1:-1;15991:36:821;16023:2;16008:18;;15991:36;:::i;:::-;15981:46;;16074:3;16063:9;16059:19;16046:33;16036:43;;16126:3;16115:9;16111:19;16098:33;16088:43;;15545:592;;;;;;;;:::o;16432:734::-;16543:6;16551;16559;16567;16575;16583;16591;16644:3;16632:9;16623:7;16619:23;16615:33;16612:53;;;16661:1;16658;16651:12;16612:53;16700:9;16687:23;16719:31;16744:5;16719:31;:::i;:::-;16769:5;-1:-1:-1;16826:2:821;16811:18;;16798:32;16839:33;16798:32;16839:33;:::i;:::-;16891:7;-1:-1:-1;16945:2:821;16930:18;;16917:32;;-1:-1:-1;16996:2:821;16981:18;;16968:32;;-1:-1:-1;17019:37:821;17051:3;17036:19;;17019:37;:::i;:::-;17009:47;;17103:3;17092:9;17088:19;17075:33;17065:43;;17155:3;17144:9;17140:19;17127:33;17117:43;;16432:734;;;;;;;;;;:::o;17424:388::-;17492:6;17500;17553:2;17541:9;17532:7;17528:23;17524:32;17521:52;;;17569:1;17566;17559:12;17521:52;17608:9;17595:23;17627:31;17652:5;17627:31;:::i;:::-;17677:5;-1:-1:-1;17734:2:821;17719:18;;17706:32;17747:33;17706:32;17747:33;:::i;17817:274::-;-1:-1:-1;;;;;18009:32:821;;;;17991:51;;18073:2;18058:18;;18051:34;17979:2;17964:18;;17817:274::o;18096:419::-;18163:6;18171;18224:2;18212:9;18203:7;18199:23;18195:32;18192:52;;;18240:1;18237;18230:12;18192:52;18279:9;18266:23;18298:31;18323:5;18298:31;:::i;:::-;18348:5;-1:-1:-1;18405:2:821;18390:18;;18377:32;18453:10;18440:24;;18428:37;;18418:65;;18479:1;18476;18469:12;18875:127;18936:10;18931:3;18927:20;18924:1;18917:31;18967:4;18964:1;18957:15;18991:4;18988:1;18981:15;19007:349;19160:2;19145:18;;19193:1;19182:13;;19172:144;;19238:10;19233:3;19229:20;19226:1;19219:31;19273:4;19270:1;19263:15;19301:4;19298:1;19291:15;19172:144;19325:25;;;19007:349;:::o;19361:380::-;19440:1;19436:12;;;;19483;;;19504:61;;19558:4;19550:6;19546:17;19536:27;;19504:61;19611:2;19603:6;19600:14;19580:18;19577:38;19574:161;;19657:10;19652:3;19648:20;19645:1;19638:31;19692:4;19689:1;19682:15;19720:4;19717:1;19710:15;19746:338;19948:2;19930:21;;;19987:2;19967:18;;;19960:30;-1:-1:-1;;;20021:2:821;20006:18;;19999:44;20075:2;20060:18;;19746:338::o;20089:545::-;20182:4;20188:6;20248:11;20235:25;20342:2;20338:7;20327:8;20311:14;20307:29;20303:43;20283:18;20279:68;20269:96;;20361:1;20358;20351:12;20269:96;20388:33;;20440:20;;;-1:-1:-1;;;;;;20472:30:821;;20469:50;;;20515:1;20512;20505:12;20469:50;20548:4;20536:17;;-1:-1:-1;20599:1:821;20595:14;;;20579;20575:35;20565:46;;20562:66;;;20624:1;20621;20614:12;21445:127;21506:10;21501:3;21497:20;21494:1;21487:31;21537:4;21534:1;21527:15;21561:4;21558:1;21551:15;21577:125;21642:9;;;21663:10;;;21660:36;;;21676:18;;:::i;23434:349::-;23636:2;23618:21;;;23675:2;23655:18;;;23648:30;-1:-1:-1;;;23709:2:821;23694:18;;23687:55;23774:2;23759:18;;23434:349::o;24760:127::-;24821:10;24816:3;24812:20;24809:1;24802:31;24852:4;24849:1;24842:15;24876:4;24873:1;24866:15;24892:333;24993:4;25051:11;25038:25;25145:3;25141:8;25130;25114:14;25110:29;25106:44;25086:18;25082:69;25072:97;;25165:1;25162;25155:12;25072:97;25186:33;;;;;24892:333;-1:-1:-1;;24892:333:821:o;25907:516::-;25979:4;25985:6;26045:11;26032:25;26139:2;26135:7;26124:8;26108:14;26104:29;26100:43;26080:18;26076:68;26066:96;;26158:1;26155;26148:12;26066:96;26185:33;;26237:20;;;-1:-1:-1;;;;;;26269:30:821;;26266:50;;;26312:1;26309;26302:12;26266:50;26345:4;26333:17;;-1:-1:-1;26376:14:821;26372:27;;;26362:38;;26359:58;;;26413:1;26410;26403:12;26554:543;26656:2;26651:3;26648:11;26645:446;;;26692:1;26716:5;26713:1;26706:16;26760:4;26757:1;26747:18;26830:2;26818:10;26814:19;26811:1;26807:27;26801:4;26797:38;26866:4;26854:10;26851:20;26848:47;;;-1:-1:-1;26889:4:821;26848:47;26944:2;26939:3;26935:12;26932:1;26928:20;26922:4;26918:31;26908:41;;26999:82;27017:2;27010:5;27007:13;26999:82;;;27062:17;;;27043:1;27032:13;26999:82;;27102:166;-1:-1:-1;;27230:1:821;27226:11;;;27222:24;27218:29;27208:40;27254:1;27250:11;;;;27205:57;;27102:166::o;27273:1190::-;-1:-1:-1;;;;;27376:3:821;27373:27;27370:53;;;27403:18;;:::i;:::-;27432:94;27522:3;27482:38;27514:4;27508:11;27482:38;:::i;:::-;27476:4;27432:94;:::i;:::-;27552:1;27577:2;27572:3;27569:11;27594:1;27589:616;;;;28249:1;28266:3;28263:93;;;-1:-1:-1;28322:19:821;;;28309:33;28263:93;28382:64;28442:3;28435:5;28382:64;:::i;:::-;28376:4;28369:78;;27562:895;;27589:616;26501:1;26494:14;;;26538:4;26525:18;;-1:-1:-1;;27625:17:821;;;27726:9;27748:229;27762:7;27759:1;27756:14;27748:229;;;27851:19;;;27838:33;27823:49;;27958:4;27943:20;;;;27911:1;27899:14;;;;27778:12;27748:229;;;27752:3;28005;27996:7;27993:16;27990:159;;;28129:1;28125:6;28119:3;28113;28110:1;28106:11;28102:21;28098:34;28094:39;28081:9;28076:3;28072:19;28059:33;28055:79;28047:6;28040:95;27990:159;;;28192:1;28186:3;28183:1;28179:11;28175:19;28169:4;28162:33;27562:895;;;27273:1190;;;:::o;28468:950::-;28647:5;28634:19;28628:4;28621:33;28708:2;28701:5;28697:14;28684:28;28680:1;28674:4;28670:12;28663:50;28767:2;28760:5;28756:14;28743:28;28739:1;28733:4;28729:12;28722:50;28826:2;28819:5;28815:14;28802:28;28798:1;28792:4;28788:12;28781:50;28885:3;28878:5;28874:15;28861:29;28857:1;28851:4;28847:12;28840:51;28945:3;28938:5;28934:15;28921:29;28917:1;28911:4;28907:12;28900:51;28988:1;28982:4;28978:12;29038:3;29031:5;29027:15;29014:29;29052:33;29077:7;29052:33;:::i;:::-;29120:17;;-1:-1:-1;;;;;;29116:48:821;-1:-1:-1;;;;;29166:33:821;;;;29113:87;29094:107;;29244:60;29299:3;29288:15;;29292:5;29244:60;:::i;:::-;29313:99;29398:13;29385:11;29381:1;29375:4;29371:12;29313:99;:::i;29423:501::-;29482:5;29489:6;29549:3;29536:17;29635:2;29631:7;29620:8;29604:14;29600:29;29596:43;29576:18;29572:68;29562:96;;29654:1;29651;29644:12;29562:96;29682:33;;29786:4;29773:18;;;-1:-1:-1;29734:21:821;;-1:-1:-1;;;;;;29803:30:821;;29800:50;;;29846:1;29843;29836:12;29800:50;29893:6;29877:14;29873:27;29866:5;29862:39;29859:59;;;29914:1;29911;29904:12;29929:267;30018:6;30013:3;30006:19;30070:6;30063:5;30056:4;30051:3;30047:14;30034:43;-1:-1:-1;30122:1:821;30097:16;;;30115:4;30093:27;;;30086:38;;;;30178:2;30157:15;;;-1:-1:-1;;30153:29:821;30144:39;;;30140:50;;29929:267::o;30201:2051::-;30472:2;30524:21;;;30497:18;;;30580:22;;;30443:4;;30621:2;30639:18;;;30703:1;30699:14;;;30684:30;;30680:39;;30742:6;30443:4;;30797:1372;30813:6;30808:3;30805:15;30797:1372;;;30882:22;;;-1:-1:-1;;30878:36:821;30866:49;;30954:20;;31029:14;31025:27;;;-1:-1:-1;;31021:42:821;30997:67;;30987:95;;31078:1;31075;31068:12;30987:95;31108:31;;31196:19;;31181:35;;31239:4;31293:14;;;31280:28;31263:15;;;31256:53;31359:14;;;31346:28;31329:15;;;31322:53;31425:14;;;31412:28;31395:15;;;31388:53;31464:4;31518:14;;;31505:28;31488:15;;;31481:53;31557:4;31611:14;;;31598:28;31581:15;;;31574:53;31162:6;;31650:4;31695:14;;;31682:28;31723:33;31682:28;31723:33;:::i;:::-;-1:-1:-1;;;;;31793:33:821;31776:15;;;31769:58;31850:4;31901:54;31940:14;;;31944:5;31901:54;:::i;:::-;31867:88;;31992:2;31987;31979:6;31975:15;31968:27;32018:71;32085:2;32077:6;32073:15;32059:12;32045;32018:71;:::i;:::-;32147:12;;;;32008:81;-1:-1:-1;;;32112:15:821;;;;;-1:-1:-1;;30839:1:821;30830:11;30797:1372;;;-1:-1:-1;;;1643:13:821;;1636:21;32240:4;32225:20;;1624:34;32186:6;-1:-1:-1;32201:45:821;;-1:-1:-1;;;1573:91:821;33539:352;33750:6;33742;33737:3;33724:33;33845:2;33816:15;;;;-1:-1:-1;;;;;;33812:45:821;33776:16;;33801:57;;;33882:2;33874:11;;33539:352;-1:-1:-1;33539:352:821:o;35030:128::-;35097:9;;;35118:11;;;35115:37;;;35132:18;;:::i;35163:136::-;35202:3;35230:5;35220:39;;35239:18;;:::i;:::-;-1:-1:-1;;;35275:18:821;;35163:136::o;38109:341::-;38311:2;38293:21;;;38350:2;38330:18;;;38323:30;-1:-1:-1;;;38384:2:821;38369:18;;38362:47;38441:2;38426:18;;38109:341::o;38455:168::-;38528:9;;;38559;;38576:15;;;38570:22;;38556:37;38546:71;;38597:18;;:::i;40455:810::-;-1:-1:-1;;;40861:3:821;40854:36;40836:3;40919:6;40913:13;40935:75;41003:6;40998:2;40993:3;40989:12;40982:4;40974:6;40970:17;40935:75;:::i;:::-;-1:-1:-1;;;41069:2:821;41029:16;;;41061:11;;;41054:40;41119:13;;41141:76;41119:13;41203:2;41195:11;;41188:4;41176:17;;41141:76;:::i;:::-;41237:17;41256:2;41233:26;;40455:810;-1:-1:-1;;;;40455:810:821:o;41270:407::-;41472:2;41454:21;;;41511:2;41491:18;;;41484:30;41550:34;41545:2;41530:18;;41523:62;-1:-1:-1;;;41616:2:821;41601:18;;41594:41;41667:3;41652:19;;41270:407::o;41682:1345::-;41808:3;41802:10;-1:-1:-1;;;;;41827:6:821;41824:30;41821:56;;;41857:18;;:::i;:::-;41886:97;41976:6;41936:38;41968:4;41962:11;41936:38;:::i;:::-;41930:4;41886:97;:::i;:::-;42038:4;;42095:2;42084:14;;42112:1;42107:663;;;;42814:1;42831:6;42828:89;;;-1:-1:-1;42883:19:821;;;42877:26;42828:89;42943:67;43003:6;42996:5;42943:67;:::i;:::-;42937:4;42930:81;;42077:944;;42107:663;26501:1;26494:14;;;26538:4;26525:18;;-1:-1:-1;;42143:20:821;;;42261:236;42275:7;42272:1;42269:14;42261:236;;;42364:19;;;42358:26;42343:42;;42456:27;;;;42424:1;42412:14;;;;42291:19;;42261:236;;;42265:3;42525:6;42516:7;42513:19;42510:201;;;42586:19;;;42580:26;-1:-1:-1;;42669:1:821;42665:14;;;42681:3;42661:24;42657:37;42653:42;42638:58;42623:74;;42510:201;-1:-1:-1;;;;;42757:1:821;42741:14;;;42737:22;42724:36;;-1:-1:-1;41682:1345:821:o;43032:383::-;43229:2;43218:9;43211:21;43192:4;43255:45;43296:2;43285:9;43281:18;43273:6;43255:45;:::i;:::-;43348:9;43340:6;43336:22;43331:2;43320:9;43316:18;43309:50;43376:33;43402:6;43394;43376:33;:::i;:::-;43368:41;43032:383;-1:-1:-1;;;;;43032:383:821:o;44514:127::-;44575:10;44570:3;44566:20;44563:1;44556:31;44606:4;44603:1;44596:15;44630:4;44627:1;44620:15;44646:217;44686:1;44712;44702:132;;44756:10;44751:3;44747:20;44744:1;44737:31;44791:4;44788:1;44781:15;44819:4;44816:1;44809:15;44702:132;-1:-1:-1;44848:9:821;;44646:217::o;47171:287::-;47300:3;47338:6;47332:13;47354:66;47413:6;47408:3;47401:4;47393:6;47389:17;47354:66;:::i;52277:245::-;52344:6;52397:2;52385:9;52376:7;52372:23;52368:32;52365:52;;;52413:1;52410;52403:12;52365:52;52445:9;52439:16;52464:28;52486:5;52464:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CLOCK_MODE()": "4bf5d7e9",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "clock()": "91ddadf4",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "eip712Domain()": "84b0196e",
    "getActiveClaimConditionId()": "c68907de",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "getVotes(address)": "9ab24eb0",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,string,address[],address,address,uint128)": "49c5c5b6",
    "isTrustedForwarder(address)": "572b6c05",
    "maxTotalSupply()": "2ab4d052",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"FlatPlatformFeeUpdated(address,uint256)\":{\"details\":\"Emitted when the flat platform fee is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"},\"PlatformFeeInfoUpdated(address,uint256)\":{\"details\":\"Emitted when fee on primary sales is updated.\"},\"PlatformFeeTypeUpdated(uint8)\":{\"details\":\"Emitted when the platform fee type is updated.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee type.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,string,address[],address,address,uint128)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Global max total supply of tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/drop/DropERC20.sol\":\"DropERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0xac9e5863e0f7832c812832d0733f1caa55f974164f9fc55478e88a2294689a7e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6913508ea60948ca7441e4c008b4450b013b8b409eb74037c6b4dad70702686c\",\"dweb:/ipfs/QmdCgrdkR8cTLBkGawxbBwQLRNQfSdAxQ1YSJDwzctU3Wj\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e\",\"dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732\",\"dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/drop/DropERC20.sol\":{\"keccak256\":\"0xf2398fd5ff5d76803edd4d0d2809fa1da8e5be103fdaa01b748ebdd565294db6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6a66b89e231c35044bd44dfffa52daea3bb8a3b6758c41bc88f6e93122b820a6\",\"dweb:/ipfs/QmbJD4g78sWpNHJ9wmmESP11121pFpDT7t6goKRjn9ZHXu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a\",\"dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32\",\"dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x435286e01fcfb0bed104e44b9bf9d8abfe9f7b0a8f576e5bbef5eb91fe55e1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22e9068747b6a7d9de3730525e09a369f65991c88377499582c1b8fe92961a27\",\"dweb:/ipfs/QmafdiqMV6eGdZbm9wJRr2ExhhAZ5uXNtyqqwvmgyzwEaF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLOCK_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "clock",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "CLOCK_MODE()": {
            "details": "Description of the clock"
          },
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "clock()": {
            "details": "Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past"
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee type."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,string,address[],address,address,uint128)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/drop/DropERC20.sol": "DropERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0xac9e5863e0f7832c812832d0733f1caa55f974164f9fc55478e88a2294689a7e",
        "urls": [
          "bzz-raw://6913508ea60948ca7441e4c008b4450b013b8b409eb74037c6b4dad70702686c",
          "dweb:/ipfs/QmdCgrdkR8cTLBkGawxbBwQLRNQfSdAxQ1YSJDwzctU3Wj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb",
        "urls": [
          "bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e",
          "dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad",
        "urls": [
          "bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732",
          "dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/drop/DropERC20.sol": {
        "keccak256": "0xf2398fd5ff5d76803edd4d0d2809fa1da8e5be103fdaa01b748ebdd565294db6",
        "urls": [
          "bzz-raw://6a66b89e231c35044bd44dfffa52daea3bb8a3b6758c41bc88f6e93122b820a6",
          "dweb:/ipfs/QmbJD4g78sWpNHJ9wmmESP11121pFpDT7t6goKRjn9ZHXu"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31",
        "urls": [
          "bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a",
          "dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol": {
        "keccak256": "0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db",
        "urls": [
          "bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9",
          "dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol": {
        "keccak256": "0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69",
        "urls": [
          "bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412",
          "dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol": {
        "keccak256": "0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a",
        "urls": [
          "bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c",
          "dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol": {
        "keccak256": "0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d",
        "urls": [
          "bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32",
          "dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol": {
        "keccak256": "0x435286e01fcfb0bed104e44b9bf9d8abfe9f7b0a8f576e5bbef5eb91fe55e1d4",
        "urls": [
          "bzz-raw://22e9068747b6a7d9de3730525e09a369f65991c88377499582c1b8fe92961a27",
          "dweb:/ipfs/QmafdiqMV6eGdZbm9wJRr2ExhhAZ5uXNtyqqwvmgyzwEaF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3",
        "urls": [
          "bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622",
          "dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0",
        "urls": [
          "bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66",
          "dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/drop/DropERC20.sol",
    "id": 74918,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CountersUpgradeable": [
        161766
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "Drop": [
        18899
      ],
      "DropERC20": [
        74917
      ],
      "ECDSAUpgradeable": [
        162361
      ],
      "EIP712Upgradeable": [
        162645
      ],
      "ERC20BurnableUpgradeable": [
        156832
      ],
      "ERC20PermitUpgradeable": [
        157023
      ],
      "ERC20Upgradeable": [
        156690
      ],
      "ERC20VotesUpgradeable": [
        157777
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "IClaimCondition": [
        32931
      ],
      "IClaimConditionMultiPhase": [
        32955
      ],
      "IContractMetadata": [
        33084
      ],
      "IDrop": [
        33221
      ],
      "IERC20": [
        14015
      ],
      "IERC20MetadataUpgradeable": [
        157802
      ],
      "IERC20PermitUpgradeable": [
        157838
      ],
      "IERC20Upgradeable": [
        156768
      ],
      "IERC5267Upgradeable": [
        153966
      ],
      "IERC5805Upgradeable": [
        153975
      ],
      "IERC6372Upgradeable": [
        153990
      ],
      "IMulticall": [
        33577
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IPlatformFee": [
        33976
      ],
      "IPrimarySale": [
        33997
      ],
      "IVotesUpgradeable": [
        153913
      ],
      "IWETH": [
        55358
      ],
      "Initializable": [
        154159
      ],
      "MathUpgradeable": [
        163570
      ],
      "MerkleProof": [
        65274
      ],
      "Multicall": [
        21206
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "PlatformFee": [
        22629
      ],
      "PrimarySale": [
        22703
      ],
      "SafeCastUpgradeable": [
        165111
      ],
      "SafeERC20": [
        49165
      ],
      "SignedMathUpgradeable": [
        165216
      ],
      "Strings": [
        66084
      ],
      "StringsUpgradeable": [
        161995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9401:332",
    "nodes": [
      {
        "id": 74355,
        "nodeType": "PragmaDirective",
        "src": "39:24:332",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 74356,
        "nodeType": "ImportDirective",
        "src": "774:97:332",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 156833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74357,
        "nodeType": "ImportDirective",
        "src": "872:94:332",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 157778,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74358,
        "nodeType": "ImportDirective",
        "src": "968:39:332",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74359,
        "nodeType": "ImportDirective",
        "src": "1008:74:332",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 161996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74360,
        "nodeType": "ImportDirective",
        "src": "1132:79:332",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74361,
        "nodeType": "ImportDirective",
        "src": "1212:43:332",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 65176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74362,
        "nodeType": "ImportDirective",
        "src": "1297:46:332",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74363,
        "nodeType": "ImportDirective",
        "src": "1344:41:332",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 22630,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74364,
        "nodeType": "ImportDirective",
        "src": "1386:41:332",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74365,
        "nodeType": "ImportDirective",
        "src": "1428:51:332",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74366,
        "nodeType": "ImportDirective",
        "src": "1480:34:332",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74918,
        "sourceUnit": 18900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74917,
        "nodeType": "ContractDefinition",
        "src": "1516:7923:332",
        "nodes": [
          {
            "id": 74389,
            "nodeType": "UsingForDirective",
            "src": "1758:37:332",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 74387,
              "name": "StringsUpgradeable",
              "nameLocations": [
                "1764:18:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161995,
              "src": "1764:18:332"
            },
            "typeName": {
              "id": 74388,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1787:7:332",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 74392,
            "nodeType": "VariableDeclaration",
            "src": "2088:28:332",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74390,
              "nodeType": "StructuredDocumentation",
              "src": "1985:98:332",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2104:12:332",
            "scope": 74917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74391,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2088:7:332",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74396,
            "nodeType": "VariableDeclaration",
            "src": "2168:41:332",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 74393,
              "nodeType": "StructuredDocumentation",
              "src": "2123:40:332",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2193:7:332",
            "scope": 74917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74394,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2168:7:332",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 74395,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2203:6:332",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 74399,
            "nodeType": "VariableDeclaration",
            "src": "2264:29:332",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74397,
              "nodeType": "StructuredDocumentation",
              "src": "2216:43:332",
              "text": "@dev Global max total supply of tokens."
            },
            "functionSelector": "2ab4d052",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "2279:14:332",
            "scope": 74917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74398,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2264:7:332",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 74404,
            "nodeType": "EventDefinition",
            "src": "2370:52:332",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 74400,
              "nodeType": "StructuredDocumentation",
              "src": "2300:65:332",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "eventSelector": "f2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af",
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "2376:21:332",
            "parameters": {
              "id": 74403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "2406:14:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74404,
                  "src": "2398:22:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2397:24:332"
            }
          },
          {
            "id": 74410,
            "nodeType": "FunctionDefinition",
            "src": "2620:28:332",
            "nodes": [],
            "body": {
              "id": 74409,
              "nodeType": "Block",
              "src": "2646:2:332",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 74407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74406,
                  "name": "initializer",
                  "nameLocations": [
                    "2634:11:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2634:11:332"
                },
                "nodeType": "ModifierInvocation",
                "src": "2634:11:332"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 74405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:2:332"
            },
            "returnParameters": {
              "id": 74408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2646:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74488,
            "nodeType": "FunctionDefinition",
            "src": "2713:958:332",
            "nodes": [],
            "body": {
              "id": 74487,
              "nodeType": "Block",
              "src": "3036:635:332",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74434,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3054:13:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74487,
                      "src": "3046:21:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 74433,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3046:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74438,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 74436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3080:15:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 74435,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3070:9:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3070:26:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3046:50:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74440,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74422,
                        "src": "3204:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 74439,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "3182:21:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 74441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3182:41:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74442,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:41:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74444,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74415,
                        "src": "3252:5:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74443,
                      "name": "__ERC20Permit_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156880,
                      "src": "3233:18:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 74445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:25:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74446,
                  "nodeType": "ExpressionStatement",
                  "src": "3233:25:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74448,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74415,
                        "src": "3291:5:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 74449,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74417,
                        "src": "3298:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74447,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156143,
                      "src": "3268:22:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 74450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:38:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74451,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:38:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74453,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74419,
                        "src": "3335:12:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74452,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "3317:17:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 74454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3317:31:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74455,
                  "nodeType": "ExpressionStatement",
                  "src": "3317:31:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74457,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3370:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 74458,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74413,
                        "src": "3390:13:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74456,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3359:10:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:45:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74460,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:45:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74462,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74434,
                        "src": "3425:13:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 74463,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74413,
                        "src": "3440:13:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74461,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3414:10:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:40:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74465,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:40:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74467,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74434,
                        "src": "3475:13:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3498:1:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3490:7:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3490:7:332",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3490:10:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74466,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3464:10:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 74472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:37:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74473,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:37:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74475,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74426,
                        "src": "3534:21:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74476,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74428,
                        "src": "3557:15:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 74474,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22540,
                      "src": "3512:21:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3512:61:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74478,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:61:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74480,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74424,
                        "src": "3610:14:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74479,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "3583:26:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 74481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3583:42:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74482,
                  "nodeType": "ExpressionStatement",
                  "src": "3583:42:332"
                },
                {
                  "expression": {
                    "id": 74485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74483,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74392,
                      "src": "3636:12:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74484,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74434,
                      "src": "3651:13:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3636:28:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 74486,
                  "nodeType": "ExpressionStatement",
                  "src": "3636:28:332"
                }
              ]
            },
            "documentation": {
              "id": 74411,
              "nodeType": "StructuredDocumentation",
              "src": "2654:54:332",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "49c5c5b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 74431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74430,
                  "name": "initializer",
                  "nameLocations": [
                    "3024:11:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "3024:11:332"
                },
                "nodeType": "ModifierInvocation",
                "src": "3024:11:332"
              }
            ],
            "name": "initialize",
            "nameLocation": "2722:10:332",
            "parameters": {
              "id": 74429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74413,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2750:13:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2742:21:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2742:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74415,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2787:5:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2773:19:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74414,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:6:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74417,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2816:7:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2802:21:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74416,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:6:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74419,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2847:12:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2833:26:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74418,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2833:6:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74422,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2886:18:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2869:35:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74420,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2869:7:332",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74421,
                    "nodeType": "ArrayTypeName",
                    "src": "2869:9:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74424,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2922:14:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2914:22:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2914:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74426,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "2954:21:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2946:29:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74428,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "2993:15:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74488,
                  "src": "2985:23:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 74427,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2732:282:332"
            },
            "returnParameters": {
              "id": 74432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3036:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74499,
            "nodeType": "FunctionDefinition",
            "src": "3862:100:332",
            "nodes": [],
            "body": {
              "id": 74498,
              "nodeType": "Block",
              "src": "3918:44:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f704552433230",
                        "id": 74495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3943:11:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                          "typeString": "literal_string \"DropERC20\""
                        },
                        "value": "DropERC20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                          "typeString": "literal_string \"DropERC20\""
                        }
                      ],
                      "id": 74494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3935:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 74493,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3935:7:332",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3935:20:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 74492,
                  "id": 74497,
                  "nodeType": "Return",
                  "src": "3928:27:332"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "3871:12:332",
            "parameters": {
              "id": 74489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3883:2:332"
            },
            "returnParameters": {
              "id": 74492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74499,
                  "src": "3909:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74490,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3909:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3908:9:332"
            },
            "scope": 74917,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74510,
            "nodeType": "FunctionDefinition",
            "src": "3968:89:332",
            "nodes": [],
            "body": {
              "id": 74509,
              "nodeType": "Block",
              "src": "4025:32:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 74506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:1:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 74505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4042:5:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 74504,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4042:5:332",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:8:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 74503,
                  "id": 74508,
                  "nodeType": "Return",
                  "src": "4035:15:332"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "3977:15:332",
            "parameters": {
              "id": 74500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3992:2:332"
            },
            "returnParameters": {
              "id": 74503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74510,
                  "src": "4018:5:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 74501,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4018:5:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4017:7:332"
            },
            "scope": 74917,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74528,
            "nodeType": "FunctionDefinition",
            "src": "4332:192:332",
            "nodes": [],
            "body": {
              "id": 74527,
              "nodeType": "Block",
              "src": "4422:102:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74519,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74399,
                      "src": "4432:14:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74520,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74513,
                      "src": "4449:15:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4432:32:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74522,
                  "nodeType": "ExpressionStatement",
                  "src": "4432:32:332"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74524,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74513,
                        "src": "4501:15:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74523,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74404,
                      "src": "4479:21:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 74525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:38:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74526,
                  "nodeType": "EmitStatement",
                  "src": "4474:43:332"
                }
              ]
            },
            "documentation": {
              "id": 74511,
              "nodeType": "StructuredDocumentation",
              "src": "4244:83:332",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74516,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21787,
                    "src": "4402:18:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 74517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74515,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4393:8:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "4393:8:332"
                },
                "nodeType": "ModifierInvocation",
                "src": "4393:28:332"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "4341:17:332",
            "parameters": {
              "id": 74514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74513,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "4367:15:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74528,
                  "src": "4359:23:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4359:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4358:25:332"
            },
            "returnParameters": {
              "id": 74518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4422:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74565,
            "nodeType": "FunctionDefinition",
            "src": "4767:356:332",
            "nodes": [],
            "body": {
              "id": 74564,
              "nodeType": "Block",
              "src": "4951:172:332",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74547,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "4969:15:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74564,
                      "src": "4961:23:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74546,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4961:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74549,
                  "initialValue": {
                    "id": 74548,
                    "name": "maxTotalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74399,
                    "src": "4987:14:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4961:40:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 74560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74551,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74547,
                            "src": "5019:15:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 74552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5038:1:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5019:20:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 74554,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156183,
                                "src": "5043:11:332",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 74555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5043:13:332",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 74556,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74533,
                              "src": "5059:9:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5043:25:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 74558,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74547,
                            "src": "5072:15:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5043:44:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5019:68:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 74561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5089:26:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 74550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5011:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5011:105:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74563,
                  "nodeType": "ExpressionStatement",
                  "src": "5011:105:332"
                }
              ]
            },
            "baseFunctions": [
              18852
            ],
            "documentation": {
              "id": 74529,
              "nodeType": "StructuredDocumentation",
              "src": "4713:49:332",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "4776:12:332",
            "overrides": {
              "id": 74544,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4942:8:332"
            },
            "parameters": {
              "id": 74543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74565,
                  "src": "4798:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74533,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4823:9:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74565,
                  "src": "4815:17:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4815:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74565,
                  "src": "4842:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74565,
                  "src": "4859:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74565,
                  "src": "4876:23:332",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33171_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 74539,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74538,
                      "name": "AllowlistProof",
                      "nameLocations": [
                        "4876:14:332"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33171,
                      "src": "4876:14:332"
                    },
                    "referencedDeclaration": 33171,
                    "src": "4876:14:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33171_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74542,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74565,
                  "src": "4909:12:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74541,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4909:5:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4788:139:332"
            },
            "returnParameters": {
              "id": 74545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4951:0:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74689,
            "nodeType": "FunctionDefinition",
            "src": "5215:1292:332",
            "nodes": [],
            "body": {
              "id": 74688,
              "nodeType": "Block",
              "src": "5401:1106:332",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74578,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74574,
                      "src": "5415:14:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 74579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5433:1:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5415:19:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74591,
                  "nodeType": "IfStatement",
                  "src": "5411:103:332",
                  "trueBody": {
                    "id": 74590,
                    "nodeType": "Block",
                    "src": "5436:78:332",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 74585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 74582,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5458:3:332",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 74583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5462:5:332",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5458:9:332",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 74584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5471:1:332",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5458:14:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 74586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5474:8:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 74581,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5450:7:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5450:33:332",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74588,
                        "nodeType": "ExpressionStatement",
                        "src": "5450:33:332"
                      },
                      {
                        "functionReturnParameters": 74577,
                        "id": 74589,
                        "nodeType": "Return",
                        "src": "5497:7:332"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    74593,
                    74595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74593,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "5533:20:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74688,
                      "src": "5525:28:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74592,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5525:7:332",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 74595,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "5562:14:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74688,
                      "src": "5555:21:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 74594,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "5555:6:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74598,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74596,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22447,
                      "src": "5580:18:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 74597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:20:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5524:76:332"
                },
                {
                  "assignments": [
                    74600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74600,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5619:13:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74688,
                      "src": "5611:21:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74599,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5611:7:332",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74611,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 74606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74601,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74568,
                        "src": "5635:21:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5668:1:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5660:7:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74602,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5660:7:332",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5660:10:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5635:35:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 74609,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74568,
                      "src": "5698:21:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5635:84:332",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74607,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "5673:20:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 74608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5673:22:332",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5611:108:332"
                },
                {
                  "assignments": [
                    74613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74613,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5828:10:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74688,
                      "src": "5820:18:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5820:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74620,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74614,
                            "name": "_quantityToClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74570,
                            "src": "5842:16:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 74615,
                            "name": "_pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74574,
                            "src": "5861:14:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5842:33:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 74617,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5841:35:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 74618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5879:7:332",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "5841:45:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5820:66:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74622,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74613,
                          "src": "5904:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5917:1:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5904:14:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e7469747920746f6f206c6f77",
                        "id": 74625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5920:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        },
                        "value": "quantity too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        }
                      ],
                      "id": 74621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5896:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5896:43:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74627,
                  "nodeType": "ExpressionStatement",
                  "src": "5896:43:332"
                },
                {
                  "assignments": [
                    74629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74629,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "5958:12:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74688,
                      "src": "5950:20:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5950:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74636,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74630,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74613,
                            "src": "5974:10:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 74631,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74595,
                            "src": "5987:14:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5974:27:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 74633,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5973:29:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 74634,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74396,
                      "src": "6005:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5973:39:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5950:62:332"
                },
                {
                  "assignments": [
                    74638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74638,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "6028:13:332",
                      "nodeType": "VariableDeclaration",
                      "scope": 74688,
                      "src": "6023:18:332",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 74637,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6023:4:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74639,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6023:18:332"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74640,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74572,
                      "src": "6055:9:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 74641,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6068:19:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6088:12:332",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "6068:32:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6055:45:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 74659,
                    "nodeType": "Block",
                    "src": "6172:55:332",
                    "statements": [
                      {
                        "expression": {
                          "id": 74657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74652,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74638,
                            "src": "6186:13:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74653,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6202:3:332",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6206:5:332",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6202:9:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 74655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6215:1:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6202:14:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6186:30:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74658,
                        "nodeType": "ExpressionStatement",
                        "src": "6186:30:332"
                      }
                    ]
                  },
                  "id": 74660,
                  "nodeType": "IfStatement",
                  "src": "6051:176:332",
                  "trueBody": {
                    "id": 74651,
                    "nodeType": "Block",
                    "src": "6102:64:332",
                    "statements": [
                      {
                        "expression": {
                          "id": 74649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74644,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74638,
                            "src": "6116:13:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74645,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6132:3:332",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6136:5:332",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6132:9:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 74647,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74613,
                              "src": "6145:10:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6132:23:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6116:39:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74650,
                        "nodeType": "ExpressionStatement",
                        "src": "6116:39:332"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74662,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74638,
                        "src": "6244:13:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 74663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6259:19:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 74661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6236:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6236:43:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74665,
                  "nodeType": "ExpressionStatement",
                  "src": "6236:43:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74669,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74572,
                        "src": "6327:9:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74670,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74903
                          ],
                          "referencedDeclaration": 74903,
                          "src": "6338:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6338:12:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74672,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74593,
                        "src": "6352:20:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74673,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74629,
                        "src": "6374:12:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74666,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6290:19:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6310:16:332",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "6290:36:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:97:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74675,
                  "nodeType": "ExpressionStatement",
                  "src": "6290:97:332"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74679,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74572,
                        "src": "6434:9:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74680,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74903
                          ],
                          "referencedDeclaration": 74903,
                          "src": "6445:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6445:12:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74682,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74600,
                        "src": "6459:13:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74683,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74613,
                          "src": "6474:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 74684,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74629,
                          "src": "6487:12:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6474:25:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74676,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6397:19:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6417:16:332",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "6397:36:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6397:103:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74687,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:103:332"
                }
              ]
            },
            "baseFunctions": [
              18882
            ],
            "documentation": {
              "id": 74566,
              "nodeType": "StructuredDocumentation",
              "src": "5129:81:332",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5224:20:332",
            "overrides": {
              "id": 74576,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5392:8:332"
            },
            "parameters": {
              "id": 74575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74568,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5262:21:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74689,
                  "src": "5254:29:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5254:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74570,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5301:16:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74689,
                  "src": "5293:24:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5293:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74572,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5335:9:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74689,
                  "src": "5327:17:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5327:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74574,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5362:14:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74689,
                  "src": "5354:22:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5354:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5244:138:332"
            },
            "returnParameters": {
              "id": 74577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5401:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74708,
            "nodeType": "FunctionDefinition",
            "src": "6562:180:332",
            "nodes": [],
            "body": {
              "id": 74707,
              "nodeType": "Block",
              "src": "6674:68:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74701,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74692,
                        "src": "6690:3:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74702,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74694,
                        "src": "6695:21:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74700,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        74782
                      ],
                      "referencedDeclaration": 74782,
                      "src": "6684:5:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6684:33:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74704,
                  "nodeType": "ExpressionStatement",
                  "src": "6684:33:332"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 74705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6734:1:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 74699,
                  "id": 74706,
                  "nodeType": "Return",
                  "src": "6727:8:332"
                }
              ]
            },
            "baseFunctions": [
              18892
            ],
            "documentation": {
              "id": 74690,
              "nodeType": "StructuredDocumentation",
              "src": "6513:44:332",
              "text": "@dev Transfers the tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "6571:22:332",
            "overrides": {
              "id": 74696,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6647:8:332"
            },
            "parameters": {
              "id": 74695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74692,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6602:3:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74708,
                  "src": "6594:11:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6594:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74694,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6615:21:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74708,
                  "src": "6607:29:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6607:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6593:44:332"
            },
            "returnParameters": {
              "id": 74699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74708,
                  "src": "6665:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6665:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6664:9:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74722,
            "nodeType": "FunctionDefinition",
            "src": "6837:137:332",
            "nodes": [],
            "body": {
              "id": 74721,
              "nodeType": "Block",
              "src": "6909:65:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74716,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6934:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74717,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74903
                          ],
                          "referencedDeclaration": 74903,
                          "src": "6954:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6954:12:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74715,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6926:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6926:41:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74714,
                  "id": 74720,
                  "nodeType": "Return",
                  "src": "6919:48:332"
                }
              ]
            },
            "baseFunctions": [
              22628
            ],
            "documentation": {
              "id": 74709,
              "nodeType": "StructuredDocumentation",
              "src": "6748:84:332",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "6846:22:332",
            "overrides": {
              "id": 74711,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6885:8:332"
            },
            "parameters": {
              "id": 74710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6868:2:332"
            },
            "returnParameters": {
              "id": 74714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74722,
                  "src": "6903:4:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74712,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6903:4:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6902:6:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74736,
            "nodeType": "FunctionDefinition",
            "src": "7074:142:332",
            "nodes": [],
            "body": {
              "id": 74735,
              "nodeType": "Block",
              "src": "7151:65:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74730,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "7176:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74731,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74903
                          ],
                          "referencedDeclaration": 74903,
                          "src": "7196:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7196:12:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74729,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "7168:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7168:41:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74728,
                  "id": 74734,
                  "nodeType": "Return",
                  "src": "7161:48:332"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 74723,
              "nodeType": "StructuredDocumentation",
              "src": "6980:89:332",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "7083:27:332",
            "overrides": {
              "id": 74725,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7127:8:332"
            },
            "parameters": {
              "id": 74724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7110:2:332"
            },
            "returnParameters": {
              "id": 74728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74736,
                  "src": "7145:4:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74726,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7145:4:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7144:6:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74750,
            "nodeType": "FunctionDefinition",
            "src": "7311:133:332",
            "nodes": [],
            "body": {
              "id": 74749,
              "nodeType": "Block",
              "src": "7379:65:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74744,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "7404:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74745,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74903
                          ],
                          "referencedDeclaration": 74903,
                          "src": "7424:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7424:12:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74743,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "7396:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7396:41:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74742,
                  "id": 74748,
                  "nodeType": "Return",
                  "src": "7389:48:332"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 74737,
              "nodeType": "StructuredDocumentation",
              "src": "7222:84:332",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7320:18:332",
            "overrides": {
              "id": 74739,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7355:8:332"
            },
            "parameters": {
              "id": 74738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7338:2:332"
            },
            "returnParameters": {
              "id": 74742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74750,
                  "src": "7373:4:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7373:4:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7372:6:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74764,
            "nodeType": "FunctionDefinition",
            "src": "7539:137:332",
            "nodes": [],
            "body": {
              "id": 74763,
              "nodeType": "Block",
              "src": "7611:65:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74758,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "7636:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74759,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74903
                          ],
                          "referencedDeclaration": 74903,
                          "src": "7656:10:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7656:12:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74757,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "7628:7:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7628:41:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74756,
                  "id": 74762,
                  "nodeType": "Return",
                  "src": "7621:48:332"
                }
              ]
            },
            "baseFunctions": [
              18898
            ],
            "documentation": {
              "id": 74751,
              "nodeType": "StructuredDocumentation",
              "src": "7450:84:332",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7548:22:332",
            "overrides": {
              "id": 74753,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7587:8:332"
            },
            "parameters": {
              "id": 74752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7570:2:332"
            },
            "returnParameters": {
              "id": 74756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74764,
                  "src": "7605:4:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74754,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7605:4:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:6:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74782,
            "nodeType": "FunctionDefinition",
            "src": "7860:160:332",
            "nodes": [],
            "body": {
              "id": 74781,
              "nodeType": "Block",
              "src": "7975:45:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74777,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74766,
                        "src": "7997:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74778,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74768,
                        "src": "8006:6:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74774,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7985:5:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$74917_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 74776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7991:5:332",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157464,
                      "src": "7985:11:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7985:28:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74780,
                  "nodeType": "ExpressionStatement",
                  "src": "7985:28:332"
                }
              ]
            },
            "baseFunctions": [
              156502,
              157464
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7869:5:332",
            "overrides": {
              "id": 74772,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74770,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "7934:16:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156690,
                  "src": "7934:16:332"
                },
                {
                  "id": 74771,
                  "name": "ERC20VotesUpgradeable",
                  "nameLocations": [
                    "7952:21:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157777,
                  "src": "7952:21:332"
                }
              ],
              "src": "7925:49:332"
            },
            "parameters": {
              "id": 74769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74766,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7883:7:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74782,
                  "src": "7875:15:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7875:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74768,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7900:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74782,
                  "src": "7892:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7892:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7874:33:332"
            },
            "returnParameters": {
              "id": 74773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7975:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74800,
            "nodeType": "FunctionDefinition",
            "src": "8026:160:332",
            "nodes": [],
            "body": {
              "id": 74799,
              "nodeType": "Block",
              "src": "8141:45:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74795,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74784,
                        "src": "8163:7:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74796,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74786,
                        "src": "8172:6:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74792,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8151:5:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$74917_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 74794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8157:5:332",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157487,
                      "src": "8151:11:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8151:28:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74798,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:28:332"
                }
              ]
            },
            "baseFunctions": [
              156574,
              157487
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8035:5:332",
            "overrides": {
              "id": 74790,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74788,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "8100:16:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156690,
                  "src": "8100:16:332"
                },
                {
                  "id": 74789,
                  "name": "ERC20VotesUpgradeable",
                  "nameLocations": [
                    "8118:21:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157777,
                  "src": "8118:21:332"
                }
              ],
              "src": "8091:49:332"
            },
            "parameters": {
              "id": 74787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74784,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8049:7:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74800,
                  "src": "8041:15:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8041:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74786,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8066:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74800,
                  "src": "8058:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8058:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8040:33:332"
            },
            "returnParameters": {
              "id": 74791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8141:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74821,
            "nodeType": "FunctionDefinition",
            "src": "8192:228:332",
            "nodes": [],
            "body": {
              "id": 74820,
              "nodeType": "Block",
              "src": "8360:60:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74815,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74802,
                        "src": "8396:4:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74816,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74804,
                        "src": "8402:2:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74817,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74806,
                        "src": "8406:6:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74812,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8370:5:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$74917_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 74814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8376:19:332",
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157517,
                      "src": "8370:25:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 74818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8370:43:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74819,
                  "nodeType": "ExpressionStatement",
                  "src": "8370:43:332"
                }
              ]
            },
            "baseFunctions": [
              156684,
              157517
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "8201:19:332",
            "overrides": {
              "id": 74810,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74808,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "8319:16:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156690,
                  "src": "8319:16:332"
                },
                {
                  "id": 74809,
                  "name": "ERC20VotesUpgradeable",
                  "nameLocations": [
                    "8337:21:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157777,
                  "src": "8337:21:332"
                }
              ],
              "src": "8310:49:332"
            },
            "parameters": {
              "id": 74807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74802,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8238:4:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74821,
                  "src": "8230:12:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8230:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74804,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8260:2:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74821,
                  "src": "8252:10:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8252:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74806,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8280:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74821,
                  "src": "8272:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8272:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8220:72:332"
            },
            "returnParameters": {
              "id": 74811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8360:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74879,
            "nodeType": "FunctionDefinition",
            "src": "8463:376:332",
            "nodes": [],
            "body": {
              "id": 74878,
              "nodeType": "Block",
              "src": "8571:268:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74836,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74824,
                        "src": "8608:4:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74837,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74826,
                        "src": "8614:2:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74838,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74828,
                        "src": "8618:6:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74833,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8581:5:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$74917_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 74835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8587:20:332",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 156673,
                      "src": "8581:26:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 74839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8581:44:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74840,
                  "nodeType": "ExpressionStatement",
                  "src": "8581:44:332"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 74862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 74855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8640:34:332",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 74842,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74392,
                              "src": "8649:12:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 74845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8671:1:332",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 74844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8663:7:332",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 74843,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8663:7:332",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 74846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8663:10:332",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74841,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21818,
                            "src": "8641:7:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 74847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8641:33:332",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74849,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74824,
                          "src": "8678:4:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 74852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8694:1:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 74851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8686:7:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 74850,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8686:7:332",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8686:10:332",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8678:18:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8640:56:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 74861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74826,
                        "src": "8700:2:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8714:1:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8706:7:332",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74857,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8706:7:332",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8706:10:332",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8700:16:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8640:76:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74877,
                  "nodeType": "IfStatement",
                  "src": "8636:197:332",
                  "trueBody": {
                    "id": 74876,
                    "nodeType": "Block",
                    "src": "8718:115:332",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 74872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 74865,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74392,
                                    "src": "8748:12:332",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 74866,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74824,
                                    "src": "8762:4:332",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74864,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21818,
                                  "src": "8740:7:332",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 74867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8740:27:332",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 74869,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74392,
                                    "src": "8779:12:332",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 74870,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74826,
                                    "src": "8793:2:332",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74868,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21818,
                                  "src": "8771:7:332",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 74871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8771:25:332",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8740:56:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e736665727320726573747269637465642e",
                              "id": 74873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8798:23:332",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              },
                              "value": "transfers restricted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              }
                            ],
                            "id": 74863,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8732:7:332",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8732:90:332",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74875,
                        "nodeType": "ExpressionStatement",
                        "src": "8732:90:332"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              156673
            ],
            "documentation": {
              "id": 74822,
              "nodeType": "StructuredDocumentation",
              "src": "8426:32:332",
              "text": "@dev Runs on every transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8472:20:332",
            "overrides": {
              "id": 74831,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74830,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "8553:16:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156690,
                  "src": "8553:16:332"
                }
              ],
              "src": "8544:26:332"
            },
            "parameters": {
              "id": 74829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74824,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8501:4:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74879,
                  "src": "8493:12:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8493:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74826,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8515:2:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74879,
                  "src": "8507:10:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8507:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74828,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8527:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74879,
                  "src": "8519:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8519:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8492:42:332"
            },
            "returnParameters": {
              "id": 74832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8571:0:332"
            },
            "scope": 74917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74889,
            "nodeType": "FunctionDefinition",
            "src": "8845:111:332",
            "nodes": [],
            "body": {
              "id": 74888,
              "nodeType": "Block",
              "src": "8920:36:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74885,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        74903
                      ],
                      "referencedDeclaration": 74903,
                      "src": "8937:10:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 74886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8937:12:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74884,
                  "id": 74887,
                  "nodeType": "Return",
                  "src": "8930:19:332"
                }
              ]
            },
            "baseFunctions": [
              18834
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "8854:14:332",
            "overrides": {
              "id": 74881,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8893:8:332"
            },
            "parameters": {
              "id": 74880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8868:2:332"
            },
            "returnParameters": {
              "id": 74884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74883,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74889,
                  "src": "8911:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8911:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8910:9:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74903,
            "nodeType": "FunctionDefinition",
            "src": "8962:242:332",
            "nodes": [],
            "body": {
              "id": 74902,
              "nodeType": "Block",
              "src": "9142:62:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74898,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "9159:25:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 74899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9185:10:332",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "9159:36:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 74900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9159:38:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74897,
                  "id": 74901,
                  "nodeType": "Return",
                  "src": "9152:45:332"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370,
              161677
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "8971:10:332",
            "overrides": {
              "id": 74894,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74891,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "9047:18:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "9047:18:332"
                },
                {
                  "id": 74892,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "9067:25:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "9067:25:332"
                },
                {
                  "id": 74893,
                  "name": "Multicall",
                  "nameLocations": [
                    "9094:9:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "9094:9:332"
                }
              ],
              "src": "9038:66:332"
            },
            "parameters": {
              "id": 74890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8981:2:332"
            },
            "returnParameters": {
              "id": 74897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74896,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9130:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 74903,
                  "src": "9122:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9122:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9121:16:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74916,
            "nodeType": "FunctionDefinition",
            "src": "9210:227:332",
            "nodes": [],
            "body": {
              "id": 74915,
              "nodeType": "Block",
              "src": "9377:60:332",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74911,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "9394:25:332",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 74912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9420:8:332",
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46397,
                      "src": "9394:34:332",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 74913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9394:36:332",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 74910,
                  "id": 74914,
                  "nodeType": "Return",
                  "src": "9387:43:332"
                }
              ]
            },
            "baseFunctions": [
              46397,
              161686
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9219:8:332",
            "overrides": {
              "id": 74907,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74905,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "9293:18:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "9293:18:332"
                },
                {
                  "id": 74906,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "9313:25:332"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "9313:25:332"
                }
              ],
              "src": "9284:55:332"
            },
            "parameters": {
              "id": 74904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9227:2:332"
            },
            "returnParameters": {
              "id": 74910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74909,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74916,
                  "src": "9357:14:332",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74908,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9357:5:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9356:16:332"
            },
            "scope": 74917,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74367,
              "name": "Initializable",
              "nameLocations": [
                "1542:13:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1542:13:332"
            },
            "id": 74368,
            "nodeType": "InheritanceSpecifier",
            "src": "1542:13:332"
          },
          {
            "baseName": {
              "id": 74369,
              "name": "ContractMetadata",
              "nameLocations": [
                "1561:16:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1561:16:332"
            },
            "id": 74370,
            "nodeType": "InheritanceSpecifier",
            "src": "1561:16:332"
          },
          {
            "baseName": {
              "id": 74371,
              "name": "PlatformFee",
              "nameLocations": [
                "1583:11:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22629,
              "src": "1583:11:332"
            },
            "id": 74372,
            "nodeType": "InheritanceSpecifier",
            "src": "1583:11:332"
          },
          {
            "baseName": {
              "id": 74373,
              "name": "PrimarySale",
              "nameLocations": [
                "1600:11:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "1600:11:332"
            },
            "id": 74374,
            "nodeType": "InheritanceSpecifier",
            "src": "1600:11:332"
          },
          {
            "baseName": {
              "id": 74375,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1617:21:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1617:21:332"
            },
            "id": 74376,
            "nodeType": "InheritanceSpecifier",
            "src": "1617:21:332"
          },
          {
            "baseName": {
              "id": 74377,
              "name": "Drop",
              "nameLocations": [
                "1644:4:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18899,
              "src": "1644:4:332"
            },
            "id": 74378,
            "nodeType": "InheritanceSpecifier",
            "src": "1644:4:332"
          },
          {
            "baseName": {
              "id": 74379,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1654:25:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1654:25:332"
            },
            "id": 74380,
            "nodeType": "InheritanceSpecifier",
            "src": "1654:25:332"
          },
          {
            "baseName": {
              "id": 74381,
              "name": "Multicall",
              "nameLocations": [
                "1685:9:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1685:9:332"
            },
            "id": 74382,
            "nodeType": "InheritanceSpecifier",
            "src": "1685:9:332"
          },
          {
            "baseName": {
              "id": 74383,
              "name": "ERC20BurnableUpgradeable",
              "nameLocations": [
                "1700:24:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156832,
              "src": "1700:24:332"
            },
            "id": 74384,
            "nodeType": "InheritanceSpecifier",
            "src": "1700:24:332"
          },
          {
            "baseName": {
              "id": 74385,
              "name": "ERC20VotesUpgradeable",
              "nameLocations": [
                "1730:21:332"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157777,
              "src": "1730:21:332"
            },
            "id": 74386,
            "nodeType": "InheritanceSpecifier",
            "src": "1730:21:332"
          }
        ],
        "canonicalName": "DropERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "157742": 1,
          "157756": 2
        },
        "linearizedBaseContracts": [
          74917,
          157777,
          153975,
          153913,
          153990,
          157023,
          162645,
          153966,
          157838,
          156832,
          156690,
          157802,
          156768,
          21206,
          33577,
          46402,
          161692,
          18899,
          33221,
          32955,
          32931,
          22411,
          22111,
          33932,
          33907,
          22703,
          33997,
          22629,
          33976,
          18093,
          154159,
          33084
        ],
        "name": "DropERC20",
        "nameLocation": "1525:9:332",
        "scope": 74918,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33184,
          33193,
          33846,
          33855,
          33864,
          33962,
          33969,
          33975,
          33996,
          74404,
          153847,
          153856,
          153946,
          154005,
          156702,
          156711
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 332
}