{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        },
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioDenominator",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDenominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setRewardRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b506040516200330b3803806200330b8339810160408190526200003591620004dc565b8083846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009c91906200056c565b60ff16846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010491906200056c565b600160025560ff166001600160a01b038316158015906200012d57506001600160a01b03841615155b6200016b5760405162461bcd60e51b815260206004820152600960248201526806164647265737320360bc1b60448201526064015b60405180910390fd5b61ffff82161580159062000182575061ffff811615155b620001bd5760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b604482015260640162000162565b6001600160a01b039384166080529190921660a05261ffff91821660c0521660e052620001ea866200029d565b620001f7878686620002ef565b826001600160a01b0316826001600160a01b031603620002705760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b606482015260840162000162565b50600880546001600160a01b0319166001600160a01b039290921691909117905550620005f49350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b806000036200032f5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640162000162565b826001600160501b03166000036200038a5760405162461bcd60e51b815260206004820152601460248201527f74696d652d756e69742063616e27742062652030000000000000000000000000604482015260640162000162565b600380546001600160401b0316906001906000620003a98385620005ae565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b03199286166a0100000000000000000000026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015620004b957426007600062000483600185620005d8565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b80516001600160a01b0381168114620004d757600080fd5b919050565b600080600080600080600060e0888a031215620004f857600080fd5b87516001600160501b03811681146200051057600080fd5b96506200052060208901620004bf565b955060408801519450606088015193506200053e60808901620004bf565b92506200054e60a08901620004bf565b91506200055e60c08901620004bf565b905092959891949750929550565b6000602082840312156200057f57600080fd5b815160ff811681146200059157600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03818116838216019080821115620005d157620005d162000598565b5092915050565b81810381811115620005ee57620005ee62000598565b92915050565b60805160a05160c05160e051612c6d6200069e600039600081816103c10152611f4a0152600081816104680152611f7e01526000818161026c015281816112a5015281816115780152818161160b0152818161177f015281816119f40152611a3801526000818161012301528181610ef801528181610fa1015281816112c9015281816115a8015281816117a3015281816119cc01528181611a5e01526120300152612c6d6000f3fe6080604052600436106101135760003560e01c80621b79341461019c57806313af4035146101bc57806316c621e0146101dc5780632e1a7d4d146101ef578063372500ab1461020f5780635357e9161461022457806372f702f31461025a5780638caaa2711461028e5780638da5cb5b146102b25780639168ae72146102c7578063938e3d7b1461035057806393ce53431461037057806397e1b4bc146103855780639bdcecd1146103af578063a694fc3a146103f6578063ac9650d814610409578063b218f06914610436578063b9f7a7b514610456578063c34531531461048a578063cb43b2dd146104aa578063d68124c7146104ca578063e8a3d485146104df578063f7c618c11461050157600080fd5b3661019757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101955760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101a857600080fd5b506101956101b73660046124f1565b610521565b3480156101c857600080fd5b506101956101d7366004612513565b61068b565b6101956101ea36600461253c565b6106bb565b3480156101fb57600080fd5b5061019561020a36600461253c565b6106f1565b34801561021b57600080fd5b5061019561071f565b34801561023057600080fd5b5061024461023f36600461253c565b610753565b6040516102519190612555565b60405180910390f35b34801561026657600080fd5b506102447f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506102a460045481565b604051908152602001610251565b3480156102be57600080fd5b5061024461077d565b3480156102d357600080fd5b5061031e6102e2366004612513565b6006602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b039093166020850152918301526060820152608001610251565b34801561035c57600080fd5b5061019561036b36600461257f565b61078c565b34801561037c57600080fd5b506009546102a4565b34801561039157600080fd5b5061039a6107b9565b60408051928352602083019190915201610251565b3480156103bb57600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610251565b61019561040436600461253c565b61083f565b34801561041557600080fd5b5061042961042436600461262f565b61086d565b60405161025191906126f3565b34801561044257600080fd5b50610195610451366004612757565b6109d3565b34801561046257600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b34801561049657600080fd5b5061039a6104a5366004612513565b610b27565b3480156104b657600080fd5b506101956104c536600461253c565b610b54565b3480156104d657600080fd5b506102a4610b82565b3480156104eb57600080fd5b506104f4610bca565b6040516102519190612780565b34801561050d57600080fd5b50600854610244906001600160a01b031681565b610529610c58565b6105455760405162461bcd60e51b815260040161018c90612793565b6003546000906007908290610565906001906001600160401b03166127d1565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806105e5575080608001518214155b61062b5760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b604482015260640161018c565b8051610638908484610c7b565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b610693610c58565b6106af5760405162461bcd60e51b815260040161018c90612793565b6106b881610e32565b50565b60028054036106dc5760405162461bcd60e51b815260040161018c906127f8565b600280556106e981610e84565b506001600255565b60028054036107125760405162461bcd60e51b815260040161018c906127f8565b600280556106e98161105e565b60028054036107405760405162461bcd60e51b815260040161018c906127f8565b6002805561074c611326565b6001600255565b6005818154811061076357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031690565b610794610c58565b6107b05760405162461bcd60e51b815260040161018c90612793565b6106b88161144c565b600354600090819060079082906107db906001906001600160401b03166127d1565b6001600160401b03168152602001908152602001600020600101549150600760006001600360009054906101000a90046001600160401b031661081e91906127d1565b6001600160401b031681526020019081526020016000206002015490509091565b60028054036108605760405162461bcd60e51b815260040161018c906127f8565b600280556106e98161151b565b6060816001600160401b0381111561088757610887612569565b6040519080825280602002602001820160405280156108ba57816020015b60608152602001906001900390816108a55790505b509050336000805b848110156109c95781156109415761091f308787848181106108e6576108e661282f565b90506020028101906108f89190612845565b8660405160200161090b9392919061288b565b6040516020818303038152906040526118c1565b8482815181106109315761093161282f565b60200260200101819052506109c1565b6109a3308787848181106109575761095761282f565b90506020028101906109699190612845565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118c192505050565b8482815181106109b5576109b561282f565b60200260200101819052505b6001016108c2565b5050505b92915050565b6109db610c58565b6109f75760405162461bcd60e51b815260040161018c90612793565b6003546000906007908290610a17906001906001600160401b03166127d1565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b9091048116938201939093526001820154606082015260029091015460808201529250831603610ac95760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161018c565b610adc8282606001518360800151610c7b565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b03811660009081526006602052604081206001015490610b4d836118ed565b9050915091565b6002805403610b755760405162461bcd60e51b815260040161018c906127f8565b600280556106e98161195d565b6003546000906007908290610ba2906001906001600160401b03166127d1565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b60008054610bd7906128ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610c03906128ac565b8015610c505780601f10610c2557610100808354040283529160200191610c50565b820191906000526020600020905b815481529060010190602001808311610c3357829003601f168201915b505050505081565b6000610c6261077d565b6001600160a01b0316336001600160a01b031614905090565b80600003610cb95760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640161018c565b826001600160501b0316600003610d095760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161018c565b600380546001600160401b0316906001906000610d2683856128e6565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015610e2c574260076000610df6600185612906565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610e8c61077d565b6001600160a01b0316336001600160a01b031614610ebc5760405162461bcd60e51b815260040161018c90612793565b6008546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610ef6576008546001600160a01b0316610f18565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f489190612555565b602060405180830381865afa158015610f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f899190612919565b600854909150610fc5906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000611b42565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ff49190612555565b602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110359190612919565b61103f9190612906565b905080600960008282546110539190612932565b909155505050505050565b33600090815260066020526040812060010154908290036110b85760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161018c565b818110156111075760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161018c565b61111033611cb3565b81810361125f576000600580548060200260200160405190810160405280929190818152602001828054801561116f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611151575b5050505050905060005b815181101561125c57336001600160a01b031682828151811061119e5761119e61282f565b60200260200101516001600160a01b0316036112545781600183516111c39190612906565b815181106111d3576111d361282f565b6020026020010151600582815481106111ee576111ee61282f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600580548061122d5761122d612945565b600082815260209020810160001990810180546001600160a01b031916905501905561125c565b600101611179565b50505b3360009081526006602052604081206001018054849290611281908490612906565b92505081905550816004600082825461129a9190612906565b909155506112ed90507f00000000000000000000000000000000000000000000000000000000000000003033857f0000000000000000000000000000000000000000000000000000000000000000611b42565b60405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b600061133133611d82565b3360009081526006602052604090206002015461134e9190612932565b90508060000361138d5760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161018c565b33600090815260066020526040812080546001600160801b031916426001600160501b0316178155600201556003546113d1906001906001600160401b03166127d1565b33600081815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b0319909316929092179091556114149082611fb7565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b600080805461145a906128ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611486906128ac565b80156114d35780601f106114a8576101008083540402835291602001916114d3565b820191906000526020600020905b8154815290600101906020018083116114b657829003601f168201915b5050505050905081600090816114e991906129ab565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610b1b929190612a6a565b8060000361155e5760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161018c565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016115cc57507f000000000000000000000000000000000000000000000000000000000000000061162b565b34156116085760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b604482015260640161018c565b507f00000000000000000000000000000000000000000000000000000000000000005b33600090815260066020526040902060010154156116515761164c33611cb3565b611708565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155600090815260066020526040902080546001600160801b0319166001600160501b0342161790556003546116cf91906001600160401b03166127d1565b33600090815260066020526040902080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611737903090600401612555565b602060405180830381865afa158015611754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117789190612919565b90506117c77f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611b42565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016117f69190612555565b602060405180830381865afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118379190612919565b6118419190612906565b33600090815260066020526040812060010180549293508392909190611868908490612932565b9250508190555080600460008282546118819190612932565b909155505060405181815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a250505050565b60606118e68383604051806060016040528060278152602001612c1160279139612054565b9392505050565b6001600160a01b038116600090815260066020526040812060010154810361192e57506001600160a01b031660009081526006602052604090206002015490565b61193782611d82565b6001600160a01b0383166000908152600660205260409020600201546109cd9190612932565b61196561077d565b6001600160a01b0316336001600160a01b0316146119955760405162461bcd60e51b815260040161018c90612793565b60095481116119b157806009546119ac9190612906565b6119b4565b60005b6009556008546119f0906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000611b42565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14611a5c577f0000000000000000000000000000000000000000000000000000000000000000611a7e565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600454816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611aaf9190612555565b602060405180830381865afa158015611acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af09190612919565b1015611b3e5760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e0000604482015260640161018c565b5050565b8115611cac5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611ca057306001600160a01b03851603611be757604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611bbf57600080fd5b505af1158015611bd3573d6000803e3d6000fd5b50505050611be28383836120cc565b611cac565b306001600160a01b03841603611c9557348214611c3c5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161018c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c7757600080fd5b505af1158015611c8b573d6000803e3d6000fd5b5050505050611cac565b611be28383836120cc565b611cac85858585612191565b5050505050565b6000611cbe82611d82565b6001600160a01b038316600090815260066020526040812060020180549293508392909190611cee908490612932565b90915550506001600160a01b038216600090815260066020526040902080546001600160801b0319166001600160501b034216179055600354611d3c906001906001600160401b03166127d1565b6001600160a01b03909216600090815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b6001600160a01b0381166000908152600660209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260035490929116815b81811015611f40576000818152600760209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083015260020154608082015290848303611e5e578551611e6d565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b0316600003611e955742611ea4565b82604001516001600160501b03165b9050600080611ed189604001518585611ebd9190612906565b611ec79190612a8f565b86606001516121e9565b91509150600080611f098c886080015189600001516001600160501b031686611efa9190612abc565b611f049190612abc565b612234565b91509150838015611f175750815b611f21578b611f23565b805b9b5050505050505050600181611f399190612932565b9050611deb565b50611f7584611f707f0000000000000000000000000000000000000000000000000000000000000000600a612bc2565b6121e9565b9450611fa490507f0000000000000000000000000000000000000000000000000000000000000000600a612bc2565b611fae9085612abc565b95945050505050565b6009548111156120045760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161018c565b80600960008282546120169190612906565b9091555050600854611b3e906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611b42565b6060600080856001600160a01b0316856040516120719190612bd2565b600060405180830381855af49150503d80600081146120ac576040519150601f19603f3d011682016040523d82523d6000602084013e6120b1565b606091505b50915091506120c28683838761224f565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612119576040519150601f19603f3d011682016040523d82523d6000602084013e61211e565b606091505b5050905080610e2c57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561216257600080fd5b505af1158015612176573d6000803e3d6000fd5b50610e2c935050506001600160a01b038416905085856122d0565b816001600160a01b0316836001600160a01b03160315610e2c57306001600160a01b038416036121d4576121cf6001600160a01b03851683836122d0565b610e2c565b610e2c6001600160a01b038516848484612338565b60008083600003612200575060019050600061222d565b8383028385828161221357612213612aa6565b041461222657600080925092505061222d565b6001925090505b9250929050565b6000808383018481101561222657600080925092505061222d565b606083156122be5782516000036122b7576001600160a01b0385163b6122b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b50816122c8565b6122c88383612370565b949350505050565b6040516001600160a01b03831660248201526044810182905261233390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261239a565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e2c9085906323b872dd60e01b906084016122fc565b8151156123805781518083602001fd5b8060405162461bcd60e51b815260040161018c9190612780565b60006123ef826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661246c9092919063ffffffff16565b805190915015612333578080602001905181019061240d9190612bee565b6123335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018c565b60606122c8848460008585600080866001600160a01b031685876040516124939190612bd2565b60006040518083038185875af1925050503d80600081146124d0576040519150601f19603f3d011682016040523d82523d6000602084013e6124d5565b606091505b50915091506124e68783838761224f565b979650505050505050565b6000806040838503121561250457600080fd5b50508035926020909101359150565b60006020828403121561252557600080fd5b81356001600160a01b03811681146118e657600080fd5b60006020828403121561254e57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561259157600080fd5b81356001600160401b03808211156125a857600080fd5b818401915084601f8301126125bc57600080fd5b8135818111156125ce576125ce612569565b604051601f8201601f19908116603f011681019083821181831017156125f6576125f6612569565b8160405282815287602084870101111561260f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561264257600080fd5b82356001600160401b038082111561265957600080fd5b818501915085601f83011261266d57600080fd5b81358181111561267c57600080fd5b8660208260051b850101111561269157600080fd5b60209290920196919550909350505050565b60005b838110156126be5781810151838201526020016126a6565b50506000910152565b600081518084526126df8160208601602086016126a3565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561274a57603f198886030184526127388583516126c7565b9450928501929085019060010161271c565b5092979650505050505050565b60006020828403121561276957600080fd5b81356001600160501b03811681146118e657600080fd5b6020815260006118e660208301846126c7565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038281168282160390808211156127f1576127f16127bb565b5092915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261285c57600080fd5b8301803591506001600160401b0382111561287657600080fd5b60200191503681900382131561222d57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b600181811c908216806128c057607f821691505b6020821081036128e057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160401b038181168382160190808211156127f1576127f16127bb565b818103818111156109cd576109cd6127bb565b60006020828403121561292b57600080fd5b5051919050565b808201808211156109cd576109cd6127bb565b634e487b7160e01b600052603160045260246000fd5b601f821115612333576000816000526020600020601f850160051c810160208610156129845750805b601f850160051c820191505b818110156129a357828155600101612990565b505050505050565b81516001600160401b038111156129c4576129c4612569565b6129d8816129d284546128ac565b8461295b565b602080601f831160018114612a0d57600084156129f55750858301515b600019600386901b1c1916600185901b1785556129a3565b600085815260208120601f198616915b82811015612a3c57888601518255948401946001909101908401612a1d565b5085821015612a5a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612a7d60408301856126c7565b8281036020840152611fae81856126c7565b80820281158282048414176109cd576109cd6127bb565b634e487b7160e01b600052601260045260246000fd5b600082612ad957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612b19578160001904821115612aff57612aff6127bb565b80851615612b0c57918102915b93841c9390800290612ae3565b509250929050565b600082612b30575060016109cd565b81612b3d575060006109cd565b8160018114612b535760028114612b5d57612b79565b60019150506109cd565b60ff841115612b6e57612b6e6127bb565b50506001821b6109cd565b5060208310610133831016604e8410600b8410161715612b9c575081810a6109cd565b612ba68383612ade565b8060001904821115612bba57612bba6127bb565b029392505050565b60006118e661ffff841683612b21565b60008251612be48184602087016126a3565b9190910192915050565b600060208284031215612c0057600080fd5b815180151581146118e657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a98dcc227e942cc3f1b67e0865d6c749fe81e47c3e56bba5b1441f82c8b5f6fc64736f6c63430008170033",
    "sourceMap": "1627:5184:18:-:0;;;1908:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2192:19;2225:13;2267;-1:-1:-1;;;;;2252:38:18;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:565:90;;2321:12:18;-1:-1:-1;;;;;2306:37:18;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:220;307:7;:22;1667:565:90;;-1:-1:-1;;;;;1864:27:90;::::1;::::0;;::::1;::::0;:64:::1;;-1:-1:-1::0;;;;;;1895:33:90;::::1;::::0;::::1;1864:64;1856:86;;;::::0;-1:-1:-1;;;1856:86:90;;1435:2:821;1856:86:90::1;::::0;::::1;1417:21:821::0;1474:1;1454:18;;;1447:29;-1:-1:-1;;;1492:18:821;;;1485:39;1541:18;;1856:86:90::1;;;;;;;;;1960:26;::::0;::::1;::::0;;::::1;::::0;:55:::1;;-1:-1:-1::0;1990:25:90::1;::::0;::::1;::::0;::::1;1960:55;1952:78;;;::::0;-1:-1:-1;;;1952:78:90;;1772:2:821;1952:78:90::1;::::0;::::1;1754:21:821::0;1811:2;1791:18;;;1784:30;-1:-1:-1;;;1830:18:821;;;1823:40;1880:18;;1952:78:90::1;1570:334:821::0;1952:78:90::1;-1:-1:-1::0;;;;;2041:40:90;;::::1;;::::0;2091:28;;;::::1;;::::0;2129:44:::1;::::0;;::::1;;::::0;2183:42:::1;;::::0;2370:26:18::1;2382:13:::0;2370:11:::1;:26::i;:::-;2406:79;2427:9:::0;2438:21;2461:23;2406:20:::1;:79::i;:::-;2520:13;-1:-1:-1::0;;;;;2504:29:18::1;:12;-1:-1:-1::0;;;;;2504:29:18::1;::::0;2496:87:::1;;;::::0;-1:-1:-1;;;2496:87:18;;2111:2:821;2496:87:18::1;::::0;::::1;2093:21:821::0;2150:2;2130:18;;;2123:30;2189:34;2169:18;;;2162:62;-1:-1:-1;;;2240:18:821;;;2233:43;2293:19;;2496:87:18::1;1909:409:821::0;2496:87:18::1;-1:-1:-1::0;2593:11:18::1;:26:::0;;-1:-1:-1;;;;;;2593:26:18::1;-1:-1:-1::0;;;;;2593:26:18;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1627:5184:18;;-1:-1:-1;;;;1627:5184:18;1421:172:70;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10312:711:90:-;10437:12;10453:1;10437:17;10429:41;;;;-1:-1:-1;;;10429:41:90;;2525:2:821;10429:41:90;;;2507:21:821;2564:2;2544:18;;;2537:30;-1:-1:-1;;;2583:18:821;;;2576:41;2634:18;;10429:41:90;2323:335:821;10429:41:90;10488:9;-1:-1:-1;;;;;10488:14:90;10501:1;10488:14;10480:47;;;;-1:-1:-1;;;10480:47:90;;2865:2:821;10480:47:90;;;2847:21:821;2904:2;2884:18;;;2877:30;2943:22;2923:18;;;2916:50;2983:18;;10480:47:90;2663:344:821;10480:47:90;10559:15;;;-1:-1:-1;;;;;10559:15:90;;;;10537:19;10584:20;10559:15;;10584:20;:::i;:::-;;;-1:-1:-1;;;;;10584:20:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10648:239:90;;;;;;;;-1:-1:-1;;;;;10648:239:90;;;;;10831:15;10648:239;;;;;;;;;-1:-1:-1;10648:239:90;;;;;;;;;;;;;;;;;;10615:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10615:272:90;-1:-1:-1;;;;;;;;10615:272:90;;;;;-1:-1:-1;;;;;;10615:272:90;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10615:272:90;;;;;;;;;;10902:15;;10898:119;;10990:15;10933:17;:34;10951:15;10965:1;10951:11;:15;:::i;:::-;10933:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;10933:73:90;;;;;-1:-1:-1;;;;;10933:73:90;;;;;;10898:119;10419:604;10312:711;;;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:754::-;319:6;327;335;343;351;359;367;420:3;408:9;399:7;395:23;391:33;388:53;;;437:1;434;427:12;388:53;463:16;;-1:-1:-1;;;;;508:30:821;;498:41;;488:69;;553:1;550;543:12;488:69;576:5;-1:-1:-1;600:49:821;645:2;630:18;;600:49;:::i;:::-;590:59;;689:2;678:9;674:18;668:25;658:35;;733:2;722:9;718:18;712:25;702:35;;756:50;801:3;790:9;786:19;756:50;:::i;:::-;746:60;;825:50;870:3;859:9;855:19;825:50;:::i;:::-;815:60;;894:50;939:3;928:9;924:19;894:50;:::i;:::-;884:60;;196:754;;;;;;;;;;:::o;955:273::-;1023:6;1076:2;1064:9;1055:7;1051:23;1047:32;1044:52;;;1092:1;1089;1082:12;1044:52;1124:9;1118:16;1174:4;1167:5;1163:16;1156:5;1153:27;1143:55;;1194:1;1191;1184:12;1143:55;1217:5;955:273;-1:-1:-1;;;955:273:821:o;3012:127::-;3073:10;3068:3;3064:20;3061:1;3054:31;3104:4;3101:1;3094:15;3128:4;3125:1;3118:15;3144:180;-1:-1:-1;;;;;3249:10:821;;;3261;;;3245:27;;3284:11;;;3281:37;;;3298:18;;:::i;:::-;3281:37;3144:180;;;;:::o;3329:128::-;3396:9;;;3417:11;;;3414:37;;;3431:18;;:::i;:::-;3329:128;;;;:::o;:::-;1627:5184:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101135760003560e01c80621b79341461019c57806313af4035146101bc57806316c621e0146101dc5780632e1a7d4d146101ef578063372500ab1461020f5780635357e9161461022457806372f702f31461025a5780638caaa2711461028e5780638da5cb5b146102b25780639168ae72146102c7578063938e3d7b1461035057806393ce53431461037057806397e1b4bc146103855780639bdcecd1146103af578063a694fc3a146103f6578063ac9650d814610409578063b218f06914610436578063b9f7a7b514610456578063c34531531461048a578063cb43b2dd146104aa578063d68124c7146104ca578063e8a3d485146104df578063f7c618c11461050157600080fd5b3661019757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101955760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101a857600080fd5b506101956101b73660046124f1565b610521565b3480156101c857600080fd5b506101956101d7366004612513565b61068b565b6101956101ea36600461253c565b6106bb565b3480156101fb57600080fd5b5061019561020a36600461253c565b6106f1565b34801561021b57600080fd5b5061019561071f565b34801561023057600080fd5b5061024461023f36600461253c565b610753565b6040516102519190612555565b60405180910390f35b34801561026657600080fd5b506102447f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506102a460045481565b604051908152602001610251565b3480156102be57600080fd5b5061024461077d565b3480156102d357600080fd5b5061031e6102e2366004612513565b6006602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b039093166020850152918301526060820152608001610251565b34801561035c57600080fd5b5061019561036b36600461257f565b61078c565b34801561037c57600080fd5b506009546102a4565b34801561039157600080fd5b5061039a6107b9565b60408051928352602083019190915201610251565b3480156103bb57600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610251565b61019561040436600461253c565b61083f565b34801561041557600080fd5b5061042961042436600461262f565b61086d565b60405161025191906126f3565b34801561044257600080fd5b50610195610451366004612757565b6109d3565b34801561046257600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b34801561049657600080fd5b5061039a6104a5366004612513565b610b27565b3480156104b657600080fd5b506101956104c536600461253c565b610b54565b3480156104d657600080fd5b506102a4610b82565b3480156104eb57600080fd5b506104f4610bca565b6040516102519190612780565b34801561050d57600080fd5b50600854610244906001600160a01b031681565b610529610c58565b6105455760405162461bcd60e51b815260040161018c90612793565b6003546000906007908290610565906001906001600160401b03166127d1565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806105e5575080608001518214155b61062b5760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b604482015260640161018c565b8051610638908484610c7b565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b610693610c58565b6106af5760405162461bcd60e51b815260040161018c90612793565b6106b881610e32565b50565b60028054036106dc5760405162461bcd60e51b815260040161018c906127f8565b600280556106e981610e84565b506001600255565b60028054036107125760405162461bcd60e51b815260040161018c906127f8565b600280556106e98161105e565b60028054036107405760405162461bcd60e51b815260040161018c906127f8565b6002805561074c611326565b6001600255565b6005818154811061076357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031690565b610794610c58565b6107b05760405162461bcd60e51b815260040161018c90612793565b6106b88161144c565b600354600090819060079082906107db906001906001600160401b03166127d1565b6001600160401b03168152602001908152602001600020600101549150600760006001600360009054906101000a90046001600160401b031661081e91906127d1565b6001600160401b031681526020019081526020016000206002015490509091565b60028054036108605760405162461bcd60e51b815260040161018c906127f8565b600280556106e98161151b565b6060816001600160401b0381111561088757610887612569565b6040519080825280602002602001820160405280156108ba57816020015b60608152602001906001900390816108a55790505b509050336000805b848110156109c95781156109415761091f308787848181106108e6576108e661282f565b90506020028101906108f89190612845565b8660405160200161090b9392919061288b565b6040516020818303038152906040526118c1565b8482815181106109315761093161282f565b60200260200101819052506109c1565b6109a3308787848181106109575761095761282f565b90506020028101906109699190612845565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118c192505050565b8482815181106109b5576109b561282f565b60200260200101819052505b6001016108c2565b5050505b92915050565b6109db610c58565b6109f75760405162461bcd60e51b815260040161018c90612793565b6003546000906007908290610a17906001906001600160401b03166127d1565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b9091048116938201939093526001820154606082015260029091015460808201529250831603610ac95760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161018c565b610adc8282606001518360800151610c7b565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b03811660009081526006602052604081206001015490610b4d836118ed565b9050915091565b6002805403610b755760405162461bcd60e51b815260040161018c906127f8565b600280556106e98161195d565b6003546000906007908290610ba2906001906001600160401b03166127d1565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b60008054610bd7906128ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610c03906128ac565b8015610c505780601f10610c2557610100808354040283529160200191610c50565b820191906000526020600020905b815481529060010190602001808311610c3357829003601f168201915b505050505081565b6000610c6261077d565b6001600160a01b0316336001600160a01b031614905090565b80600003610cb95760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640161018c565b826001600160501b0316600003610d095760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161018c565b600380546001600160401b0316906001906000610d2683856128e6565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015610e2c574260076000610df6600185612906565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610e8c61077d565b6001600160a01b0316336001600160a01b031614610ebc5760405162461bcd60e51b815260040161018c90612793565b6008546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610ef6576008546001600160a01b0316610f18565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f489190612555565b602060405180830381865afa158015610f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f899190612919565b600854909150610fc5906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000611b42565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ff49190612555565b602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110359190612919565b61103f9190612906565b905080600960008282546110539190612932565b909155505050505050565b33600090815260066020526040812060010154908290036110b85760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161018c565b818110156111075760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161018c565b61111033611cb3565b81810361125f576000600580548060200260200160405190810160405280929190818152602001828054801561116f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611151575b5050505050905060005b815181101561125c57336001600160a01b031682828151811061119e5761119e61282f565b60200260200101516001600160a01b0316036112545781600183516111c39190612906565b815181106111d3576111d361282f565b6020026020010151600582815481106111ee576111ee61282f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600580548061122d5761122d612945565b600082815260209020810160001990810180546001600160a01b031916905501905561125c565b600101611179565b50505b3360009081526006602052604081206001018054849290611281908490612906565b92505081905550816004600082825461129a9190612906565b909155506112ed90507f00000000000000000000000000000000000000000000000000000000000000003033857f0000000000000000000000000000000000000000000000000000000000000000611b42565b60405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b600061133133611d82565b3360009081526006602052604090206002015461134e9190612932565b90508060000361138d5760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161018c565b33600090815260066020526040812080546001600160801b031916426001600160501b0316178155600201556003546113d1906001906001600160401b03166127d1565b33600081815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b0319909316929092179091556114149082611fb7565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b600080805461145a906128ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611486906128ac565b80156114d35780601f106114a8576101008083540402835291602001916114d3565b820191906000526020600020905b8154815290600101906020018083116114b657829003601f168201915b5050505050905081600090816114e991906129ab565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610b1b929190612a6a565b8060000361155e5760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161018c565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016115cc57507f000000000000000000000000000000000000000000000000000000000000000061162b565b34156116085760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b604482015260640161018c565b507f00000000000000000000000000000000000000000000000000000000000000005b33600090815260066020526040902060010154156116515761164c33611cb3565b611708565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155600090815260066020526040902080546001600160801b0319166001600160501b0342161790556003546116cf91906001600160401b03166127d1565b33600090815260066020526040902080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611737903090600401612555565b602060405180830381865afa158015611754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117789190612919565b90506117c77f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611b42565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016117f69190612555565b602060405180830381865afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118379190612919565b6118419190612906565b33600090815260066020526040812060010180549293508392909190611868908490612932565b9250508190555080600460008282546118819190612932565b909155505060405181815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a250505050565b60606118e68383604051806060016040528060278152602001612c1160279139612054565b9392505050565b6001600160a01b038116600090815260066020526040812060010154810361192e57506001600160a01b031660009081526006602052604090206002015490565b61193782611d82565b6001600160a01b0383166000908152600660205260409020600201546109cd9190612932565b61196561077d565b6001600160a01b0316336001600160a01b0316146119955760405162461bcd60e51b815260040161018c90612793565b60095481116119b157806009546119ac9190612906565b6119b4565b60005b6009556008546119f0906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000611b42565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14611a5c577f0000000000000000000000000000000000000000000000000000000000000000611a7e565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600454816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611aaf9190612555565b602060405180830381865afa158015611acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af09190612919565b1015611b3e5760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e0000604482015260640161018c565b5050565b8115611cac5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611ca057306001600160a01b03851603611be757604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611bbf57600080fd5b505af1158015611bd3573d6000803e3d6000fd5b50505050611be28383836120cc565b611cac565b306001600160a01b03841603611c9557348214611c3c5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161018c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c7757600080fd5b505af1158015611c8b573d6000803e3d6000fd5b5050505050611cac565b611be28383836120cc565b611cac85858585612191565b5050505050565b6000611cbe82611d82565b6001600160a01b038316600090815260066020526040812060020180549293508392909190611cee908490612932565b90915550506001600160a01b038216600090815260066020526040902080546001600160801b0319166001600160501b034216179055600354611d3c906001906001600160401b03166127d1565b6001600160a01b03909216600090815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b6001600160a01b0381166000908152600660209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260035490929116815b81811015611f40576000818152600760209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083015260020154608082015290848303611e5e578551611e6d565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b0316600003611e955742611ea4565b82604001516001600160501b03165b9050600080611ed189604001518585611ebd9190612906565b611ec79190612a8f565b86606001516121e9565b91509150600080611f098c886080015189600001516001600160501b031686611efa9190612abc565b611f049190612abc565b612234565b91509150838015611f175750815b611f21578b611f23565b805b9b5050505050505050600181611f399190612932565b9050611deb565b50611f7584611f707f0000000000000000000000000000000000000000000000000000000000000000600a612bc2565b6121e9565b9450611fa490507f0000000000000000000000000000000000000000000000000000000000000000600a612bc2565b611fae9085612abc565b95945050505050565b6009548111156120045760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161018c565b80600960008282546120169190612906565b9091555050600854611b3e906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611b42565b6060600080856001600160a01b0316856040516120719190612bd2565b600060405180830381855af49150503d80600081146120ac576040519150601f19603f3d011682016040523d82523d6000602084013e6120b1565b606091505b50915091506120c28683838761224f565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612119576040519150601f19603f3d011682016040523d82523d6000602084013e61211e565b606091505b5050905080610e2c57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561216257600080fd5b505af1158015612176573d6000803e3d6000fd5b50610e2c935050506001600160a01b038416905085856122d0565b816001600160a01b0316836001600160a01b03160315610e2c57306001600160a01b038416036121d4576121cf6001600160a01b03851683836122d0565b610e2c565b610e2c6001600160a01b038516848484612338565b60008083600003612200575060019050600061222d565b8383028385828161221357612213612aa6565b041461222657600080925092505061222d565b6001925090505b9250929050565b6000808383018481101561222657600080925092505061222d565b606083156122be5782516000036122b7576001600160a01b0385163b6122b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b50816122c8565b6122c88383612370565b949350505050565b6040516001600160a01b03831660248201526044810182905261233390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261239a565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e2c9085906323b872dd60e01b906084016122fc565b8151156123805781518083602001fd5b8060405162461bcd60e51b815260040161018c9190612780565b60006123ef826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661246c9092919063ffffffff16565b805190915015612333578080602001905181019061240d9190612bee565b6123335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018c565b60606122c8848460008585600080866001600160a01b031685876040516124939190612bd2565b60006040518083038185875af1925050503d80600081146124d0576040519150601f19603f3d011682016040523d82523d6000602084013e6124d5565b606091505b50915091506124e68783838761224f565b979650505050505050565b6000806040838503121561250457600080fd5b50508035926020909101359150565b60006020828403121561252557600080fd5b81356001600160a01b03811681146118e657600080fd5b60006020828403121561254e57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561259157600080fd5b81356001600160401b03808211156125a857600080fd5b818401915084601f8301126125bc57600080fd5b8135818111156125ce576125ce612569565b604051601f8201601f19908116603f011681019083821181831017156125f6576125f6612569565b8160405282815287602084870101111561260f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561264257600080fd5b82356001600160401b038082111561265957600080fd5b818501915085601f83011261266d57600080fd5b81358181111561267c57600080fd5b8660208260051b850101111561269157600080fd5b60209290920196919550909350505050565b60005b838110156126be5781810151838201526020016126a6565b50506000910152565b600081518084526126df8160208601602086016126a3565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561274a57603f198886030184526127388583516126c7565b9450928501929085019060010161271c565b5092979650505050505050565b60006020828403121561276957600080fd5b81356001600160501b03811681146118e657600080fd5b6020815260006118e660208301846126c7565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038281168282160390808211156127f1576127f16127bb565b5092915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261285c57600080fd5b8301803591506001600160401b0382111561287657600080fd5b60200191503681900382131561222d57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b600181811c908216806128c057607f821691505b6020821081036128e057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160401b038181168382160190808211156127f1576127f16127bb565b818103818111156109cd576109cd6127bb565b60006020828403121561292b57600080fd5b5051919050565b808201808211156109cd576109cd6127bb565b634e487b7160e01b600052603160045260246000fd5b601f821115612333576000816000526020600020601f850160051c810160208610156129845750805b601f850160051c820191505b818110156129a357828155600101612990565b505050505050565b81516001600160401b038111156129c4576129c4612569565b6129d8816129d284546128ac565b8461295b565b602080601f831160018114612a0d57600084156129f55750858301515b600019600386901b1c1916600185901b1785556129a3565b600085815260208120601f198616915b82811015612a3c57888601518255948401946001909101908401612a1d565b5085821015612a5a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612a7d60408301856126c7565b8281036020840152611fae81856126c7565b80820281158282048414176109cd576109cd6127bb565b634e487b7160e01b600052601260045260246000fd5b600082612ad957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612b19578160001904821115612aff57612aff6127bb565b80851615612b0c57918102915b93841c9390800290612ae3565b509250929050565b600082612b30575060016109cd565b81612b3d575060006109cd565b8160018114612b535760028114612b5d57612b79565b60019150506109cd565b60ff841115612b6e57612b6e6127bb565b50506001821b6109cd565b5060208310610133831016604e8410600b8410161715612b9c575081810a6109cd565b612ba68383612ade565b8060001904821115612bba57612bba6127bb565b029392505050565b60006118e661ffff841683612b21565b60008251612be48184602087016126a3565b9190910192915050565b600060208284031215612c0057600080fd5b815180151581146118e657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a98dcc227e942cc3f1b67e0865d6c749fe81e47c3e56bba5b1441f82c8b5f6fc64736f6c63430008170033",
    "sourceMap": "1627:5184:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2755:10;-1:-1:-1;;;;;2769:18:18;2755:32;;2747:77;;;;-1:-1:-1;;;2747:77:18;;216:2:821;2747:77:18;;;198:21:821;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2747:77:18;;;;;;;;;1627:5184;;;;;4527:700:90;;;;;;;;;;-1:-1:-1;4527:700:90;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;2880:165:18:-;;;;;;:::i;:::-;;:::i;2916:92:90:-;;;;;;;;;;-1:-1:-1;2916:92:90;;;;;:::i;:::-;;:::i;3237:78::-;;;;;;;;;;;;;:::i;1327:29::-;;;;;;;;;;-1:-1:-1;1327:29:90;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;822:37;;;;;;;;;;;;;;;1224:34;;;;;;;;;;;;;;;;;;;1458:25:821;;;1446:2;1431:18;1224:34:90;1312:177:821;871:86:70;;;;;;;;;;;;;:::i;1448:41:90:-;;;;;;;;;;-1:-1:-1;1448:41:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1448:41:90;;;-1:-1:-1;;;1448:41:90;;;-1:-1:-1;;;;;1448:41:90;;;;;;;;;-1:-1:-1;;;;;1741:32:821;;;1723:51;;-1:-1:-1;;;;;1810:31:821;;;1805:2;1790:18;;1783:59;1858:18;;;1851:34;1916:2;1901:18;;1894:34;1710:3;1695:19;1448:41:90;1494:440:821;1003:188:56;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;3340:124:18:-;;;;;;;;;;-1:-1:-1;3439:18:18;;3340:124;;5873:264:90;;;;;;;;;;;;;:::i;:::-;;;;3172:25:821;;;3228:2;3213:18;;3206:34;;;;3145:18;5873:264:90;2998:248:821;996:43:90;;;;;;;;;;;;;;;;;;3425:6:821;3413:19;;;3395:38;;3383:2;3368:18;996:43:90;3251:188:821;2614:94:90;;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3586:481:90:-;;;;;;;;;;-1:-1:-1;3586:481:90;;;;;:::i;:::-;;:::i;906:44::-;;;;;;;;;;;;;;;5502:220;;;;;;;;;;-1:-1:-1;5502:220:90;;;;;:::i;:::-;;:::i;3105:159:18:-;;;;;;;;;;-1:-1:-1;3105:159:18;;;;;:::i;:::-;;:::i;5728:139:90:-;;;;;;;;;;;;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1774:26:18:-;;;;;;;;;;-1:-1:-1;1774:26:18;;;;-1:-1:-1;;;;;1774:26:18;;;4527:700:90;4625:24;:22;:24::i;:::-;4620:80;;4665:24;;-1:-1:-1;;;4665:24:90;;;;;;;:::i;4620:80::-;4764:15;;4710:33;;4746:17;;4710:33;;4764:19;;4782:1;;-1:-1:-1;;;;;4764:15:90;:19;:::i;:::-;-1:-1:-1;;;;;4746:38:90;;;;;;;;;;;;;;;-1:-1:-1;4746:38:90;4710:74;;;;;;;;;-1:-1:-1;;;;;4710:74:90;;;;;-1:-1:-1;;;4710:74:90;;;;;;;;;;;-1:-1:-1;;;4710:74:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4815:44:90;;;;:96;;;4879:9;:32;;;4863:12;:48;;4815:96;4794:166;;;;-1:-1:-1;;;4794:166:90;;6788:2:821;4794:166:90;;;6770:21:821;6827:2;6807:18;;;6800:30;-1:-1:-1;;;6846:18:821;;;6839:53;6909:18;;4794:166:90;6586:347:821;4794:166:90;4991:18;;4970:66;;5011:10;5023:12;4970:20;:66::i;:::-;5084:30;;;;;5152:32;;;;;5052:168;;;7169:25:821;;;7225:2;7210:18;;7203:34;;;7253:18;;7246:34;7296:18;;;7289:34;;;5052:168:90;;7141:19:821;5052:168:90;;;;;;;4610:617;4527:700;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2880:165:18:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2974:29:18::1;2995:7:::0;2974:20:::1;:29::i;:::-;-1:-1:-1::0;202:1:220;851:7;:22;2880:165:18:o;2916:92:90:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2983::90::1;2993:7:::0;2983:9:::1;:18::i;3237:78::-:0;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;3293:15:90::1;:13;:15::i;:::-;202:1:220::0;851:7;:22;3237:78:90:o;1327:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1327:29:90;;-1:-1:-1;1327:29:90;:::o;871:86:70:-;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5873:264:90:-;6003:15;;5920:18;;;;5985:17;;5920:18;;6003:19;;6021:1;;-1:-1:-1;;;;;6003:15:90;:19;:::i;:::-;-1:-1:-1;;;;;5985:38:90;;;;;;;;;;;;:59;;;5972:72;;6069:17;:38;6105:1;6087:15;;;;;;;;;-1:-1:-1;;;;;6087:15:90;:19;;;;:::i;:::-;-1:-1:-1;;;;;6069:38:90;;;;;;;;;;;;:61;;;6054:76;;5873:264;;:::o;2614:94::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2686:15:90::1;2693:7:::0;2686:6:::1;:15::i;696:567:65:-:0;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;1415:10:65;834:14;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;;:::o;3586:481:90:-;3657:24;:22;:24::i;:::-;3652:80;;3697:24;;-1:-1:-1;;;3697:24:90;;;;;;;:::i;3652:80::-;3796:15;;3742:33;;3778:17;;3742:33;;3796:19;;3814:1;;-1:-1:-1;;;;;3796:15:90;:19;:::i;:::-;-1:-1:-1;;;;;3778:38:90;;;;;;;;;;;;;;;-1:-1:-1;3778:38:90;3742:74;;;;;;;;;-1:-1:-1;;;;;3742:74:90;;;;;;-1:-1:-1;;;3742:74:90;;;;;;;;;;;-1:-1:-1;;;3742:74:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3834:31:90;;;3826:64;;;;-1:-1:-1;;;3826:64:90;;8911:2:821;3826:64:90;;;8893:21:821;8950:2;8930:18;;;8923:30;-1:-1:-1;;;8969:18:821;;;8962:50;9029:18;;3826:64:90;8709:344:821;3826:64:90;3901:97;3922:9;3933;:30;;;3965:9;:32;;;3901:20;:97::i;:::-;4030:18;;4014:46;;;-1:-1:-1;;;;;9285:15:821;;;9267:34;;9337:15;;;9332:2;9317:18;;9310:43;4014:46:90;;9203:18:821;4014:46:90;;;;;;;;3642:425;3586:481;:::o;5502:220::-;-1:-1:-1;;;;;5639:16:90;;5572:21;5639:16;;;:7;:16;;;;;:29;;;;5689:26;5647:7;5689:17;:26::i;:::-;5678:37;;5502:220;;;:::o;3105:159:18:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;3192:30:18::1;3214:7:::0;3192:21:::1;:30::i;5728:139:90:-:0;5831:15;;5772:17;;5813;;5772;;5831:19;;5849:1;;-1:-1:-1;;;;;5831:15:90;:19;:::i;:::-;-1:-1:-1;;;;;5813:38:90;;;;;;;;;;;;-1:-1:-1;5813:38:90;:47;-1:-1:-1;;;;;5813:47:90;;5728:139;-1:-1:-1;5728:139:90:o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6268:125:18:-;6342:4;6379:7;:5;:7::i;:::-;-1:-1:-1;;;;;6365:21:18;:10;-1:-1:-1;;;;;6365:21:18;;6358:28;;6268:125;:::o;10312:711:90:-;10437:12;10453:1;10437:17;10429:41;;;;-1:-1:-1;;;10429:41:90;;9951:2:821;10429:41:90;;;9933:21:821;9990:2;9970:18;;;9963:30;-1:-1:-1;;;10009:18:821;;;10002:41;10060:18;;10429:41:90;9749:335:821;10429:41:90;10488:9;-1:-1:-1;;;;;10488:14:90;10501:1;10488:14;10480:47;;;;-1:-1:-1;;;10480:47:90;;10291:2:821;10480:47:90;;;10273:21:821;10330:2;10310:18;;;10303:30;-1:-1:-1;;;10349:18:821;;;10342:50;10409:18;;10480:47:90;10089:344:821;10480:47:90;10559:15;;;-1:-1:-1;;;;;10559:15:90;;;;10537:19;10584:20;10559:15;;10584:20;:::i;:::-;;;-1:-1:-1;;;;;10584:20:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10648:239:90;;;;;;;;-1:-1:-1;;;;;10648:239:90;;;;;10831:15;10648:239;;;;;;;;;-1:-1:-1;10648:239:90;;;;;;;;;;;;;;;;;;10615:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10615:272:90;-1:-1:-1;;;;;;;;10615:272:90;;;-1:-1:-1;;;10615:272:90;-1:-1:-1;;;;;;10615:272:90;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10615:272:90;;;;;;;;;;10902:15;;10898:119;;10990:15;10933:17;:34;10951:15;10965:1;10951:11;:15;:::i;:::-;10933:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;10933:73:90;;;;;-1:-1:-1;;;;;10933:73:90;;;;;;10898:119;10419:604;10312:711;;;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;4558:660:18:-;4654:7;:5;:7::i;:::-;-1:-1:-1;;;;;4640:21:18;:10;-1:-1:-1;;;;;4640:21:18;;4632:48;;;;-1:-1:-1;;;4632:48:18;;;;;;;:::i;:::-;4714:11;;4691:20;;-1:-1:-1;;;;;4714:11:18;434:42:292;4714:47:18;:82;;4785:11;;-1:-1:-1;;;;;4785:11:18;4714:82;;;4764:18;4714:82;4691:105;;4807:21;4838:12;-1:-1:-1;;;;;4831:30:18;;4870:4;4831:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4947:11;;4807:69;;-1:-1:-1;4886:186:18;;-1:-1:-1;;;;;4947:11:18;4972:10;5004:4;5023:7;5044:18;4886:47;:186::i;:::-;5082:20;5153:13;5112:12;-1:-1:-1;;;;;5105:30:18;;5144:4;5105:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5082:84;;5199:12;5177:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4558:660:18:o;7749:1103:90:-;1415:10:65;7812:21:90;7836:26;;;:7;:26;;;;;:39;;;;7893:12;;;7885:45;;;;-1:-1:-1;;;7885:45:90;;11277:2:821;7885:45:90;;;11259:21:821;11316:2;11296:18;;;11289:30;-1:-1:-1;;;11335:18:821;;;11328:50;11395:18;;7885:45:90;11075:344:821;7885:45:90;7965:7;7948:13;:24;;7940:65;;;;-1:-1:-1;;;7940:65:90;;11626:2:821;7940:65:90;;;11608:21:821;11665:2;11645:18;;;11638:30;-1:-1:-1;;;11684:18:821;;;11677:58;11752:18;;7940:65:90;11424:352:821;7940:65:90;8016:51;1415:10:65;8016:32:90;:51::i;:::-;8099:7;8082:13;:24;8078:404;;8122:30;8155:12;8122:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8122:45:90;;;;;;;;;;;;;;;;;;;;;;;8186:9;8181:291;8205:13;:20;8201:1;:24;8181:291;;;1415:10:65;-1:-1:-1;;;;;8254:37:90;:13;8268:1;8254:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8254:37:90;;8250:208;;8333:13;8370:1;8347:13;:20;:24;;;;:::i;:::-;8333:39;;;;;;;;:::i;:::-;;;;;;;8315:12;8328:1;8315:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8315:57:90;;;;;-1:-1:-1;;;;;8315:57:90;;;;;;8394:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8394:18:90;;;;;-1:-1:-1;;;;;;8394:18:90;;;;;;8434:5;;8250:208;8227:3;;8181:291;;;;8108:374;8078:404;1415:10:65;8491:26:90;;;;:7;:26;;;;;:39;;:50;;8534:7;;8491:26;:50;;8534:7;;8491:50;:::i;:::-;;;;;;;;8574:7;8551:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;8592:194:90;;-1:-1:-1;8653:12:90;8687:4;1415:10:65;8737:7:90;8758:18;8592:47;:194::i;:::-;8802:43;;1458:25:821;;;1415:10:65;;8802:43:90;;1446:2:821;1431:18;8802:43:90;;;;;;;7802:1050;7749:1103;:::o;8929:533::-;8981:15;9045:36;1415:10:65;9045:17:90;:36::i;:::-;1415:10:65;8999:26:90;;;;:7;:26;;;;;:43;;;:82;;;;:::i;:::-;8981:100;;9100:7;9111:1;9100:12;9092:35;;;;-1:-1:-1;;;9092:35:90;;12115:2:821;9092:35:90;;;12097:21:821;12154:2;12134:18;;;12127:30;-1:-1:-1;;;12173:18:821;;;12166:40;12223:18;;9092:35:90;11913:334:821;9092:35:90;1415:10:65;9138:26:90;;;;:7;:26;;;;;:69;;-1:-1:-1;;;;;;9138:69:90;9191:15;-1:-1:-1;;;;;9138:69:90;;;;9217:43;;:47;9327:15;;:19;;-1:-1:-1;;;;;;;9327:15:90;:19;:::i;:::-;1415:10:65;9274:26:90;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;9274:72:90;;;;-1:-1:-1;;;9274:72:90;-1:-1:-1;;;;;;;;9274:72:90;;;;;;;;;;9357:40;;9389:7;9357:12;:40::i;:::-;9413:42;;1458:25:821;;;1415:10:65;;9413:42:90;;1446:2:821;1431:18;9413:42:90;;;;;;;8971:491;8929:533::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6388:1296:90:-;6456:7;6467:1;6456:12;6448:41;;;;-1:-1:-1;;;6448:41:90;;15035:2:821;6448:41:90;;;15017:21:821;15074:2;15054:18;;;15047:30;-1:-1:-1;;;15093:18:821;;;15086:46;15149:18;;6448:41:90;14833:340:821;6448:41:90;6500:21;-1:-1:-1;;6535:12:90;-1:-1:-1;;;;;6535:48:90;;6531:224;;-1:-1:-1;6615:18:90;6531:224;;;6672:9;:14;6664:38;;;;-1:-1:-1;;;6664:38:90;;15380:2:821;6664:38:90;;;15362:21:821;15419:2;15399:18;;;15392:30;-1:-1:-1;;;15438:18:821;;;15431:41;15489:18;;6664:38:90;15178:335:821;6664:38:90;-1:-1:-1;6732:12:90;6531:224;1415:10:65;6811:1:90;6769:26;;;:7;:26;;;;;:39;;;:43;6765:361;;6828:51;1415:10:65;8016:32:90;:51::i;6828:::-;6765:361;;;6910:12;:36;;;;;;;;;;;;;-1:-1:-1;;;;;;6910:36:90;1415:10:65;6910:36:90;;;;;;-1:-1:-1;6960:26:90;;;:7;6910:36;6960:26;;;;:69;;-1:-1:-1;;;;;;6960:69:90;-1:-1:-1;;;;;7013:15:90;6960:69;;;;7096:15;;:19;;6910:36;-1:-1:-1;;;;;7096:15:90;:19;:::i;:::-;1415:10:65;7043:26:90;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;7043:72:90;;;;-1:-1:-1;;;7043:72:90;-1:-1:-1;;;;;;;;7043:72:90;;;;;;;;;6765:361;7160:46;;-1:-1:-1;;;7160:46:90;;7136:21;;-1:-1:-1;;;;;7160:31:90;;;;;:46;;7200:4;;7160:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7136:70;-1:-1:-1;7216:194:90;7277:12;1415:10:65;7342:4:90;7361:7;7382:18;7216:47;:194::i;:::-;7420:20;7492:13;7450;-1:-1:-1;;;;;7443:31:90;;7483:4;7443:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;;:::i;:::-;1415:10:65;7516:26:90;;;;:7;:26;;;;;:39;;:55;;7420:85;;-1:-1:-1;7420:85:90;;7516:39;;:26;:55;;7420:85;;7516:55;:::i;:::-;;;;;;;;7604:12;7581:19;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;7632:45:90;;1458:25:821;;;1415:10:65;;7632:45:90;;1446:2:821;1431:18;7632:45:90;;;;;;;6438:1246;;;6388:1296;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;9516:322:90:-;-1:-1:-1;;;;;9623:16:90;;9591;9623;;;:7;:16;;;;;:29;;;:34;;9619:213;;-1:-1:-1;;;;;;9684:16:90;;;;;:7;:16;;;;;:33;;;;9516:322::o;9619:213::-;9795:26;9813:7;9795:17;:26::i;:::-;-1:-1:-1;;;;;9759:16:90;;;;;;:7;:16;;;;;:33;;;:62;;;;:::i;5307:866:18:-;5404:7;:5;:7::i;:::-;-1:-1:-1;;;;;5390:21:18;:10;-1:-1:-1;;;;;5390:21:18;;5382:48;;;;-1:-1:-1;;;5382:48:18;;;;;;;:::i;:::-;5531:18;;5521:7;:28;:63;;5577:7;5556:18;;:28;;;;:::i;:::-;5521:63;;;5552:1;5521:63;5500:18;:84;5656:11;;5595:186;;-1:-1:-1;;;;;5656:11:18;5689:4;5708:10;5732:7;5753:18;5595:47;:186::i;:::-;5902:21;5926:12;-1:-1:-1;;;;;5926:48:18;434:42:292;5926:48:18;:84;;5998:12;5926:84;;;5977:18;5926:84;5902:108;;6091:19;;6048:13;-1:-1:-1;;;;;6041:31:18;;6081:4;6041:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;6020:146;;;;-1:-1:-1;;;6020:146:18;;15720:2:821;6020:146:18;;;15702:21:821;15759:2;15739:18;;;15732:30;15798:32;15778:18;;;15771:60;15848:18;;6020:146:18;15518:354:821;6020:146:18;5372:801;5307:866;:::o;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;1458:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;1431:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;:::-;1221:761;;1266:626;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;16079:2:821;1645:52:292;;;16061:21:821;16118:2;16098:18;;;16091:30;-1:-1:-1;;;16137:18:821;;;16130:49;16196:18;;1645:52:292;15877:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:761;;1552:340;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;:::-;967:1021;;;;;:::o;9937:332:90:-;10023:15;10041:26;10059:7;10041:17;:26::i;:::-;-1:-1:-1;;;;;10077:16:90;;;;;;:7;:16;;;;;:33;;:44;;10023;;-1:-1:-1;10023:44:90;;10077:33;;:16;:44;;10023;;10077;:::i;:::-;;;;-1:-1:-1;;;;;;;10131:16:90;;;;;;:7;:16;;;;;:59;;-1:-1:-1;;;;;;10131:59:90;-1:-1:-1;;;;;10174:15:90;10131:59;;;;10243:15;;:19;;10131:59;;-1:-1:-1;;;;;10243:15:90;:19;:::i;:::-;-1:-1:-1;;;;;10200:16:90;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10200:62:90;;;;-1:-1:-1;;;10200:62:90;-1:-1:-1;;;;;;;;10200:62:90;;;;;;;;;;-1:-1:-1;9937:332:90:o;11074:1261::-;-1:-1:-1;;;;;11200:16:90;;11149;11200;;;:7;:16;;;;;;;;11177:39;;;;;;;;;-1:-1:-1;;;;;11177:39:90;;;;-1:-1:-1;;;;;;;;11177:39:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:15;;11177:39;;;11323:15;11177:39;11349:851;11390:16;11386:1;:20;11349:851;;;11430:33;11466:20;;;:17;:20;;;;;;;;11430:56;;;;;;;;;-1:-1:-1;;;;;11430:56:90;;;;;-1:-1:-1;;;11430:56:90;;;;;;;;;;;-1:-1:-1;;;11430:56:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;11521:23;;;:76;;11574:23;;11521:76;;;11547:9;:24;;;-1:-1:-1;;;;;11521:76:90;;-1:-1:-1;;;;;11501:96:90;;;11611:15;11629:9;:22;;;-1:-1:-1;;;;;11629:27:90;11655:1;11629:27;:70;;11684:15;11629:70;;;11659:9;:22;;;-1:-1:-1;;;;;11629:70:90;;11611:88;;11715:22;11739;11765:138;11822:6;:19;;;11809:9;11799:7;:19;;;;:::i;:::-;11798:43;;;;:::i;:::-;11859:9;:30;;;11765:15;:138::i;:::-;11714:189;;;;11918:18;11938;11960:145;11993:8;12059:9;:32;;;12037:9;:18;;;-1:-1:-1;;;;;12020:35:90;:14;:35;;;;:::i;:::-;12019:72;;;;:::i;:::-;11960:15;:145::i;:::-;11917:188;;;;12131:17;:34;;;;;12152:13;12131:34;:58;;12181:8;12131:58;;;12168:10;12131:58;12120:69;;11416:784;;;;;;;11413:1;11408:6;;;;;:::i;:::-;;;11349:851;;;-1:-1:-1;12225:52:90;12241:8;12251:25;12257:19;12251:2;:25;:::i;:::-;12225:15;:52::i;:::-;12210:67;-1:-1:-1;12301:26:90;;-1:-1:-1;12307:20:90;12301:2;:26;:::i;:::-;12288:40;;;;:::i;:::-;;11074:1261;-1:-1:-1;;;;;11074:1261:90:o;3891:401:18:-;4004:18;;3992:8;:30;;3984:67;;;;-1:-1:-1;;;3984:67:18;;18334:2:821;3984:67:18;;;18316:21:821;18373:2;18353:18;;;18346:30;-1:-1:-1;;;18392:18:821;;;18385:54;18456:18;;3984:67:18;18132:348:821;3984:67:18;4083:8;4061:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4162:11:18;;4101:184;;-1:-1:-1;;;;;4162:11:18;4195:4;4214:7;4235:8;4257:18;4101:47;:184::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;2866:439:292:-;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;1339:493:243:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:243;;-1:-1:-1;1705:1:243;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:243;-1:-1:-1;1339:493:243;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;7668:628:289;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;19189:2:821;8110:60:289;;;19171:21:821;19228:2;19208:18;;;19201:30;19267:31;19247:18;;;19240:59;19316:18;;8110:60:289;18987:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;759:175:228:-;868:58;;-1:-1:-1;;;;;19537:32:821;;868:58:228;;;19519:51:821;19586:18;;;19579:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;19492:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;:::-;759:175;;;:::o;940:203::-;1067:68;;-1:-1:-1;;;;;19882:15:821;;;1067:68:228;;;19864:34:821;19934:15;;19914:18;;;19907:43;19966:18;;;19959:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;19799:18:821;;1067:68:228;19624:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;20488:2:821;3711:85:228;;;20470:21:821;20527:2;20507:18;;;20500:30;20566:34;20546:18;;;20539:62;-1:-1:-1;;;20617:18:821;;;20610:40;20667:19;;3711:85:228;20286:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;375:248:821:-;443:6;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;-1:-1:-1;;543:23:821;;;613:2;598:18;;;585:32;;-1:-1:-1;375:248:821:o;628:286::-;687:6;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;782:23;;-1:-1:-1;;;;;834:31:821;;824:42;;814:70;;880:1;877;870:12;919:180;978:6;1031:2;1019:9;1010:7;1006:23;1002:32;999:52;;;1047:1;1044;1037:12;999:52;-1:-1:-1;1070:23:821;;919:180;-1:-1:-1;919:180:821:o;1104:203::-;-1:-1:-1;;;;;1268:32:821;;;;1250:51;;1238:2;1223:18;;1104:203::o;1939:127::-;2000:10;1995:3;1991:20;1988:1;1981:31;2031:4;2028:1;2021:15;2055:4;2052:1;2045:15;2071:922;2140:6;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2249:9;2236:23;-1:-1:-1;;;;;2319:2:821;2311:6;2308:14;2305:34;;;2335:1;2332;2325:12;2305:34;2373:6;2362:9;2358:22;2348:32;;2418:7;2411:4;2407:2;2403:13;2399:27;2389:55;;2440:1;2437;2430:12;2389:55;2476:2;2463:16;2498:2;2494;2491:10;2488:36;;;2504:18;;:::i;:::-;2579:2;2573:9;2547:2;2633:13;;-1:-1:-1;;2629:22:821;;;2653:2;2625:31;2621:40;2609:53;;;2677:18;;;2697:22;;;2674:46;2671:72;;;2723:18;;:::i;:::-;2763:10;2759:2;2752:22;2798:2;2790:6;2783:18;2838:7;2833:2;2828;2824;2820:11;2816:20;2813:33;2810:53;;;2859:1;2856;2849:12;2810:53;2915:2;2910;2906;2902:11;2897:2;2889:6;2885:15;2872:46;2960:1;2938:15;;;2955:2;2934:24;2927:35;;;;-1:-1:-1;2942:6:821;2071:922;-1:-1:-1;;;;;2071:922:821:o;3444:626::-;3541:6;3549;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;3658:9;3645:23;-1:-1:-1;;;;;3728:2:821;3720:6;3717:14;3714:34;;;3744:1;3741;3734:12;3714:34;3782:6;3771:9;3767:22;3757:32;;3827:7;3820:4;3816:2;3812:13;3808:27;3798:55;;3849:1;3846;3839:12;3798:55;3889:2;3876:16;3915:2;3907:6;3904:14;3901:34;;;3931:1;3928;3921:12;3901:34;3984:7;3979:2;3969:6;3966:1;3962:14;3958:2;3954:23;3950:32;3947:45;3944:65;;;4005:1;4002;3995:12;3944:65;4036:2;4028:11;;;;;4058:6;;-1:-1:-1;3444:626:821;;-1:-1:-1;;;;3444:626:821:o;4075:250::-;4160:1;4170:113;4184:6;4181:1;4178:13;4170:113;;;4260:11;;;4254:18;4241:11;;;4234:39;4206:2;4199:10;4170:113;;;-1:-1:-1;;4317:1:821;4299:16;;4292:27;4075:250::o;4330:270::-;4371:3;4409:5;4403:12;4436:6;4431:3;4424:19;4452:76;4521:6;4514:4;4509:3;4505:14;4498:4;4491:5;4487:16;4452:76;:::i;:::-;4582:2;4561:15;-1:-1:-1;;4557:29:821;4548:39;;;;4589:4;4544:50;;4330:270;-1:-1:-1;;4330:270:821:o;4605:800::-;4765:4;4794:2;4834;4823:9;4819:18;4864:2;4853:9;4846:21;4887:6;4922;4916:13;4953:6;4945;4938:22;4991:2;4980:9;4976:18;4969:25;;5053:2;5043:6;5040:1;5036:14;5025:9;5021:30;5017:39;5003:53;;5091:2;5083:6;5079:15;5112:1;5122:254;5136:6;5133:1;5130:13;5122:254;;;5229:2;5225:7;5213:9;5205:6;5201:22;5197:36;5192:3;5185:49;5257:39;5289:6;5280;5274:13;5257:39;:::i;:::-;5247:49;-1:-1:-1;5354:12:821;;;;5319:15;;;;5158:1;5151:9;5122:254;;;-1:-1:-1;5393:6:821;;4605:800;-1:-1:-1;;;;;;;4605:800:821:o;5410:284::-;5468:6;5521:2;5509:9;5500:7;5496:23;5492:32;5489:52;;;5537:1;5534;5527:12;5489:52;5563:23;;-1:-1:-1;;;;;5615:30:821;;5605:41;;5595:69;;5660:1;5657;5650:12;5699:219;5848:2;5837:9;5830:21;5811:4;5868:44;5908:2;5897:9;5893:18;5885:6;5868:44;:::i;5923:338::-;6125:2;6107:21;;;6164:2;6144:18;;;6137:30;-1:-1:-1;;;6198:2:821;6183:18;;6176:44;6252:2;6237:18;;5923:338::o;6266:127::-;6327:10;6322:3;6318:20;6315:1;6308:31;6358:4;6355:1;6348:15;6382:4;6379:1;6372:15;6398:183;-1:-1:-1;;;;;6517:10:821;;;6505;;;6501:27;;6540:12;;;6537:38;;;6555:18;;:::i;:::-;6537:38;6398:183;;;;:::o;7334:355::-;7536:2;7518:21;;;7575:2;7555:18;;;7548:30;7614:33;7609:2;7594:18;;7587:61;7680:2;7665:18;;7334:355::o;7694:127::-;7755:10;7750:3;7746:20;7743:1;7736:31;7786:4;7783:1;7776:15;7810:4;7807:1;7800:15;7826:521;7903:4;7909:6;7969:11;7956:25;8063:2;8059:7;8048:8;8032:14;8028:29;8024:43;8004:18;8000:68;7990:96;;8082:1;8079;8072:12;7990:96;8109:33;;8161:20;;;-1:-1:-1;;;;;;8193:30:821;;8190:50;;;8236:1;8233;8226:12;8190:50;8269:4;8257:17;;-1:-1:-1;8300:14:821;8296:27;;;8286:38;;8283:58;;;8337:1;8334;8327:12;8352:352;8563:6;8555;8550:3;8537:33;8658:2;8629:15;;;;-1:-1:-1;;;;;;8625:45:821;8589:16;;8614:57;;;8695:2;8687:11;;8352:352;-1:-1:-1;8352:352:821:o;9364:380::-;9443:1;9439:12;;;;9486;;;9507:61;;9561:4;9553:6;9549:17;9539:27;;9507:61;9614:2;9606:6;9603:14;9583:18;9580:38;9577:161;;9660:10;9655:3;9651:20;9648:1;9641:31;9695:4;9692:1;9685:15;9723:4;9720:1;9713:15;9577:161;;9364:380;;;:::o;10438:180::-;-1:-1:-1;;;;;10543:10:821;;;10555;;;10539:27;;10578:11;;;10575:37;;;10592:18;;:::i;10623:128::-;10690:9;;;10711:11;;;10708:37;;;10725:18;;:::i;10756:184::-;10826:6;10879:2;10867:9;10858:7;10854:23;10850:32;10847:52;;;10895:1;10892;10885:12;10847:52;-1:-1:-1;10918:16:821;;10756:184;-1:-1:-1;10756:184:821:o;10945:125::-;11010:9;;;11031:10;;;11028:36;;;11044:18;;:::i;11781:127::-;11842:10;11837:3;11833:20;11830:1;11823:31;11873:4;11870:1;11863:15;11897:4;11894:1;11887:15;12378:543;12480:2;12475:3;12472:11;12469:446;;;12516:1;12540:5;12537:1;12530:16;12584:4;12581:1;12571:18;12654:2;12642:10;12638:19;12635:1;12631:27;12625:4;12621:38;12690:4;12678:10;12675:20;12672:47;;;-1:-1:-1;12713:4:821;12672:47;12768:2;12763:3;12759:12;12756:1;12752:20;12746:4;12742:31;12732:41;;12823:82;12841:2;12834:5;12831:13;12823:82;;;12886:17;;;12867:1;12856:13;12823:82;;;12827:3;;;12378:543;;;:::o;13097:1345::-;13223:3;13217:10;-1:-1:-1;;;;;13242:6:821;13239:30;13236:56;;;13272:18;;:::i;:::-;13301:97;13391:6;13351:38;13383:4;13377:11;13351:38;:::i;:::-;13345:4;13301:97;:::i;:::-;13453:4;;13510:2;13499:14;;13527:1;13522:663;;;;14229:1;14246:6;14243:89;;;-1:-1:-1;14298:19:821;;;14292:26;14243:89;-1:-1:-1;;13054:1:821;13050:11;;;13046:24;13042:29;13032:40;13078:1;13074:11;;;13029:57;14345:81;;13492:944;;13522:663;12325:1;12318:14;;;12362:4;12349:18;;-1:-1:-1;;13558:20:821;;;13676:236;13690:7;13687:1;13684:14;13676:236;;;13779:19;;;13773:26;13758:42;;13871:27;;;;13839:1;13827:14;;;;13706:19;;13676:236;;;13680:3;13940:6;13931:7;13928:19;13925:201;;;14001:19;;;13995:26;-1:-1:-1;;14084:1:821;14080:14;;;14096:3;14076:24;14072:37;14068:42;14053:58;14038:74;;13925:201;-1:-1:-1;;;;;14172:1:821;14156:14;;;14152:22;14139:36;;-1:-1:-1;13097:1345:821:o;14447:381::-;14644:2;14633:9;14626:21;14607:4;14670:44;14710:2;14699:9;14695:18;14687:6;14670:44;:::i;:::-;14762:9;14754:6;14750:22;14745:2;14734:9;14730:18;14723:50;14790:32;14815:6;14807;14790:32;:::i;16225:168::-;16298:9;;;16329;;16346:15;;;16340:22;;16326:37;16316:71;;16367:18;;:::i;16398:127::-;16459:10;16454:3;16450:20;16447:1;16440:31;16490:4;16487:1;16480:15;16514:4;16511:1;16504:15;16530:217;16570:1;16596;16586:132;;16640:10;16635:3;16631:20;16628:1;16621:31;16675:4;16672:1;16665:15;16703:4;16700:1;16693:15;16586:132;-1:-1:-1;16732:9:821;;16530:217::o;16752:416::-;16841:1;16878:5;16841:1;16892:270;16913:7;16903:8;16900:21;16892:270;;;16972:4;16968:1;16964:6;16960:17;16954:4;16951:27;16948:53;;;16981:18;;:::i;:::-;17031:7;17021:8;17017:22;17014:55;;;17051:16;;;;17014:55;17130:22;;;;17090:15;;;;16892:270;;;16896:3;16752:416;;;;;:::o;17173:806::-;17222:5;17252:8;17242:80;;-1:-1:-1;17293:1:821;17307:5;;17242:80;17341:4;17331:76;;-1:-1:-1;17378:1:821;17392:5;;17331:76;17423:4;17441:1;17436:59;;;;17509:1;17504:130;;;;17416:218;;17436:59;17466:1;17457:10;;17480:5;;;17504:130;17541:3;17531:8;17528:17;17525:43;;;17548:18;;:::i;:::-;-1:-1:-1;;17604:1:821;17590:16;;17619:5;;17416:218;;17718:2;17708:8;17705:16;17699:3;17693:4;17690:13;17686:36;17680:2;17670:8;17667:16;17662:2;17656:4;17653:12;17649:35;17646:77;17643:159;;;-1:-1:-1;17755:19:821;;;17787:5;;17643:159;17834:34;17859:8;17853:4;17834:34;:::i;:::-;17904:6;17900:1;17896:6;17892:19;17883:7;17880:32;17877:58;;;17915:18;;:::i;:::-;17953:20;;17173:806;-1:-1:-1;;;17173:806:821:o;17984:143::-;18043:5;18072:49;18113:6;18103:8;18099:21;18093:4;18072:49;:::i;18485:287::-;18614:3;18652:6;18646:13;18668:66;18727:6;18722:3;18715:4;18707:6;18703:17;18668:66;:::i;:::-;18750:16;;;;;18485:287;-1:-1:-1;;18485:287:821:o;20004:277::-;20071:6;20124:2;20112:9;20103:7;20099:23;20095:32;20092:52;;;20140:1;20137;20130:12;20092:52;20172:9;20166:16;20225:5;20218:13;20211:21;20204:5;20201:32;20191:60;;20247:1;20244;20237:12",
    "linkReferences": {},
    "immutableReferences": {
      "27894": [
        {
          "start": 291,
          "length": 32
        },
        {
          "start": 3832,
          "length": 32
        },
        {
          "start": 4001,
          "length": 32
        },
        {
          "start": 4809,
          "length": 32
        },
        {
          "start": 5544,
          "length": 32
        },
        {
          "start": 6051,
          "length": 32
        },
        {
          "start": 6604,
          "length": 32
        },
        {
          "start": 6750,
          "length": 32
        },
        {
          "start": 8240,
          "length": 32
        }
      ],
      "27897": [
        {
          "start": 620,
          "length": 32
        },
        {
          "start": 4773,
          "length": 32
        },
        {
          "start": 5496,
          "length": 32
        },
        {
          "start": 5643,
          "length": 32
        },
        {
          "start": 6015,
          "length": 32
        },
        {
          "start": 6644,
          "length": 32
        },
        {
          "start": 6712,
          "length": 32
        }
      ],
      "27900": [
        {
          "start": 1128,
          "length": 32
        },
        {
          "start": 8062,
          "length": 32
        }
      ],
      "27903": [
        {
          "start": 961,
          "length": 32
        },
        {
          "start": 8010,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "claimRewards()": "372500ab",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardRatio()": "97e1b4bc",
    "getRewardTokenBalance()": "93ce5343",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "multicall(bytes[])": "ac9650d8",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "rewardTokenDecimals()": "9bdcecd1",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setRewardRatio(uint256,uint256)": "001b7934",
    "setTimeUnit(uint80)": "b218f069",
    "stake(uint256)": "a694fc3a",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "stakingTokenBalance()": "8caaa271",
    "stakingTokenDecimals()": "b9f7a7b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"},{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioDenominator\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setRewardRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RewardsClaimed(address,uint256)\":{\"details\":\"Emitted when a staker claims staking rewards.\"},\"TokensStaked(address,uint256)\":{\"details\":\"Emitted when tokens are staked.\"},\"TokensWithdrawn(address,uint256)\":{\"details\":\"Emitted when a tokens are withdrawn.\"},\"UpdatedMinStakeAmount(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates minimum staking amount.\"},\"UpdatedRewardRatio(uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when contract admin updates rewardsPerUnitTime.\"},\"UpdatedTimeUnit(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates timeUnit.\"}},\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardRatio(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_denominator\":\"Reward ratio denominator.\",\"_numerator\":\"Reward ratio numerator.\"}},\"setTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\"}},\"withdraw(uint256)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and rewards for a user.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardRatio(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked.\"},\"setTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256)\":{\"notice\":\"Stake ERC20 Tokens.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked ERC20 tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking20Base.sol\":\"Staking20Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/Staking20Base.sol\":{\"keccak256\":\"0xfae7e16ca6383b8d5259a5a09f0ba86e17597b5f9ef7d849dec1fc07a86b987b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://967a603fe1218b1c7e2c787fa4a16d19f9b24e584b9a77c6045316173f0ea62a\",\"dweb:/ipfs/QmUe4yajq8J4HEAvxoxHF4kfrkb9muzkPRa5sTNrtcuAnT\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking20.sol\":{\"keccak256\":\"0x5b73813e98c9c06428139bc100fa765ad3f641c23aa9e5b8491760360f03ea8d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://566e99201c1b5011975dce78a7afebb8ba97ec8fb8f8bc120c631ced1ae8d70d\",\"dweb:/ipfs/QmQ4HBWyL7MNi6UWB9kPmFyf5aKXnr7cSPcgePoUkyuHvd\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking20.sol\":{\"keccak256\":\"0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852\",\"dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            },
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioNumerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioDenominator",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldDenominator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardRatio",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "amountStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardRatio(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_denominator": "Reward ratio denominator.",
              "_numerator": "Reward ratio numerator."
            }
          },
          "setTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake."
            }
          },
          "withdraw(uint256)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and rewards for a user."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardRatio(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked."
          },
          "setTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256)": {
            "notice": "Stake ERC20 Tokens."
          },
          "withdraw(uint256)": {
            "notice": "Withdraw staked ERC20 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking20Base.sol": "Staking20Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking20Base.sol": {
        "keccak256": "0xfae7e16ca6383b8d5259a5a09f0ba86e17597b5f9ef7d849dec1fc07a86b987b",
        "urls": [
          "bzz-raw://967a603fe1218b1c7e2c787fa4a16d19f9b24e584b9a77c6045316173f0ea62a",
          "dweb:/ipfs/QmUe4yajq8J4HEAvxoxHF4kfrkb9muzkPRa5sTNrtcuAnT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking20.sol": {
        "keccak256": "0x5b73813e98c9c06428139bc100fa765ad3f641c23aa9e5b8491760360f03ea8d",
        "urls": [
          "bzz-raw://566e99201c1b5011975dce78a7afebb8ba97ec8fb8f8bc120c631ced1ae8d70d",
          "dweb:/ipfs/QmQ4HBWyL7MNi6UWB9kPmFyf5aKXnr7cSPcgePoUkyuHvd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking20.sol": {
        "keccak256": "0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828",
        "urls": [
          "bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852",
          "dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking20Base.sol",
    "id": 6521,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC20": [
        14015
      ],
      "IERC20Metadata": [
        14034
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IStaking20": [
        34788
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "ReentrancyGuard": [
        47279
      ],
      "SafeMath": [
        51488
      ],
      "Staking20": [
        28815
      ],
      "Staking20Base": [
        6520
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6773:18",
    "nodes": [
      {
        "id": 6182,
        "nodeType": "PragmaDirective",
        "src": "39:23:18",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 6183,
        "nodeType": "ImportDirective",
        "src": "86:43:18",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6184,
        "nodeType": "ImportDirective",
        "src": "130:36:18",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6185,
        "nodeType": "ImportDirective",
        "src": "167:34:18",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6186,
        "nodeType": "ImportDirective",
        "src": "202:36:18",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking20.sol",
        "file": "../extension/Staking20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 28816,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6187,
        "nodeType": "ImportDirective",
        "src": "240:37:18",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 14016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6188,
        "nodeType": "ImportDirective",
        "src": "278:45:18",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20Metadata.sol",
        "file": "../eip/interface/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 14035,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6190,
        "nodeType": "ImportDirective",
        "src": "325:69:18",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6521,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6189,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "334:19:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6520,
        "nodeType": "ContractDefinition",
        "src": "1627:5184:18",
        "nodes": [
          {
            "id": 6202,
            "nodeType": "VariableDeclaration",
            "src": "1774:26:18",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6200,
              "nodeType": "StructuredDocumentation",
              "src": "1707:62:18",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1789:11:18",
            "scope": 6520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6201,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1774:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6205,
            "nodeType": "VariableDeclaration",
            "src": "1867:34:18",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6203,
              "nodeType": "StructuredDocumentation",
              "src": "1807:55:18",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "1883:18:18",
            "scope": 6520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6204,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1867:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 6258,
            "nodeType": "FunctionDefinition",
            "src": "1908:718:18",
            "nodes": [],
            "body": {
              "id": 6257,
              "nodeType": "Block",
              "src": "2360:266:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6237,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6209,
                        "src": "2382:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6236,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "2370:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6239,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:26:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6241,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6207,
                        "src": "2427:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 6242,
                        "name": "_rewardRatioNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6211,
                        "src": "2438:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6243,
                        "name": "_rewardRatioDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6213,
                        "src": "2461:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6240,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28655,
                      "src": "2406:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256,uint256)"
                      }
                    },
                    "id": 6244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:79:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6245,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:79:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6247,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6217,
                          "src": "2504:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6248,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6215,
                          "src": "2520:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2504:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420546f6b656e20616e64205374616b696e6720546f6b656e2063616e27742062652073616d652e",
                        "id": 6250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        },
                        "value": "Reward Token and Staking Token can't be same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        }
                      ],
                      "id": 6246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2496:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:87:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6252,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:87:18"
                },
                {
                  "expression": {
                    "id": 6255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6253,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6202,
                      "src": "2593:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6254,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6217,
                      "src": "2607:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2593:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6256,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:26:18"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6222,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6219,
                    "src": "2192:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 6223,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6215,
                    "src": "2225:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6225,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6215,
                            "src": "2267:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6224,
                          "name": "IERC20Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14034,
                          "src": "2252:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$14034_$",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 6226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2252:29:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$14034",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 6227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2282:8:18",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14033,
                      "src": "2252:38:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 6228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6230,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6217,
                            "src": "2321:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6229,
                          "name": "IERC20Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14034,
                          "src": "2306:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$14034_$",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 6231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2306:28:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$14034",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 6232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2335:8:18",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14033,
                      "src": "2306:37:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 6233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6234,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6221,
                  "name": "Staking20",
                  "nameLocations": [
                    "2169:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28815,
                  "src": "2169:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2169:186:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6207,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "1936:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "1929:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 6206,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6209,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1963:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "1955:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6211,
                  "mutability": "mutable",
                  "name": "_rewardRatioNumerator",
                  "nameLocation": "1994:21:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "1986:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6213,
                  "mutability": "mutable",
                  "name": "_rewardRatioDenominator",
                  "nameLocation": "2033:23:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "2025:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6215,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2074:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "2066:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6217,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2105:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "2097:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6219,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2135:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "2127:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1919:241:18"
            },
            "returnParameters": {
              "id": 6235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:0:18"
            },
            "scope": 6520,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6271,
            "nodeType": "FunctionDefinition",
            "src": "2702:129:18",
            "nodes": [],
            "body": {
              "id": 6270,
              "nodeType": "Block",
              "src": "2737:94:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6263,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2755:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2759:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2755:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6265,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27894,
                          "src": "2769:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2755:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 6267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 6262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2747:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6269,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:77:18"
                }
              ]
            },
            "documentation": {
              "id": 6259,
              "nodeType": "StructuredDocumentation",
              "src": "2632:65:18",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2709:2:18"
            },
            "returnParameters": {
              "id": 6261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:0:18"
            },
            "scope": 6520,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6284,
            "nodeType": "FunctionDefinition",
            "src": "2880:165:18",
            "nodes": [],
            "body": {
              "id": 6283,
              "nodeType": "Block",
              "src": "2964:81:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6280,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6274,
                        "src": "2995:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6279,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6411,
                      "src": "2974:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6282,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:29:18"
                }
              ]
            },
            "documentation": {
              "id": 6272,
              "nodeType": "StructuredDocumentation",
              "src": "2837:38:18",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6276,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2951:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47278,
                  "src": "2951:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2951:12:18"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2889:19:18",
            "parameters": {
              "id": 6275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6274,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2917:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6284,
                  "src": "2909:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2908:17:18"
            },
            "returnParameters": {
              "id": 6278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2964:0:18"
            },
            "scope": 6520,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6297,
            "nodeType": "FunctionDefinition",
            "src": "3105:159:18",
            "nodes": [],
            "body": {
              "id": 6296,
              "nodeType": "Block",
              "src": "3182:82:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6293,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6287,
                        "src": "3214:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6292,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6477,
                      "src": "3192:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6295,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:30:18"
                }
              ]
            },
            "documentation": {
              "id": 6285,
              "nodeType": "StructuredDocumentation",
              "src": "3051:49:18",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6289,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3169:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47278,
                  "src": "3169:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3169:12:18"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "3114:20:18",
            "parameters": {
              "id": 6288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6287,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3143:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6297,
                  "src": "3135:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:17:18"
            },
            "returnParameters": {
              "id": 6291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:0:18"
            },
            "scope": 6520,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6307,
            "nodeType": "FunctionDefinition",
            "src": "3340:124:18",
            "nodes": [],
            "body": {
              "id": 6306,
              "nodeType": "Block",
              "src": "3422:42:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6304,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6205,
                    "src": "3439:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6303,
                  "id": 6305,
                  "nodeType": "Return",
                  "src": "3432:25:18"
                }
              ]
            },
            "baseFunctions": [
              28800
            ],
            "documentation": {
              "id": 6298,
              "nodeType": "StructuredDocumentation",
              "src": "3270:65:18",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3349:21:18",
            "overrides": {
              "id": 6300,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3395:8:18"
            },
            "parameters": {
              "id": 6299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3370:2:18"
            },
            "returnParameters": {
              "id": 6303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6307,
                  "src": "3413:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:9:18"
            },
            "scope": 6520,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6341,
            "nodeType": "FunctionDefinition",
            "src": "3891:401:18",
            "nodes": [],
            "body": {
              "id": 6340,
              "nodeType": "Block",
              "src": "3974:318:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6317,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6312,
                          "src": "3992:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 6318,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6205,
                          "src": "4004:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3992:30:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 6320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4024:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 6316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3984:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3984:67:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6322,
                  "nodeType": "ExpressionStatement",
                  "src": "3984:67:18"
                },
                {
                  "expression": {
                    "id": 6325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6323,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6205,
                      "src": "4061:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 6324,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6312,
                      "src": "4083:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4061:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6326,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6330,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6202,
                        "src": "4162:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6333,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4195:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4187:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4187:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4187:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6335,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6310,
                        "src": "4214:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6336,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6312,
                        "src": "4235:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6337,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27894,
                        "src": "4257:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6327,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4101:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4121:27:18",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4101:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:184:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6339,
                  "nodeType": "ExpressionStatement",
                  "src": "4101:184:18"
                }
              ]
            },
            "baseFunctions": [
              28808
            ],
            "documentation": {
              "id": 6308,
              "nodeType": "StructuredDocumentation",
              "src": "3647:239:18",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "3900:12:18",
            "overrides": {
              "id": 6314,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3965:8:18"
            },
            "parameters": {
              "id": 6313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6310,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3921:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6341,
                  "src": "3913:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6312,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "3938:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6341,
                  "src": "3930:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:35:18"
            },
            "returnParameters": {
              "id": 6315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3974:0:18"
            },
            "scope": 6520,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6411,
            "nodeType": "FunctionDefinition",
            "src": "4558:660:18",
            "nodes": [],
            "body": {
              "id": 6410,
              "nodeType": "Block",
              "src": "4622:596:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6348,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4640:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4644:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4640:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6350,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21716,
                            "src": "4654:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4654:7:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4640:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4663:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4632:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6355,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:48:18"
                },
                {
                  "assignments": [
                    6357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6357,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "4699:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6410,
                      "src": "4691:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6356,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4691:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6365,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6358,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6202,
                        "src": "4714:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6359,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "4729:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4749:12:18",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "4729:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4714:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6363,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6202,
                      "src": "4785:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4714:82:18",
                    "trueExpression": {
                      "id": 6362,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27894,
                      "src": "4764:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4691:105:18"
                },
                {
                  "assignments": [
                    6367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6367,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4815:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6410,
                      "src": "4807:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6366,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4807:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6377,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6374,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4870:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4862:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6372,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4862:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4862:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6369,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6357,
                            "src": "4838:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6368,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14015,
                          "src": "4831:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4831:20:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14015",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4852:9:18",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13960,
                      "src": "4831:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4831:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4807:69:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6381,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6202,
                        "src": "4947:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4972:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4976:6:18",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4972:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6386,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5004:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4996:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6384,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4996:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4996:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6388,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6344,
                        "src": "5023:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6389,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27894,
                        "src": "5044:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6378,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4886:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4906:27:18",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4886:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4886:186:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6391,
                  "nodeType": "ExpressionStatement",
                  "src": "4886:186:18"
                },
                {
                  "assignments": [
                    6393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6393,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5090:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6410,
                      "src": "5082:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6392,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5082:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6405,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6400,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5144:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking20Base_$6520",
                                "typeString": "contract Staking20Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking20Base_$6520",
                                "typeString": "contract Staking20Base"
                              }
                            ],
                            "id": 6399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5136:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6398,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5136:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5136:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 6395,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6357,
                              "src": "5112:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6394,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14015,
                            "src": "5105:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 6396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5105:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$14015",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 6397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5126:9:18",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13960,
                        "src": "5105:30:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 6402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5105:45:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6403,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6367,
                      "src": "5153:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5105:61:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5082:84:18"
                },
                {
                  "expression": {
                    "id": 6408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6406,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6205,
                      "src": "5177:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6407,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6393,
                      "src": "5199:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5177:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6409,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:34:18"
                }
              ]
            },
            "documentation": {
              "id": 6342,
              "nodeType": "StructuredDocumentation",
              "src": "4486:67:18",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "4567:20:18",
            "parameters": {
              "id": 6345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6344,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4596:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6411,
                  "src": "4588:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4587:17:18"
            },
            "returnParameters": {
              "id": 6346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4622:0:18"
            },
            "scope": 6520,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6477,
            "nodeType": "FunctionDefinition",
            "src": "5307:866:18",
            "nodes": [],
            "body": {
              "id": 6476,
              "nodeType": "Block",
              "src": "5372:801:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6418,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5390:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5394:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5390:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6420,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21716,
                            "src": "5404:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5404:7:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5390:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5413:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5382:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5382:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6425,
                  "nodeType": "ExpressionStatement",
                  "src": "5382:48:18"
                },
                {
                  "expression": {
                    "id": 6435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6426,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6205,
                      "src": "5500:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6427,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6414,
                          "src": "5521:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 6428,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6205,
                          "src": "5531:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5521:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6431,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6205,
                          "src": "5556:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 6432,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6414,
                          "src": "5577:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5556:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5521:63:18",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 6430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5552:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5500:84:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6436,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:84:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6440,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6202,
                        "src": "5656:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5689:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6520",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5681:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5681:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5681:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5708:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5712:6:18",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5708:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6447,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6414,
                        "src": "5732:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6448,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27894,
                        "src": "5753:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6437,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "5595:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5615:27:18",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "5595:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5595:186:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6450,
                  "nodeType": "ExpressionStatement",
                  "src": "5595:186:18"
                },
                {
                  "assignments": [
                    6452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6452,
                      "mutability": "mutable",
                      "name": "_stakingToken",
                      "nameLocation": "5910:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6476,
                      "src": "5902:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6451,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5902:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6460,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6453,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27897,
                        "src": "5926:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6454,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "5942:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5962:12:18",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "5942:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5926:48:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6458,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27897,
                      "src": "5998:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5926:84:18",
                    "trueExpression": {
                      "id": 6457,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27894,
                      "src": "5977:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5902:108:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 6468,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6081:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Staking20Base_$6520",
                                    "typeString": "contract Staking20Base"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Staking20Base_$6520",
                                    "typeString": "contract Staking20Base"
                                  }
                                ],
                                "id": 6467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6073:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 6466,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6073:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6073:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6463,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6452,
                                  "src": "6048:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6462,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14015,
                                "src": "6041:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 6464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6041:21:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$14015",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6063:9:18",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13960,
                            "src": "6041:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 6470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6041:46:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6471,
                          "name": "stakingTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27909,
                          "src": "6091:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6041:69:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6720746f6b656e2062616c616e636520726564756365642e",
                        "id": 6473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6124:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        },
                        "value": "Staking token balance reduced."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        }
                      ],
                      "id": 6461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6020:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6020:146:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6475,
                  "nodeType": "ExpressionStatement",
                  "src": "6020:146:18"
                }
              ]
            },
            "documentation": {
              "id": 6412,
              "nodeType": "StructuredDocumentation",
              "src": "5224:78:18",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "5316:21:18",
            "parameters": {
              "id": 6415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6414,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5346:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6477,
                  "src": "5338:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:17:18"
            },
            "returnParameters": {
              "id": 6416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5372:0:18"
            },
            "scope": 6520,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6491,
            "nodeType": "FunctionDefinition",
            "src": "6268:125:18",
            "nodes": [],
            "body": {
              "id": 6490,
              "nodeType": "Block",
              "src": "6348:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6484,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6365:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6369:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6365:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6486,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6379:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6379:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6365:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6483,
                  "id": 6489,
                  "nodeType": "Return",
                  "src": "6358:28:18"
                }
              ]
            },
            "baseFunctions": [
              28814
            ],
            "documentation": {
              "id": 6478,
              "nodeType": "StructuredDocumentation",
              "src": "6179:84:18",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6277:22:18",
            "overrides": {
              "id": 6480,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6324:8:18"
            },
            "parameters": {
              "id": 6479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6299:2:18"
            },
            "returnParameters": {
              "id": 6483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6491,
                  "src": "6342:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6342:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6341:6:18"
            },
            "scope": 6520,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6505,
            "nodeType": "FunctionDefinition",
            "src": "6489:121:18",
            "nodes": [],
            "body": {
              "id": 6504,
              "nodeType": "Block",
              "src": "6565:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6498,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6582:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6586:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6582:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6500,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6596:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6596:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6582:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6497,
                  "id": 6503,
                  "nodeType": "Return",
                  "src": "6575:28:18"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 6492,
              "nodeType": "StructuredDocumentation",
              "src": "6399:85:18",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6498:18:18",
            "overrides": {
              "id": 6494,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6541:8:18"
            },
            "parameters": {
              "id": 6493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6516:2:18"
            },
            "returnParameters": {
              "id": 6497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6505,
                  "src": "6559:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6495,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6559:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6558:6:18"
            },
            "scope": 6520,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6519,
            "nodeType": "FunctionDefinition",
            "src": "6694:115:18",
            "nodes": [],
            "body": {
              "id": 6518,
              "nodeType": "Block",
              "src": "6764:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6512,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6781:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6785:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6781:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6514,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6795:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6795:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6781:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6511,
                  "id": 6517,
                  "nodeType": "Return",
                  "src": "6774:28:18"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 6506,
              "nodeType": "StructuredDocumentation",
              "src": "6616:73:18",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6703:12:18",
            "overrides": {
              "id": 6508,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6740:8:18"
            },
            "parameters": {
              "id": 6507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6715:2:18"
            },
            "returnParameters": {
              "id": 6511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6519,
                  "src": "6758:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6509,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6758:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6757:6:18"
            },
            "scope": 6520,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6192,
              "name": "ContractMetadata",
              "nameLocations": [
                "1653:16:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1653:16:18"
            },
            "id": 6193,
            "nodeType": "InheritanceSpecifier",
            "src": "1653:16:18"
          },
          {
            "baseName": {
              "id": 6194,
              "name": "Multicall",
              "nameLocations": [
                "1671:9:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1671:9:18"
            },
            "id": 6195,
            "nodeType": "InheritanceSpecifier",
            "src": "1671:9:18"
          },
          {
            "baseName": {
              "id": 6196,
              "name": "Ownable",
              "nameLocations": [
                "1682:7:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1682:7:18"
            },
            "id": 6197,
            "nodeType": "InheritanceSpecifier",
            "src": "1682:7:18"
          },
          {
            "baseName": {
              "id": 6198,
              "name": "Staking20",
              "nameLocations": [
                "1691:9:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28815,
              "src": "1691:9:18"
            },
            "id": 6199,
            "nodeType": "InheritanceSpecifier",
            "src": "1691:9:18"
          }
        ],
        "canonicalName": "Staking20Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6191,
          "nodeType": "StructuredDocumentation",
          "src": "1299:56:18",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6520,
          28815,
          34788,
          47279,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084
        ],
        "name": "Staking20Base",
        "nameLocation": "1636:13:18",
        "scope": 6521,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33833,
          34700,
          34707,
          34714,
          34721,
          34732,
          34739
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 18
}