{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162003d3038038062003d3083398101604081905262000059916200048d565b6040518060400160405280601281526020017105369676e61747572654d696e7445524332360741b815250604051806040016040528060018152602001603160f81b815250858585818181818160059081620000b69190620005ae565b506006620000c58282620005ae565b50504660a052503060c052620000da6200019d565b60805250620000eb90508362000223565b50508251602080850191909120835191840191909120610160829052610180819052466101205290915060008051602062003d10833981519152620001758184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101005230610140526101a052506200019392508391505062000275565b505050506200067a565b600060008051602062003d10833981519152620001b96200030e565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038116620002c45760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640160405180910390fd5b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060600580546200031f906200051d565b80601f01602080910402602001604051908101604052809291908181526020018280546200034d906200051d565b80156200039e5780601f1062000372576101008083540402835291602001916200039e565b820191906000526020600020905b8154815290600101906020018083116200038057829003601f168201915b5050505050905090565b80516001600160a01b0381168114620003c057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003ed57600080fd5b81516001600160401b03808211156200040a576200040a620003c5565b604051601f8301601f19908116603f01168101908282118183101715620004355762000435620003c5565b81604052838152602092508660208588010111156200045357600080fd5b600091505b8382101562000477578582018301518183018401529082019062000458565b6000602085830101528094505050505092915050565b60008060008060808587031215620004a457600080fd5b620004af85620003a8565b60208601519094506001600160401b0380821115620004cd57600080fd5b620004db88838901620003db565b94506040870151915080821115620004f257600080fd5b506200050187828801620003db565b9250506200051260608601620003a8565b905092959194509250565b600181811c908216806200053257607f821691505b6020821081036200055357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005a9576000816000526020600020601f850160051c81016020861015620005845750805b601f850160051c820191505b81811015620005a55782815560010162000590565b5050505b505050565b81516001600160401b03811115620005ca57620005ca620003c5565b620005e281620005db84546200051d565b8462000559565b602080601f8311600181146200061a5760008415620006015750858301515b600019600386901b1c1916600185901b178555620005a5565b600085815260208120601f198616915b828110156200064b578886015182559484019460019091019084016200062a565b50858210156200066a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516101405161016051610180516101a05161361a620006f660003960006129c601526000612a08015260006129e70152600061294b015260006129750152600061299f015260006110640152600061075a01526000610784015260006107ae015261361a6000f3fe6080604052600436106101995760003560e01c806379cc6790116100dd57806379cc6790146103ed5780637ecebe001461040d5780638da5cb5b1461042d5780638e539e8c146104425780638f0fefbb14610462578063938e3d7b1461047557806395d89b41146104955780639ab24eb0146104aa578063a457c2d7146104ca578063a9059cbb146104ea578063ac9650d81461050a578063c1b606e214610537578063c3cda52014610576578063d505accf14610596578063dd62ed3e146105b6578063e8a3d485146105d6578063f1127ed8146105eb57600080fd5b806306fdde031461019e578063079fe40e146101c9578063095ea7b3146101f657806313af40351461022657806318160ddd1461024857806323b872dd14610267578063313ce567146102875780633644e515146102a357806339509351146102b85780633a46b1a8146102d857806342966c68146102f8578063449a52f814610318578063587cde1e146103385780635c19a95c146103585780636f4f2837146103785780636fcfff451461039857806370a08231146103cd575b600080fd5b3480156101aa57600080fd5b506101b3610635565b6040516101c09190612d17565b60405180910390f35b3480156101d557600080fd5b506101de6106c7565b6040516001600160a01b0390911681526020016101c0565b34801561020257600080fd5b50610216610211366004612d46565b6106d6565b60405190151581526020016101c0565b34801561023257600080fd5b50610246610241366004612d70565b6106f0565b005b34801561025457600080fd5b506004545b6040519081526020016101c0565b34801561027357600080fd5b50610216610282366004612d8b565b610729565b34801561029357600080fd5b50604051601281526020016101c0565b3480156102af57600080fd5b5061025961074d565b3480156102c457600080fd5b506102166102d3366004612d46565b6107dd565b3480156102e457600080fd5b506102596102f3366004612d46565b61081c565b34801561030457600080fd5b50610246610313366004612dc7565b610866565b34801561032457600080fd5b50610246610333366004612d46565b610898565b34801561034457600080fd5b506101de610353366004612d70565b610914565b34801561036457600080fd5b50610246610373366004612d70565b610932565b34801561038457600080fd5b50610246610393366004612d70565b61093c565b3480156103a457600080fd5b506103b86103b3366004612d70565b610969565b60405163ffffffff90911681526020016101c0565b3480156103d957600080fd5b506102596103e8366004612d70565b61098b565b3480156103f957600080fd5b50610246610408366004612d46565b6109a6565b34801561041957600080fd5b50610259610428366004612d70565b610a5b565b34801561043957600080fd5b506101de610a79565b34801561044e57600080fd5b5061025961045d366004612dc7565b610a88565b6101de610470366004612de0565b610ab4565b34801561048157600080fd5b50610246610490366004612e82565b610ba8565b3480156104a157600080fd5b506101b3610bd5565b3480156104b657600080fd5b506102596104c5366004612d70565b610be4565b3480156104d657600080fd5b506102166104e5366004612d46565b610c6a565b3480156104f657600080fd5b50610216610505366004612d46565b610cfc565b34801561051657600080fd5b5061052a610525366004612f32565b610d0a565b6040516101c09190612fa6565b34801561054357600080fd5b50610557610552366004612de0565b610e6f565b6040805192151583526001600160a01b039091166020830152016101c0565b34801561058257600080fd5b5061024661059136600461301b565b610eb2565b3480156105a257600080fd5b506102466105b1366004613073565b611010565b3480156105c257600080fd5b506102596105d13660046130dd565b611176565b3480156105e257600080fd5b506101b36111a1565b3480156105f757600080fd5b5061060b610606366004613110565b61122f565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101c0565b60606005805461064490613150565b80601f016020809104026020016040519081016040528092919081815260200182805461067090613150565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050905090565b600b546001600160a01b031690565b6000336106e48185856112b2565b60019150505b92915050565b6106f86113d6565b61071d5760405162461bcd60e51b815260040161071490613184565b60405180910390fd5b610726816113f9565b50565b60003361073785828561144b565b6107428585856114c5565b506001949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156107a657507f000000000000000000000000000000000000000000000000000000000000000046145b156107d057507f000000000000000000000000000000000000000000000000000000000000000090565b6107d8611687565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906106e490829086906108179087906131c2565b6112b2565b600043821061083d5760405162461bcd60e51b8152600401610714906131d5565b6001600160a01b038316600090815260096020526040902061085f9083611709565b9392505050565b806108703361098b565b101561088e5760405162461bcd60e51b81526004016107149061320c565b61072633826117c5565b6108a06113d6565b6108e65760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b6044820152606401610714565b806000036109065760405162461bcd60e51b815260040161071490613238565b61091082826117dd565b5050565b6001600160a01b039081166000908152600860205260409020541690565b6107263382611867565b6109446113d6565b6109605760405162461bcd60e51b815260040161071490613184565b610726816118e7565b6001600160a01b0381166000908152600960205260408120546106ea9061197b565b6001600160a01b031660009081526002602052604090205490565b6109ae6113d6565b6109f45760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b6044820152606401610714565b806109fe8361098b565b1015610a1c5760405162461bcd60e51b81526004016107149061320c565b600081610a298433611176565b610a339190613266565b9050610a41833360006112b2565b610a4c8333836112b2565b610a5683836117c5565b505050565b6001600160a01b0381166000908152600760205260408120546106ea565b6001546001600160a01b031690565b6000438210610aa95760405162461bcd60e51b8152600401610714906131d5565b6106ea600a83611709565b600080846040013511610ad95760405162461bcd60e51b815260040161071490613238565b610ae48484846119e4565b9050600080610af66020870187612d70565b6001600160a01b031614610b1657610b116020860186612d70565b610b18565b335b9050610b47610b2d6040870160208801612d70565b610b3d60a0880160808901612d70565b8760600135611b71565b610b558186604001356117dd565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610b989190613290565b60405180910390a3509392505050565b610bb06113d6565b610bcc5760405162461bcd60e51b815260040161071490613184565b61072681611c92565b60606006805461064490613150565b6001600160a01b0381166000908152600960205260408120548015610c57576001600160a01b0383166000908152600960205260409020610c26600183613266565b81548110610c3657610c36613326565b600091825260209091200154600160201b90046001600160e01b0316610c5a565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610cef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610714565b61074282868684036112b2565b6000336106e48185856114c5565b6060816001600160401b03811115610d2457610d24612e6c565b604051908082528060200260200182016040528015610d5757816020015b6060815260200190600190039081610d425790505b509050336000805b84811015610e66578115610dde57610dbc30878784818110610d8357610d83613326565b9050602002810190610d95919061333c565b86604051602001610da893929190613382565b604051602081830303815290604052611d6d565b848281518110610dce57610dce613326565b6020026020010181905250610e5e565b610e4030878784818110610df457610df4613326565b9050602002810190610e06919061333c565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d6d92505050565b848281518110610e5257610e52613326565b60200260200101819052505b600101610d5f565b50505092915050565b600080610e7d858585611d92565b60e08601356000908152600c602052604090205490915060ff16158015610ea85750610ea881611df6565b9150935093915050565b83421115610f025760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610714565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610f96610f7661074d565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610fa682878787611e1b565b9050610fb181611e43565b8814610ffb5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610714565b611005818a611867565b505050505050505050565b834211156110605760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610714565b60007f000000000000000000000000000000000000000000000000000000000000000088888861108f8c611e43565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006110ec610f7661074d565b905060006110fc82878787611e1b565b9050896001600160a01b0316816001600160a01b03161461115f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610714565b61116a8a8a8a6112b2565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b600080546111ae90613150565b80601f01602080910402602001604051908101604052809291908181526020018280546111da90613150565b80156112275780601f106111fc57610100808354040283529160200191611227565b820191906000526020600020905b81548152906001019060200180831161120a57829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff841690811061127357611273613326565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b0383166113145760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610714565b6001600160a01b0382166113755760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610714565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113e0610a79565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006114578484611176565b905060001981146114bf57818110156114b25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610714565b6114bf84848484036112b2565b50505050565b6001600160a01b0383166115295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610714565b6001600160a01b03821661158b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610714565b6001600160a01b038316600090815260026020526040902054818110156116035760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610714565b6001600160a01b0380851660009081526002602052604080822085850390559185168152908120805484929061163a9084906131c2565b92505081905550826001600160a01b0316846001600160a01b03166000805160206135c58339815191528460405161167491815260200190565b60405180910390a36114bf848484611e6b565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6116b2610635565b80516020918201206040516116ee93927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69146913091016133a3565b60405160208183030381529060405280519060200120905090565b8154600090815b8181101561176d5760006117248284611e86565b90508486828154811061173957611739613326565b60009182526020909120015463ffffffff16111561175957809250611767565b6117648160016131c2565b91505b50611710565b81156117b0578461177f600184613266565b8154811061178f5761178f613326565b600091825260209091200154600160201b90046001600160e01b03166117b3565b60005b6001600160e01b031695945050505050565b6117cf8282611ea1565b6114bf600a611fe483611ff0565b6117e78282612167565b6004546001600160e01b0310156118595760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610714565b6114bf600a61223c83611ff0565b600061187283610914565b9050600061187f8461098b565b6001600160a01b0385811660008181526008602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46114bf828483612248565b6001600160a01b0381166119315760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610714565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600063ffffffff8211156119e05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610714565b5090565b6000806119f2858585610e6f565b9250905080611a355760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610714565b42611a4660c0870160a088016133cf565b6001600160801b031611158015611a755750611a6860e0860160c087016133cf565b6001600160801b03164211155b611ab35760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610714565b6000611ac26020870187612d70565b6001600160a01b031603611b0e5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610714565b6000856040013511611b4a5760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610714565b5060e0909301356000908152600c60205260409020805460ff191660011790555090919050565b80600003611bb0573415610a565760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610714565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601611c2257803414611c1d5760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b6044820152606401610714565b611c65565b3415611c655760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b6044820152606401610714565b60006001600160a01b03841615611c7c5783611c84565b611c846106c7565b90506114bf83338385612385565b6000808054611ca090613150565b80601f0160208091040260200160405190810160405280929190818152602001828054611ccc90613150565b8015611d195780601f10611cee57610100808354040283529160200191611d19565b820191906000526020600020905b815481529060010190602001808311611cfc57829003601f168201915b505050505090508160009081611d2f919061343a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611d619291906134f9565b60405180910390a15050565b606061085f838360405180606001604052806027815260200161359e602791396123cb565b6000611dee83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611de89250611ddc9150889050612443565b80519060200120612537565b90612544565b949350505050565b6000611e00610a79565b6001600160a01b0316826001600160a01b0316149050919050565b6000806000611e2c87878787612568565b91509150611e3981612622565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b610a56611e7784610914565b611e8084610914565b83612248565b6000611e956002848418613527565b61085f908484166131c2565b6001600160a01b038216611f015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610714565b6001600160a01b03821660009081526002602052604090205481811015611f755760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610714565b6001600160a01b0383166000908152600260205260408120838303905560048054849290611fa4908490613266565b90915550506040518281526000906001600160a01b038516906000805160206135c58339815191529060200160405180910390a3610a5683600084611e6b565b600061085f8284613266565b82546000908190801561203a5785612009600183613266565b8154811061201957612019613326565b600091825260209091200154600160201b90046001600160e01b031661203d565b60005b6001600160e01b0316925061205683858763ffffffff16565b915060008111801561209457504386612070600184613266565b8154811061208057612080613326565b60009182526020909120015463ffffffff16145b156120f4576120a282612767565b866120ae600184613266565b815481106120be576120be613326565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b0316021790555061215e565b8560405180604001604052806121094361197b565b63ffffffff16815260200161211d85612767565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6001600160a01b0382166121bd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610714565b80600460008282546121cf91906131c2565b90915550506001600160a01b038216600090815260026020526040812080548392906121fc9084906131c2565b90915550506040518181526001600160a01b038316906000906000805160206135c58339815191529060200160405180910390a361091060008383611e6b565b600061085f82846131c2565b816001600160a01b0316836001600160a01b03161415801561226a5750600081115b15610a56576001600160a01b038316156122f8576001600160a01b038316600090815260096020526040812081906122a590611fe485611ff0565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516122ed929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610a56576001600160a01b0382166000908152600960205260408120819061232e9061223c85611ff0565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612376929190918252602082015260400190565b60405180910390a25050505050565b80156114bf5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016123bf576123ba82826127d0565b6114bf565b6114bf84848484612872565b6060600080856001600160a01b0316856040516123e89190613549565b600060405180830381855af49150503d8060008114612423576040519150601f19603f3d011682016040523d82523d6000602084013e612428565b606091505b5091509150612439868383876128c5565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16124736020840184612d70565b6124836040850160208601612d70565b6040850135606086013561249d60a0880160808901612d70565b6124ad60c0890160a08a016133cf565b6124bd60e08a0160c08b016133cf565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006106ea610f7661293e565b60008060006125538585612a2c565b9150915061256081612622565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156125955750600090506003612619565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156125e9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661261257600060019250925050612619565b9150600090505b94509492505050565b600081600481111561263657612636613565565b0361263e5750565b600181600481111561265257612652613565565b0361269a5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610714565b60028160048111156126ae576126ae613565565b036126fb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610714565b600381600481111561270f5761270f613565565b036107265760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610714565b60006001600160e01b038211156119e05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610714565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461281d576040519150601f19603f3d011682016040523d82523d6000602084013e612822565b606091505b5050905080610a565760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610714565b816001600160a01b0316836001600160a01b031603156114bf57306001600160a01b038416036128b0576123ba6001600160a01b0385168383612a71565b6114bf6001600160a01b038516848484612ad4565b6060831561293457825160000361292d576001600160a01b0385163b61292d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610714565b5081611dee565b611dee8383612b0c565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561299757507f000000000000000000000000000000000000000000000000000000000000000046145b156129c157507f000000000000000000000000000000000000000000000000000000000000000090565b6107d87f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b36565b6000808251604103612a625760208301516040840151606085015160001a612a5687828585612568565b94509450505050612a6a565b506000905060025b9250929050565b6040516001600160a01b038316602482015260448101829052610a5690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612b70565b6040516001600160a01b03808516602483015283166044820152606481018290526114bf9085906323b872dd60e01b90608401612a9d565b815115612b1c5781518083602001fd5b8060405162461bcd60e51b81526004016107149190612d17565b60008383834630604051602001612b519594939291906133a3565b6040516020818303038152906040528051906020012090509392505050565b6000612bc5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c429092919063ffffffff16565b805190915015610a565780806020019051810190612be3919061357b565b610a565760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610714565b6060611dee848460008585600080866001600160a01b03168587604051612c699190613549565b60006040518083038185875af1925050503d8060008114612ca6576040519150601f19603f3d011682016040523d82523d6000602084013e612cab565b606091505b5091509150612cbc878383876128c5565b979650505050505050565b60005b83811015612ce2578181015183820152602001612cca565b50506000910152565b60008151808452612d03816020860160208601612cc7565b601f01601f19169290920160200192915050565b60208152600061085f6020830184612ceb565b80356001600160a01b0381168114612d4157600080fd5b919050565b60008060408385031215612d5957600080fd5b612d6283612d2a565b946020939093013593505050565b600060208284031215612d8257600080fd5b61085f82612d2a565b600080600060608486031215612da057600080fd5b612da984612d2a565b9250612db760208501612d2a565b9150604084013590509250925092565b600060208284031215612dd957600080fd5b5035919050565b6000806000838503610120811215612df757600080fd5b61010080821215612e0757600080fd5b85945084013590506001600160401b0380821115612e2457600080fd5b818601915086601f830112612e3857600080fd5b813581811115612e4757600080fd5b876020828501011115612e5957600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215612e9457600080fd5b81356001600160401b0380821115612eab57600080fd5b818401915084601f830112612ebf57600080fd5b813581811115612ed157612ed1612e6c565b604051601f8201601f19908116603f01168101908382118183101715612ef957612ef9612e6c565b81604052828152876020848701011115612f1257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060208385031215612f4557600080fd5b82356001600160401b0380821115612f5c57600080fd5b818501915085601f830112612f7057600080fd5b813581811115612f7f57600080fd5b8660208260051b8501011115612f9457600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015612ffd57603f19888603018452612feb858351612ceb565b94509285019290850190600101612fcf565b5092979650505050505050565b803560ff81168114612d4157600080fd5b60008060008060008060c0878903121561303457600080fd5b61303d87612d2a565b955060208701359450604087013593506130596060880161300a565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561308e57600080fd5b61309788612d2a565b96506130a560208901612d2a565b955060408801359450606088013593506130c16080890161300a565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156130f057600080fd5b6130f983612d2a565b915061310760208401612d2a565b90509250929050565b6000806040838503121561312357600080fd5b61312c83612d2a565b9150602083013563ffffffff8116811461314557600080fd5b809150509250929050565b600181811c9082168061316457607f821691505b602082108103611e6557634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ea576106ea6131ac565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b818103818111156106ea576106ea6131ac565b80356001600160801b0381168114612d4157600080fd5b61010081016001600160a01b03806132a785612d2a565b168352806132b760208601612d2a565b1660208401526040840135604084015260608401356060840152806132de60808601612d2a565b166080840152506132f160a08401613279565b6001600160801b0381811660a08501528061330e60c08701613279565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261335357600080fd5b8301803591506001600160401b0382111561336d57600080fd5b602001915036819003821315612a6a57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000602082840312156133e157600080fd5b61085f82613279565b601f821115610a56576000816000526020600020601f850160051c810160208610156134135750805b601f850160051c820191505b818110156134325782815560010161341f565b505050505050565b81516001600160401b0381111561345357613453612e6c565b613467816134618454613150565b846133ea565b602080601f83116001811461349c57600084156134845750858301515b600019600386901b1c1916600185901b178555613432565b600085815260208120601f198616915b828110156134cb578886015182559484019460019091019084016134ac565b50858210156134e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061350c6040830185612ceb565b828103602084015261351e8185612ceb565b95945050505050565b60008261354457634e487b7160e01b600052601260045260246000fd5b500490565b6000825161355b818460208701612cc7565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561358d57600080fd5b8151801515811461085f57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220aa172fde1b8e9803ec275bd0bf30efb6db68e8d32a0b1060b40ca47c04c35f4264736f6c634300081700338b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
    "sourceMap": "879:3292:9:-:0;;;1443:95:226;1390:148;;1142:255:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:240;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;1300:13:9;1315:5;1322:7;1392:5:10;1399:7;1832:5:226;1839:7;2089:5:225;2081;:13;;;;;;:::i;:::-;-1:-1:-1;2104:7:225;:17;2114:7;2104;:17;:::i;:::-;-1:-1:-1;;1877:13:226::1;1858:32;::::0;-1:-1:-1;1923:4:226::1;1900:28;::::0;1965:23:::1;:21;:23::i;:::-;1938:50;::::0;-1:-1:-1;1418:26:10::1;::::0;-1:-1:-1;1430:13:10;1418:11:::1;:26::i;:::-;-1:-1:-1::0;;2541:22:240;;;;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;2541:22;;-1:-1:-1;;;;;;;;;;;;2923:58:240;2651:117;2541:22;2597:25;3633:73;;;;;;4754:25:821;;;4795:18;;;4788:34;;;4838:18;;;4831:34;;;3677:13:240;4881:18:821;;;4874:34;3700:4:240;4924:19:821;;;4917:61;3597:7:240;;4726:19:821;;3633:73:240;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;1341:49:9::1;::::0;-1:-1:-1;1368:21:9;;-1:-1:-1;;1341:26:9::1;:49::i;:::-;1142:255:::0;;;;879:3292;;3296:438:226;3351:7;-1:-1:-1;;;;;;;;;;;3581:6:226;:4;:6::i;:::-;3565:24;;;;;;;3416:297;;;;;;4754:25:821;;;;4795:18;;;4788:34;;;;3611:14:226;4838:18:821;;;4831:34;3647:13:226;4881:18:821;;;4874:34;3690:4:226;4924:19:821;;;4917:61;4726:19;;3416:297:226;;;;;;;;;;;;3389:338;;;;;;3370:357;;3296:438;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;5191:2:821;1626:27:74;;;5173:21:821;5230:2;5210:18;;;5203:30;-1:-1:-1;;;5249:18:821;;;5242:47;5306:18;;1626:27:74;;;;;;;1578:86;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;2193:98:225:-;2247:13;2279:5;2272:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:844;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:821;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:821;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;914:3;907:4;902:2;894:6;890:15;886:26;883:35;880:55;;;931:1;928;921:12;880:55;953:1;944:10;;963:133;977:2;974:1;971:9;963:133;;;1065:14;;;1061:23;;1055:30;1034:14;;;1030:23;;1023:63;988:10;;;;963:133;;;1140:1;1133:4;1128:2;1120:6;1116:15;1112:26;1105:37;1160:6;1151:15;;;;;;328:844;;;;:::o;1177:733::-;1294:6;1302;1310;1318;1371:3;1359:9;1350:7;1346:23;1342:33;1339:53;;;1388:1;1385;1378:12;1339:53;1411:40;1441:9;1411:40;:::i;:::-;1495:2;1480:18;;1474:25;1401:50;;-1:-1:-1;;;;;;1548:14:821;;;1545:34;;;1575:1;1572;1565:12;1545:34;1598:61;1651:7;1642:6;1631:9;1627:22;1598:61;:::i;:::-;1588:71;;1705:2;1694:9;1690:18;1684:25;1668:41;;1734:2;1724:8;1721:16;1718:36;;;1750:1;1747;1740:12;1718:36;;1773:63;1828:7;1817:8;1806:9;1802:24;1773:63;:::i;:::-;1763:73;;;1855:49;1900:2;1889:9;1885:18;1855:49;:::i;:::-;1845:59;;1177:733;;;;;;;:::o;1915:380::-;1994:1;1990:12;;;;2037;;;2058:61;;2112:4;2104:6;2100:17;2090:27;;2058:61;2165:2;2157:6;2154:14;2134:18;2131:38;2128:161;;2211:10;2206:3;2202:20;2199:1;2192:31;2246:4;2243:1;2236:15;2274:4;2271:1;2264:15;2128:161;;1915:380;;;:::o;2426:543::-;2528:2;2523:3;2520:11;2517:446;;;2564:1;2588:5;2585:1;2578:16;2632:4;2629:1;2619:18;2702:2;2690:10;2686:19;2683:1;2679:27;2673:4;2669:38;2738:4;2726:10;2723:20;2720:47;;;-1:-1:-1;2761:4:821;2720:47;2816:2;2811:3;2807:12;2804:1;2800:20;2794:4;2790:31;2780:41;;2871:82;2889:2;2882:5;2879:13;2871:82;;;2934:17;;;2915:1;2904:13;2871:82;;;2875:3;;;2517:446;2426:543;;;:::o;3145:1345::-;3265:10;;-1:-1:-1;;;;;3287:30:821;;3284:56;;;3320:18;;:::i;:::-;3349:97;3439:6;3399:38;3431:4;3425:11;3399:38;:::i;:::-;3393:4;3349:97;:::i;:::-;3501:4;;3558:2;3547:14;;3575:1;3570:663;;;;4277:1;4294:6;4291:89;;;-1:-1:-1;4346:19:821;;;4340:26;4291:89;-1:-1:-1;;3102:1:821;3098:11;;;3094:24;3090:29;3080:40;3126:1;3122:11;;;3077:57;4393:81;;3540:944;;3570:663;2373:1;2366:14;;;2410:4;2397:18;;-1:-1:-1;;3606:20:821;;;3724:236;3738:7;3735:1;3732:14;3724:236;;;3827:19;;;3821:26;3806:42;;3919:27;;;;3887:1;3875:14;;;;3754:19;;3724:236;;;3728:3;3988:6;3979:7;3976:19;3973:201;;;4049:19;;;4043:26;-1:-1:-1;;4132:1:821;4128:14;;;4144:3;4124:24;4120:37;4116:42;4101:58;4086:74;;3973:201;-1:-1:-1;;;;;4220:1:821;4204:14;;;4200:22;4187:36;;-1:-1:-1;3145:1345:821:o;4989:341::-;879:3292:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101995760003560e01c806379cc6790116100dd57806379cc6790146103ed5780637ecebe001461040d5780638da5cb5b1461042d5780638e539e8c146104425780638f0fefbb14610462578063938e3d7b1461047557806395d89b41146104955780639ab24eb0146104aa578063a457c2d7146104ca578063a9059cbb146104ea578063ac9650d81461050a578063c1b606e214610537578063c3cda52014610576578063d505accf14610596578063dd62ed3e146105b6578063e8a3d485146105d6578063f1127ed8146105eb57600080fd5b806306fdde031461019e578063079fe40e146101c9578063095ea7b3146101f657806313af40351461022657806318160ddd1461024857806323b872dd14610267578063313ce567146102875780633644e515146102a357806339509351146102b85780633a46b1a8146102d857806342966c68146102f8578063449a52f814610318578063587cde1e146103385780635c19a95c146103585780636f4f2837146103785780636fcfff451461039857806370a08231146103cd575b600080fd5b3480156101aa57600080fd5b506101b3610635565b6040516101c09190612d17565b60405180910390f35b3480156101d557600080fd5b506101de6106c7565b6040516001600160a01b0390911681526020016101c0565b34801561020257600080fd5b50610216610211366004612d46565b6106d6565b60405190151581526020016101c0565b34801561023257600080fd5b50610246610241366004612d70565b6106f0565b005b34801561025457600080fd5b506004545b6040519081526020016101c0565b34801561027357600080fd5b50610216610282366004612d8b565b610729565b34801561029357600080fd5b50604051601281526020016101c0565b3480156102af57600080fd5b5061025961074d565b3480156102c457600080fd5b506102166102d3366004612d46565b6107dd565b3480156102e457600080fd5b506102596102f3366004612d46565b61081c565b34801561030457600080fd5b50610246610313366004612dc7565b610866565b34801561032457600080fd5b50610246610333366004612d46565b610898565b34801561034457600080fd5b506101de610353366004612d70565b610914565b34801561036457600080fd5b50610246610373366004612d70565b610932565b34801561038457600080fd5b50610246610393366004612d70565b61093c565b3480156103a457600080fd5b506103b86103b3366004612d70565b610969565b60405163ffffffff90911681526020016101c0565b3480156103d957600080fd5b506102596103e8366004612d70565b61098b565b3480156103f957600080fd5b50610246610408366004612d46565b6109a6565b34801561041957600080fd5b50610259610428366004612d70565b610a5b565b34801561043957600080fd5b506101de610a79565b34801561044e57600080fd5b5061025961045d366004612dc7565b610a88565b6101de610470366004612de0565b610ab4565b34801561048157600080fd5b50610246610490366004612e82565b610ba8565b3480156104a157600080fd5b506101b3610bd5565b3480156104b657600080fd5b506102596104c5366004612d70565b610be4565b3480156104d657600080fd5b506102166104e5366004612d46565b610c6a565b3480156104f657600080fd5b50610216610505366004612d46565b610cfc565b34801561051657600080fd5b5061052a610525366004612f32565b610d0a565b6040516101c09190612fa6565b34801561054357600080fd5b50610557610552366004612de0565b610e6f565b6040805192151583526001600160a01b039091166020830152016101c0565b34801561058257600080fd5b5061024661059136600461301b565b610eb2565b3480156105a257600080fd5b506102466105b1366004613073565b611010565b3480156105c257600080fd5b506102596105d13660046130dd565b611176565b3480156105e257600080fd5b506101b36111a1565b3480156105f757600080fd5b5061060b610606366004613110565b61122f565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101c0565b60606005805461064490613150565b80601f016020809104026020016040519081016040528092919081815260200182805461067090613150565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050905090565b600b546001600160a01b031690565b6000336106e48185856112b2565b60019150505b92915050565b6106f86113d6565b61071d5760405162461bcd60e51b815260040161071490613184565b60405180910390fd5b610726816113f9565b50565b60003361073785828561144b565b6107428585856114c5565b506001949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156107a657507f000000000000000000000000000000000000000000000000000000000000000046145b156107d057507f000000000000000000000000000000000000000000000000000000000000000090565b6107d8611687565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906106e490829086906108179087906131c2565b6112b2565b600043821061083d5760405162461bcd60e51b8152600401610714906131d5565b6001600160a01b038316600090815260096020526040902061085f9083611709565b9392505050565b806108703361098b565b101561088e5760405162461bcd60e51b81526004016107149061320c565b61072633826117c5565b6108a06113d6565b6108e65760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b6044820152606401610714565b806000036109065760405162461bcd60e51b815260040161071490613238565b61091082826117dd565b5050565b6001600160a01b039081166000908152600860205260409020541690565b6107263382611867565b6109446113d6565b6109605760405162461bcd60e51b815260040161071490613184565b610726816118e7565b6001600160a01b0381166000908152600960205260408120546106ea9061197b565b6001600160a01b031660009081526002602052604090205490565b6109ae6113d6565b6109f45760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b6044820152606401610714565b806109fe8361098b565b1015610a1c5760405162461bcd60e51b81526004016107149061320c565b600081610a298433611176565b610a339190613266565b9050610a41833360006112b2565b610a4c8333836112b2565b610a5683836117c5565b505050565b6001600160a01b0381166000908152600760205260408120546106ea565b6001546001600160a01b031690565b6000438210610aa95760405162461bcd60e51b8152600401610714906131d5565b6106ea600a83611709565b600080846040013511610ad95760405162461bcd60e51b815260040161071490613238565b610ae48484846119e4565b9050600080610af66020870187612d70565b6001600160a01b031614610b1657610b116020860186612d70565b610b18565b335b9050610b47610b2d6040870160208801612d70565b610b3d60a0880160808901612d70565b8760600135611b71565b610b558186604001356117dd565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610b989190613290565b60405180910390a3509392505050565b610bb06113d6565b610bcc5760405162461bcd60e51b815260040161071490613184565b61072681611c92565b60606006805461064490613150565b6001600160a01b0381166000908152600960205260408120548015610c57576001600160a01b0383166000908152600960205260409020610c26600183613266565b81548110610c3657610c36613326565b600091825260209091200154600160201b90046001600160e01b0316610c5a565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610cef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610714565b61074282868684036112b2565b6000336106e48185856114c5565b6060816001600160401b03811115610d2457610d24612e6c565b604051908082528060200260200182016040528015610d5757816020015b6060815260200190600190039081610d425790505b509050336000805b84811015610e66578115610dde57610dbc30878784818110610d8357610d83613326565b9050602002810190610d95919061333c565b86604051602001610da893929190613382565b604051602081830303815290604052611d6d565b848281518110610dce57610dce613326565b6020026020010181905250610e5e565b610e4030878784818110610df457610df4613326565b9050602002810190610e06919061333c565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d6d92505050565b848281518110610e5257610e52613326565b60200260200101819052505b600101610d5f565b50505092915050565b600080610e7d858585611d92565b60e08601356000908152600c602052604090205490915060ff16158015610ea85750610ea881611df6565b9150935093915050565b83421115610f025760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610714565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610f96610f7661074d565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610fa682878787611e1b565b9050610fb181611e43565b8814610ffb5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610714565b611005818a611867565b505050505050505050565b834211156110605760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610714565b60007f000000000000000000000000000000000000000000000000000000000000000088888861108f8c611e43565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006110ec610f7661074d565b905060006110fc82878787611e1b565b9050896001600160a01b0316816001600160a01b03161461115f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610714565b61116a8a8a8a6112b2565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b600080546111ae90613150565b80601f01602080910402602001604051908101604052809291908181526020018280546111da90613150565b80156112275780601f106111fc57610100808354040283529160200191611227565b820191906000526020600020905b81548152906001019060200180831161120a57829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff841690811061127357611273613326565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b0383166113145760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610714565b6001600160a01b0382166113755760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610714565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113e0610a79565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006114578484611176565b905060001981146114bf57818110156114b25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610714565b6114bf84848484036112b2565b50505050565b6001600160a01b0383166115295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610714565b6001600160a01b03821661158b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610714565b6001600160a01b038316600090815260026020526040902054818110156116035760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610714565b6001600160a01b0380851660009081526002602052604080822085850390559185168152908120805484929061163a9084906131c2565b92505081905550826001600160a01b0316846001600160a01b03166000805160206135c58339815191528460405161167491815260200190565b60405180910390a36114bf848484611e6b565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6116b2610635565b80516020918201206040516116ee93927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69146913091016133a3565b60405160208183030381529060405280519060200120905090565b8154600090815b8181101561176d5760006117248284611e86565b90508486828154811061173957611739613326565b60009182526020909120015463ffffffff16111561175957809250611767565b6117648160016131c2565b91505b50611710565b81156117b0578461177f600184613266565b8154811061178f5761178f613326565b600091825260209091200154600160201b90046001600160e01b03166117b3565b60005b6001600160e01b031695945050505050565b6117cf8282611ea1565b6114bf600a611fe483611ff0565b6117e78282612167565b6004546001600160e01b0310156118595760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610714565b6114bf600a61223c83611ff0565b600061187283610914565b9050600061187f8461098b565b6001600160a01b0385811660008181526008602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46114bf828483612248565b6001600160a01b0381166119315760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610714565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600063ffffffff8211156119e05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610714565b5090565b6000806119f2858585610e6f565b9250905080611a355760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610714565b42611a4660c0870160a088016133cf565b6001600160801b031611158015611a755750611a6860e0860160c087016133cf565b6001600160801b03164211155b611ab35760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610714565b6000611ac26020870187612d70565b6001600160a01b031603611b0e5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610714565b6000856040013511611b4a5760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610714565b5060e0909301356000908152600c60205260409020805460ff191660011790555090919050565b80600003611bb0573415610a565760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610714565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601611c2257803414611c1d5760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b6044820152606401610714565b611c65565b3415611c655760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b6044820152606401610714565b60006001600160a01b03841615611c7c5783611c84565b611c846106c7565b90506114bf83338385612385565b6000808054611ca090613150565b80601f0160208091040260200160405190810160405280929190818152602001828054611ccc90613150565b8015611d195780601f10611cee57610100808354040283529160200191611d19565b820191906000526020600020905b815481529060010190602001808311611cfc57829003601f168201915b505050505090508160009081611d2f919061343a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611d619291906134f9565b60405180910390a15050565b606061085f838360405180606001604052806027815260200161359e602791396123cb565b6000611dee83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611de89250611ddc9150889050612443565b80519060200120612537565b90612544565b949350505050565b6000611e00610a79565b6001600160a01b0316826001600160a01b0316149050919050565b6000806000611e2c87878787612568565b91509150611e3981612622565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b610a56611e7784610914565b611e8084610914565b83612248565b6000611e956002848418613527565b61085f908484166131c2565b6001600160a01b038216611f015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610714565b6001600160a01b03821660009081526002602052604090205481811015611f755760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610714565b6001600160a01b0383166000908152600260205260408120838303905560048054849290611fa4908490613266565b90915550506040518281526000906001600160a01b038516906000805160206135c58339815191529060200160405180910390a3610a5683600084611e6b565b600061085f8284613266565b82546000908190801561203a5785612009600183613266565b8154811061201957612019613326565b600091825260209091200154600160201b90046001600160e01b031661203d565b60005b6001600160e01b0316925061205683858763ffffffff16565b915060008111801561209457504386612070600184613266565b8154811061208057612080613326565b60009182526020909120015463ffffffff16145b156120f4576120a282612767565b866120ae600184613266565b815481106120be576120be613326565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b0316021790555061215e565b8560405180604001604052806121094361197b565b63ffffffff16815260200161211d85612767565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6001600160a01b0382166121bd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610714565b80600460008282546121cf91906131c2565b90915550506001600160a01b038216600090815260026020526040812080548392906121fc9084906131c2565b90915550506040518181526001600160a01b038316906000906000805160206135c58339815191529060200160405180910390a361091060008383611e6b565b600061085f82846131c2565b816001600160a01b0316836001600160a01b03161415801561226a5750600081115b15610a56576001600160a01b038316156122f8576001600160a01b038316600090815260096020526040812081906122a590611fe485611ff0565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516122ed929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610a56576001600160a01b0382166000908152600960205260408120819061232e9061223c85611ff0565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612376929190918252602082015260400190565b60405180910390a25050505050565b80156114bf5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016123bf576123ba82826127d0565b6114bf565b6114bf84848484612872565b6060600080856001600160a01b0316856040516123e89190613549565b600060405180830381855af49150503d8060008114612423576040519150601f19603f3d011682016040523d82523d6000602084013e612428565b606091505b5091509150612439868383876128c5565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16124736020840184612d70565b6124836040850160208601612d70565b6040850135606086013561249d60a0880160808901612d70565b6124ad60c0890160a08a016133cf565b6124bd60e08a0160c08b016133cf565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006106ea610f7661293e565b60008060006125538585612a2c565b9150915061256081612622565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156125955750600090506003612619565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156125e9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661261257600060019250925050612619565b9150600090505b94509492505050565b600081600481111561263657612636613565565b0361263e5750565b600181600481111561265257612652613565565b0361269a5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610714565b60028160048111156126ae576126ae613565565b036126fb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610714565b600381600481111561270f5761270f613565565b036107265760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610714565b60006001600160e01b038211156119e05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610714565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461281d576040519150601f19603f3d011682016040523d82523d6000602084013e612822565b606091505b5050905080610a565760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610714565b816001600160a01b0316836001600160a01b031603156114bf57306001600160a01b038416036128b0576123ba6001600160a01b0385168383612a71565b6114bf6001600160a01b038516848484612ad4565b6060831561293457825160000361292d576001600160a01b0385163b61292d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610714565b5081611dee565b611dee8383612b0c565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561299757507f000000000000000000000000000000000000000000000000000000000000000046145b156129c157507f000000000000000000000000000000000000000000000000000000000000000090565b6107d87f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b36565b6000808251604103612a625760208301516040840151606085015160001a612a5687828585612568565b94509450505050612a6a565b506000905060025b9250929050565b6040516001600160a01b038316602482015260448101829052610a5690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612b70565b6040516001600160a01b03808516602483015283166044820152606481018290526114bf9085906323b872dd60e01b90608401612a9d565b815115612b1c5781518083602001fd5b8060405162461bcd60e51b81526004016107149190612d17565b60008383834630604051602001612b519594939291906133a3565b6040516020818303038152906040528051906020012090509392505050565b6000612bc5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c429092919063ffffffff16565b805190915015610a565780806020019051810190612be3919061357b565b610a565760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610714565b6060611dee848460008585600080866001600160a01b03168587604051612c699190613549565b60006040518083038185875af1925050503d8060008114612ca6576040519150601f19603f3d011682016040523d82523d6000602084013e612cab565b606091505b5091509150612cbc878383876128c5565b979650505050505050565b60005b83811015612ce2578181015183820152602001612cca565b50506000910152565b60008151808452612d03816020860160208601612cc7565b601f01601f19169290920160200192915050565b60208152600061085f6020830184612ceb565b80356001600160a01b0381168114612d4157600080fd5b919050565b60008060408385031215612d5957600080fd5b612d6283612d2a565b946020939093013593505050565b600060208284031215612d8257600080fd5b61085f82612d2a565b600080600060608486031215612da057600080fd5b612da984612d2a565b9250612db760208501612d2a565b9150604084013590509250925092565b600060208284031215612dd957600080fd5b5035919050565b6000806000838503610120811215612df757600080fd5b61010080821215612e0757600080fd5b85945084013590506001600160401b0380821115612e2457600080fd5b818601915086601f830112612e3857600080fd5b813581811115612e4757600080fd5b876020828501011115612e5957600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215612e9457600080fd5b81356001600160401b0380821115612eab57600080fd5b818401915084601f830112612ebf57600080fd5b813581811115612ed157612ed1612e6c565b604051601f8201601f19908116603f01168101908382118183101715612ef957612ef9612e6c565b81604052828152876020848701011115612f1257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060208385031215612f4557600080fd5b82356001600160401b0380821115612f5c57600080fd5b818501915085601f830112612f7057600080fd5b813581811115612f7f57600080fd5b8660208260051b8501011115612f9457600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015612ffd57603f19888603018452612feb858351612ceb565b94509285019290850190600101612fcf565b5092979650505050505050565b803560ff81168114612d4157600080fd5b60008060008060008060c0878903121561303457600080fd5b61303d87612d2a565b955060208701359450604087013593506130596060880161300a565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561308e57600080fd5b61309788612d2a565b96506130a560208901612d2a565b955060408801359450606088013593506130c16080890161300a565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156130f057600080fd5b6130f983612d2a565b915061310760208401612d2a565b90509250929050565b6000806040838503121561312357600080fd5b61312c83612d2a565b9150602083013563ffffffff8116811461314557600080fd5b809150509250929050565b600181811c9082168061316457607f821691505b602082108103611e6557634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ea576106ea6131ac565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b818103818111156106ea576106ea6131ac565b80356001600160801b0381168114612d4157600080fd5b61010081016001600160a01b03806132a785612d2a565b168352806132b760208601612d2a565b1660208401526040840135604084015260608401356060840152806132de60808601612d2a565b166080840152506132f160a08401613279565b6001600160801b0381811660a08501528061330e60c08701613279565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261335357600080fd5b8301803591506001600160401b0382111561336d57600080fd5b602001915036819003821315612a6a57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000602082840312156133e157600080fd5b61085f82613279565b601f821115610a56576000816000526020600020601f850160051c810160208610156134135750805b601f850160051c820191505b818110156134325782815560010161341f565b505050505050565b81516001600160401b0381111561345357613453612e6c565b613467816134618454613150565b846133ea565b602080601f83116001811461349c57600084156134845750858301515b600019600386901b1c1916600185901b178555613432565b600085815260208120601f198616915b828110156134cb578886015182559484019460019091019084016134ac565b50858210156134e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061350c6040830185612ceb565b828103602084015261351e8185612ceb565b95945050505050565b60008261354457634e487b7160e01b600052601260045260246000fd5b500490565b6000825161355b818460208701612cc7565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561358d57600080fd5b8151801515811461085f57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220aa172fde1b8e9803ec275bd0bf30efb6db68e8d32a0b1060b40ca47c04c35f4264736f6c63430008170033",
    "sourceMap": "879:3292:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98:225;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:74;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;934:32:821;;;916:51;;904:2;889:18;676:104:74;770:203:821;4470:197:225;;;;;;;;;;-1:-1:-1;4470:197:225;;;;;:::i;:::-;;:::i;:::-;;;1580:14:821;;1573:22;1555:41;;1543:2;1528:18;4470:197:225;1415:187:821;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;:::-;;3281:106:225;;;;;;;;;;-1:-1:-1;3368:12:225;;3281:106;;;1944:25:821;;;1932:2;1917:18;3281:106:225;1798:177:821;5229:256:225;;;;;;;;;;-1:-1:-1;5229:256:225;;;;;:::i;:::-;;:::i;3130:91::-;;;;;;;;;;-1:-1:-1;3130:91:225;;3212:2;2455:36:821;;2443:2;2428:18;3130:91:225;2313:184:821;3018:272:226;;;;;;;;;;;;;:::i;5880:236:225:-;;;;;;;;;;-1:-1:-1;5880:236:225;;;;;:::i;:::-;;:::i;2684:265:227:-;;;;;;;;;;-1:-1:-1;2684:265:227;;;;;:::i;:::-;;:::i;2410:166:10:-;;;;;;;;;;-1:-1:-1;2410:166:10;;;;;:::i;:::-;;:::i;1978:209::-;;;;;;;;;;-1:-1:-1;1978:209:10;;;;;:::i;:::-;;:::i;2077:126:227:-;;;;;;;;;;-1:-1:-1;2077:126:227;;;;;:::i;:::-;;:::i;5107:167::-;;;;;;;;;;-1:-1:-1;5107:167:227;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;1840:149:227:-;;;;;;;;;;-1:-1:-1;1840:149:227;;;;;:::i;:::-;;:::i;:::-;;;3043:10:821;3031:23;;;3013:42;;3001:2;2986:18;1840:149:227;2869:192:821;3445:125:225;;;;;;;;;;-1:-1:-1;3445:125:225;;;;;:::i;:::-;;:::i;2873:430:10:-;;;;;;;;;;-1:-1:-1;2873:430:10;;;;;:::i;:::-;;:::i;2768:126:226:-;;;;;;;;;;-1:-1:-1;2768:126:226;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;;;;:::i;3228:256:227:-;;;;;;;;;;-1:-1:-1;3228:256:227;;;;;:::i;:::-;;:::i;1835:952:9:-;;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;2404:102:225:-;;;;;;;;;;;;;:::i;2282:209:227:-;;;;;;;;;;-1:-1:-1;2282:209:227;;;;;:::i;:::-;;:::i;6603:429:225:-;;;;;;;;;;-1:-1:-1;6603:429:225;;;;;:::i;:::-;;:::i;3766:189::-;;;;;;;;;;-1:-1:-1;3766:189:225;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;874:279:83:-;;;;;;;;;;-1:-1:-1;874:279:83;;;;;:::i;:::-;;:::i;:::-;;;;6525:14:821;;6518:22;6500:41;;-1:-1:-1;;;;;6577:32:821;;;6572:2;6557:18;;6550:60;6473:18;874:279:83;6332:284:821;5543:613:227;;;;;;;;;;-1:-1:-1;5543:613:227;;;;;:::i;:::-;;:::i;2056:651:226:-;;;;;;;;;;-1:-1:-1;2056:651:226;;;;;:::i;:::-;;:::i;4013:149:225:-;;;;;;;;;;-1:-1:-1;4013:149:225;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;1617:148:227:-;;;;;;;;;;-1:-1:-1;1617:148:227;;;;;:::i;:::-;;:::i;:::-;;;;8775:13:821;;8790:10;8771:30;8753:49;;8862:4;8850:17;;;8844:24;-1:-1:-1;;;;;8840:50:821;8818:20;;;8811:80;;;;8726:18;1617:148:227;8549:348:821;2193:98:225;2247:13;2279:5;2272:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;4470:197:225:-;4553:4;4469:10:10;4607:32:225;4469:10:10;4623:7:225;4632:6;4607:8;:32::i;:::-;4656:4;4649:11;;;4470:197;;;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;5229:256:225:-;5326:4;4469:10:10;5382:38:225;5398:4;4469:10:10;5413:6:225;5382:15;:38::i;:::-;5430:27;5440:4;5446:2;5450:6;5430:9;:27::i;:::-;-1:-1:-1;5474:4:225;;5229:256;-1:-1:-1;;;;5229:256:225:o;3018:272:226:-;3076:7;3107:4;-1:-1:-1;;;;;3116:12:226;3099:29;;:66;;;;;3149:16;3132:13;:33;3099:66;3095:189;;;-1:-1:-1;3188:24:226;;3018:272::o;3095:189::-;3250:23;:21;:23::i;:::-;3243:30;;3018:272;:::o;5880:236:225:-;4469:10:10;5968:4:225;6047:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6047:27:225;;;;;;;;;;5968:4;;4469:10:10;6022:66:225;;4469:10:10;;6047:27:225;;:40;;6077:10;;6047:40;:::i;:::-;6022:8;:66::i;2684:265:227:-;2782:7;2823:12;2809:11;:26;2801:70;;;;-1:-1:-1;;;2801:70:227;;;;;;;:::i;:::-;-1:-1:-1;;;;;2907:21:227;;;;;;:12;:21;;;;;2888:54;;2930:11;2888:18;:54::i;:::-;2881:61;2684:265;-1:-1:-1;;;2684:265:227:o;2410:166:10:-;2503:7;2476:23;4469:10;3445:125:225;:::i;2476:23:10:-;:34;;2468:65;;;;-1:-1:-1;;;2468:65:10;;;;;;;:::i;:::-;2543:26;2549:10;2561:7;2543:5;:26::i;1978:209::-;2057:10;:8;:10::i;:::-;2049:46;;;;-1:-1:-1;;;2049:46:10;;10801:2:821;2049:46:10;;;10783:21:821;10840:2;10820:18;;;10813:30;-1:-1:-1;;;10859:18:821;;;10852:53;10922:18;;2049:46:10;10599:347:821;2049:46:10;2113:7;2124:1;2113:12;2105:45;;;;-1:-1:-1;;;2105:45:10;;;;;;;:::i;:::-;2161:19;2167:3;2172:7;2161:5;:19::i;:::-;1978:209;;:::o;2077:126:227:-;-1:-1:-1;;;;;2177:19:227;;;2151:7;2177:19;;;:10;:19;;;;;;;;2077:126::o;5107:167::-;5233:34;4469:10:10;5257:9:227;5233;:34::i;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;1840:149:227:-;-1:-1:-1;;;;;1953:21:227;;1910:6;1953:21;;;:12;:21;;;;;:28;1935:47;;:17;:47::i;3445:125:225:-;-1:-1:-1;;;;;3545:18:225;3519:7;3545:18;;;:9;:18;;;;;;;3445:125::o;2873:430:10:-;2970:10;:8;:10::i;:::-;2962:46;;;;-1:-1:-1;;;2962:46:10;;11502:2:821;2962:46:10;;;11484:21:821;11541:2;11521:18;;;11514:30;-1:-1:-1;;;11560:18:821;;;11553:53;11623:18;;2962:46:10;11300:347:821;2962:46:10;3049:7;3026:19;3036:8;3026:9;:19::i;:::-;:30;;3018:61;;;;-1:-1:-1;;;3018:61:10;;;;;;;:::i;:::-;3089:26;3152:7;3118:31;3128:8;3138:10;3118:9;:31::i;:::-;:41;;;;:::i;:::-;3089:70;;3169:33;3178:8;3188:10;3200:1;3169:8;:33::i;:::-;3212:50;3221:8;3231:10;3243:18;3212:8;:50::i;:::-;3272:24;3278:8;3288:7;3272:5;:24::i;:::-;2952:351;2873:430;;:::o;2768:126:226:-;-1:-1:-1;;;;;2863:14:226;;2837:7;2863:14;;;:7;:14;;;;;918::233;2863:24:226;827:112:233;871:86:70;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;3228:256:227:-;3315:7;3356:12;3342:11;:26;3334:70;;;;-1:-1:-1;;;3334:70:227;;;;;;;:::i;:::-;3421:56;3440:23;3465:11;3421:18;:56::i;1835:952:9:-;1972:14;2022:1;2006:4;:13;;;:17;1998:50;;;;-1:-1:-1;;;1998:50:9;;;;;;;:::i;:::-;2107:33;2123:4;2129:10;;2107:15;:33::i;:::-;2098:42;-1:-1:-1;2477:16:9;;2496:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2496:21:9;;:44;;2533:7;;;;:4;:7;:::i;:::-;2496:44;;;2520:10;2496:44;2477:63;-1:-1:-1;2576:74:9;2597:25;;;;;;;;:::i;:::-;2624:13;;;;;;;;:::i;:::-;2639:4;:10;;;2576:20;:74::i;:::-;2685:30;2691:8;2701:4;:13;;;2685:5;:30::i;:::-;2765:8;-1:-1:-1;;;;;2731:49:9;2757:6;-1:-1:-1;;;;;2731:49:9;;2775:4;2731:49;;;;;;:::i;:::-;;;;;;;;1988:799;1835:952;;;;;:::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2404:102:225:-;2460:13;2492:7;2485:14;;;;;:::i;2282:209:227:-;-1:-1:-1;;;;;2388:21:227;;2355:7;2388:21;;;:12;:21;;;;;:28;2433:8;;:51;;-1:-1:-1;;;;;2448:21:227;;;;;;:12;:21;;;;;2470:7;2476:1;2470:3;:7;:::i;:::-;2448:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2448:36:227;;-1:-1:-1;;;;;2448:36:227;2433:51;;;2444:1;2433:51;-1:-1:-1;;;;;2426:58:227;;2282:209;-1:-1:-1;;;2282:209:227:o;6603:429:225:-;4469:10:10;6696:4:225;6777:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6777:27:225;;;;;;;;;;6696:4;;4469:10:10;6822:35:225;;;;6814:85;;;;-1:-1:-1;;;6814:85:225;;13238:2:821;6814:85:225;;;13220:21:821;13277:2;13257:18;;;13250:30;13316:34;13296:18;;;13289:62;-1:-1:-1;;;13367:18:821;;;13360:35;13412:19;;6814:85:225;13036:401:821;6814:85:225;6933:60;6942:5;6949:7;6977:15;6958:16;:34;6933:8;:60::i;3766:189::-;3845:4;4469:10:10;3899:28:225;4469:10:10;3916:2:225;3920:6;3899:9;:28::i;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;4469:10:10;834:14:65;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;874:279:83:-;996:12;1010:14;1045:33;1061:4;1067:10;;1045:15;:33::i;:::-;1106:8;;;;1099:16;;;;:6;:16;;;;;;1036:42;;-1:-1:-1;1099:16:83;;1098:17;:48;;;;;1119:27;1139:6;1119:19;:27::i;:::-;1088:58;;874:279;;;;;;:::o;5543:613:227:-;5762:6;5743:15;:25;;5735:67;;;;-1:-1:-1;;;5735:67:227;;14527:2:821;5735:67:227;;;14509:21:821;14566:2;14546:18;;;14539:30;14605:31;14585:18;;;14578:59;14654:18;;5735:67:227;14325:353:821;5735:67:227;5844:58;;;1306:71;5844:58;;;14914:25:821;-1:-1:-1;;;;;14975:32:821;;14955:18;;;14948:60;;;;15024:18;;;15017:34;;;15067:18;;;15060:34;;;5813:18:227;;14886:19:821;;5844:58:227;;;;;;;;;;;;5834:69;;;;;;5813:90;;5913:12;5928:53;5950:18;:16;:18::i;:::-;5970:10;8549:4:239;8543:11;-1:-1:-1;;;8567:23:239;;8619:4;8610:14;;8603:39;;;;8671:4;8662:14;;8655:34;8725:4;8710:20;;;8349:397;5928:53:227;5913:68;;5991:14;6008:28;6022:4;6028:1;6031;6034;6008:13;:28::i;:::-;5991:45;;6064:17;6074:6;6064:9;:17::i;:::-;6055:5;:26;6047:64;;;;-1:-1:-1;;;6047:64:227;;15307:2:821;6047:64:227;;;15289:21:821;15346:2;15326:18;;;15319:30;-1:-1:-1;;;15365:18:821;;;15358:55;15430:18;;6047:64:227;15105:349:821;6047:64:227;6121:28;6131:6;6139:9;6121;:28::i;:::-;5725:431;;;5543:613;;;;;;:::o;2056:651:226:-;2291:8;2272:15;:27;;2264:69;;;;-1:-1:-1;;;2264:69:226;;15661:2:821;2264:69:226;;;15643:21:821;15700:2;15680:18;;;15673:30;15739:31;15719:18;;;15712:59;15788:18;;2264:69:226;15459:353:821;2264:69:226;2344:18;2386:16;2404:5;2411:7;2420:5;2427:16;2437:5;2427:9;:16::i;:::-;2375:79;;;;;;16104:25:821;;;;-1:-1:-1;;;;;16203:15:821;;;16183:18;;;16176:43;16255:15;;;;16235:18;;;16228:43;16287:18;;;16280:34;16330:19;;;16323:35;16374:19;;;16367:35;;;16076:19;;2375:79:226;;;;;;;;;;;;2365:90;;;;;;2344:111;;2466:12;2481:53;2503:18;:16;:18::i;2481:53::-;2466:68;;2545:14;2562:28;2576:4;2582:1;2585;2588;2562:13;:28::i;:::-;2545:45;;2618:5;-1:-1:-1;;;;;2608:15:226;:6;-1:-1:-1;;;;;2608:15:226;;2600:58;;;;-1:-1:-1;;;2600:58:226;;16615:2:821;2600:58:226;;;16597:21:821;16654:2;16634:18;;;16627:30;16693:32;16673:18;;;16666:60;16743:18;;2600:58:226;16413:354:821;2600:58:226;2669:31;2678:5;2685:7;2694:5;2669:8;:31::i;:::-;2254:453;;;2056:651;;;;;;;:::o;4013:149:225:-;-1:-1:-1;;;;;4128:18:225;;;4102:7;4128:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4013:149::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1617:148:227:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1732:21:227;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1725:33;;;;;;;;;1732:26;;1725:33;;;;;;-1:-1:-1;;;1725:33:227;;-1:-1:-1;;;;;1725:33:227;;;;;;;;;1617:148;-1:-1:-1;;;1617:148:227:o;10100:340:225:-;-1:-1:-1;;;;;10201:19:225;;10193:68;;;;-1:-1:-1;;;10193:68:225;;16974:2:821;10193:68:225;;;16956:21:821;17013:2;16993:18;;;16986:30;17052:34;17032:18;;;17025:62;-1:-1:-1;;;17103:18:821;;;17096:34;17147:19;;10193:68:225;16772:400:821;10193:68:225;-1:-1:-1;;;;;10279:21:225;;10271:68;;;;-1:-1:-1;;;10271:68:225;;17379:2:821;10271:68:225;;;17361:21:821;17418:2;17398:18;;;17391:30;17457:34;17437:18;;;17430:62;-1:-1:-1;;;17508:18:821;;;17501:32;17550:19;;10271:68:225;17177:398:821;10271:68:225;-1:-1:-1;;;;;10350:18:225;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10401:32;;1944:25:821;;;10401:32:225;;1917:18:821;10401:32:225;;;;;;;10100:340;;;:::o;4181:115:10:-;4245:4;4282:7;:5;:7::i;:::-;-1:-1:-1;;;;;4268:21:10;:10;-1:-1:-1;;;;;4268:21:10;;4261:28;;4181:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10717:411:225:-;10817:24;10844:25;10854:5;10861:7;10844:9;:25::i;:::-;10817:52;;-1:-1:-1;;10883:16:225;:37;10879:243;;10964:6;10944:16;:26;;10936:68;;;;-1:-1:-1;;;10936:68:225;;17782:2:821;10936:68:225;;;17764:21:821;17821:2;17801:18;;;17794:30;17860:31;17840:18;;;17833:59;17909:18;;10936:68:225;17580:353:821;10936:68:225;11046:51;11055:5;11062:7;11090:6;11071:16;:25;11046:8;:51::i;:::-;10807:321;10717:411;;;:::o;7495:621::-;-1:-1:-1;;;;;7591:18:225;;7583:68;;;;-1:-1:-1;;;7583:68:225;;18140:2:821;7583:68:225;;;18122:21:821;18179:2;18159:18;;;18152:30;18218:34;18198:18;;;18191:62;-1:-1:-1;;;18269:18:821;;;18262:35;18314:19;;7583:68:225;17938:401:821;7583:68:225;-1:-1:-1;;;;;7669:16:225;;7661:64;;;;-1:-1:-1;;;7661:64:225;;18546:2:821;7661:64:225;;;18528:21:821;18585:2;18565:18;;;18558:30;18624:34;18604:18;;;18597:62;-1:-1:-1;;;18675:18:821;;;18668:33;18718:19;;7661:64:225;18344:399:821;7661:64:225;-1:-1:-1;;;;;7807:15:225;;7785:19;7807:15;;;:9;:15;;;;;;7840:21;;;;7832:72;;;;-1:-1:-1;;;7832:72:225;;18950:2:821;7832:72:225;;;18932:21:821;18989:2;18969:18;;;18962:30;19028:34;19008:18;;;19001:62;-1:-1:-1;;;19079:18:821;;;19072:36;19125:19;;7832:72:225;18748:402:821;7832:72:225;-1:-1:-1;;;;;7938:15:225;;;;;;;:9;:15;;;;;;7956:20;;;7938:38;;7996:13;;;;;;;;:23;;7970:6;;7938:15;7996:23;;7970:6;;7996:23;:::i;:::-;;;;;;;;8050:2;-1:-1:-1;;;;;8035:26:225;8044:4;-1:-1:-1;;;;;8035:26:225;-1:-1:-1;;;;;;;;;;;8054:6:225;8035:26;;;;1944:25:821;;1932:2;1917:18;;1798:177;8035:26:225;;;;;;;;8072:37;8092:4;8098:2;8102:6;8072:19;:37::i;3296:438:226:-;3351:7;3448:95;3581:6;:4;:6::i;:::-;3565:24;;;;;;;3416:297;;;;;3611:14;;3647:13;;3690:4;;3416:297;;:::i;:::-;;;;;;;;;;;;;3389:338;;;;;;3370:357;;3296:438;:::o;3568:1458:227:-;4689:12;;3667:7;;;4736:229;4749:4;4743:3;:10;4736:229;;;4769:11;4783:23;4796:3;4801:4;4783:12;:23::i;:::-;4769:37;;4847:11;4824:5;4830:3;4824:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;4820:135;;;4885:3;4878:10;;4820:135;;;4933:7;:3;4939:1;4933:7;:::i;:::-;4927:13;;4820:135;4755:210;4736:229;;;4982:9;;:37;;4998:5;5004:8;5011:1;5004:4;:8;:::i;:::-;4998:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;4998:21:227;;-1:-1:-1;;;;;4998:21:227;4982:37;;;4994:1;4982:37;-1:-1:-1;;;;;4975:44:227;;3568:1458;-1:-1:-1;;;;;3568:1458:227:o;6824:190::-;6908:28;6920:7;6929:6;6908:11;:28::i;:::-;6947:60;6964:23;6989:9;7000:6;6947:16;:60::i;6450:285::-;6534:28;6546:7;6555:6;6534:11;:28::i;:::-;3368:12:225;;-1:-1:-1;;;;;;6580:29:227;6572:90;;;;-1:-1:-1;;;6572:90:227;;19851:2:821;6572:90:227;;;19833:21:821;19890:2;19870:18;;;19863:30;19929:34;19909:18;;;19902:62;-1:-1:-1;;;19980:18:821;;;19973:46;20036:19;;6572:90:227;19649:412:821;6572:90:227;6673:55;6690:23;6715:4;6721:6;6673:16;:55::i;7528:380::-;7612:23;7638:20;7648:9;7638;:20::i;:::-;7612:46;;7668:24;7695:20;7705:9;7695;:20::i;:::-;-1:-1:-1;;;;;7725:21:227;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7725:33:227;;;;;;;;;;7774:54;;7668:47;;-1:-1:-1;7725:33:227;7774:54;;;;;;7725:21;7774:54;7839:62;7856:15;7873:9;7884:16;7839;:62::i;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;20268:2:821;1626:27:74;;;20250:21:821;20307:2;20287:18;;;20280:30;-1:-1:-1;;;20326:18:821;;;20319:47;20383:18;;1626:27:74;20066:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;3045:187:242:-;3101:6;3136:16;3127:25;;;3119:76;;;;-1:-1:-1;;;3119:76:242;;20614:2:821;3119:76:242;;;20596:21:821;20653:2;20633:18;;;20626:30;20692:34;20672:18;;;20665:62;-1:-1:-1;;;20743:18:821;;;20736:36;20789:19;;3119:76:242;20412:402:821;3119:76:242;-1:-1:-1;3219:5:242;3045:187::o;1400:550:83:-;1497:14;1523:12;1565:24;1572:4;1578:10;;1565:6;:24::i;:::-;1545:44;-1:-1:-1;1545:44:83;-1:-1:-1;1545:44:83;1600:35;;;;-1:-1:-1;;;1600:35:83;;21021:2:821;1600:35:83;;;21003:21:821;21060:2;21040:18;;;21033:30;-1:-1:-1;;;21079:18:821;;;21072:45;21134:18;;1600:35:83;20819:339:821;1600:35:83;1697:15;1666:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1666:46:83;;;:94;;;;-1:-1:-1;1735:25:83;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1716:44:83;:15;:44;;1666:94;1645:156;;;;-1:-1:-1;;;1645:156:83;;21556:2:821;1645:156:83;;;21538:21:821;21595:2;21575:18;;;21568:30;-1:-1:-1;;;21614:18:821;;;21607:45;21669:18;;1645:156:83;21354:339:821;1645:156:83;1838:1;1819:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1819:21:83;;1811:53;;;;-1:-1:-1;;;1811:53:83;;21900:2:821;1811:53:83;;;21882:21:821;21939:2;21919:18;;;21912:30;-1:-1:-1;;;21958:18:821;;;21951:49;22017:18;;1811:53:83;21698:343:821;1811:53:83;1898:1;1882:4;:13;;;:17;1874:35;;;;-1:-1:-1;;;1874:35:83;;22248:2:821;1874:35:83;;;22230:21:821;22287:1;22267:18;;;22260:29;-1:-1:-1;;;22305:18:821;;;22298:35;22350:18;;1874:35:83;22046:328:821;1874:35:83;-1:-1:-1;1927:8:83;;;;;1920:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;1920:23:83;1939:4;1920:23;;;-1:-1:-1;1400:550:83;;;-1:-1:-1;1400:550:83:o;3518:651:9:-;3645:6;3655:1;3645:11;3641:95;;3680:9;:14;3672:33;;;;-1:-1:-1;;;3672:33:9;;22581:2:821;3672:33:9;;;22563:21:821;22620:1;22600:18;;;22593:29;-1:-1:-1;;;22638:18:821;;;22631:36;22684:18;;3672:33:9;22379:329:821;3641:95:9;-1:-1:-1;;;;;;;3750:45:9;;;3746:206;;3832:6;3819:9;:19;3811:54;;;;-1:-1:-1;;;3811:54:9;;22915:2:821;3811:54:9;;;22897:21:821;22954:2;22934:18;;;22927:30;-1:-1:-1;;;22973:18:821;;;22966:52;23035:18;;3811:54:9;22713:346:821;3811:54:9;3746:206;;;3904:9;:14;3896:45;;;;-1:-1:-1;;;3896:45:9;;23266:2:821;3896:45:9;;;23248:21:821;23305:2;23285:18;;;23278:30;-1:-1:-1;;;23324:18:821;;;23317:48;23382:18;;3896:45:9;23064:342:821;3896:45:9;3962:21;-1:-1:-1;;;;;3986:35:9;;;:84;;4049:21;3986:84;;;4024:22;:20;:22::i;:::-;3962:108;;4080:82;4117:9;4128:10;4140:13;4155:6;4080:36;:82::i;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;2024:204:83:-;2126:7;2152:69;2210:10;;2152:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2152:49:83;;-1:-1:-1;2179:20:83;;-1:-1:-1;2194:4:83;;-1:-1:-1;2179:14:83;:20::i;:::-;2169:31;;;;;;2152:16;:49::i;:::-;:57;;:69::i;:::-;2145:76;2024:204;-1:-1:-1;;;;2024:204:83:o;3061:134:9:-;3147:4;3181:7;:5;:7::i;:::-;-1:-1:-1;;;;;3170:18:9;:7;-1:-1:-1;;;;;3170:18:9;;3163:25;;3061:134;;;:::o;6611:232:239:-;6696:7;6716:17;6735:18;6757:25;6768:4;6774:1;6777;6780;6757:10;:25::i;:::-;6715:67;;;;6792:18;6804:5;6792:11;:18::i;:::-;-1:-1:-1;6827:9:239;6611:232;-1:-1:-1;;;;;6611:232:239:o;3865:203:226:-;-1:-1:-1;;;;;3985:14:226;;3925:15;3985:14;;;:7;:14;;;;;918::233;;1050:1;1032:19;;;;918:14;4044:17:226;3942:126;3865:203;;;:::o;7147:224:227:-;7308:56;7325:15;7335:4;7325:9;:15::i;:::-;7342:13;7352:2;7342:9;:13::i;:::-;7357:6;7308:16;:56::i;678:153:241:-;740:7;813:11;823:1;814:5;;;813:11;:::i;:::-;803:21;;804:5;;;803:21;:::i;9101:576:225:-;-1:-1:-1;;;;;9184:21:225;;9176:67;;;;-1:-1:-1;;;9176:67:225;;26418:2:821;9176:67:225;;;26400:21:821;26457:2;26437:18;;;26430:30;26496:34;26476:18;;;26469:62;-1:-1:-1;;;26547:18:821;;;26540:31;26588:19;;9176:67:225;26216:397:821;9176:67:225;-1:-1:-1;;;;;9339:18:225;;9314:22;9339:18;;;:9;:18;;;;;;9375:24;;;;9367:71;;;;-1:-1:-1;;;9367:71:225;;26820:2:821;9367:71:225;;;26802:21:821;26859:2;26839:18;;;26832:30;26898:34;26878:18;;;26871:62;-1:-1:-1;;;26949:18:821;;;26942:32;26991:19;;9367:71:225;26618:398:821;9367:71:225;-1:-1:-1;;;;;9472:18:225;;;;;;:9;:18;;;;;9493:23;;;9472:44;;9536:12;:22;;9510:6;;9472:18;9536:22;;9510:6;;9536:22;:::i;:::-;;;;-1:-1:-1;;9574:37:225;;1944:25:821;;;9600:1:225;;-1:-1:-1;;;;;9574:37:225;;;-1:-1:-1;;;;;;;;;;;9574:37:225;1932:2:821;1917:18;9574:37:225;;;;;;;9622:48;9642:7;9659:1;9663:6;9622:19;:48::i;9288:101:227:-;9351:7;9377:5;9381:1;9377;:5;:::i;8517:663::-;8749:12;;8687:17;;;;8783:8;;:35;;8798:5;8804:7;8810:1;8804:3;:7;:::i;:::-;8798:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;8798:20:227;;-1:-1:-1;;;;;8798:20:227;8783:35;;;8794:1;8783:35;-1:-1:-1;;;;;8771:47:227;;;8840:20;8843:9;8854:5;8840:2;:20;;:::i;:::-;8828:32;;8881:1;8875:3;:7;:51;;;;-1:-1:-1;8914:12:227;8886:5;8892:7;8898:1;8892:3;:7;:::i;:::-;8886:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;8875:51;8871:303;;;8965:29;8984:9;8965:18;:29::i;:::-;8942:5;8948:7;8954:1;8948:3;:7;:::i;:::-;8942:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:52;;;;;-1:-1:-1;;;;;8942:52:227;;;;;-1:-1:-1;;;;;8942:52:227;;;;;;8871:303;;;9025:5;9053:96;;;;;;;;9077:31;9095:12;9077:17;:31::i;:::-;9053:96;;;;;;9117:29;9136:9;9117:18;:29::i;:::-;-1:-1:-1;;;;;9053:96:227;;;;;;9025:138;;;;;;;-1:-1:-1;9025:138:227;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9025:138:227;;;;;;;;;;;;8871:303;8725:455;8517:663;;;;;;:::o;8392:389:225:-;-1:-1:-1;;;;;8475:21:225;;8467:65;;;;-1:-1:-1;;;8467:65:225;;27223:2:821;8467:65:225;;;27205:21:821;27262:2;27242:18;;;27235:30;27301:33;27281:18;;;27274:61;27352:18;;8467:65:225;27021:355:821;8467:65:225;8619:6;8603:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8635:18:225;;;;;;:9;:18;;;;;:28;;8657:6;;8635:18;:28;;8657:6;;8635:28;:::i;:::-;;;;-1:-1:-1;;8678:37:225;;1944:25:821;;;-1:-1:-1;;;;;8678:37:225;;;8695:1;;-1:-1:-1;;;;;;;;;;;8678:37:225;1932:2:821;1917:18;8678:37:225;;;;;;;8726:48;8754:1;8758:7;8767:6;8726:19;:48::i;9186:96:227:-;9244:7;9270:5;9274:1;9270;:5;:::i;7914:597::-;8011:3;-1:-1:-1;;;;;8004:10:227;:3;-1:-1:-1;;;;;8004:10:227;;;:24;;;;;8027:1;8018:6;:10;8004:24;8000:505;;;-1:-1:-1;;;;;8048:17:227;;;8044:221;;-1:-1:-1;;;;;8143:17:227;;8086;8143;;;:12;:17;;;;;8086;;8126:54;;8162:9;8173:6;8126:16;:54::i;:::-;8085:95;;;;8224:3;-1:-1:-1;;;;;8203:47:227;;8229:9;8240;8203:47;;;;;;27555:25:821;;;27611:2;27596:18;;27589:34;27543:2;27528:18;;27381:248;8203:47:227;;;;;;;;8067:198;;8044:221;-1:-1:-1;;;;;8283:17:227;;;8279:216;;-1:-1:-1;;;;;8378:17:227;;8321;8378;;;:12;:17;;;;;8321;;8361:49;;8397:4;8403:6;8361:16;:49::i;:::-;8320:90;;;;8454:3;-1:-1:-1;;;;;8433:47:227;;8459:9;8470;8433:47;;;;;;27555:25:821;;;27611:2;27596:18;;27589:34;27543:2;27528:18;;27381:248;8433:47:227;;;;;;;;8302:193;;7914:597;;;:::o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;:::-;702:173;;;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;2300:446:83:-;2374:12;351:207;2471:7;;;;:4;:7;:::i;:::-;2496:25;;;;;;;;:::i;:::-;2539:13;;;;2570:10;;;;2598:13;;;;;;;;:::i;:::-;2629:27;;;;;;;;:::i;:::-;2674:25;;;;;;;;:::i;:::-;2417:322;;;;;;28297:25:821;;;;-1:-1:-1;;;;;28396:15:821;;;28376:18;;;28369:43;28448:15;;;28428:18;;;28421:43;28480:18;;;28473:34;;;;28523:19;;;28516:35;;;;28588:15;;;28567:19;;;28560:44;-1:-1:-1;;;;;28679:15:821;;;2717:8:83;28658:19:821;;;28651:44;;;;28732:15;;28711:19;;;28704:44;2717:8:83;;;28764:19:821;;;28757:35;28269:19;;2417:322:83;;;;;;;;;;;;2398:341;;2300:446;;;:::o;4339:165:240:-;4416:7;4442:55;4464:20;:18;:20::i;3674:227:239:-;3752:7;3772:17;3791:18;3813:27;3824:4;3830:9;3813:10;:27::i;:::-;3771:69;;;;3850:18;3862:5;3850:11;:18::i;:::-;-1:-1:-1;3885:9:239;3674:227;-1:-1:-1;;;3674:227:239:o;5022:1456::-;5110:7;;-1:-1:-1;;;;;6021:79:239;;6017:161;;;-1:-1:-1;6132:1:239;;-1:-1:-1;6136:30:239;6116:51;;6017:161;6289:24;;;6272:14;6289:24;;;;;;;;;29030:25:821;;;29103:4;29091:17;;29071:18;;;29064:45;;;;29125:18;;;29118:34;;;29168:18;;;29161:34;;;6289:24:239;;29002:19:821;;6289:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6289:24:239;;-1:-1:-1;;6289:24:239;;;-1:-1:-1;;;;;;;6327:20:239;;6323:101;;6379:1;6383:29;6363:50;;;;;;;6323:101;6442:6;-1:-1:-1;6450:20:239;;-1:-1:-1;5022:1456:239;;;;;;;;:::o;583:511::-;660:20;651:5;:29;;;;;;;;:::i;:::-;;647:441;;583:511;:::o;647:441::-;756:29;747:5;:38;;;;;;;;:::i;:::-;;743:345;;801:34;;-1:-1:-1;;;801:34:239;;29540:2:821;801:34:239;;;29522:21:821;29579:2;29559:18;;;29552:30;-1:-1:-1;;;29598:18:821;;;29591:54;29662:18;;801:34:239;29338:348:821;743:345:239;865:35;856:5;:44;;;;;;;;:::i;:::-;;852:236;;916:41;;-1:-1:-1;;;916:41:239;;29893:2:821;916:41:239;;;29875:21:821;29932:2;29912:18;;;29905:30;29971:33;29951:18;;;29944:61;30022:18;;916:41:239;29691:355:821;852:236:239;987:30;978:5;:39;;;;;;;;:::i;:::-;;974:114;;1033:44;;-1:-1:-1;;;1033:44:239;;30253:2:821;1033:44:239;;;30235:21:821;30292:2;30272:18;;;30265:30;30331:34;30311:18;;;30304:62;-1:-1:-1;;;30382:18:821;;;30375:32;30424:19;;1033:44:239;30051:398:821;1135:192:242;1192:7;-1:-1:-1;;;;;1219:26:242;;;1211:78;;;;-1:-1:-1;;;1211:78:242;;30656:2:821;1211:78:242;;;30638:21:821;30695:2;30675:18;;;30668:30;30734:34;30714:18;;;30707:62;-1:-1:-1;;;30785:18:821;;;30778:37;30832:19;;1211:78:242;30454:403:821;2482:292:292;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;31274:2:821;2719:48:292;;;31256:21:821;31313:2;31293:18;;;31286:30;-1:-1:-1;;;31332:18:821;;;31325:58;31400:18;;2719:48:292;31072:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;31631:2:821;8110:60:289;;;31613:21:821;31670:2;31650:18;;;31643:30;31709:31;31689:18;;;31682:59;31758:18;;8110:60:289;31429:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;3143:308:240:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:240;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:240;;3143:308::o;3215:230::-;3370:64;3392:10;3404:12;3418:15;3370:21;:64::i;2158:730:239:-;2239:7;2248:12;2276:9;:16;2296:2;2276:22;2272:610;;2612:4;2597:20;;2591:27;2661:4;2646:20;;2640:27;2718:4;2703:20;;2697:27;2314:9;2689:36;2759:25;2770:4;2689:36;2591:27;2640;2759:10;:25::i;:::-;2752:32;;;;;;;;;2272:610;-1:-1:-1;2831:1:239;;-1:-1:-1;2835:35:239;2272:610;2158:730;;;;;:::o;759:175:228:-;868:58;;-1:-1:-1;;;;;31979:32:821;;868:58:228;;;31961:51:821;32028:18;;;32021:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;31934:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;32324:15:821;;;1067:68:228;;;32306:34:821;32376:15;;32356:18;;;32349:43;32408:18;;;32401:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;32241:18:821;;1067:68:228;32066:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3457:257:240:-;3597:7;3644:8;3654;3664:11;3677:13;3700:4;3633:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;:::o;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;32930:2:821;3711:85:228;;;32912:21:821;32969:2;32949:18;;;32942:30;33008:34;32988:18;;;32981:62;-1:-1:-1;;;33059:18:821;;;33052:40;33109:19;;3711:85:228;32728:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;14:250:821:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:821;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:821;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:821:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;978:173::-;1046:20;;-1:-1:-1;;;;;1095:31:821;;1085:42;;1075:70;;1141:1;1138;1131:12;1075:70;978:173;;;:::o;1156:254::-;1224:6;1232;1285:2;1273:9;1264:7;1260:23;1256:32;1253:52;;;1301:1;1298;1291:12;1253:52;1324:29;1343:9;1324:29;:::i;:::-;1314:39;1400:2;1385:18;;;;1372:32;;-1:-1:-1;;;1156:254:821:o;1607:186::-;1666:6;1719:2;1707:9;1698:7;1694:23;1690:32;1687:52;;;1735:1;1732;1725:12;1687:52;1758:29;1777:9;1758:29;:::i;1980:328::-;2057:6;2065;2073;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2165:29;2184:9;2165:29;:::i;:::-;2155:39;;2213:38;2247:2;2236:9;2232:18;2213:38;:::i;:::-;2203:48;;2298:2;2287:9;2283:18;2270:32;2260:42;;1980:328;;;;;:::o;2684:180::-;2743:6;2796:2;2784:9;2775:7;2771:23;2767:32;2764:52;;;2812:1;2809;2802:12;2764:52;-1:-1:-1;2835:23:821;;2684:180;-1:-1:-1;2684:180:821:o;3066:765::-;3177:6;3185;3193;3237:9;3228:7;3224:23;3267:3;3263:2;3259:12;3256:32;;;3284:1;3281;3274:12;3256:32;3307:3;3330:2;3326;3322:11;3319:31;;;3346:1;3343;3336:12;3319:31;3369:9;;-1:-1:-1;3414:18:821;;3401:32;;-1:-1:-1;;;;;;3482:14:821;;;3479:34;;;3509:1;3506;3499:12;3479:34;3547:6;3536:9;3532:22;3522:32;;3592:7;3585:4;3581:2;3577:13;3573:27;3563:55;;3614:1;3611;3604:12;3563:55;3654:2;3641:16;3680:2;3672:6;3669:14;3666:34;;;3696:1;3693;3686:12;3666:34;3743:7;3736:4;3727:6;3723:2;3719:15;3715:26;3712:39;3709:59;;;3764:1;3761;3754:12;3709:59;3795:4;3791:2;3787:13;3777:23;;3819:6;3809:16;;;;;3066:765;;;;;:::o;3836:127::-;3897:10;3892:3;3888:20;3885:1;3878:31;3928:4;3925:1;3918:15;3952:4;3949:1;3942:15;3968:922;4037:6;4090:2;4078:9;4069:7;4065:23;4061:32;4058:52;;;4106:1;4103;4096:12;4058:52;4146:9;4133:23;-1:-1:-1;;;;;4216:2:821;4208:6;4205:14;4202:34;;;4232:1;4229;4222:12;4202:34;4270:6;4259:9;4255:22;4245:32;;4315:7;4308:4;4304:2;4300:13;4296:27;4286:55;;4337:1;4334;4327:12;4286:55;4373:2;4360:16;4395:2;4391;4388:10;4385:36;;;4401:18;;:::i;:::-;4476:2;4470:9;4444:2;4530:13;;-1:-1:-1;;4526:22:821;;;4550:2;4522:31;4518:40;4506:53;;;4574:18;;;4594:22;;;4571:46;4568:72;;;4620:18;;:::i;:::-;4660:10;4656:2;4649:22;4695:2;4687:6;4680:18;4735:7;4730:2;4725;4721;4717:11;4713:20;4710:33;4707:53;;;4756:1;4753;4746:12;4707:53;4812:2;4807;4803;4799:11;4794:2;4786:6;4782:15;4769:46;4857:1;4835:15;;;4852:2;4831:24;4824:35;;;;-1:-1:-1;4839:6:821;3968:922;-1:-1:-1;;;;;3968:922:821:o;4895:626::-;4992:6;5000;5053:2;5041:9;5032:7;5028:23;5024:32;5021:52;;;5069:1;5066;5059:12;5021:52;5109:9;5096:23;-1:-1:-1;;;;;5179:2:821;5171:6;5168:14;5165:34;;;5195:1;5192;5185:12;5165:34;5233:6;5222:9;5218:22;5208:32;;5278:7;5271:4;5267:2;5263:13;5259:27;5249:55;;5300:1;5297;5290:12;5249:55;5340:2;5327:16;5366:2;5358:6;5355:14;5352:34;;;5382:1;5379;5372:12;5352:34;5435:7;5430:2;5420:6;5417:1;5413:14;5409:2;5405:23;5401:32;5398:45;5395:65;;;5456:1;5453;5446:12;5395:65;5487:2;5479:11;;;;;5509:6;;-1:-1:-1;4895:626:821;;-1:-1:-1;;;;4895:626:821:o;5526:801::-;5686:4;5715:2;5755;5744:9;5740:18;5785:2;5774:9;5767:21;5808:6;5843;5837:13;5874:6;5866;5859:22;5912:2;5901:9;5897:18;5890:25;;5974:2;5964:6;5961:1;5957:14;5946:9;5942:30;5938:39;5924:53;;6012:2;6004:6;6000:15;6033:1;6043:255;6057:6;6054:1;6051:13;6043:255;;;6150:2;6146:7;6134:9;6126:6;6122:22;6118:36;6113:3;6106:49;6178:40;6211:6;6202;6196:13;6178:40;:::i;:::-;6168:50;-1:-1:-1;6276:12:821;;;;6241:15;;;;6079:1;6072:9;6043:255;;;-1:-1:-1;6315:6:821;;5526:801;-1:-1:-1;;;;;;;5526:801:821:o;6621:156::-;6687:20;;6747:4;6736:16;;6726:27;;6716:55;;6767:1;6764;6757:12;6782:531;6884:6;6892;6900;6908;6916;6924;6977:3;6965:9;6956:7;6952:23;6948:33;6945:53;;;6994:1;6991;6984:12;6945:53;7017:29;7036:9;7017:29;:::i;:::-;7007:39;;7093:2;7082:9;7078:18;7065:32;7055:42;;7144:2;7133:9;7129:18;7116:32;7106:42;;7167:36;7199:2;7188:9;7184:18;7167:36;:::i;:::-;7157:46;;7250:3;7239:9;7235:19;7222:33;7212:43;;7302:3;7291:9;7287:19;7274:33;7264:43;;6782:531;;;;;;;;:::o;7318:606::-;7429:6;7437;7445;7453;7461;7469;7477;7530:3;7518:9;7509:7;7505:23;7501:33;7498:53;;;7547:1;7544;7537:12;7498:53;7570:29;7589:9;7570:29;:::i;:::-;7560:39;;7618:38;7652:2;7641:9;7637:18;7618:38;:::i;:::-;7608:48;;7703:2;7692:9;7688:18;7675:32;7665:42;;7754:2;7743:9;7739:18;7726:32;7716:42;;7777:37;7809:3;7798:9;7794:19;7777:37;:::i;:::-;7767:47;;7861:3;7850:9;7846:19;7833:33;7823:43;;7913:3;7902:9;7898:19;7885:33;7875:43;;7318:606;;;;;;;;;;:::o;7929:260::-;7997:6;8005;8058:2;8046:9;8037:7;8033:23;8029:32;8026:52;;;8074:1;8071;8064:12;8026:52;8097:29;8116:9;8097:29;:::i;:::-;8087:39;;8145:38;8179:2;8168:9;8164:18;8145:38;:::i;:::-;8135:48;;7929:260;;;;;:::o;8194:350::-;8261:6;8269;8322:2;8310:9;8301:7;8297:23;8293:32;8290:52;;;8338:1;8335;8328:12;8290:52;8361:29;8380:9;8361:29;:::i;:::-;8351:39;;8440:2;8429:9;8425:18;8412:32;8484:10;8477:5;8473:22;8466:5;8463:33;8453:61;;8510:1;8507;8500:12;8453:61;8533:5;8523:15;;;8194:350;;;;;:::o;8902:380::-;8981:1;8977:12;;;;9024;;;9045:61;;9099:4;9091:6;9087:17;9077:27;;9045:61;9152:2;9144:6;9141:14;9121:18;9118:38;9115:161;;9198:10;9193:3;9189:20;9186:1;9179:31;9233:4;9230:1;9223:15;9261:4;9258:1;9251:15;9287:338;9489:2;9471:21;;;9528:2;9508:18;;;9501:30;-1:-1:-1;;;9562:2:821;9547:18;;9540:44;9616:2;9601:18;;9287:338::o;9630:127::-;9691:10;9686:3;9682:20;9679:1;9672:31;9722:4;9719:1;9712:15;9746:4;9743:1;9736:15;9762:125;9827:9;;;9848:10;;;9845:36;;;9861:18;;:::i;9892:355::-;10094:2;10076:21;;;10133:2;10113:18;;;10106:30;10172:33;10167:2;10152:18;;10145:61;10238:2;10223:18;;9892:355::o;10252:342::-;10454:2;10436:21;;;10493:2;10473:18;;;10466:30;-1:-1:-1;;;10527:2:821;10512:18;;10505:48;10585:2;10570:18;;10252:342::o;10951:344::-;11153:2;11135:21;;;11192:2;11172:18;;;11165:30;-1:-1:-1;;;11226:2:821;11211:18;;11204:50;11286:2;11271:18;;10951:344::o;11652:128::-;11719:9;;;11740:11;;;11737:37;;;11754:18;;:::i;11785:173::-;11853:20;;-1:-1:-1;;;;;11902:31:821;;11892:42;;11882:70;;11948:1;11945;11938:12;11963:936;12159:3;12144:19;;-1:-1:-1;;;;;12182:19:821;12232:26;12251:6;12232:26;:::i;:::-;12228:35;12217:9;12210:54;12345:2;12306:37;12337:4;12329:6;12325:17;12306:37;:::i;:::-;12302:46;12295:4;12284:9;12280:20;12273:76;12412:4;12404:6;12400:17;12387:31;12380:4;12369:9;12365:20;12358:61;12482:4;12474:6;12470:17;12457:31;12450:4;12439:9;12435:20;12428:61;12570:2;12531:37;12562:4;12554:6;12550:17;12531:37;:::i;:::-;12527:46;12520:4;12509:9;12505:20;12498:76;;12603:37;12634:4;12626:6;12622:17;12603:37;:::i;:::-;-1:-1:-1;;;;;12716:21:821;;;12709:4;12694:20;;12687:51;12659:19;12780:37;12811:4;12799:17;;12780:37;:::i;:::-;12776:46;12769:4;12758:9;12754:20;12747:76;;;12886:4;12878:6;12874:17;12861:31;12854:4;12843:9;12839:20;12832:61;11963:936;;;;:::o;12904:127::-;12965:10;12960:3;12956:20;12953:1;12946:31;12996:4;12993:1;12986:15;13020:4;13017:1;13010:15;13442:521;13519:4;13525:6;13585:11;13572:25;13679:2;13675:7;13664:8;13648:14;13644:29;13640:43;13620:18;13616:68;13606:96;;13698:1;13695;13688:12;13606:96;13725:33;;13777:20;;;-1:-1:-1;;;;;;13809:30:821;;13806:50;;;13852:1;13849;13842:12;13806:50;13885:4;13873:17;;-1:-1:-1;13916:14:821;13912:27;;;13902:38;;13899:58;;;13953:1;13950;13943:12;13968:352;14179:6;14171;14166:3;14153:33;14274:2;14245:15;;;;-1:-1:-1;;;;;;14241:45:821;14205:16;;14230:57;;;14311:2;14303:11;;13968:352;-1:-1:-1;13968:352:821:o;19155:489::-;19414:25;;;19470:2;19455:18;;19448:34;;;;19513:2;19498:18;;19491:34;;;;19556:2;19541:18;;19534:34;-1:-1:-1;;;;;19605:32:821;19599:3;19584:19;;19577:61;19401:3;19386:19;;19155:489::o;21163:186::-;21222:6;21275:2;21263:9;21254:7;21250:23;21246:32;21243:52;;;21291:1;21288;21281:12;21243:52;21314:29;21333:9;21314:29;:::i;23537:543::-;23639:2;23634:3;23631:11;23628:446;;;23675:1;23699:5;23696:1;23689:16;23743:4;23740:1;23730:18;23813:2;23801:10;23797:19;23794:1;23790:27;23784:4;23780:38;23849:4;23837:10;23834:20;23831:47;;;-1:-1:-1;23872:4:821;23831:47;23927:2;23922:3;23918:12;23915:1;23911:20;23905:4;23901:31;23891:41;;23982:82;24000:2;23993:5;23990:13;23982:82;;;24045:17;;;24026:1;24015:13;23982:82;;;23986:3;;;23537:543;;;:::o;24256:1345::-;24382:3;24376:10;-1:-1:-1;;;;;24401:6:821;24398:30;24395:56;;;24431:18;;:::i;:::-;24460:97;24550:6;24510:38;24542:4;24536:11;24510:38;:::i;:::-;24504:4;24460:97;:::i;:::-;24612:4;;24669:2;24658:14;;24686:1;24681:663;;;;25388:1;25405:6;25402:89;;;-1:-1:-1;25457:19:821;;;25451:26;25402:89;-1:-1:-1;;24213:1:821;24209:11;;;24205:24;24201:29;24191:40;24237:1;24233:11;;;24188:57;25504:81;;24651:944;;24681:663;23484:1;23477:14;;;23521:4;23508:18;;-1:-1:-1;;24717:20:821;;;24835:236;24849:7;24846:1;24843:14;24835:236;;;24938:19;;;24932:26;24917:42;;25030:27;;;;24998:1;24986:14;;;;24865:19;;24835:236;;;24839:3;25099:6;25090:7;25087:19;25084:201;;;25160:19;;;25154:26;-1:-1:-1;;25243:1:821;25239:14;;;25255:3;25235:24;25231:37;25227:42;25212:58;25197:74;;25084:201;-1:-1:-1;;;;;25331:1:821;25315:14;;;25311:22;25298:36;;-1:-1:-1;24256:1345:821:o;25606:383::-;25803:2;25792:9;25785:21;25766:4;25829:45;25870:2;25859:9;25855:18;25847:6;25829:45;:::i;:::-;25922:9;25914:6;25910:22;25905:2;25894:9;25890:18;25883:50;25950:33;25976:6;25968;25950:33;:::i;:::-;25942:41;25606:383;-1:-1:-1;;;;;25606:383:821:o;25994:217::-;26034:1;26060;26050:132;;26104:10;26099:3;26095:20;26092:1;26085:31;26139:4;26136:1;26129:15;26167:4;26164:1;26157:15;26050:132;-1:-1:-1;26196:9:821;;25994:217::o;27634:287::-;27763:3;27801:6;27795:13;27817:66;27876:6;27871:3;27864:4;27856:6;27852:17;27817:66;:::i;:::-;27899:16;;;;;27634:287;-1:-1:-1;;27634:287:821:o;29206:127::-;29267:10;29262:3;29258:20;29255:1;29248:31;29298:4;29295:1;29288:15;29322:4;29319:1;29312:15;32446:277;32513:6;32566:2;32554:9;32545:7;32541:23;32537:32;32534:52;;;32582:1;32579;32572:12;32534:52;32614:9;32608:16;32667:5;32660:13;32653:21;32646:5;32643:32;32633:60;;32689:1;32686;32679:12",
    "linkReferences": {},
    "immutableReferences": {
      "48074": [
        {
          "start": 1966,
          "length": 32
        }
      ],
      "48076": [
        {
          "start": 1924,
          "length": 32
        }
      ],
      "48078": [
        {
          "start": 1882,
          "length": 32
        }
      ],
      "48083": [
        {
          "start": 4196,
          "length": 32
        }
      ],
      "50547": [
        {
          "start": 10655,
          "length": 32
        }
      ],
      "50549": [
        {
          "start": 10613,
          "length": 32
        }
      ],
      "50551": [
        {
          "start": 10571,
          "length": 32
        }
      ],
      "50553": [
        {
          "start": 10727,
          "length": 32
        }
      ],
      "50555": [
        {
          "start": 10760,
          "length": 32
        }
      ],
      "50557": [
        {
          "start": 10694,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "mintTo(address,uint256)": "449a52f8",
    "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "8f0fefbb",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "c1b606e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"TokensMinted(address,uint256)\":{\"details\":\"Emitted when tokens are minted with `mintTo`\"},\"TokensMintedWithSignature(address,address,(address,address,uint256,uint256,address,uint128,uint128,bytes32))\":{\"details\":\"Emitted when tokens are minted.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Caller should own the `_amount` of tokens.\",\"params\":{\"_amount\":\"The number of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"`_account` should own the `_amount` of tokens.\",\"params\":{\"_account\":\"The account to burn tokens from.\",\"_amount\":\"The number of tokens to burn.\"}},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintTo(address,uint256)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\",\"params\":{\"_amount\":\"Quantity of tokens to mint.\",\"_to\":\"The recipient of the tokens to mint.\"}},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Lets an owner a given amount of their tokens.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Lets an owner burn a given amount of an account's tokens.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an authorized address mint tokens to a recipient.\"},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"notice\":\"BASE:      ERC20Vote      EXTENSION: SignatureMintERC20  The `ERC20SignatureMint` contract uses the `ERC20Vote` contract, along with the `SignatureMintERC20` extension.  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC20SignatureMintVote.sol\":\"ERC20SignatureMintVote\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC20Base.sol\":{\"keccak256\":\"0x1d15b80763249bb85880f4d5864d7ffb11759daf725e0274287e679cf8eef4d7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://089433bbc23d3d8a85b69b0ecce874beec6eee64507493b19f6eeac8dad8d049\",\"dweb:/ipfs/QmZ3oWyBopPKajzm6apJspj5UjRZtXaxBbM5atTmJk8kuL\"]},\"contracts/base/ERC20SignatureMintVote.sol\":{\"keccak256\":\"0xa02c4898b7d0768227fe45c3564ac147984f9376d7e827fe682e3ca5c6a516b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ece14a59e40ee6b556635ffb1e74762141bdf218f9e11ba07b2d75e28bf9ee0\",\"dweb:/ipfs/QmWEASyYF852aVqo5UAt3ggR4YUfSpeAWPXBNyG5rner9m\"]},\"contracts/base/ERC20Vote.sol\":{\"keccak256\":\"0x82059388c52fad8bc8163c7a1daf5c5251ac228f02082f61ddea4d01658f40fa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ca7d81d5fe482d43e45f4871b4371960ad79fe216ce91b4faf356e23e57b2b7\",\"dweb:/ipfs/QmauqvhRaqAbytC3YyhYbHrHfq9breJHy4Bo9y5FDFj5ab\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/SignatureMintERC20.sol\":{\"keccak256\":\"0x5442271b7bdc1d322fd3644ce40ae8d753b5a2ac265f4083eba2085cfc81f724\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d30874146394448c2cf3e9cc3365baefb9b27b16cb34b1457afe3d022a54be9c\",\"dweb:/ipfs/Qmatpg7mwyxsEPyb1bT8Y8hMp3rY3aGHXJCzB6sJt4qTnW\"]},\"contracts/extension/interface/IBurnableERC20.sol\":{\"keccak256\":\"0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe\",\"dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMintableERC20.sol\":{\"keccak256\":\"0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4\",\"dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/ISignatureMintERC20.sol\":{\"keccak256\":\"0x0ab04c0efe1f8398dc9f6922b639dd7794c85cf50a195feb30ef0155db5a12bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d7fa322a853d5f8f371ee7d90a3364086284efba78112f378fe8783592ba02cf\",\"dweb:/ipfs/QmVEoAUS6ETzV4JZtZfwZ9avM8wmd9GHgwTBybciNi5zKS\"]},\"contracts/external-deps/openzeppelin/governance/utils/IVotes.sol\":{\"keccak256\":\"0x0e774440198e74443c22645f90a9cc505ae55a055c4527ca9eae5db1fc1ab110\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7431e8b27ceeb7d60e8d61e9a9dfb7f721d8ae9984dbd3fcd98186741009749a\",\"dweb:/ipfs/QmWUkeWPPb95qedSpHWxqUVaaH99e2wcesPbEvd6oBCQhB\"]},\"contracts/external-deps/openzeppelin/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x541806757302ea976b52d48ff7df59f50ec72c10684254e4f17c181f46fd381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b84a81fe700e99fc4741c535a84b008481160ec152da34d8ca49a99ea3a9396b\",\"dweb:/ipfs/Qmb3nCYyECbyFiobDHRNDop3qTYoGNt7FusxXpQNWj5dDn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x4bd6e2c824d3306bf73098f468366fc5ab8bc302065b8dbe40100115ac19579c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63c8e1da97d932e80e6916c068c7d275b0de0fd8ba42ddcf8949febd94a4455a\",\"dweb:/ipfs/QmSaKN8JXUiEwqTJZ7DhjocMwppXr6725ozguwdtHmw7Sn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7c62135b4b377f5d5bbbceb1e850e2b6a99f334ea1005116eef207db2f3f9ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7bdb28a4dd8b3d8aeb0537c906c7ff60a5979dadd14103fa3662e3e511e257d\",\"dweb:/ipfs/QmNd6D8ohBbXNTqET38aAFxyQKkJUu5PQHfFQvN833N1fn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/external-deps/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe\",\"dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/external-deps/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Caller should own the `_amount` of tokens.",
            "params": {
              "_amount": "The number of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "`_account` should own the `_amount` of tokens.",
            "params": {
              "_account": "The account to burn tokens from.",
              "_amount": "The number of tokens to burn."
            }
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mintTo(address,uint256)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.",
            "params": {
              "_amount": "Quantity of tokens to mint.",
              "_to": "The recipient of the tokens to mint."
            }
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Lets an owner a given amount of their tokens."
          },
          "burnFrom(address,uint256)": {
            "notice": "Lets an owner burn a given amount of an account's tokens."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an authorized address mint tokens to a recipient."
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC20SignatureMintVote.sol": "ERC20SignatureMintVote"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC20Base.sol": {
        "keccak256": "0x1d15b80763249bb85880f4d5864d7ffb11759daf725e0274287e679cf8eef4d7",
        "urls": [
          "bzz-raw://089433bbc23d3d8a85b69b0ecce874beec6eee64507493b19f6eeac8dad8d049",
          "dweb:/ipfs/QmZ3oWyBopPKajzm6apJspj5UjRZtXaxBbM5atTmJk8kuL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20SignatureMintVote.sol": {
        "keccak256": "0xa02c4898b7d0768227fe45c3564ac147984f9376d7e827fe682e3ca5c6a516b3",
        "urls": [
          "bzz-raw://8ece14a59e40ee6b556635ffb1e74762141bdf218f9e11ba07b2d75e28bf9ee0",
          "dweb:/ipfs/QmWEASyYF852aVqo5UAt3ggR4YUfSpeAWPXBNyG5rner9m"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20Vote.sol": {
        "keccak256": "0x82059388c52fad8bc8163c7a1daf5c5251ac228f02082f61ddea4d01658f40fa",
        "urls": [
          "bzz-raw://6ca7d81d5fe482d43e45f4871b4371960ad79fe216ce91b4faf356e23e57b2b7",
          "dweb:/ipfs/QmauqvhRaqAbytC3YyhYbHrHfq9breJHy4Bo9y5FDFj5ab"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC20.sol": {
        "keccak256": "0x5442271b7bdc1d322fd3644ce40ae8d753b5a2ac265f4083eba2085cfc81f724",
        "urls": [
          "bzz-raw://d30874146394448c2cf3e9cc3365baefb9b27b16cb34b1457afe3d022a54be9c",
          "dweb:/ipfs/Qmatpg7mwyxsEPyb1bT8Y8hMp3rY3aGHXJCzB6sJt4qTnW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IBurnableERC20.sol": {
        "keccak256": "0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272",
        "urls": [
          "bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe",
          "dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMintableERC20.sol": {
        "keccak256": "0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e",
        "urls": [
          "bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4",
          "dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC20.sol": {
        "keccak256": "0x0ab04c0efe1f8398dc9f6922b639dd7794c85cf50a195feb30ef0155db5a12bb",
        "urls": [
          "bzz-raw://d7fa322a853d5f8f371ee7d90a3364086284efba78112f378fe8783592ba02cf",
          "dweb:/ipfs/QmVEoAUS6ETzV4JZtZfwZ9avM8wmd9GHgwTBybciNi5zKS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/governance/utils/IVotes.sol": {
        "keccak256": "0x0e774440198e74443c22645f90a9cc505ae55a055c4527ca9eae5db1fc1ab110",
        "urls": [
          "bzz-raw://7431e8b27ceeb7d60e8d61e9a9dfb7f721d8ae9984dbd3fcd98186741009749a",
          "dweb:/ipfs/QmWUkeWPPb95qedSpHWxqUVaaH99e2wcesPbEvd6oBCQhB"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/ERC20.sol": {
        "keccak256": "0x541806757302ea976b52d48ff7df59f50ec72c10684254e4f17c181f46fd381f",
        "urls": [
          "bzz-raw://b84a81fe700e99fc4741c535a84b008481160ec152da34d8ca49a99ea3a9396b",
          "dweb:/ipfs/Qmb3nCYyECbyFiobDHRNDop3qTYoGNt7FusxXpQNWj5dDn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x4bd6e2c824d3306bf73098f468366fc5ab8bc302065b8dbe40100115ac19579c",
        "urls": [
          "bzz-raw://63c8e1da97d932e80e6916c068c7d275b0de0fd8ba42ddcf8949febd94a4455a",
          "dweb:/ipfs/QmSaKN8JXUiEwqTJZ7DhjocMwppXr6725ozguwdtHmw7Sn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x7c62135b4b377f5d5bbbceb1e850e2b6a99f334ea1005116eef207db2f3f9ec1",
        "urls": [
          "bzz-raw://f7bdb28a4dd8b3d8aeb0537c906c7ff60a5979dadd14103fa3662e3e511e257d",
          "dweb:/ipfs/QmNd6D8ohBbXNTqET38aAFxyQKkJUu5PQHfFQvN833N1fn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b",
        "urls": [
          "bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe",
          "dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/Math.sol": {
        "keccak256": "0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2",
        "urls": [
          "bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6",
          "dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeCast.sol": {
        "keccak256": "0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7",
        "urls": [
          "bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1",
          "dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC20SignatureMintVote.sol",
    "id": 3494,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "Context": [
        49279
      ],
      "ContractMetadata": [
        18093
      ],
      "Counters": [
        49353
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ECDSA": [
        50541
      ],
      "EIP712": [
        50695
      ],
      "ERC20": [
        48051
      ],
      "ERC20Base": [
        2496
      ],
      "ERC20Permit": [
        48293
      ],
      "ERC20SignatureMintVote": [
        3493
      ],
      "ERC20Vote": [
        3702
      ],
      "ERC20Votes": [
        48940
      ],
      "IBurnableERC20": [
        32899
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC20": [
        14015
      ],
      "IERC20Metadata": [
        14034
      ],
      "IERC20Permit": [
        14070
      ],
      "IMintableERC20": [
        33540
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPrimarySale": [
        33997
      ],
      "IVotes": [
        46179
      ],
      "Math": [
        50783
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "PrimarySale": [
        22703
      ],
      "SafeCast": [
        51176
      ],
      "SignatureMintERC20": [
        24141
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4133:9",
    "nodes": [
      {
        "id": 3294,
        "nodeType": "PragmaDirective",
        "src": "39:23:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3295,
        "nodeType": "ImportDirective",
        "src": "86:25:9",
        "nodes": [],
        "absolutePath": "contracts/base/ERC20Vote.sol",
        "file": "./ERC20Vote.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3494,
        "sourceUnit": 3703,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3296,
        "nodeType": "ImportDirective",
        "src": "113:38:9",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3494,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3298,
        "nodeType": "ImportDirective",
        "src": "152:73:9",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC20.sol",
        "file": "../extension/SignatureMintERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3494,
        "sourceUnit": 24142,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3297,
              "name": "SignatureMintERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24141,
              "src": "161:18:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3300,
        "nodeType": "ImportDirective",
        "src": "227:69:9",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3494,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3299,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "236:19:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3493,
        "nodeType": "ContractDefinition",
        "src": "879:3292:9",
        "nodes": [
          {
            "id": 3328,
            "nodeType": "FunctionDefinition",
            "src": "1142:255:9",
            "nodes": [],
            "body": {
              "id": 3327,
              "nodeType": "Block",
              "src": "1331:66:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3324,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3315,
                        "src": "1368:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3323,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "1341:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3326,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:49:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3318,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3309,
                    "src": "1300:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3319,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3311,
                    "src": "1315:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3320,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3313,
                    "src": "1322:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3321,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3317,
                  "name": "ERC20Vote",
                  "nameLocations": [
                    "1290:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3702,
                  "src": "1290:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1290:40:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1171:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3328,
                  "src": "1163:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1208:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3328,
                  "src": "1194:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3313,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1237:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3328,
                  "src": "1223:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3315,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1262:21:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3328,
                  "src": "1254:29:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:136:9"
            },
            "returnParameters": {
              "id": 3322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:0:9"
            },
            "scope": 3493,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3392,
            "nodeType": "FunctionDefinition",
            "src": "1835:952:9",
            "nodes": [],
            "body": {
              "id": 3391,
              "nodeType": "Block",
              "src": "1988:799:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3340,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "2006:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                              "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                            }
                          },
                          "id": 3341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2011:8:9",
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34451,
                          "src": "2006:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2022:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2006:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 3339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1998:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3346,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:50:9"
                },
                {
                  "expression": {
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3347,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3337,
                      "src": "2098:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3349,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "2123:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        {
                          "id": 3350,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3334,
                          "src": "2129:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 3348,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24086,
                        "src": "2107:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34462_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC20.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 3351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2107:33:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2098:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3353,
                  "nodeType": "ExpressionStatement",
                  "src": "2098:42:9"
                },
                {
                  "assignments": [
                    3356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3356,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2485:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 3391,
                      "src": "2477:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3355,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "  Get receiver of tokens.\n  Note: If `_req.to == address(0)`, a `mintWithSignature` transaction sitting in the\n        mempool can be frontrun by copying the input data, since the minted tokens\n        will be sent to the `_msgSender()` in this case.",
                  "id": 3369,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3357,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "2496:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2501:2:9",
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34447,
                        "src": "2496:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2515:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2507:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2507:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2507:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2496:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 3366,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "2533:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      },
                      "id": 3367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2538:2:9",
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34447,
                      "src": "2533:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2496:44:9",
                    "trueExpression": {
                      "expression": {
                        "id": 3364,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2520:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2524:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2520:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2477:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3371,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "2597:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2602:20:9",
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34449,
                        "src": "2597:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3373,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "2624:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2629:8:9",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34455,
                        "src": "2624:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3375,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "2639:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2644:5:9",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34453,
                        "src": "2639:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3370,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "2576:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:74:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3378,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:74:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3380,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3356,
                        "src": "2691:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3381,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "2701:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2706:8:9",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34451,
                        "src": "2701:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3379,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48654
                      ],
                      "referencedDeclaration": 48654,
                      "src": "2685:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:30:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3386,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3337,
                        "src": "2757:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3387,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3356,
                        "src": "2765:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3388,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "2775:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      ],
                      "id": 3385,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34472,
                      "src": "2731:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_MintRequest_$34462_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureMintERC20.MintRequest memory)"
                      }
                    },
                    "id": 3389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3390,
                  "nodeType": "EmitStatement",
                  "src": "2726:54:9"
                }
              ]
            },
            "baseFunctions": [
              34496
            ],
            "documentation": {
              "id": 3329,
              "nodeType": "StructuredDocumentation",
              "src": "1590:240:9",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "8f0fefbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1844:17:9",
            "parameters": {
              "id": 3335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3332,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1892:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "1871:25:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                    "typeString": "struct ISignatureMintERC20.MintRequest"
                  },
                  "typeName": {
                    "id": 3331,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3330,
                      "name": "MintRequest",
                      "nameLocations": [
                        "1871:11:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34462,
                      "src": "1871:11:9"
                    },
                    "referencedDeclaration": 34462,
                    "src": "1871:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34462_storage_ptr",
                      "typeString": "struct ISignatureMintERC20.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3334,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1921:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "1906:25:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1861:76:9"
            },
            "returnParameters": {
              "id": 3338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3337,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1980:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "1972:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:16:9"
            },
            "scope": 3493,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3407,
            "nodeType": "FunctionDefinition",
            "src": "3061:134:9",
            "nodes": [],
            "body": {
              "id": 3406,
              "nodeType": "Block",
              "src": "3153:42:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3401,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3395,
                      "src": "3170:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3402,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3181:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3181:7:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3170:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3400,
                  "id": 3405,
                  "nodeType": "Return",
                  "src": "3163:25:9"
                }
              ]
            },
            "baseFunctions": [
              24016
            ],
            "documentation": {
              "id": 3393,
              "nodeType": "StructuredDocumentation",
              "src": "2979:77:9",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3070:19:9",
            "overrides": {
              "id": 3397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3129:8:9"
            },
            "parameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3395,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3098:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3407,
                  "src": "3090:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3090:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3089:17:9"
            },
            "returnParameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3407,
                  "src": "3147:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3146:6:9"
            },
            "scope": 3493,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3421,
            "nodeType": "FunctionDefinition",
            "src": "3296:130:9",
            "nodes": [],
            "body": {
              "id": 3420,
              "nodeType": "Block",
              "src": "3381:45:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3414,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3398:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3402:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3398:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3416,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3412:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3412:7:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3398:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3413,
                  "id": 3419,
                  "nodeType": "Return",
                  "src": "3391:28:9"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 3408,
              "nodeType": "StructuredDocumentation",
              "src": "3201:90:9",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3305:27:9",
            "overrides": {
              "id": 3410,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3357:8:9"
            },
            "parameters": {
              "id": 3409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3332:2:9"
            },
            "returnParameters": {
              "id": 3413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "3375:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:6:9"
            },
            "scope": 3493,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3492,
            "nodeType": "FunctionDefinition",
            "src": "3518:651:9",
            "nodes": [],
            "body": {
              "id": 3491,
              "nodeType": "Block",
              "src": "3631:538:9",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3431,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3428,
                      "src": "3645:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3655:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3645:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3444,
                  "nodeType": "IfStatement",
                  "src": "3641:95:9",
                  "trueBody": {
                    "id": 3443,
                    "nodeType": "Block",
                    "src": "3658:78:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3435,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3680:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3684:5:9",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3680:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3693:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3680:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 3439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3696:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 3434,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3672:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3672:33:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3441,
                        "nodeType": "ExpressionStatement",
                        "src": "3672:33:9"
                      },
                      {
                        "functionReturnParameters": 3430,
                        "id": 3442,
                        "nodeType": "Return",
                        "src": "3719:7:9"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3445,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3426,
                      "src": "3750:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3446,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "3763:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 3447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3783:12:9",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "3763:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3750:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3466,
                    "nodeType": "Block",
                    "src": "3882:70:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3459,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3904:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3908:5:9",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3904:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3917:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3904:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d73672076616c7565206e6f74207a65726f",
                              "id": 3463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3920:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              },
                              "value": "msg value not zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              }
                            ],
                            "id": 3458,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3896:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3896:45:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3465,
                        "nodeType": "ExpressionStatement",
                        "src": "3896:45:9"
                      }
                    ]
                  },
                  "id": 3467,
                  "nodeType": "IfStatement",
                  "src": "3746:206:9",
                  "trueBody": {
                    "id": 3457,
                    "nodeType": "Block",
                    "src": "3797:79:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3450,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3819:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3823:5:9",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3819:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3452,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3428,
                                "src": "3832:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3819:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742073656e6420746f74616c2070726963652e",
                              "id": 3454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3840:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              },
                              "value": "Must send total price."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              }
                            ],
                            "id": 3449,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3811:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3811:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3456,
                        "nodeType": "ExpressionStatement",
                        "src": "3811:54:9"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3469,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "3970:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 3491,
                      "src": "3962:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3468,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3962:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3480,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3470,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "3986:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4019:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4011:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4011:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4011:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3986:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 3478,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3424,
                      "src": "4049:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3986:84:9",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3476,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "4024:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4024:22:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3962:108:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3484,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "4117:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3485,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4128:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4132:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4128:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3487,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3469,
                        "src": "4140:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3488,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3428,
                        "src": "4155:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3481,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4080:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 3483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4100:16:9",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "4080:36:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4080:82:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "4080:82:9"
                }
              ]
            },
            "documentation": {
              "id": 3422,
              "nodeType": "StructuredDocumentation",
              "src": "3432:81:9",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3527:20:9",
            "parameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3556:21:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "3548:29:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3426,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3587:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "3579:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3579:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3428,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3606:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "3598:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3547:66:9"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3631:0:9"
            },
            "scope": 3493,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3302,
              "name": "ERC20Vote",
              "nameLocations": [
                "914:9:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3702,
              "src": "914:9:9"
            },
            "id": 3303,
            "nodeType": "InheritanceSpecifier",
            "src": "914:9:9"
          },
          {
            "baseName": {
              "id": 3304,
              "name": "PrimarySale",
              "nameLocations": [
                "925:11:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "925:11:9"
            },
            "id": 3305,
            "nodeType": "InheritanceSpecifier",
            "src": "925:11:9"
          },
          {
            "baseName": {
              "id": 3306,
              "name": "SignatureMintERC20",
              "nameLocations": [
                "938:18:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24141,
              "src": "938:18:9"
            },
            "id": 3307,
            "nodeType": "InheritanceSpecifier",
            "src": "938:18:9"
          }
        ],
        "canonicalName": "ERC20SignatureMintVote",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3301,
          "nodeType": "StructuredDocumentation",
          "src": "298:579:9",
          "text": "      BASE:      ERC20Vote\n      EXTENSION: SignatureMintERC20\n  The `ERC20SignatureMint` contract uses the `ERC20Vote` contract, along with the `SignatureMintERC20` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "48925": 1,
          "48939": 2
        },
        "linearizedBaseContracts": [
          3493,
          24141,
          34497,
          50695,
          22703,
          33997,
          3702,
          32899,
          33540,
          48940,
          48293,
          14070,
          48051,
          14034,
          14015,
          49279,
          46179,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084
        ],
        "name": "ERC20SignatureMintVote",
        "nameLocation": "888:22:9",
        "scope": 3494,
        "usedErrors": [],
        "usedEvents": [
          14006,
          14014,
          33083,
          33531,
          33833,
          33996,
          34472,
          46113,
          46122
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 9
}