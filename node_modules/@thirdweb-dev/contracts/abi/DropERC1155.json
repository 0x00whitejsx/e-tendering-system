{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "saleRecipient",
          "type": "address"
        }
      ],
      "name": "SaleRecipientForTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop1155.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "freezeBatchBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "saleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setSaleRecipientForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "updateBatchBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop1155.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1607:12838:331:-:0;;;4007:28;;;;;;;;;-1:-1:-1;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:450;1713:19:476;:23;;;3387:66:450;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;216:2:821;3325:201:450;;;198:21:821;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:821;;;338:44;399:19;;3325:201:450;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3651:14;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;581:36:821;;3721:14:450;;569:2:821;554:18;3721:14:450;;;;;;;3647:99;3269:483;1607:12838:331;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102c15760003560e01c80638da5cb5b116101775780638da5cb5b146107205780639010d07c1461073e57806391d148541461075e578063938e3d7b1461077e57806395d89b411461079e5780639bcf7a15146107b3578063a07ced9e146107d3578063a0a8e460146107f3578063a217fddf1461080f578063a22cb46514610824578063a32fa5b314610844578063ac9650d814610864578063b24f2d3914610891578063b6f10c79146108bc578063bd85b039146108dc578063c7337d6b14610909578063ca15c8731461093f578063cb2ef6f71461095f578063d37c353b14610980578063d45573f6146109a0578063d45b28d7146109b5578063d547741f146109e2578063de903ddd14610a02578063e159163414610a22578063e57553da14610a42578063e8a3d48514610a66578063e9703d2514610a7b578063e985e9c514610ac4578063ea1def9c14610b0d578063f242432a14610b2d578063f28083c314610b4d57600080fd5b8062fdd58e146102c657806301ffc9a7146102f957806306fdde0314610329578063079fe40e1461034b5780630e89341c1461036d57806313af40351461038d578063183718d1146103af5780631e7ac488146103cf5780632419f51b146103ef578063248a9ca31461040f57806324aaffaa1461043c57806329c49b9b146104695780632a55205a146104895780632eb2c2d6146104b75780632f2ff15d146104d757806336568abe146104f75780633b1475a7146105175780634cc157df1461052c5780634e1273f41461056e578063572b6c051461059b57806357bc3d78146105bb5780635811ddab146105ce5780635ab063e81461061b578063600dd5ea1461063b57806363b45e2d1461065b5780636b20c454146106705780636f4f2837146106905780637e54523c146106b057806383040532146106d057806387198cf214610700575b600080fd5b3480156102d257600080fd5b506102e66102e1366004614906565b610b74565b6040519081526020015b60405180910390f35b34801561030557600080fd5b50610319610314366004614948565b610c0f565b60405190151581526020016102f0565b34801561033557600080fd5b5061033e610c37565b6040516102f091906149b5565b34801561035757600080fd5b50610360610cc5565b6040516102f091906149c8565b34801561037957600080fd5b5061033e6103883660046149dc565b610cd4565b34801561039957600080fd5b506103ad6103a83660046149f5565b610d15565b005b3480156103bb57600080fd5b506103ad6103ca366004614a6b565b610d45565b3480156103db57600080fd5b506103ad6103ea366004614906565b611084565b3480156103fb57600080fd5b506102e661040a3660046149dc565b6110b6565b34801561041b57600080fd5b506102e661042a3660046149dc565b6000908152600d602052604090205490565b34801561044857600080fd5b506102e66104573660046149dc565b60de6020526000908152604090205481565b34801561047557600080fd5b506103ad610484366004614ac9565b611124565b34801561049557600080fd5b506104a96104a4366004614af9565b611196565b6040516102f0929190614b1b565b3480156104c357600080fd5b506103ad6104d2366004614c82565b6111d3565b3480156104e357600080fd5b506103ad6104f2366004614ac9565b611231565b34801561050357600080fd5b506103ad610512366004614ac9565b6112c7565b34801561052357600080fd5b50600b546102e6565b34801561053857600080fd5b5061054c6105473660046149dc565b611326565b604080516001600160a01b03909316835261ffff9091166020830152016102f0565b34801561057a57600080fd5b5061058e610589366004614da3565b611391565b6040516102f09190614e42565b3480156105a757600080fd5b506103196105b63660046149f5565b6114b2565b6103ad6105c9366004614e67565b6114d0565b3480156105da57600080fd5b506102e66105e9366004614f0c565b6000928352600f60209081526040808520938552600390930181528284206001600160a01b0390921684525290205490565b34801561062757600080fd5b506102e66106363660046149dc565b611613565b34801561064757600080fd5b506103ad610656366004614906565b6116c4565b34801561066757600080fd5b506008546102e6565b34801561067c57600080fd5b506103ad61068b366004614f45565b6116f2565b34801561069c57600080fd5b506103ad6106ab3660046149f5565b61178f565b3480156106bc57600080fd5b506103ad6106cb366004614906565b6117bc565b3480156106dc57600080fd5b506103196106eb3660046149dc565b600a6020526000908152604090205460ff1681565b34801561070c57600080fd5b506103ad61071b366004614af9565b6117ea565b34801561072c57600080fd5b506007546001600160a01b0316610360565b34801561074a57600080fd5b50610360610759366004614af9565b611846565b34801561076a57600080fd5b50610319610779366004614ac9565b611934565b34801561078a57600080fd5b506103ad610799366004614fba565b61195f565b3480156107aa57600080fd5b5061033e61198c565b3480156107bf57600080fd5b506103ad6107ce366004614fee565b611999565b3480156107df57600080fd5b506103ad6107ee3660046149dc565b6119c8565b3480156107ff57600080fd5b50604051600481526020016102f0565b34801561081b57600080fd5b506102e6600081565b34801561083057600080fd5b506103ad61083f366004615026565b6119eb565b34801561085057600080fd5b5061031961085f366004614ac9565b6119fd565b34801561087057600080fd5b5061088461087f366004615054565b611a53565b6040516102f09190615095565b34801561089d57600080fd5b506004546001600160a01b03811690600160a01b900461ffff1661054c565b3480156108c857600080fd5b506103ad6108d73660046150f9565b611bc6565b3480156108e857600080fd5b506102e66108f73660046149dc565b60dd6020526000908152604090205481565b34801561091557600080fd5b506103606109243660046149dc565b60df602052600090815260409020546001600160a01b031681565b34801561094b57600080fd5b506102e661095a3660046149dc565b611bf3565b34801561096b57600080fd5b506a44726f704552433131353560a81b6102e6565b34801561098c57600080fd5b506102e661099b36600461515b565b611c7c565b3480156109ac57600080fd5b5061054c611d89565b3480156109c157600080fd5b506109d56109d0366004614af9565b611da6565b6040516102f091906151d4565b3480156109ee57600080fd5b506103ad6109fd366004614ac9565b611f0d565b348015610a0e57600080fd5b506103ad610a1d366004615241565b611f26565b348015610a2e57600080fd5b506103ad610a3d3660046152a3565b611f80565b348015610a4e57600080fd5b506104a96002546003546001600160a01b0390911691565b348015610a7257600080fd5b5061033e6121c9565b348015610a8757600080fd5b50610aaf610a963660046149dc565b600f602052600090815260409020805460019091015482565b604080519283526020830191909152016102f0565b348015610ad057600080fd5b50610319610adf3660046153b5565b6001600160a01b03918216600090815260a76020908152604080832093909416825291909152205460ff1690565b348015610b1957600080fd5b50610319610b283660046153e3565b6121d6565b348015610b3957600080fd5b506103ad610b4836600461545c565b6125de565b348015610b5957600080fd5b50600254600160b01b900460ff166040516102f091906154da565b60006001600160a01b038316610be45760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815260a6602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610c1a82612635565b80610c095750506001600160e01b03191663152a902d60e11b1490565b60d88054610c4490615502565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7090615502565b8015610cbd5780601f10610c9257610100808354040283529160200191610cbd565b820191906000526020600020905b815481529060010190602001808311610ca057829003601f168201915b505050505081565b6006546001600160a01b031690565b60606000610ce183612685565b905080610ced84612821565b604051602001610cfe929190615536565b604051602081830303815290604052915050919050565b610d1d6128b3565b610d395760405162461bcd60e51b8152600401610bdb90615565565b610d42816128c6565b50565b610d4d6128b3565b610d695760405162461bcd60e51b8152600401610bdb90615565565b6000848152600f6020526040902080546001820154818415610d9257610d8f82846155a3565b90505b600184018690558084556000805b87811015610f4057801580610dd85750888882818110610dc257610dc26155b6565b9050602002810190610dd491906155cc565b3582105b610e095760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610bdb565b60006002870181610e1a84876155a3565b8152602001908152602001600020600201549050898983818110610e4057610e406155b6565b9050602002810190610e5291906155cc565b60200135811115610e9a5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610bdb565b898983818110610eac57610eac6155b6565b9050602002810190610ebe91906155cc565b600288016000610ece85886155a3565b81526020019081526020016000208181610ee89190615748565b50819050600288016000610efc85886155a3565b8152602081019190915260400160002060020155898983818110610f2257610f226155b6565b9050602002810190610f3491906155cc565b35925050600101610da0565b508515610fb757835b82811015610fb1576000818152600280880160205260408220828155600181018390559081018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590610fa76007830182614893565b5050600101610f49565b5061103d565b8683111561103d57865b8381101561103b57600286016000610fd983866155a3565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906110316007830182614893565b5050600101610fc1565b505b887f066f72a648b18490c0bc4ab07d508cdb5d6589fa188c63cfba1e0547f3a6556a89898960405161107193929190615834565b60405180910390a2505050505050505050565b61108c6128b3565b6110a85760405162461bcd60e51b8152600401610bdb90615565565b6110b28282612918565b5050565b60006110c160085490565b82106110ff5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610bdb565b60088281548110611112576111126155b6565b90600052602060002001549050919050565b600061113081336129cc565b600083815260df60205260409081902080546001600160a01b0319166001600160a01b0385161790555183907f359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b016906111899085906149c8565b60405180910390a2505050565b6000806000806111a586611326565b90945084925061ffff1690506127106111be828761591c565b6111c89190615933565b925050509250929050565b6111db612a4c565b6001600160a01b0316856001600160a01b03161480611201575061120185610adf612a4c565b61121d5760405162461bcd60e51b8152600401610bdb90615955565b61122a8585858585612a56565b5050505050565b6000828152600d602052604090205461124a90336129cc565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16156112bd5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610bdb565b6110b28282612c07565b336001600160a01b0382161461131c5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610bdb565b6110b28282612c1b565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561136d5780516020820151611387565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b606081518351146113f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610bdb565b600083516001600160401b0381111561141157611411614b34565b60405190808252806020026020018201604052801561143a578160200160208202803683370190505b50905060005b84518110156114aa5761148585828151811061145e5761145e6155b6565b6020026020010151858381518110611478576114786155b6565b6020026020010151610b74565b828281518110611497576114976155b6565b6020908102919091010152600101611440565b509392505050565b6001600160a01b031660009081526042602052604090205460ff1690565b6114df86888787878787612c72565b60006114ea87611613565b9050611502816114f8612d00565b89898989896121d6565b506000878152600f60209081526040808320848452600290810190925282200180548892906115329084906155a3565b90915550506000878152600f602090815260408083208484526003019091528120879161155d612d00565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461158c91906155a3565b909155506115a09050876000888888612d0a565b6115ab888888612e4d565b876001600160a01b03166115bd612d00565b6001600160a01b0316827ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e8a8a604051611601929190918252602082015260400190565b60405180910390a45050505050505050565b6000818152600f60205260408120600181015481548391611633916155a3565b90505b815481111561168d576002820160006116506001846159a3565b815260200190815260200160002060000154421061167b576116736001826159a3565b949350505050565b80611685816159b6565b915050611636565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610bdb565b6116cc6128b3565b6116e85760405162461bcd60e51b8152600401610bdb90615565565b6110b28282612e68565b6116fa612a4c565b6001600160a01b0316836001600160a01b03161480611720575061172083610adf612a4c565b61177f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610bdb565b61178a838383612ee5565b505050565b6117976128b3565b6117b35760405162461bcd60e51b8152600401610bdb90615565565b610d42816130fb565b6117c46128b3565b6117e05760405162461bcd60e51b8152600401610bdb90615565565b6110b2828261316b565b60006117f681336129cc565b600083815260de602090815260409182902084905581518581529081018490527fc58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd910160405180910390a1505050565b6000828152600e602052604081205481805b8281101561192b576000868152600e602090815260408083208484526001019091529020546001600160a01b0316156118d4578482036118c2576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c09915050565b6118cd6001836155a3565b9150611919565b6118df866000611934565b801561190657506000868152600e6020908152604080832083805260020190915290205481145b15611919576119166001836155a3565b91505b6119246001826155a3565b9050611858565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6119676128b3565b6119835760405162461bcd60e51b8152600401610bdb90615565565b610d42816131c9565b60d98054610c4490615502565b6119a16128b3565b6119bd5760405162461bcd60e51b8152600401610bdb90615565565b61178a838383613299565b60dc546119d581336129cc565b60006119e0836110b6565b905061178a81613341565b6110b26119f6612a4c565b838361345e565b6000828152600c6020908152604080832083805290915281205460ff16611a4a57506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c09565b50600192915050565b6060816001600160401b03811115611a6d57611a6d614b34565b604051908082528060200260200182016040528015611aa057816020015b6060815260200190600190039081611a8b5790505b5090506000611aad612a4c565b9050336001600160a01b038216141560005b8481101561192b578115611b3e57611b1c30878784818110611ae357611ae36155b6565b9050602002810190611af591906155ec565b86604051602001611b08939291906159cd565b604051602081830303815290604052613536565b848281518110611b2e57611b2e6155b6565b6020026020010181905250611bbe565b611ba030878784818110611b5457611b546155b6565b9050602002810190611b6691906155ec565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061353692505050565b848281518110611bb257611bb26155b6565b60200260200101819052505b600101611abf565b611bce6128b3565b611bea5760405162461bcd60e51b8152600401610bdb90615565565b610d4281613562565b6000818152600e6020526040812054815b81811015611c57576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611c4557611c426001846155a3565b92505b611c506001826155a3565b9050611c04565b50611c63836000611934565b15611c7657611c736001836155a3565b91505b50919050565b6000611c866135c6565b611ca25760405162461bcd60e51b8152600401610bdb90615565565b85600003611cda5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610bdb565b6000600b549050611d22818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506135d692505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001611d588a846155a3565b611d6291906159a3565b88888888604051611d779594939291906159ee565b60405180910390a25095945050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b611dfa60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000838152600f6020908152604080832085845260029081018352928190208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190611e8390615502565b80601f0160208091040260200160405190810160405280929190818152602001828054611eaf90615502565b8015611efc5780601f10611ed157610100808354040283529160200191611efc565b820191906000526020600020905b815481529060010190602001808311611edf57829003601f168201915b505050505081525050905092915050565b6000828152600d602052604090205461131c90336129cc565b60dc54611f3381336129cc565b6000611f3e856110b6565b905061122a8185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061363a92505050565b600054610100900460ff1615808015611fa05750600054600160ff909116105b80611fc15750611faf306136df565b158015611fc1575060005460ff166001145b6120245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bdb565b6000805460ff191660011790558015612047576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67f6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f806120b38a6136ee565b6120cb60405180602001604052806000815250613726565b6120d48b6131c9565b6120dd8e6128c6565b6120e860008f612c07565b6120f2828f612c07565b6120fc838f612c07565b612107836000612c07565b612111818f612c07565b61211b8182613756565b61212e85876001600160801b0316612918565b61214188886001600160801b0316612e68565b61214a896130fb565b60da83905560db82905560dc81905560d86121658e82615a27565b5060d96121728d82615a27565b5050505080156121bc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60018054610c4490615502565b6000858152600f602090815260408083208a8452600290810183528184208251610100810184528154815260018201549481019490945290810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e084019161226190615502565b80601f016020809104026020016040519081016040528092919081815260200182805461228d90615502565b80156122da5780601f106122af576101008083540402835291602001916122da565b820191906000526020600020905b8154815290600101906020018083116122bd57829003601f168201915b50505091909252505050606081015160a082015160c083015160808401519394509192909190156123ba576123b66123128780615ae0565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508e9060208b01359060408c013590612367908d0160608e016149f5565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061379e565b5094505b84156124415785602001356000036123d257826123d8565b85602001355b92506000198660400135036123ed57816123f3565b85604001355b91506000198660400135141580156124245750600061241860808801606089016149f5565b6001600160a01b031614155b61242e578061243e565b61243e60808701606088016149f5565b90505b6000600f60008c815260200190815260200160002060030160008e815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b03161415806124b15750828814155b156124f15760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610bdb565b891580612506575083612504828c6155a3565b115b1561253c5760405162461bcd60e51b8152600401610bdb906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161255191906155a3565b111561258c5760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610bdb565b84514210156125ce5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610bdb565b5050505050979650505050505050565b6125e6612a4c565b6001600160a01b0316856001600160a01b0316148061260c575061260c85610adf612a4c565b6126285760405162461bcd60e51b8152600401610bdb90615955565b61122a8585858585613862565b60006001600160e01b03198216636cdb3d1360e11b148061266657506001600160e01b031982166303a24d0760e21b145b80610c0957506301ffc9a760e01b6001600160e01b0319831614610c09565b6060600061269260085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156126e257602002820191906000526020600020905b8154815260200190600101908083116126ce575b5050505050905060005b828110156127e657818181518110612706576127066155b6565b60200260200101518510156127d4576009600083838151811061272b5761272b6155b6565b60200260200101518152602001908152602001600020805461274c90615502565b80601f016020809104026020016040519081016040528092919081815260200182805461277890615502565b80156127c55780601f1061279a576101008083540402835291602001916127c5565b820191906000526020600020905b8154815290600101906020018083116127a857829003601f168201915b50505050509350505050919050565b6127df6001826155a3565b90506126ec565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610bdb565b6060600061282e836139a9565b60010190506000816001600160401b0381111561284d5761284d614b34565b6040519080825280601f01601f191660200182016040528015612877576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461288157509392505050565b60006128c181610779612a4c565b905090565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561293a5760405162461bcd60e51b8152600401610bdb90615b29565b6001600160a01b0382166129605760405162461bcd60e51b8152600401610bdb90615b52565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff166110b257612a0a816001600160a01b03166014613a7f565b612a15836020613a7f565b604051602001612a26929190615b7d565b60408051601f198184030181529082905262461bcd60e51b8252610bdb916004016149b5565b60006128c1613c1a565b8151835114612a775760405162461bcd60e51b8152600401610bdb90615bea565b6001600160a01b038416612a9d5760405162461bcd60e51b8152600401610bdb90615c32565b6000612aa7612a4c565b9050612ab7818787878787613c3f565b60005b8451811015612b99576000858281518110612ad757612ad76155b6565b602002602001015190506000858381518110612af557612af56155b6565b602090810291909101810151600084815260a6835260408082206001600160a01b038e168352909352919091205490915081811015612b465760405162461bcd60e51b8152600401610bdb90615c77565b600083815260a6602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612b859084906155a3565b909155505060019093019250612aba915050565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612be9929190615cc1565b60405180910390a4612bff818787878787613dea565b505050505050565b612c118282613f4c565b6110b28282613fa7565b612c258282614014565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600087815260de60205260409020541580612cb15750600087815260de602090815260408083205460dd90925290912054612cae9087906155a3565b11155b612cf75760405162461bcd60e51b8152602060048201526017602482015276657863656564206d617820746f74616c20737570706c7960481b6044820152606401610bdb565b50505050505050565b60006128c1612a4c565b80600003612d35573415612d305760405162461bcd60e51b8152600401610bdb90615cef565b61122a565b600080612d40611d89565b909250905060006001600160a01b03871615612d5c5786612d9e565b600088815260df60205260409020546001600160a01b031615612d9657600088815260df60205260409020546001600160a01b0316612d9e565b612d9e610cc5565b90506000612dac858861591c565b90506000612710612dc161ffff86168461591c565b612dcb9190615933565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03891601612dfd5750348214612e01565b5034155b80612e1e5760405162461bcd60e51b8152600401610bdb90615cef565b612e3188612e2a612a4c565b8885614076565b6121bc88612e3d612a4c565b86612e4886886159a3565b614076565b61178a838383604051806020016040528060008152506140bc565b612710811115612e8a5760405162461bcd60e51b8152600401610bdb90615b29565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016129c0565b6001600160a01b038316612f475760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610bdb565b8051825114612f685760405162461bcd60e51b8152600401610bdb90615bea565b6000612f72612a4c565b9050612f9281856000868660405180602001604052806000815250613c3f565b60005b835181101561308c576000848281518110612fb257612fb26155b6565b602002602001015190506000848381518110612fd057612fd06155b6565b602090810291909101810151600084815260a6835260408082206001600160a01b038c16835290935291909120549091508181101561305d5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610bdb565b600092835260a6602090815260408085206001600160a01b038b16865290915290922091039055600101612f95565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516130dd929190615cc1565b60405180910390a46040805160208101909152600090525b50505050565b6001600160a01b0381166131215760405162461bcd60e51b8152600401610bdb90615b52565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906131bd9084908490614b1b565b60405180910390a15050565b6000600180546131d890615502565b80601f016020809104026020016040519081016040528092919081815260200182805461320490615502565b80156132515780601f1061322657610100808354040283529160200191613251565b820191906000526020600020905b81548152906001019060200180831161323457829003601f168201915b5050505050905081600190816132679190615a27565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516131bd929190615d0b565b6127108111156132bb5760405162461bcd60e51b8152600401610bdb90615b29565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b6000818152600960205260408120805461335a90615502565b80601f016020809104026020016040519081016040528092919081815260200182805461338690615502565b80156133d35780601f106133a8576101008083540402835291602001916133d3565b820191906000526020600020905b8154815290600101906020018083116133b657829003601f168201915b50505050509050600081511161341b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152606401610bdb565b6000828152600a6020526040808220805460ff19166001179055517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d71649190a15050565b816001600160a01b0316836001600160a01b0316036134d15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610bdb565b6001600160a01b03838116600081815260a76020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101613334565b606061355b8383604051806060016040528060278152602001615f40602791396141e3565b9392505050565b6002805482919060ff60b01b1916600160b01b836001811115613587576135876154c4565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516135bb91906154da565b60405180910390a150565b60006128c160db54610779612a4c565b6000806135e384866155a3565b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30181905560008181526009602052604090209092508291506136318482615a27565b50935093915050565b6000828152600a602052604090205460ff16156136885760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610bdb565b60008281526009602052604090206136a08282615a27565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c6136cb8361425b565b6040805191825260208201859052016131bd565b6001600160a01b03163b151590565b600054610100900460ff166137155760405162461bcd60e51b8152600401610bdb90615d30565b61371d61436b565b610d4281614394565b600054610100900460ff1661374d5760405162461bcd60e51b8152600401610bdb90615d30565b610d4281614419565b6000828152600d6020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000808281805b8751811015613856576137b960028361591c565b915060008882815181106137cf576137cf6155b6565b6020026020010151905080841161381157604080516020810186905290810182905260600160405160208183030381529060405280519060200120935061384d565b604080516020810183905290810185905260600160405160208183030381529060405280519060200120935060018361384a91906155a3565b92505b506001016137a5565b50941495939450505050565b6001600160a01b0384166138885760405162461bcd60e51b8152600401610bdb90615c32565b6000613892612a4c565b9050600061389f85614425565b905060006138ac85614425565b90506138bc838989858589613c3f565b600086815260a6602090815260408083206001600160a01b038c168452909152902054858110156138ff5760405162461bcd60e51b8152600401610bdb90615c77565b600087815260a6602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061393e9084906155a3565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461399e848a8a8a8a8a614470565b505050505050505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106139e85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310613a12576904ee2d6d415b85acef8160201b830492506020015b662386f26fc100008310613a3057662386f26fc10000830492506010015b6305f5e1008310613a48576305f5e100830492506008015b6127108310613a5c57612710830492506004015b60648310613a6e576064830492506002015b600a8310610c095760010192915050565b60606000613a8e83600261591c565b613a999060026155a3565b6001600160401b03811115613ab057613ab0614b34565b6040519080825280601f01601f191660200182016040528015613ada576020820181803683370190505b509050600360fc1b81600081518110613af557613af56155b6565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613b2457613b246155b6565b60200101906001600160f81b031916908160001a9053506000613b4884600261591c565b613b539060016155a3565b90505b6001811115613bcb576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613b8757613b876155b6565b1a60f81b828281518110613b9d57613b9d6155b6565b60200101906001600160f81b031916908160001a90535060049490941c93613bc4816159b6565b9050613b56565b50831561355b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bdb565b6000613c25336114b2565b15613c37575060131936013560601c90565b503390565b90565b613c4c60da546000611934565b158015613c6157506001600160a01b03851615155b8015613c7557506001600160a01b03841615155b15613cf057613c8660da5486611934565b80613c985750613c9860da5485611934565b613cf05760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610bdb565b6001600160a01b038516613d6e5760005b8351811015613d6c57828181518110613d1c57613d1c6155b6565b602002602001015160dd6000868481518110613d3a57613d3a6155b6565b602002602001015181526020019081526020016000206000828254613d5f91906155a3565b9091555050600101613d01565b505b6001600160a01b038416612bff5760005b8351811015612cf757828181518110613d9a57613d9a6155b6565b602002602001015160dd6000868481518110613db857613db86155b6565b602002602001015181526020019081526020016000206000828254613ddd91906159a3565b9091555050600101613d7f565b613dfc846001600160a01b03166136df565b15612bff5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190613e359089908990889088908890600401615d7b565b6020604051808303816000875af1925050508015613e70575060408051601f3d908101601f19168201909252613e6d91810190615dcd565b60015b613f1c57613e7c615dea565b806308c379a003613eb55750613e90615e05565b80613e9b5750613eb7565b8060405162461bcd60e51b8152600401610bdb91906149b5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610bdb565b6001600160e01b0319811663bc197c8160e01b14612cf75760405162461bcd60e51b8152600401610bdb90615e8e565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e6020526040812080549160019190613fc683856155a3565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b61401e82826129cc565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80156130f55773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016140b0576140ab8282614532565b6130f5565b6130f5848484846145d4565b6001600160a01b03841661411c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610bdb565b6000614126612a4c565b9050600061413385614425565b9050600061414085614425565b905061415183600089858589613c3f565b600086815260a6602090815260408083206001600160a01b038b168452909152812080548792906141839084906155a3565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612cf783600089898989614470565b6060600080856001600160a01b0316856040516142009190615ed6565b600060405180830381855af49150503d806000811461423b576040519150601f19603f3d011682016040523d82523d6000602084013e614240565b606091505b509150915061425186838387614627565b9695505050505050565b60008061426760085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156142b757602002820191906000526020600020905b8154815260200190600101908083116142a3575b5050505050905060005b82811015614330578181815181106142db576142db6155b6565b6020026020010151850361432857801561431d57816142fb6001836159a3565b8151811061430b5761430b6155b6565b60200260200101519350505050919050565b506000949350505050565b6001016142c1565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610bdb565b600054610100900460ff166143925760405162461bcd60e51b8152600401610bdb90615d30565b565b600054610100900460ff166143bb5760405162461bcd60e51b8152600401610bdb90615d30565b60005b81518110156110b2576001604260008484815181106143df576143df6155b6565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016143be565b60a86110b28282615a27565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061445f5761445f6155b6565b602090810291909101015292915050565b614482846001600160a01b03166136df565b15612bff5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906144bb9089908990889088908890600401615ee8565b6020604051808303816000875af19250505080156144f6575060408051601f3d908101601f191682019092526144f391810190615dcd565b60015b61450257613e7c615dea565b6001600160e01b0319811663f23a6e6160e01b14612cf75760405162461bcd60e51b8152600401610bdb90615e8e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461457f576040519150601f19603f3d011682016040523d82523d6000602084013e614584565b606091505b505090508061178a5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bdb565b816001600160a01b0316836001600160a01b031603156130f557306001600160a01b03841603614612576140ab6001600160a01b038516838361469e565b6130f56001600160a01b0385168484846146f4565b6060831561469457825160000361468d57614641856136df565b61468d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bdb565b5081611673565b611673838361472c565b61178a8363a9059cbb60e01b84846040516024016146bd929190614b1b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261473c565b6040516001600160a01b03808516602483015283166044820152606481018290526130f59085906323b872dd60e01b906084016146bd565b815115613e9b5781518083602001fd5b6000614791826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661480e9092919063ffffffff16565b80519091501561178a57808060200190518101906147af9190615f22565b61178a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bdb565b6060611673848460008585600080866001600160a01b031685876040516148359190615ed6565b60006040518083038185875af1925050503d8060008114614872576040519150601f19603f3d011682016040523d82523d6000602084013e614877565b606091505b509150915061488887838387614627565b979650505050505050565b50805461489f90615502565b6000825580601f106148af575050565b601f016020900490600052602060002090810190610d4291905b808211156148dd57600081556001016148c9565b5090565b6001600160a01b0381168114610d4257600080fd5b8035614901816148e1565b919050565b6000806040838503121561491957600080fd5b8235614924816148e1565b946020939093013593505050565b6001600160e01b031981168114610d4257600080fd5b60006020828403121561495a57600080fd5b813561355b81614932565b60005b83811015614980578181015183820152602001614968565b50506000910152565b600081518084526149a1816020860160208601614965565b601f01601f19169290920160200192915050565b60208152600061355b6020830184614989565b6001600160a01b0391909116815260200190565b6000602082840312156149ee57600080fd5b5035919050565b600060208284031215614a0757600080fd5b813561355b816148e1565b60008083601f840112614a2457600080fd5b5081356001600160401b03811115614a3b57600080fd5b6020830191508360208260051b8501011115614a5657600080fd5b9250929050565b8015158114610d4257600080fd5b60008060008060608587031215614a8157600080fd5b8435935060208501356001600160401b03811115614a9e57600080fd5b614aaa87828801614a12565b9094509250506040850135614abe81614a5d565b939692955090935050565b60008060408385031215614adc57600080fd5b823591506020830135614aee816148e1565b809150509250929050565b60008060408385031215614b0c57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715614b6f57614b6f614b34565b6040525050565b60006001600160401b03821115614b8f57614b8f614b34565b5060051b60200190565b600082601f830112614baa57600080fd5b81356020614bb782614b76565b604051614bc48282614b4a565b80915083815260208101915060208460051b870101935086841115614be857600080fd5b602086015b84811015614c045780358352918301918301614bed565b509695505050505050565b600082601f830112614c2057600080fd5b81356001600160401b03811115614c3957614c39614b34565b604051614c50601f8301601f191660200182614b4a565b818152846020838601011115614c6557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614c9a57600080fd5b8535614ca5816148e1565b94506020860135614cb5816148e1565b935060408601356001600160401b0380821115614cd157600080fd5b614cdd89838a01614b99565b94506060880135915080821115614cf357600080fd5b614cff89838a01614b99565b93506080880135915080821115614d1557600080fd5b50614d2288828901614c0f565b9150509295509295909350565b600082601f830112614d4057600080fd5b81356020614d4d82614b76565b604051614d5a8282614b4a565b80915083815260208101915060208460051b870101935086841115614d7e57600080fd5b602086015b84811015614c04578035614d96816148e1565b8352918301918301614d83565b60008060408385031215614db657600080fd5b82356001600160401b0380821115614dcd57600080fd5b614dd986838701614d2f565b93506020850135915080821115614def57600080fd5b50614dfc85828601614b99565b9150509250929050565b60008151808452602080850194506020840160005b83811015614e3757815187529582019590820190600101614e1b565b509495945050505050565b60208152600061355b6020830184614e06565b600060808284031215611c7657600080fd5b600080600080600080600060e0888a031215614e8257600080fd5b8735614e8d816148e1565b965060208801359550604088013594506060880135614eab816148e1565b93506080880135925060a08801356001600160401b0380821115614ece57600080fd5b614eda8b838c01614e55565b935060c08a0135915080821115614ef057600080fd5b50614efd8a828b01614c0f565b91505092959891949750929550565b600080600060608486031215614f2157600080fd5b83359250602084013591506040840135614f3a816148e1565b809150509250925092565b600080600060608486031215614f5a57600080fd5b8335614f65816148e1565b925060208401356001600160401b0380821115614f8157600080fd5b614f8d87838801614b99565b93506040860135915080821115614fa357600080fd5b50614fb086828701614b99565b9150509250925092565b600060208284031215614fcc57600080fd5b81356001600160401b03811115614fe257600080fd5b61167384828501614c0f565b60008060006060848603121561500357600080fd5b833592506020840135615015816148e1565b929592945050506040919091013590565b6000806040838503121561503957600080fd5b8235615044816148e1565b91506020830135614aee81614a5d565b6000806020838503121561506757600080fd5b82356001600160401b0381111561507d57600080fd5b61508985828601614a12565b90969095509350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156150ec57603f198886030184526150da858351614989565b945092850192908501906001016150be565b5092979650505050505050565b60006020828403121561510b57600080fd5b81356002811061355b57600080fd5b60008083601f84011261512c57600080fd5b5081356001600160401b0381111561514357600080fd5b602083019150836020828501011115614a5657600080fd5b60008060008060006060868803121561517357600080fd5b8535945060208601356001600160401b038082111561519157600080fd5b61519d89838a0161511a565b909650945060408801359150808211156151b657600080fd5b506151c38882890161511a565b969995985093965092949392505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250611673610120840182614989565b60008060006040848603121561525657600080fd5b8335925060208401356001600160401b0381111561527357600080fd5b61527f8682870161511a565b9497909650939450505050565b80356001600160801b038116811461490157600080fd5b6000806000806000806000806000806101408b8d0312156152c357600080fd5b6152cc8b6148f6565b995060208b01356001600160401b03808211156152e857600080fd5b6152f48e838f01614c0f565b9a5060408d013591508082111561530a57600080fd5b6153168e838f01614c0f565b995060608d013591508082111561532c57600080fd5b6153388e838f01614c0f565b985060808d013591508082111561534e57600080fd5b5061535b8d828e01614d2f565b96505061536a60a08c016148f6565b945061537860c08c016148f6565b935061538660e08c0161528c565b92506153956101008c0161528c565b91506153a46101208c016148f6565b90509295989b9194979a5092959850565b600080604083850312156153c857600080fd5b82356153d3816148e1565b91506020830135614aee816148e1565b600080600080600080600060e0888a0312156153fe57600080fd5b873596506020880135615410816148e1565b95506040880135945060608801359350608088013561542e816148e1565b925060a0880135915060c08801356001600160401b0381111561545057600080fd5b614efd8a828b01614e55565b600080600080600060a0868803121561547457600080fd5b853561547f816148e1565b9450602086013561548f816148e1565b9350604086013592506060860135915060808601356001600160401b038111156154b857600080fd5b614d2288828901614c0f565b634e487b7160e01b600052602160045260246000fd5b60208101600283106154fc57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061551657607f821691505b602082108103611c7657634e487b7160e01b600052602260045260246000fd5b60008351615548818460208801614965565b83519083019061555c818360208801614965565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c0957610c0961558d565b634e487b7160e01b600052603260045260246000fd5b6000823560fe198336030181126155e257600080fd5b9190910192915050565b6000808335601e1984360301811261560357600080fd5b8301803591506001600160401b0382111561561d57600080fd5b602001915036819003821315614a5657600080fd5b601f82111561178a576000816000526020600020601f850160051c8101602086101561565b5750805b601f850160051c820191505b81811015612bff57828155600101615667565b600019600383901b1c191660019190911b1790565b6001600160401b038311156156a6576156a6614b34565b6156ba836156b48354615502565b83615632565b6000601f8411600181146156e857600085156156d65750838201355b6156e0868261567a565b84555061122a565b600083815260209020601f19861690835b8281101561571957868501358255602094850194600190920191016156f9565b50868210156157365760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135615790816148e1565b81546001600160a01b0319166001600160a01b03919091161790556157b860e08301836155ec565b6130f581836007860161568f565b6000808335601e198436030181126157dd57600080fd5b83016020810192503590506001600160401b038111156157fc57600080fd5b803603821315614a5657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561590657888403605f190185528235368d900360fe19018112615879578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c0808401356158c0816148e1565b6001600160a01b03169088015260e06158db848201856157c6565b945083828a01526158ef848a01868361580b565b998301999850505094909401935050600101615854565b5050508615156020870152935061167392505050565b8082028115828204841417610c0957610c0961558d565b60008261595057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b81810381811115610c0957610c0961558d565b6000816159c5576159c561558d565b506000190190565b8284823760609190911b6001600160601b0319169101908152601401919050565b858152606060208201526000615a0860608301868861580b565b8281036040840152615a1b81858761580b565b98975050505050505050565b81516001600160401b03811115615a4057615a40614b34565b615a5481615a4e8454615502565b84615632565b602080601f831160018114615a835760008415615a715750858301515b615a7b858261567a565b865550612bff565b600085815260208120601f198616915b82811015615ab257888601518255948401946001909101908401615a93565b5085821015615ad05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808335601e19843603018112615af757600080fd5b8301803591506001600160401b03821115615b1157600080fd5b6020019150600581901b3603821315614a5657600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bad816015850160208801614965565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bde816026840160208801614965565b01602601949350505050565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000615cd46040830185614e06565b8281036020840152615ce68185614e06565b95945050505050565b60208082526002908201526110ab60f11b604082015260600190565b604081526000615d1e6040830185614989565b8281036020840152615ce68185614989565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090615da790830186614e06565b8281036060840152615db98186614e06565b90508281036080840152615a1b8185614989565b600060208284031215615ddf57600080fd5b815161355b81614932565b600060033d1115613c3c5760046000803e5060005160e01c90565b600060443d1015615e135790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615e4257505050505090565b8285019150815181811115615e5a5750505050505090565b843d8701016020828501011115615e745750505050505090565b615e8360208286010187614b4a565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b600082516155e2818460208701614965565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061488890830184614989565b600060208284031215615f3457600080fd5b815161355b81614a5d56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205c8988b95d2731b030dc633f47f1b46c83be22ba4ef88a327412e55f43b1021d64736f6c63430008170033",
    "sourceMap": "1607:12838:331:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227:453;;;;;;;;;;-1:-1:-1;2593:227:453;;;;;:::i;:::-;;:::i;:::-;;;755:25:821;;;743:2;728:18;2593:227:453;;;;;;;;6101:250:331;;;;;;;;;;-1:-1:-1;6101:250:331;;;;;:::i;:::-;;:::i;:::-;;;1438:14:821;;1431:22;1413:41;;1401:2;1386:18;6101:250:331;1273:187:821;2107:18:331;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5859:211:331:-;;;;;;;;;;-1:-1:-1;5859:211:331;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;:::-;;2212:2857:59;;;;;;;;;;-1:-1:-1;2212:2857:59;;;;;:::i;:::-;;:::i;2030:269:73:-;;;;;;;;;;-1:-1:-1;2030:269:73;;;;;:::i;:::-;;:::i;2029:203:54:-;;;;;;;;;;-1:-1:-1;2029:203:54;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;3124:49:331;;;;;;;;;;-1:-1:-1;3124:49:331;;;;;:::i;:::-;;;;;;;;;;;;;;7305:240;;;;;;;;;;-1:-1:-1;7305:240:331;;;;;:::i;:::-;;:::i;1421:325:77:-;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4450:426:453:-;;;;;;;;;;-1:-1:-1;4450:426:453;;;;;:::i;:::-;;:::i;3253:271:71:-;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;12305:106:331:-;;;;;;;;;;-1:-1:-1;12383:21:331;;12305:106;;1986:381:77;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;8755:32:821;;;8737:51;;8836:6;8824:19;;;8819:2;8804:18;;8797:47;8710:18;1986:381:77;8565:285:821;2977:486:453;;;;;;;;;;-1:-1:-1;2977:486:453;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:134:211:-;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;795:1354:59:-;;;;;;:::i;:::-;;:::i;8556:285::-;;;;;;;;;;-1:-1:-1;8556:285:59;;;;;:::i;:::-;8699:29;8764:24;;;:14;:24;;;;;;;;:60;;;:46;;;;:60;;;;;-1:-1:-1;;;;;8764:70:59;;;;;;;;;;8556:285;7726:456;;;;;;;;;;-1:-1:-1;7726:456:59;;;;;:::i;:::-;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;1711:96:54:-;;;;;;;;;;-1:-1:-1;1785:8:54;:15;1711:96;;12511:313:331;;;;;;;;;;-1:-1:-1;12511:313:331;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;2910:255:73:-;;;;;;;;;;-1:-1:-1;2910:255:73;;;;;:::i;:::-;;:::i;954:43:54:-;;;;;;;;;;-1:-1:-1;954:43:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;6993:230:331;;;;;;;;;;-1:-1:-1;6993:230:331;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;2152:20:331:-;;;;;;;;;;;;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;8102:169:331:-;;;;;;;;;;-1:-1:-1;8102:169:331;;;;;:::i;:::-;;:::i;6650:89::-;;;;;;;;;;-1:-1:-1;6650:89:331;;6730:1;14454:36:821;;14442:2;14427:18;6650:89:331;14312:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;3531:153:453;;;;;;;;;;-1:-1:-1;3531:153:453;;;;;:::i;:::-;;:::i;2204:211:71:-;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2477:144:77:-;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;3544:200:73;;;;;;;;;;-1:-1:-1;3544:200:73;;;;;:::i;:::-;;:::i;2967:46:331:-;;;;;;;;;;-1:-1:-1;2967:46:331;;;;;:::i;:::-;;;;;;;;;;;;;;3265:48;;;;;;;;;;-1:-1:-1;3265:48:331;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3265:48:331;;;2683:398:72;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;6542:102:331:-;;;;;;;;;;-1:-1:-1;;;;6542:102:331;;1254:592:63;;;;;;;;;;-1:-1:-1;1254:592:63;;;;;:::i;:::-;;:::i;1058:147:73:-;;;;;;;;;;;;;:::i;8247:227:59:-;;;;;;;;;;-1:-1:-1;8247:227:59;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;7753:194:331:-;;;;;;;;;;-1:-1:-1;7753:194:331;;;;;:::i;:::-;;:::i;4100:1511::-;;;;;;;;;;-1:-1:-1;4100:1511:331;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136;565:34:56;;;;;;;;;;;;;:::i;506:60:59:-;;;;;;;;;;-1:-1:-1;506:60:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20687:25:821;;;20743:2;20728:18;;20721:34;;;;20660:18;506:60:59;20513:248:821;3751:166:453;;;;;;;;;;-1:-1:-1;3751:166:453;;;;;:::i;:::-;-1:-1:-1;;;;;3873:27:453;;;3850:4;3873:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3751:166;5166:2472:59;;;;;;;;;;-1:-1:-1;5166:2472:59;;;;;:::i;:::-;;:::i;3984:394:453:-;;;;;;;;;;-1:-1:-1;3984:394:453;;;;;:::i;:::-;;:::i;1454:107:73:-;;;;;;;;;;-1:-1:-1;1539:15:73;;-1:-1:-1;;;1539:15:73;;;;1454:107;;;;;;:::i;2593:227:453:-;2679:7;-1:-1:-1;;;;;2706:21:453;;2698:76;;;;-1:-1:-1;;;2698:76:453;;23514:2:821;2698:76:453;;;23496:21:821;23553:2;23533:18;;;23526:30;23592:34;23572:18;;;23565:62;-1:-1:-1;;;23643:18:821;;;23636:40;23693:19;;2698:76:453;;;;;;;;;-1:-1:-1;2791:13:453;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:453;;;;;;;;;;2593:227;;;;;:::o;6101:250:331:-;6229:4;6252:36;6276:11;6252:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;6292:52:331;-1:-1:-1;;;6292:52:331;;6101:250::o;2107:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;5859:211:331:-;5920:13;5945:22;5970:21;5982:8;5970:11;:21::i;:::-;5945:46;;6032:8;6042:19;:8;:17;:19::i;:::-;6015:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6001:62;;;5859:211;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2212:2857:59:-;2397:24;:22;:24::i;:::-;2392:80;;2437:24;;-1:-1:-1;;;2437:24:59;;;;;;;:::i;2392:80::-;2481:40;2524:24;;;:14;:24;;;;;2587:28;;2654:19;;;;2587:28;3090:108;;;;3148:39;3169:18;3148;:39;:::i;:::-;3132:55;;3090:108;3208:19;;;:40;;;3258:44;;;:28;;3358:640;3378:22;;;3358:640;;;3429:6;;;:69;;;3469:11;;3481:1;3469:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3439:59;;3429:69;3421:84;;;;-1:-1:-1;;;3421:84:59;;25886:2:821;3421:84:59;;;25868:21:821;25925:1;25905:18;;;25898:29;-1:-1:-1;;;25943:18:821;;;25936:32;25985:18;;3421:84:59;25684:325:821;3421:84:59;3520:28;3551:24;;;3520:28;3576:17;3592:1;3576:13;:17;:::i;:::-;3551:43;;;;;;;;;;;:57;;;3520:88;;3649:11;;3661:1;3649:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3626:20;:56;3622:123;;;3702:28;;-1:-1:-1;;;3702:28:59;;26216:2:821;3702:28:59;;;26198:21:821;26255:2;26235:18;;;26228:30;-1:-1:-1;;;26274:18:821;;;26267:48;26332:18;;3702:28:59;26014:342:821;3622:123:59;3805:11;;3817:1;3805:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3759:24;;;:43;3784:17;3800:1;3784:13;:17;:::i;:::-;3759:43;;;;;;;;;;;:60;;;;;;:::i;:::-;-1:-1:-1;3893:20:59;;-1:-1:-1;3833:24:59;;;:43;3858:17;3874:1;3858:13;:17;:::i;:::-;3833:43;;;;;;;;;;;-1:-1:-1;3833:43:59;:57;;:80;3958:11;;3970:1;3958:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;;3402:3:59;;3358:640;;;;4538:22;4534:444;;;4593:18;4576:128;4617:13;4613:1;:17;4576:128;;;4662:27;;;;:24;;;;:27;;;;;4655:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4655:34:59;;;4662:27;4655:34;;;;4662:27;4655:34;:::i;:::-;-1:-1:-1;;4632:3:59;;4576:128;;;;4534:444;;;4738:39;;;4734:234;;;4814:11;4797:157;4838:18;4834:1;:22;4797:157;;;4892:24;;;:43;4917:17;4933:1;4917:13;:17;:::i;:::-;4892:43;;;;;;;;;;;-1:-1:-1;4892:43:59;;;4885:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4885:50:59;;;4892:43;4885:50;;;;-1:-1:-1;4885:50:59;:::i;:::-;-1:-1:-1;;4858:3:59;;4797:157;;;;4734:234;5016:8;4993:69;5026:11;;5039:22;4993:69;;;;;;;;:::i;:::-;;;;;;;;2382:2687;;;;;2212:2857;;;;:::o;2030:269:73:-;2147:24;:22;:24::i;:::-;2142:80;;2187:24;;-1:-1:-1;;;2187:24:73;;;;;;;:::i;2142:80::-;2231:61;2253:21;2276:15;2231:21;:61::i;:::-;2030:269;;:::o;2029:203:54:-;2093:7;2126:17;1785:8;:15;;1711:96;2126:17;2116:6;:27;2112:81;;2159:23;;-1:-1:-1;;;2159:23:54;;32913:2:821;2159:23:54;;;32895:21:821;32952:2;32932:18;;;32925:30;-1:-1:-1;;;32971:18:821;;;32964:43;33024:18;;2159:23:54;32711:337:821;2112:81:54;2209:8;2218:6;2209:16;;;;;;;;:::i;:::-;;;;;;;;;2202:23;;2029:203;;;:::o;7305:240:331:-;785:4:71;929:28;785:4;946:10;929;:28::i;:::-;7429:23:331::1;::::0;;;:13:::1;:23;::::0;;;;;;:40;;-1:-1:-1;;;;;;7429:40:331::1;-1:-1:-1::0;;;;;7429:40:331;::::1;;::::0;;7484:54;7429:23;;7484:54:::1;::::0;::::1;::::0;7429:40;;7484:54:::1;:::i;:::-;;;;;;;;7305:240:::0;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;4450:426:453:-;4683:12;:10;:12::i;:::-;-1:-1:-1;;;;;4675:20:453;:4;-1:-1:-1;;;;;4675:20:453;;:60;;;;4699:36;4716:4;4722:12;:10;:12::i;4699:36::-;4654:153;;;;-1:-1:-1;;;4654:153:453;;;;;;;:::i;:::-;4817:52;4840:4;4846:2;4850:3;4855:7;4864:4;4817:22;:52::i;:::-;4450:426;;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;34197:2:821;3433:39:71;;;34179:21:821;34236:2;34216:18;;;34209:30;34275:31;34255:18;;;34248:59;34324:18;;3433:39:71;33995:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;34555:2:821;4592:36:71;;;34537:21:821;34594:2;34574:18;;;34567:30;-1:-1:-1;;;34613:18:821;;;34606:56;34679:18;;4592:36:71;34353:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;2977:486:453:-;3110:16;3165:3;:10;3146:8;:15;:29;3138:83;;;;-1:-1:-1;;;3138:83:453;;34910:2:821;3138:83:453;;;34892:21:821;34949:2;34929:18;;;34922:30;34988:34;34968:18;;;34961:62;-1:-1:-1;;;35039:18:821;;;35032:39;35088:19;;3138:83:453;34708:405:821;3138:83:453;3232:30;3279:8;:15;-1:-1:-1;;;;;3265:30:453;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3265:30:453;;3232:63;;3311:9;3306:120;3330:8;:15;3326:1;:19;3306:120;;;3385:30;3395:8;3404:1;3395:11;;;;;;;;:::i;:::-;;;;;;;3408:3;3412:1;3408:6;;;;;;;;:::i;:::-;;;;;;;3385:9;:30::i;:::-;3366:13;3380:1;3366:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3347:3;;3306:120;;;-1:-1:-1;3443:13:453;2977:486;-1:-1:-1;;;2977:486:453:o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;795:1354:59:-;1074:95;1087:8;1097:9;1108;1119;1130:14;1146:15;1163:5;1074:12;:95::i;:::-;1180:25;1208:35;1234:8;1208:25;:35::i;:::-;1180:63;;1254:207;1279:17;1310:16;:14;:16::i;:::-;1340:8;1362:9;1385;1408:14;1436:15;1254:11;:207::i;:::-;-1:-1:-1;1506:24:59;;;;:14;:24;;;;;;;;:54;;;:35;;;;:54;;;;;:68;:81;;1578:9;;1506:24;:81;;1578:9;;1506:81;:::i;:::-;;;;-1:-1:-1;;1597:24:59;;;;:14;:24;;;;;;;;:65;;;:46;;:65;;;;;1684:9;;1663:16;:14;:16::i;:::-;-1:-1:-1;;;;;1597:83:59;-1:-1:-1;;;;;1597:83:59;;;;;;;;;;;;;:96;;;;;;;:::i;:::-;;;;-1:-1:-1;1750:79:59;;-1:-1:-1;1770:8:59;1788:1;1792:9;1803;1814:14;1750:19;:79::i;:::-;1886:53;1908:9;1919:8;1929:9;1886:21;:53::i;:::-;2006:9;-1:-1:-1;;;;;1955:82:59;1988:16;:14;:16::i;:::-;-1:-1:-1;;;;;1955:82:59;1969:17;1955:82;2017:8;2027:9;1955:82;;;;;;20687:25:821;;;20743:2;20728:18;;20721:34;20675:2;20660:18;;20513:248;1955:82:59;;;;;;;;1064:1085;795:1354;;;;;;;:::o;7726:456::-;7800:7;7862:24;;;:14;:24;;;;;7944:19;;;;7913:28;;7800:7;;7913:50;;;:::i;:::-;7901:62;;7896:248;7969:28;;7965:32;;7896:248;;;8041:24;;;:31;8066:5;8070:1;8066;:5;:::i;:::-;8041:31;;;;;;;;;;;:46;;;8022:15;:65;8018:116;;8114:5;8118:1;8114;:5;:::i;:::-;8107:12;7726:456;-1:-1:-1;;;;7726:456:59:o;8018:116::-;7999:3;;;;:::i;:::-;;;;7896:248;;;-1:-1:-1;8154:21:59;;-1:-1:-1;;;8154:21:59;;35594:2:821;8154:21:59;;;35576::821;35633:2;35613:18;;;35606:30;-1:-1:-1;;;35652:18:821;;;35645:41;35703:18;;8154:21:59;35392:335:821;3065:256:77;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;12511:313:331:-;12651:12;:10;:12::i;:::-;-1:-1:-1;;;;;12640:23:331;:7;-1:-1:-1;;;;;12640:23:331;;:66;;;;12667:39;12684:7;12693:12;:10;:12::i;12667:39::-;12619:155;;;;-1:-1:-1;;;12619:155:331;;35934:2:821;12619:155:331;;;35916:21:821;35973:2;35953:18;;;35946:30;36012:34;35992:18;;;35985:62;-1:-1:-1;;;36063:18:821;;;36056:40;36113:19;;12619:155:331;35732:406:821;12619:155:331;12785:32;12796:7;12805:3;12810:6;12785:10;:32::i;:::-;12511:313;;;:::o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;2910:255:73:-;3015:24;:22;:24::i;:::-;3010:80;;3055:24;;-1:-1:-1;;;3055:24:73;;;;;;;:::i;3010:80::-;3100:58;3126:21;3149:8;3100:25;:58::i;6993:230:331:-;785:4:71;929:28;785:4;946:10;929;:28::i;:::-;7111:24:331::1;::::0;;;:14:::1;:24;::::0;;;;;;;;:42;;;7168:48;;20687:25:821;;;20728:18;;;20721:34;;;7168:48:331::1;::::0;20660:18:821;7168:48:331::1;;;;;;;6993:230:::0;;;:::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2152:20:331:-;;;;;;;:::i;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;8102:169:331:-;8164:12;;929:28:71;940:4;946:10;929;:28::i;:::-;8188:15:331::1;8206:25;8224:6;8206:17;:25::i;:::-;8188:43;;8241:23;8256:7;8241:14;:23::i;3531:153:453:-:0;3625:52;3644:12;:10;:12::i;:::-;3658:8;3668;3625:18;:52::i;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;3544:200:73;3622:24;:22;:24::i;:::-;3617:80;;3662:24;;-1:-1:-1;;;3662:24:73;;;;;;;:::i;3617:80::-;3706:31;3728:8;3706:21;:31::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1254:592:63:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:63;;;;;;;:::i;1436:70::-;1520:7;1531:1;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:63;;37228:2:821;1548:15:63;;;37210:21:821;37267:1;37247:18;;;37240:29;-1:-1:-1;;;37285:18:821;;;37278:35;37330:18;;1548:15:63;37026:328:821;1516:58:63;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:63;;-1:-1:-1;;;1669:55:63:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:63;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;8247:227:59:-;8363:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8363:31:59;8418:24;;;;:14;:24;;;;;;;;:49;;;:35;;;;:49;;;;;;8406:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8406:61:59;;;;;;;;;;;;8418:49;8406:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8247:227;;;;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;7753:194:331:-;7837:12;;929:28:71;940:4;946:10;929;:28::i;:::-;7861:15:331::1;7879:25;7897:6;7879:17;:25::i;:::-;7861:43;;7914:26;7926:7;7935:4;;7914:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7914:11:331::1;::::0;-1:-1:-1;;;7914:26:331:i:1;4100:1511::-:0;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;38072:2:821;3325:201:450;;;38054:21:821;38111:2;38091:18;;;38084:30;38150:34;38130:18;;;38123:62;-1:-1:-1;;;38201:18:821;;;38194:44;38255:19;;3325:201:450;37870:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;4521:26:331::1;4579:24;4637:26;4749:41;4771:18:::0;4749:21:::1;:41::i;:::-;4800:28;;;;;;;;;;;;::::0;:24:::1;:28::i;:::-;4884:31;4902:12;4884:17;:31::i;:::-;4925:26;4937:13;4925:11;:26::i;:::-;4962:45;785:4:71;4993:13:331::0;4962:10:::1;:45::i;:::-;5017:38;5028:11;5041:13;5017:10;:38::i;:::-;5065:40;5076:13;5091;5065:10;:40::i;:::-;5115:37;5126:13;5149:1;5115:10;:37::i;:::-;5162:40;5173:13;5188;5162:10;:40::i;:::-;5212:43;5226:13;5241;5212;:43::i;:::-;5266:61;5288:21;5311:15;-1:-1:-1::0;;;;;5266:61:331::1;:21;:61::i;:::-;5337:56;5362:17;5381:11;-1:-1:-1::0;;;;;5337:56:331::1;:24;:56::i;:::-;5403:42;5430:14;5403:26;:42::i;:::-;5456:12;:28:::0;;;5494:10:::1;:24:::0;;;5528:12:::1;:28:::0;;;5566:4:::1;:12;5573:5:::0;5566:4;:12:::1;:::i;:::-;-1:-1:-1::0;5588:6:331::1;:16;5597:7:::0;5588:6;:16:::1;:::i;:::-;;4487:1124;;;3651:14:450::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;14454:36:821;;3721:14:450;;14442:2:821;14427:18;3721:14:450;;;;;;;3647:99;3269:483;4100:1511:331;;;;;;;;;;:::o;565:34:56:-;;;;;;;:::i;5166:2472:59:-;5439:15;5508:24;;;:14;:24;;;;;;;;:49;;;:35;;;;:49;;;;;5466:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5466:91:59;;;;;;;;;;5439:15;;5466:91;5508:49;5466:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5466:91:59;;;;-1:-1:-1;;;5588:40:59;;;;5659:31;;;;5724:26;;;;5960:28;;;;5466:91;;-1:-1:-1;5588:40:59;;5659:31;;5724:26;5960:42;5956:515;;6035:425;6071:21;:15;;:21;:::i;:::-;6035:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6110:28:59;;;;;;-1:-1:-1;6229:8:59;;6263:38;;;;;6327:29;;;;;6382:24;;;;;;;;:::i;:::-;6187:241;;-1:-1:-1;;;;;;40619:2:821;40655:15;;;40651:24;;6187:241:59;;;40639:37:821;40692:12;;;40685:28;;;;40729:12;;;40722:28;;;;40784:15;;;40780:24;40766:12;;;40759:46;40821:13;;6187:241:59;;;;;;;;;;;;6156:290;;;;;;6035:18;:425::i;:::-;-1:-1:-1;6018:442:59;-1:-1:-1;5956:515:59;6485:10;6481:534;;;6524:15;:38;;;6566:1;6524:43;:129;;6643:10;6524:129;;;6586:15;:38;;;6524:129;6511:142;;-1:-1:-1;;6680:15:59;:29;;;:50;:127;;6797:10;6680:127;;;6749:15;:29;;;6680:127;6667:140;;-1:-1:-1;;6837:15:59;:29;;;:50;;:92;;;;-1:-1:-1;6927:1:59;6891:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6891:38:59;;;6837:92;:167;;6991:13;6837:167;;;6948:24;;;;;;;;:::i;:::-;6821:183;;6481:534;7025:29;7057:14;:24;7072:8;7057:24;;;;;;;;;;;:46;;:60;7104:12;7057:60;;;;;;;;;;;:70;7118:8;-1:-1:-1;;;;;7057:70:59;-1:-1:-1;;;;;7057:70:59;;;;;;;;;;;;;7025:102;;7155:13;-1:-1:-1;;;;;7142:26:59;:9;-1:-1:-1;;;;;7142:26:59;;;:58;;;;7190:10;7172:14;:28;;7142:58;7138:115;;;7216:26;;-1:-1:-1;;;7216:26:59;;41047:2:821;7216:26:59;;;41029:21:821;41086:2;41066:18;;;41059:30;-1:-1:-1;;;41105:18:821;;;41098:46;41161:18;;7216:26:59;40845:340:821;7138:115:59;7267:14;;;:66;;-1:-1:-1;7322:10:59;7286:33;7298:21;7286:9;:33;:::i;:::-;:46;7267:66;7263:111;;;7349:14;;-1:-1:-1;;;7349:14:59;;;;;;41392:2:821;41374:21;;;41431:1;41411:18;;;41404:29;-1:-1:-1;;;41464:2:821;41449:18;;41442:34;41508:2;41493:18;;41190:327;7263:111:59;7434:17;:36;;;7422:9;7388:17;:31;;;:43;;;;:::i;:::-;:82;7384:133;;;7486:20;;-1:-1:-1;;;7486:20:59;;41724:2:821;7486:20:59;;;41706:21:821;41763:2;41743:18;;;41736:30;-1:-1:-1;;;41782:18:821;;;41775:40;41832:18;;7486:20:59;41522:334:821;7384:133:59;7531:32;;7566:15;-1:-1:-1;7527:105:59;;;7597:24;;-1:-1:-1;;;7597:24:59;;42063:2:821;7597:24:59;;;42045:21:821;42102:2;42082:18;;;42075:30;-1:-1:-1;;;42121:18:821;;;42114:44;42175:18;;7597:24:59;41861:338:821;7527:105:59;5456:2182;;;;;5166:2472;;;;;;;;;:::o;3984:394:453:-;4192:12;:10;:12::i;:::-;-1:-1:-1;;;;;4184:20:453;:4;-1:-1:-1;;;;;4184:20:453;;:60;;;;4208:36;4225:4;4231:12;:10;:12::i;4208:36::-;4163:153;;;;-1:-1:-1;;;4163:153:453;;;;;;;:::i;:::-;4326:45;4344:4;4350:2;4354;4358:6;4366:4;4326:17;:45::i;1600:349::-;1724:4;-1:-1:-1;;;;;;1759:52:453;;-1:-1:-1;;;1759:52:453;;:131;;-1:-1:-1;;;;;;;1827:63:453;;-1:-1:-1;;;1827:63:453;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:484;;;1906:36:453;1060:166:484;2905:390:54;2967:13;2992:25;3020:17;1785:8;:15;;1711:96;3020:17;2992:45;;3047:24;3074:8;3047:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:9;3093:161;3117:17;3113:1;:21;3093:161;;;3173:7;3181:1;3173:10;;;;;;;;:::i;:::-;;;;;;;3162:8;:21;3158:86;;;3210:7;:19;3218:7;3226:1;3218:10;;;;;;;;:::i;:::-;;;;;;;3210:19;;;;;;;;;;;3203:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:390;;;:::o;3158:86::-;3136:6;3141:1;3136:6;;:::i;:::-;;;3093:161;;;-1:-1:-1;3263:25:54;;-1:-1:-1;;;3263:25:54;;42406:2:821;3263:25:54;;;42388:21:821;42445:2;42425:18;;;42418:30;-1:-1:-1;;;42464:18:821;;;42457:45;42519:18;;3263:25:54;42204:339:821;480:707:480;536:13;585:14;602:28;624:5;602:21;:28::i;:::-;633:1;602:32;585:49;;648:20;682:6;-1:-1:-1;;;;;671:18:480;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;671:18:480;-1:-1:-1;648:41:480;-1:-1:-1;809:28:480;;;825:2;809:28;864:280;-1:-1:-1;;895:5:480;-1:-1:-1;;;1029:2:480;1018:14;;1013:30;895:5;1000:44;1088:2;1079:11;;;-1:-1:-1;1108:21:480;864:280;1108:21;-1:-1:-1;1164:6:480;480:707;-1:-1:-1;;;480:707:480:o;11016:127:331:-;11072:4;11095:41;11072:4;11123:12;:10;:12::i;11095:41::-;11088:48;;11016:127;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2358:477:73:-;2486:6;2468:15;:24;2464:80;;;2508:25;;-1:-1:-1;;;2508:25:73;;;;;;;:::i;2464:80::-;-1:-1:-1;;;;;2557:35:73;;2553:93;;2608:27;;-1:-1:-1;;;2608:27:73;;;;;;;:::i;2553:93::-;2656:14;:40;;-1:-1:-1;;;;;;2706:44:73;-1:-1:-1;;;2656:40:73;;;;-1:-1:-1;;;;;;2706:44:73;;-1:-1:-1;;;;;2706:44:73;;;;;;;;2766:62;;755:25:821;;;2766:62:73;;743:2:821;728:18;2766:62:73;;;;;;;;2358:477;;:::o;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;13968:242:331:-;14128:14;14165:38;:36;:38::i;6619:1115:453:-;6839:7;:14;6825:3;:10;:28;6817:81;;;;-1:-1:-1;;;6817:81:453;;;;;;;:::i;:::-;-1:-1:-1;;;;;6916:16:453;;6908:66;;;;-1:-1:-1;;;6908:66:453;;;;;;;:::i;:::-;6985:16;7004:12;:10;:12::i;:::-;6985:31;;7027:60;7048:8;7058:4;7064:2;7068:3;7073:7;7082:4;7027:20;:60::i;:::-;7103:9;7098:411;7122:3;:10;7118:1;:14;7098:411;;;7153:10;7166:3;7170:1;7166:6;;;;;;;;:::i;:::-;;;;;;;7153:19;;7186:14;7203:7;7211:1;7203:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7228:19;7250:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7250:19:453;;;;;;;;;;;;7203:10;;-1:-1:-1;7291:21:453;;;;7283:76;;;;-1:-1:-1;;;7283:76:453;;;;;;;:::i;:::-;7401:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7401:19:453;;;;;;;;;;7423:20;;;7401:42;;7471:17;;;;;;;:27;;7423:20;;7401:13;7471:27;;7423:20;;7471:27;:::i;:::-;;;;-1:-1:-1;;7134:3:453;;;;;-1:-1:-1;7098:411:453;;-1:-1:-1;;7098:411:453;;;7554:2;-1:-1:-1;;;;;7524:47:453;7548:4;-1:-1:-1;;;;;7524:47:453;7538:8;-1:-1:-1;;;;;7524:47:453;;7558:3;7563:7;7524:47;;;;;;;:::i;:::-;;;;;;;;7652:75;7688:8;7698:4;7704:2;7708:3;7713:7;7722:4;7652:35;:75::i;:::-;6807:927;6619:1115;;;;;:::o;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2030:269:73;;:::o;8514:391:331:-;8755:24;;;;:14;:24;;;;;;:29;;:94;;-1:-1:-1;8825:24:331;;;;:14;:24;;;;;;;;;8788:11;:21;;;;;;;:33;;8812:9;;8788:33;:::i;:::-;:61;;8755:94;8734:164;;;;-1:-1:-1;;;8734:164:331;;45951:2:821;8734:164:331;;;45933:21:821;45990:2;45970:18;;;45963:30;-1:-1:-1;;;46009:18:821;;;46002:53;46072:18;;8734:164:331;45749:347:821;8734:164:331;8514:391;;;;;;;:::o;13851:111::-;13917:7;13943:12;:10;:12::i;8995:1236::-;9220:14;9238:1;9220:19;9216:99;;9263:9;:14;9255:29;;;;-1:-1:-1;;;9255:29:331;;;;;;;:::i;:::-;9298:7;;9216:99;9326:28;9356:21;9381:20;:18;:20::i;:::-;9325:76;;-1:-1:-1;9325:76:331;-1:-1:-1;9412:22:331;-1:-1:-1;;;;;9437:35:331;;;:176;;9592:21;9437:176;;;9523:1;9488:23;;;:13;:23;;;;;;-1:-1:-1;;;;;9488:23:331;:37;:88;;9553:23;;;;:13;:23;;;;;;-1:-1:-1;;;;;9553:23:331;9488:88;;;9528:22;:20;:22::i;:::-;9412:201;-1:-1:-1;9624:18:331;9645:33;9664:14;9645:16;:33;:::i;:::-;9624:54;-1:-1:-1;9688:20:331;2686:6;9712:27;;;;9624:54;9712:27;:::i;:::-;9711:39;;;;:::i;:::-;9688:62;-1:-1:-1;9761:18:331;-1:-1:-1;;;;;;;9793:45:331;;;9789:176;;-1:-1:-1;9870:9:331;:23;;9789:176;;;-1:-1:-1;9940:9:331;:14;9789:176;9982:13;9974:28;;;;-1:-1:-1;;;9974:28:331;;;;;;;:::i;:::-;10013:97;10050:9;10061:12;:10;:12::i;:::-;10075:20;10097:12;10013:36;:97::i;:::-;10120:104;10157:9;10168:12;:10;:12::i;:::-;10182:14;10198:25;10211:12;10198:10;:25;:::i;:::-;10120:36;:104::i;10284:175::-;10405:47;10411:3;10416:8;10426:21;10405:47;;;;;;;;;;;;:5;:47::i;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;755:25:821;;;3689:46:77;;743:2:821;728:18;3689:46:77;609:177:821;12149:913:453;-1:-1:-1;;;;;12266:18:453;;12258:66;;;;-1:-1:-1;;;12258:66:453;;46633:2:821;12258:66:453;;;46615:21:821;46672:2;46652:18;;;46645:30;46711:34;46691:18;;;46684:62;-1:-1:-1;;;46762:18:821;;;46755:33;46805:19;;12258:66:453;46431:399:821;12258:66:453;12356:7;:14;12342:3;:10;:28;12334:81;;;;-1:-1:-1;;;12334:81:453;;;;;;;:::i;:::-;12426:16;12445:12;:10;:12::i;:::-;12426:31;;12468:66;12489:8;12499:4;12513:1;12517:3;12522:7;12468:66;;;;;;;;;;;;:20;:66::i;:::-;12550:9;12545:364;12569:3;:10;12565:1;:14;12545:364;;;12600:10;12613:3;12617:1;12613:6;;;;;;;;:::i;:::-;;;;;;;12600:19;;12633:14;12650:7;12658:1;12650:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12675:19;12697:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12697:19:453;;;;;;;;;;;;12650:10;;-1:-1:-1;12738:21:453;;;;12730:70;;;;-1:-1:-1;;;12730:70:453;;47037:2:821;12730:70:453;;;47019:21:821;47076:2;47056:18;;;47049:30;47115:34;47095:18;;;47088:62;-1:-1:-1;;;47166:18:821;;;47159:34;47210:19;;12730:70:453;46835:400:821;12730:70:453;12842:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12842:19:453;;;;;;;;;;12864:20;;12842:42;;12581:3;;12545:364;;;;12962:1;-1:-1:-1;;;;;12924:55:453;12948:4;-1:-1:-1;;;;;12924:55:453;12938:8;-1:-1:-1;;;;;12924:55:453;;12966:3;12971:7;12924:55;;;;;;;:::i;:::-;;;;;;;;12990:65;;;;;;;;;13034:1;12990:65;;;12248:814;12149:913;;;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;;;;;;:::i;1578:86::-;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;3218:261:73:-;3321:15;:26;;;3357:20;:44;;-1:-1:-1;;;;;;3357:44:73;-1:-1:-1;;;;;3357:44:73;;;;;3417:55;;;;;;3357:44;;3321:26;;3417:55;:::i;:::-;;;;;;;;3218:261;;:::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;755:25:821;;;4836:49:77;;4804:29;;4901:43;;728:18:821;4901:43:77;;;;;;;;4619:332;;;:::o;4241:255:54:-;4302:29;4334:17;;;:7;:17;;;;;4302:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:1;4375:15;4369:29;:33;4361:59;;;;-1:-1:-1;;;4361:59:54;;47830:2:821;4361:59:54;;;47812:21:821;47869:2;47849:18;;;47842:30;-1:-1:-1;;;47888:18:821;;;47881:43;47941:18;;4361:59:54;47628:337:821;4361:59:54;4430:21;;;;:11;:21;;;;;;:28;;-1:-1:-1;;4430:28:54;4454:4;4430:28;;;4473:16;;;4430:21;4473:16;4292:204;4241:255;:::o;13198:293:453:-;13318:8;-1:-1:-1;;;;;13309:17:453;:5;-1:-1:-1;;;;;13309:17:453;;13301:71;;;;-1:-1:-1;;;13301:71:453;;48172:2:821;13301:71:453;;;48154:21:821;48211:2;48191:18;;;48184:30;48250:34;48230:18;;;48223:62;-1:-1:-1;;;48301:18:821;;;48294:39;48350:19;;13301:71:453;47970:405:821;13301:71:453;-1:-1:-1;;;;;13382:25:453;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13382:46:453;;;;;;;;;;13443:41;;1413::821;;;13443::453;;1386:18:821;13443:41:453;1273:187:821;6671:198:289;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;3787:157:73:-;3863:15;:26;;3881:8;;3863:15;-1:-1:-1;;;;3863:26:73;-1:-1:-1;;;3881:8:73;3863:26;;;;;;;;:::i;:::-;;;;;;3905:32;3928:8;3905:32;;;;;;:::i;:::-;;;;;;;;3787:157;:::o;11918:127:331:-;11982:4;12005:33;12013:10;;12025:12;:10;:12::i;4591:362:54:-;4741:25;;4805:24;4816:13;4805:8;:24;:::i;:::-;4877:8;:22;;;;;;;;;;;;;-1:-1:-1;4910:16:54;;;:7;4877:22;4910:16;;;;4795:34;;-1:-1:-1;4795:34:54;;-1:-1:-1;4910:36:54;4929:17;4910:16;:36;:::i;:::-;;4591:362;;;;;;:::o;3907:246::-;3998:21;;;;:11;:21;;;;;;;;3997:22;3989:47;;;;-1:-1:-1;;;3989:47:54;;48582:2:821;3989:47:54;;;48564:21:821;48621:2;48601:18;;;48594:30;-1:-1:-1;;;48640:18:821;;;48633:42;48692:18;;3989:47:54;48380:336:821;3989:47:54;4046:17;;;;:7;:17;;;;;:28;4066:8;4046:17;:28;:::i;:::-;;4089:57;4109:26;4126:8;4109:16;:26::i;:::-;4089:57;;;20687:25:821;;;20743:2;20728:18;;20721:34;;;20660:18;4089:57:54;20513:248:821;1423:320:476;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;1423:110:453:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1513:13:453::1;1521:4;1513:7;:13::i;4741:245:71:-:0;4824:25;4852:19;;;:13;:19;;;;;;;;4881:31;;;;4927:52;;4852:19;;4903:9;;4852:19;;4866:4;;4927:52;;4824:25;4927:52;4814:172;4741:245;;:::o;112:876:294:-;203:4;;251;203;;293:567;317:5;:12;313:1;:16;293:567;;;350:10;359:1;350:10;;:::i;:::-;;;374:20;397:5;403:1;397:8;;;;;;;;:::i;:::-;;;;;;;374:31;;440:12;424;:28;420:430;;575:44;;;;;;49290:19:821;;;49325:12;;;49318:28;;;49362:12;;575:44:294;;;;;;;;;;;;565:55;;;;;;550:70;;420:430;;;762:44;;;;;;49290:19:821;;;49325:12;;;49318:28;;;49362:12;;762:44:294;;;;;;;;;;;;752:55;;;;;;737:70;;834:1;825:10;;;;;:::i;:::-;;;420:430;-1:-1:-1;331:3:294;;293:567;;;-1:-1:-1;953:20:294;;;;;-1:-1:-1;;;;112:876:294:o;5326:947:453:-;-1:-1:-1;;;;;5507:16:453;;5499:66;;;;-1:-1:-1;;;5499:66:453;;;;;;;:::i;:::-;5576:16;5595:12;:10;:12::i;:::-;5576:31;;5617:20;5640:21;5658:2;5640:17;:21::i;:::-;5617:44;;5671:24;5698:25;5716:6;5698:17;:25::i;:::-;5671:52;;5734:60;5755:8;5765:4;5771:2;5775:3;5780:7;5789:4;5734:20;:60::i;:::-;5805:19;5827:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5827:19:453;;;;;;;;;;5864:21;;;;5856:76;;;;-1:-1:-1;;;5856:76:453;;;;;;;:::i;:::-;5966:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5966:19:453;;;;;;;;;;5988:20;;;5966:42;;6028:17;;;;;;;:27;;5988:20;;5966:13;6028:27;;5988:20;;6028:27;:::i;:::-;;;;-1:-1:-1;;6071:46:453;;;20687:25:821;;;20743:2;20728:18;;20721:34;;;-1:-1:-1;;;;;6071:46:453;;;;;;;;;;;;;;20660:18:821;6071:46:453;;;;;;;6198:68;6229:8;6239:4;6245:2;6249;6253:6;6261:4;6198:30;:68::i;:::-;5489:784;;;;5326:947;;;;;:::o;10150:916:486:-;10203:7;;-1:-1:-1;;;10278:17:486;;10274:103;;-1:-1:-1;;;10315:17:486;;;-1:-1:-1;10360:2:486;10350:12;10274:103;-1:-1:-1;;;10394:5:486;:17;10390:103;;-1:-1:-1;;;10431:17:486;;;-1:-1:-1;10476:2:486;10466:12;10390:103;10519:8;10510:5;:17;10506:103;;10556:8;10547:17;;;-1:-1:-1;10592:2:486;10582:12;10506:103;10635:7;10626:5;:16;10622:100;;10671:7;10662:16;;;-1:-1:-1;10706:1:486;10696:11;10622:100;10748:7;10739:5;:16;10735:100;;10784:7;10775:16;;;-1:-1:-1;10819:1:486;10809:11;10735:100;10861:7;10852:5;:16;10848:100;;10897:7;10888:16;;;-1:-1:-1;10932:1:486;10922:11;10848:100;10974:7;10965:5;:16;10961:66;;11011:1;11001:11;11053:6;10150:916;-1:-1:-1;;10150:916:486:o;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;49587:2:821;1911:55:298;;;49569:21:821;;;49606:18;;;49599:30;49665:34;49645:18;;;49638:62;49717:18;;1911:55:298;49385:356:821;1058:401:211;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;11016:127:331:o;1146:307:211:-;1058:401;:::o;12894:951:331:-;13304:33;13312:12;;13334:1;13304:7;:33::i;:::-;13303:34;:56;;;;-1:-1:-1;;;;;;13341:18:331;;;;13303:56;:76;;;;-1:-1:-1;;;;;;13363:16:331;;;;13303:76;13299:212;;;13403:27;13411:12;;13425:4;13403:7;:27::i;:::-;:56;;;;13434:25;13442:12;;13456:2;13434:7;:25::i;:::-;13395:105;;;;-1:-1:-1;;;13395:105:331;;49948:2:821;13395:105:331;;;49930:21:821;49987:2;49967:18;;;49960:30;50026:34;50006:18;;;49999:62;-1:-1:-1;;;50077:18:821;;;50070:34;50121:19;;13395:105:331;49746:400:821;13395:105:331;-1:-1:-1;;;;;13525:18:331;;13521:155;;13564:9;13559:107;13583:3;:10;13579:1;:14;13559:107;;;13641:7;13649:1;13641:10;;;;;;;;:::i;:::-;;;;;;;13618:11;:19;13630:3;13634:1;13630:6;;;;;;;;:::i;:::-;;;;;;;13618:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;13595:3:331;;13559:107;;;;13521:155;-1:-1:-1;;;;;13690:16:331;;13686:153;;13727:9;13722:107;13746:3;:10;13742:1;:14;13722:107;;;13804:7;13812:1;13804:10;;;;;;;;:::i;:::-;;;;;;;13781:11;:19;13793:3;13797:1;13793:6;;;;;;;;:::i;:::-;;;;;;;13781:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;13758:3:331;;13722:107;;16546:814:453;16778:15;:2;-1:-1:-1;;;;;16778:13:453;;:15::i;:::-;16774:580;;;16813:90;;-1:-1:-1;;;16813:90:453;;-1:-1:-1;;;;;16813:54:453;;;;;:90;;16868:8;;16878:4;;16884:3;;16889:7;;16898:4;;16813:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16813:90:453;;;;;;;;-1:-1:-1;;16813:90:453;;;;;;;;;;;;:::i;:::-;;;16809:535;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17220:6;17213:14;;-1:-1:-1;;;17213:14:453;;;;;;;;:::i;16809:535::-;;;17267:62;;-1:-1:-1;;;17267:62:453;;52299:2:821;17267:62:453;;;52281:21:821;52338:2;52318:18;;;52311:30;52377:34;52357:18;;;52350:62;-1:-1:-1;;;52428:18:821;;;52421:50;52488:19;;17267:62:453;52097:416:821;16809:535:453;-1:-1:-1;;;;;;16982:71:453;;-1:-1:-1;;;16982:71:453;16978:168;;17077:50;;-1:-1:-1;;;17077:50:453;;;;;;;:::i;5034:168:71:-;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;:::-;702:173;;;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;9016:671:453:-;-1:-1:-1;;;;;9125:16:453;;9117:62;;;;-1:-1:-1;;;9117:62:453;;53129:2:821;9117:62:453;;;53111:21:821;53168:2;53148:18;;;53141:30;53207:34;53187:18;;;53180:62;-1:-1:-1;;;53258:18:821;;;53251:31;53299:19;;9117:62:453;52927:397:821;9117:62:453;9190:16;9209:12;:10;:12::i;:::-;9190:31;;9231:20;9254:21;9272:2;9254:17;:21::i;:::-;9231:44;;9285:24;9312:25;9330:6;9312:17;:25::i;:::-;9285:52;;9348:66;9369:8;9387:1;9391:2;9395:3;9400:7;9409:4;9348:20;:66::i;:::-;9425:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9425:17:453;;;;;;;;;:27;;9446:6;;9425:13;:27;;9446:6;;9425:27;:::i;:::-;;;;-1:-1:-1;;9467:52:453;;;20687:25:821;;;20743:2;20728:18;;20721:34;;;-1:-1:-1;;;;;9467:52:453;;;;9500:1;;9467:52;;;;;;20660:18:821;9467:52:453;;;;;;;9606:74;9637:8;9655:1;9659:2;9663;9667:6;9675:4;9606:30;:74::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;3363:459:54:-;3430:7;3449:25;3477:17;1785:8;:15;;1711:96;3477:17;3449:45;;3504:24;3531:8;3504:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3555:9;3550:231;3574:17;3570:1;:21;3550:231;;;3628:7;3636:1;3628:10;;;;;;;;:::i;:::-;;;;;;;3616:8;:22;3612:159;;3662:5;;3658:73;;3698:7;3706:5;3710:1;3706;:5;:::i;:::-;3698:14;;;;;;;;:::i;:::-;;;;;;;3691:21;;;;;3363:459;;;:::o;3658:73::-;-1:-1:-1;3755:1:54;;3363:459;-1:-1:-1;;;;3363:459:54:o;3612:159::-;3593:3;;3550:231;;;-1:-1:-1;3790:25:54;;-1:-1:-1;;;3790:25:54;;53823:2:821;3790:25:54;;;53805:21:821;53862:2;53842:18;;;53835:30;-1:-1:-1;;;53881:18:821;;;53874:45;53936:18;;3790:25:54;53621:339:821;776:69:478;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;776::478:o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;8557:86:453::0;8623:4;:13;8630:6;8623:4;:13;:::i;17366:193::-;17485:16;;;17499:1;17485:16;;;;;;;;;17432;;17460:22;;17485:16;;;;;;;;;;;;-1:-1:-1;17485:16:453;17460:41;;17522:7;17511:5;17517:1;17511:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17547:5;17366:193;-1:-1:-1;;17366:193:453:o;15793:747::-;16000:15;:2;-1:-1:-1;;;;;16000:13:453;;:15::i;:::-;15996:538;;;16035:83;;-1:-1:-1;;;16035:83:453;;-1:-1:-1;;;;;16035:49:453;;;;;:83;;16085:8;;16095:4;;16101:2;;16105:6;;16113:4;;16035:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16035:83:453;;;;;;;;-1:-1:-1;;16035:83:453;;;;;;;;;;;;:::i;:::-;;;16031:493;;;;:::i;:::-;-1:-1:-1;;;;;;16167:66:453;;-1:-1:-1;;;16167:66:453;16163:163;;16257:50;;-1:-1:-1;;;16257:50:453;;;;;;;:::i;2482:292:292:-;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;54943:2:821;2719:48:292;;;54925:21:821;54982:2;54962:18;;;54955:30;-1:-1:-1;;;55001:18:821;;;54994:58;55069:18;;2719:48:292;54741:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;55300:2:821;8110:60:289;;;55282:21:821;55339:2;55319:18;;;55312:30;55378:31;55358:18;;;55351:59;55427:18;;8110:60:289;55098:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;55714:15:821;;;1067:68:228;;;55696:34:821;55766:15;;55746:18;;;55739:43;55798:18;;;55791:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;55631:18:821;;1067:68:228;55456:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;3107:706:228;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;56288:2:821;3711:85:228;;;56270:21:821;56327:2;56307:18;;;56300:30;56366:34;56346:18;;;56339:62;-1:-1:-1;;;56417:18:821;;;56410:40;56467:19;;3711:85:228;56086:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:821:-;-1:-1:-1;;;;;89:31:821;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:821:o;791:131::-;-1:-1:-1;;;;;;865:32:821;;855:43;;845:71;;912:1;909;902:12;927:245;985:6;1038:2;1026:9;1017:7;1013:23;1009:32;1006:52;;;1054:1;1051;1044:12;1006:52;1093:9;1080:23;1112:30;1136:5;1112:30;:::i;1465:250::-;1550:1;1560:113;1574:6;1571:1;1568:13;1560:113;;;1650:11;;;1644:18;1631:11;;;1624:39;1596:2;1589:10;1560:113;;;-1:-1:-1;;1707:1:821;1689:16;;1682:27;1465:250::o;1720:271::-;1762:3;1800:5;1794:12;1827:6;1822:3;1815:19;1843:76;1912:6;1905:4;1900:3;1896:14;1889:4;1882:5;1878:16;1843:76;:::i;:::-;1973:2;1952:15;-1:-1:-1;;1948:29:821;1939:39;;;;1980:4;1935:50;;1720:271;-1:-1:-1;;1720:271:821:o;1996:220::-;2145:2;2134:9;2127:21;2108:4;2165:45;2206:2;2195:9;2191:18;2183:6;2165:45;:::i;2221:203::-;-1:-1:-1;;;;;2385:32:821;;;;2367:51;;2355:2;2340:18;;2221:203::o;2429:180::-;2488:6;2541:2;2529:9;2520:7;2516:23;2512:32;2509:52;;;2557:1;2554;2547:12;2509:52;-1:-1:-1;2580:23:821;;2429:180;-1:-1:-1;2429:180:821:o;2614:247::-;2673:6;2726:2;2714:9;2705:7;2701:23;2697:32;2694:52;;;2742:1;2739;2732:12;2694:52;2781:9;2768:23;2800:31;2825:5;2800:31;:::i;2866:390::-;2952:8;2962:6;3016:3;3009:4;3001:6;2997:17;2993:27;2983:55;;3034:1;3031;3024:12;2983:55;-1:-1:-1;3057:20:821;;-1:-1:-1;;;;;3089:30:821;;3086:50;;;3132:1;3129;3122:12;3086:50;3169:4;3161:6;3157:17;3145:29;;3229:3;3222:4;3212:6;3209:1;3205:14;3197:6;3193:27;3189:38;3186:47;3183:67;;;3246:1;3243;3236:12;3183:67;2866:390;;;;;:::o;3261:118::-;3347:5;3340:13;3333:21;3326:5;3323:32;3313:60;;3369:1;3366;3359:12;3384:692;3520:6;3528;3536;3544;3597:2;3585:9;3576:7;3572:23;3568:32;3565:52;;;3613:1;3610;3603:12;3565:52;3649:9;3636:23;3626:33;;3710:2;3699:9;3695:18;3682:32;-1:-1:-1;;;;;3729:6:821;3726:30;3723:50;;;3769:1;3766;3759:12;3723:50;3808:93;3893:7;3884:6;3873:9;3869:22;3808:93;:::i;:::-;3920:8;;-1:-1:-1;3782:119:821;-1:-1:-1;;4005:2:821;3990:18;;3977:32;4018:28;3977:32;4018:28;:::i;:::-;3384:692;;;;-1:-1:-1;3384:692:821;;-1:-1:-1;;3384:692:821:o;4448:315::-;4516:6;4524;4577:2;4565:9;4556:7;4552:23;4548:32;4545:52;;;4593:1;4590;4583:12;4545:52;4629:9;4616:23;4606:33;;4689:2;4678:9;4674:18;4661:32;4702:31;4727:5;4702:31;:::i;:::-;4752:5;4742:15;;;4448:315;;;;;:::o;4768:248::-;4836:6;4844;4897:2;4885:9;4876:7;4872:23;4868:32;4865:52;;;4913:1;4910;4903:12;4865:52;-1:-1:-1;;4936:23:821;;;5006:2;4991:18;;;4978:32;;-1:-1:-1;4768:248:821:o;5021:274::-;-1:-1:-1;;;;;5213:32:821;;;;5195:51;;5277:2;5262:18;;5255:34;5183:2;5168:18;;5021:274::o;5300:127::-;5361:10;5356:3;5352:20;5349:1;5342:31;5392:4;5389:1;5382:15;5416:4;5413:1;5406:15;5432:249;5542:2;5523:13;;-1:-1:-1;;5519:27:821;5507:40;;-1:-1:-1;;;;;5562:34:821;;5598:22;;;5559:62;5556:88;;;5624:18;;:::i;:::-;5660:2;5653:22;-1:-1:-1;;5432:249:821:o;5686:183::-;5746:4;-1:-1:-1;;;;;5771:6:821;5768:30;5765:56;;;5801:18;;:::i;:::-;-1:-1:-1;5846:1:821;5842:14;5858:4;5838:25;;5686:183::o;5874:730::-;5928:5;5981:3;5974:4;5966:6;5962:17;5958:27;5948:55;;5999:1;5996;5989:12;5948:55;6035:6;6022:20;6061:4;6084:43;6124:2;6084:43;:::i;:::-;6156:2;6150:9;6168:31;6196:2;6188:6;6168:31;:::i;:::-;6219:6;6208:17;;6249:2;6241:6;6234:18;6280:4;6272:6;6268:17;6261:24;;6337:4;6331:2;6328:1;6324:10;6316:6;6312:23;6308:34;6294:48;;6365:3;6357:6;6354:15;6351:35;;;6382:1;6379;6372:12;6351:35;6418:4;6410:6;6406:17;6432:142;6448:6;6443:3;6440:15;6432:142;;;6514:17;;6502:30;;6552:12;;;;6465;;6432:142;;;-1:-1:-1;6592:6:821;5874:730;-1:-1:-1;;;;;;5874:730:821:o;6609:555::-;6651:5;6704:3;6697:4;6689:6;6685:17;6681:27;6671:55;;6722:1;6719;6712:12;6671:55;6758:6;6745:20;-1:-1:-1;;;;;6780:2:821;6777:26;6774:52;;;6806:18;;:::i;:::-;6855:2;6849:9;6867:67;6922:2;6903:13;;-1:-1:-1;;6899:27:821;6928:4;6895:38;6849:9;6867:67;:::i;:::-;6958:2;6950:6;6943:18;7004:3;6997:4;6992:2;6984:6;6980:15;6976:26;6973:35;6970:55;;;7021:1;7018;7011:12;6970:55;7085:2;7078:4;7070:6;7066:17;7059:4;7051:6;7047:17;7034:54;7132:1;7108:15;;;7125:4;7104:26;7097:37;;;;7112:6;6609:555;-1:-1:-1;;;6609:555:821:o;7169:1071::-;7323:6;7331;7339;7347;7355;7408:3;7396:9;7387:7;7383:23;7379:33;7376:53;;;7425:1;7422;7415:12;7376:53;7464:9;7451:23;7483:31;7508:5;7483:31;:::i;:::-;7533:5;-1:-1:-1;7590:2:821;7575:18;;7562:32;7603:33;7562:32;7603:33;:::i;:::-;7655:7;-1:-1:-1;7713:2:821;7698:18;;7685:32;-1:-1:-1;;;;;7766:14:821;;;7763:34;;;7793:1;7790;7783:12;7763:34;7816:61;7869:7;7860:6;7849:9;7845:22;7816:61;:::i;:::-;7806:71;;7930:2;7919:9;7915:18;7902:32;7886:48;;7959:2;7949:8;7946:16;7943:36;;;7975:1;7972;7965:12;7943:36;7998:63;8053:7;8042:8;8031:9;8027:24;7998:63;:::i;:::-;7988:73;;8114:3;8103:9;8099:19;8086:33;8070:49;;8144:2;8134:8;8131:16;8128:36;;;8160:1;8157;8150:12;8128:36;;8183:51;8226:7;8215:8;8204:9;8200:24;8183:51;:::i;:::-;8173:61;;;7169:1071;;;;;;;;:::o;8855:805::-;8909:5;8962:3;8955:4;8947:6;8943:17;8939:27;8929:55;;8980:1;8977;8970:12;8929:55;9016:6;9003:20;9042:4;9065:43;9105:2;9065:43;:::i;:::-;9137:2;9131:9;9149:31;9177:2;9169:6;9149:31;:::i;:::-;9200:6;9189:17;;9230:2;9222:6;9215:18;9261:4;9253:6;9249:17;9242:24;;9318:4;9312:2;9309:1;9305:10;9297:6;9293:23;9289:34;9275:48;;9346:3;9338:6;9335:15;9332:35;;;9363:1;9360;9353:12;9332:35;9399:4;9391:6;9387:17;9413:217;9429:6;9424:3;9421:15;9413:217;;;9509:3;9496:17;9526:31;9551:5;9526:31;:::i;:::-;9570:18;;9608:12;;;;9446;;9413:217;;9665:595;9783:6;9791;9844:2;9832:9;9823:7;9819:23;9815:32;9812:52;;;9860:1;9857;9850:12;9812:52;9900:9;9887:23;-1:-1:-1;;;;;9970:2:821;9962:6;9959:14;9956:34;;;9986:1;9983;9976:12;9956:34;10009:61;10062:7;10053:6;10042:9;10038:22;10009:61;:::i;:::-;9999:71;;10123:2;10112:9;10108:18;10095:32;10079:48;;10152:2;10142:8;10139:16;10136:36;;;10168:1;10165;10158:12;10136:36;;10191:63;10246:7;10235:8;10224:9;10220:24;10191:63;:::i;:::-;10181:73;;;9665:595;;;;;:::o;10265:439::-;10318:3;10356:5;10350:12;10383:6;10378:3;10371:19;10409:4;10438;10433:3;10429:14;10422:21;;10477:4;10470:5;10466:16;10500:1;10510:169;10524:6;10521:1;10518:13;10510:169;;;10585:13;;10573:26;;10619:12;;;;10654:15;;;;10546:1;10539:9;10510:169;;;-1:-1:-1;10695:3:821;;10265:439;-1:-1:-1;;;;;10265:439:821:o;10709:261::-;10888:2;10877:9;10870:21;10851:4;10908:56;10960:2;10949:9;10945:18;10937:6;10908:56;:::i;10975:163::-;11042:5;11087:3;11078:6;11073:3;11069:16;11065:26;11062:46;;;11104:1;11101;11094:12;11143:1074;11300:6;11308;11316;11324;11332;11340;11348;11401:3;11389:9;11380:7;11376:23;11372:33;11369:53;;;11418:1;11415;11408:12;11369:53;11457:9;11444:23;11476:31;11501:5;11476:31;:::i;:::-;11526:5;-1:-1:-1;11578:2:821;11563:18;;11550:32;;-1:-1:-1;11629:2:821;11614:18;;11601:32;;-1:-1:-1;11685:2:821;11670:18;;11657:32;11698:33;11657:32;11698:33;:::i;:::-;11750:7;-1:-1:-1;11804:3:821;11789:19;;11776:33;;-1:-1:-1;11860:3:821;11845:19;;11832:33;-1:-1:-1;;;;;11914:14:821;;;11911:34;;;11941:1;11938;11931:12;11911:34;11964:74;12030:7;12021:6;12010:9;12006:22;11964:74;:::i;:::-;11954:84;;12091:3;12080:9;12076:19;12063:33;12047:49;;12121:2;12111:8;12108:16;12105:36;;;12137:1;12134;12127:12;12105:36;;12160:51;12203:7;12192:8;12181:9;12177:24;12160:51;:::i;:::-;12150:61;;;11143:1074;;;;;;;;;;:::o;12222:383::-;12299:6;12307;12315;12368:2;12356:9;12347:7;12343:23;12339:32;12336:52;;;12384:1;12381;12374:12;12336:52;12420:9;12407:23;12397:33;;12477:2;12466:9;12462:18;12449:32;12439:42;;12531:2;12520:9;12516:18;12503:32;12544:31;12569:5;12544:31;:::i;:::-;12594:5;12584:15;;;12222:383;;;;;:::o;12610:730::-;12737:6;12745;12753;12806:2;12794:9;12785:7;12781:23;12777:32;12774:52;;;12822:1;12819;12812:12;12774:52;12861:9;12848:23;12880:31;12905:5;12880:31;:::i;:::-;12930:5;-1:-1:-1;12986:2:821;12971:18;;12958:32;-1:-1:-1;;;;;13039:14:821;;;13036:34;;;13066:1;13063;13056:12;13036:34;13089:61;13142:7;13133:6;13122:9;13118:22;13089:61;:::i;:::-;13079:71;;13203:2;13192:9;13188:18;13175:32;13159:48;;13232:2;13222:8;13219:16;13216:36;;;13248:1;13245;13238:12;13216:36;;13271:63;13326:7;13315:8;13304:9;13300:24;13271:63;:::i;:::-;13261:73;;;12610:730;;;;;:::o;13598:321::-;13667:6;13720:2;13708:9;13699:7;13695:23;13691:32;13688:52;;;13736:1;13733;13726:12;13688:52;13776:9;13763:23;-1:-1:-1;;;;;13801:6:821;13798:30;13795:50;;;13841:1;13838;13831:12;13795:50;13864:49;13905:7;13896:6;13885:9;13881:22;13864:49;:::i;13924:383::-;14001:6;14009;14017;14070:2;14058:9;14049:7;14045:23;14041:32;14038:52;;;14086:1;14083;14076:12;14038:52;14122:9;14109:23;14099:33;;14182:2;14171:9;14167:18;14154:32;14195:31;14220:5;14195:31;:::i;:::-;13924:383;;14245:5;;-1:-1:-1;;;14297:2:821;14282:18;;;;14269:32;;13924:383::o;14501:382::-;14566:6;14574;14627:2;14615:9;14606:7;14602:23;14598:32;14595:52;;;14643:1;14640;14633:12;14595:52;14682:9;14669:23;14701:31;14726:5;14701:31;:::i;:::-;14751:5;-1:-1:-1;14808:2:821;14793:18;;14780:32;14821:30;14780:32;14821:30;:::i;14888:471::-;14985:6;14993;15046:2;15034:9;15025:7;15021:23;15017:32;15014:52;;;15062:1;15059;15052:12;15014:52;15102:9;15089:23;-1:-1:-1;;;;;15127:6:821;15124:30;15121:50;;;15167:1;15164;15157:12;15121:50;15206:93;15291:7;15282:6;15271:9;15267:22;15206:93;:::i;:::-;15318:8;;15180:119;;-1:-1:-1;14888:471:821;-1:-1:-1;;;;14888:471:821:o;15364:801::-;15524:4;15553:2;15593;15582:9;15578:18;15623:2;15612:9;15605:21;15646:6;15681;15675:13;15712:6;15704;15697:22;15750:2;15739:9;15735:18;15728:25;;15812:2;15802:6;15799:1;15795:14;15784:9;15780:30;15776:39;15762:53;;15850:2;15842:6;15838:15;15871:1;15881:255;15895:6;15892:1;15889:13;15881:255;;;15988:2;15984:7;15972:9;15964:6;15960:22;15956:36;15951:3;15944:49;16016:40;16049:6;16040;16034:13;16016:40;:::i;:::-;16006:50;-1:-1:-1;16114:12:821;;;;16079:15;;;;15917:1;15910:9;15881:255;;;-1:-1:-1;16153:6:821;;15364:801;-1:-1:-1;;;;;;;15364:801:821:o;16170:277::-;16250:6;16303:2;16291:9;16282:7;16278:23;16274:32;16271:52;;;16319:1;16316;16309:12;16271:52;16358:9;16345:23;16397:1;16390:5;16387:12;16377:40;;16413:1;16410;16403:12;16452:348;16504:8;16514:6;16568:3;16561:4;16553:6;16549:17;16545:27;16535:55;;16586:1;16583;16576:12;16535:55;-1:-1:-1;16609:20:821;;-1:-1:-1;;;;;16641:30:821;;16638:50;;;16684:1;16681;16674:12;16638:50;16721:4;16713:6;16709:17;16697:29;;16773:3;16766:4;16757:6;16749;16745:19;16741:30;16738:39;16735:59;;;16790:1;16787;16780:12;16805:788;16905:6;16913;16921;16929;16937;16990:2;16978:9;16969:7;16965:23;16961:32;16958:52;;;17006:1;17003;16996:12;16958:52;17042:9;17029:23;17019:33;;17103:2;17092:9;17088:18;17075:32;-1:-1:-1;;;;;17167:2:821;17159:6;17156:14;17153:34;;;17183:1;17180;17173:12;17153:34;17222:59;17273:7;17264:6;17253:9;17249:22;17222:59;:::i;:::-;17300:8;;-1:-1:-1;17196:85:821;-1:-1:-1;17388:2:821;17373:18;;17360:32;;-1:-1:-1;17404:16:821;;;17401:36;;;17433:1;17430;17423:12;17401:36;;17472:61;17525:7;17514:8;17503:9;17499:24;17472:61;:::i;:::-;16805:788;;;;-1:-1:-1;16805:788:821;;-1:-1:-1;17552:8:821;;17446:87;16805:788;-1:-1:-1;;;16805:788:821:o;17598:826::-;17793:2;17782:9;17775:21;17838:6;17832:13;17827:2;17816:9;17812:18;17805:41;17900:2;17892:6;17888:15;17882:22;17877:2;17866:9;17862:18;17855:50;17959:2;17951:6;17947:15;17941:22;17936:2;17925:9;17921:18;17914:50;18019:2;18011:6;18007:15;18001:22;17995:3;17984:9;17980:19;17973:51;18079:3;18071:6;18067:16;18061:23;18055:3;18044:9;18040:19;18033:52;18140:3;18132:6;18128:16;18122:23;18116:3;18105:9;18101:19;18094:52;18229:1;18225;18220:3;18216:11;18212:19;18205:3;18197:6;18193:16;18187:23;18183:49;18177:3;18166:9;18162:19;18155:78;17756:4;18280:3;18272:6;18268:16;18262:23;18304:6;18346:2;18341;18330:9;18326:18;18319:30;;18366:52;18413:3;18402:9;18398:19;18384:12;18366:52;:::i;18429:479::-;18509:6;18517;18525;18578:2;18566:9;18557:7;18553:23;18549:32;18546:52;;;18594:1;18591;18584:12;18546:52;18630:9;18617:23;18607:33;;18691:2;18680:9;18676:18;18663:32;-1:-1:-1;;;;;18710:6:821;18707:30;18704:50;;;18750:1;18747;18740:12;18704:50;18789:59;18840:7;18831:6;18820:9;18816:22;18789:59;:::i;:::-;18429:479;;18867:8;;-1:-1:-1;18763:85:821;;-1:-1:-1;;;;18429:479:821:o;18913:173::-;18981:20;;-1:-1:-1;;;;;19030:31:821;;19020:42;;19010:70;;19076:1;19073;19066:12;19091:1417;19286:6;19294;19302;19310;19318;19326;19334;19342;19350;19358;19411:3;19399:9;19390:7;19386:23;19382:33;19379:53;;;19428:1;19425;19418:12;19379:53;19451:29;19470:9;19451:29;:::i;:::-;19441:39;;19531:2;19520:9;19516:18;19503:32;-1:-1:-1;;;;;19595:2:821;19587:6;19584:14;19581:34;;;19611:1;19608;19601:12;19581:34;19634:49;19675:7;19666:6;19655:9;19651:22;19634:49;:::i;:::-;19624:59;;19736:2;19725:9;19721:18;19708:32;19692:48;;19765:2;19755:8;19752:16;19749:36;;;19781:1;19778;19771:12;19749:36;19804:51;19847:7;19836:8;19825:9;19821:24;19804:51;:::i;:::-;19794:61;;19908:2;19897:9;19893:18;19880:32;19864:48;;19937:2;19927:8;19924:16;19921:36;;;19953:1;19950;19943:12;19921:36;19976:51;20019:7;20008:8;19997:9;19993:24;19976:51;:::i;:::-;19966:61;;20080:3;20069:9;20065:19;20052:33;20036:49;;20110:2;20100:8;20097:16;20094:36;;;20126:1;20123;20116:12;20094:36;;20149:63;20204:7;20193:8;20182:9;20178:24;20149:63;:::i;:::-;20139:73;;;20231:39;20265:3;20254:9;20250:19;20231:39;:::i;:::-;20221:49;;20289:39;20323:3;20312:9;20308:19;20289:39;:::i;:::-;20279:49;;20347:39;20381:3;20370:9;20366:19;20347:39;:::i;:::-;20337:49;;20405:39;20439:3;20428:9;20424:19;20405:39;:::i;:::-;20395:49;;20463:39;20497:3;20486:9;20482:19;20463:39;:::i;:::-;20453:49;;19091:1417;;;;;;;;;;;;;:::o;20766:388::-;20834:6;20842;20895:2;20883:9;20874:7;20870:23;20866:32;20863:52;;;20911:1;20908;20901:12;20863:52;20950:9;20937:23;20969:31;20994:5;20969:31;:::i;:::-;21019:5;-1:-1:-1;21076:2:821;21061:18;;21048:32;21089:33;21048:32;21089:33;:::i;21159:923::-;21307:6;21315;21323;21331;21339;21347;21355;21408:3;21396:9;21387:7;21383:23;21379:33;21376:53;;;21425:1;21422;21415:12;21376:53;21461:9;21448:23;21438:33;;21521:2;21510:9;21506:18;21493:32;21534:31;21559:5;21534:31;:::i;:::-;21584:5;-1:-1:-1;21636:2:821;21621:18;;21608:32;;-1:-1:-1;21687:2:821;21672:18;;21659:32;;-1:-1:-1;21743:3:821;21728:19;;21715:33;21757;21715;21757;:::i;:::-;21809:7;-1:-1:-1;21863:3:821;21848:19;;21835:33;;-1:-1:-1;21919:3:821;21904:19;;21891:33;-1:-1:-1;;;;;21936:30:821;;21933:50;;;21979:1;21976;21969:12;21933:50;22002:74;22068:7;22059:6;22048:9;22044:22;22002:74;:::i;22087:734::-;22191:6;22199;22207;22215;22223;22276:3;22264:9;22255:7;22251:23;22247:33;22244:53;;;22293:1;22290;22283:12;22244:53;22332:9;22319:23;22351:31;22376:5;22351:31;:::i;:::-;22401:5;-1:-1:-1;22458:2:821;22443:18;;22430:32;22471:33;22430:32;22471:33;:::i;:::-;22523:7;-1:-1:-1;22577:2:821;22562:18;;22549:32;;-1:-1:-1;22628:2:821;22613:18;;22600:32;;-1:-1:-1;22683:3:821;22668:19;;22655:33;-1:-1:-1;;;;;22700:30:821;;22697:50;;;22743:1;22740;22733:12;22697:50;22766:49;22807:7;22798:6;22787:9;22783:22;22766:49;:::i;22826:127::-;22887:10;22882:3;22878:20;22875:1;22868:31;22918:4;22915:1;22908:15;22942:4;22939:1;22932:15;22958:349;23111:2;23096:18;;23144:1;23133:13;;23123:144;;23189:10;23184:3;23180:20;23177:1;23170:31;23224:4;23221:1;23214:15;23252:4;23249:1;23242:15;23123:144;23276:25;;;22958:349;:::o;23723:380::-;23802:1;23798:12;;;;23845;;;23866:61;;23920:4;23912:6;23908:17;23898:27;;23866:61;23973:2;23965:6;23962:14;23942:18;23939:38;23936:161;;24019:10;24014:3;24010:20;24007:1;24000:31;24054:4;24051:1;24044:15;24082:4;24079:1;24072:15;24108:496;24287:3;24325:6;24319:13;24341:66;24400:6;24395:3;24388:4;24380:6;24376:17;24341:66;:::i;:::-;24470:13;;24429:16;;;;24492:70;24470:13;24429:16;24539:4;24527:17;;24492:70;:::i;:::-;24578:20;;24108:496;-1:-1:-1;;;;24108:496:821:o;24609:338::-;24811:2;24793:21;;;24850:2;24830:18;;;24823:30;-1:-1:-1;;;24884:2:821;24869:18;;24862:44;24938:2;24923:18;;24609:338::o;24952:127::-;25013:10;25008:3;25004:20;25001:1;24994:31;25044:4;25041:1;25034:15;25068:4;25065:1;25058:15;25084:125;25149:9;;;25170:10;;;25167:36;;;25183:18;;:::i;25214:127::-;25275:10;25270:3;25266:20;25263:1;25256:31;25306:4;25303:1;25296:15;25330:4;25327:1;25320:15;25346:333;25447:4;25505:11;25492:25;25599:3;25595:8;25584;25568:14;25564:29;25560:44;25540:18;25536:69;25526:97;;25619:1;25616;25609:12;25526:97;25640:33;;;;;25346:333;-1:-1:-1;;25346:333:821:o;26361:516::-;26433:4;26439:6;26499:11;26486:25;26593:2;26589:7;26578:8;26562:14;26558:29;26554:43;26534:18;26530:68;26520:96;;26612:1;26609;26602:12;26520:96;26639:33;;26691:20;;;-1:-1:-1;;;;;;26723:30:821;;26720:50;;;26766:1;26763;26756:12;26720:50;26799:4;26787:17;;-1:-1:-1;26830:14:821;26826:27;;;26816:38;;26813:58;;;26867:1;26864;26857:12;27008:543;27110:2;27105:3;27102:11;27099:446;;;27146:1;27170:5;27167:1;27160:16;27214:4;27211:1;27201:18;27284:2;27272:10;27268:19;27265:1;27261:27;27255:4;27251:38;27320:4;27308:10;27305:20;27302:47;;;-1:-1:-1;27343:4:821;27302:47;27398:2;27393:3;27389:12;27386:1;27382:20;27376:4;27372:31;27362:41;;27453:82;27471:2;27464:5;27461:13;27453:82;;;27516:17;;;27497:1;27486:13;27453:82;;27556:166;-1:-1:-1;;27684:1:821;27680:11;;;27676:24;27672:29;27662:40;27708:1;27704:11;;;;27659:57;;27556:166::o;27727:1190::-;-1:-1:-1;;;;;27830:3:821;27827:27;27824:53;;;27857:18;;:::i;:::-;27886:94;27976:3;27936:38;27968:4;27962:11;27936:38;:::i;:::-;27930:4;27886:94;:::i;:::-;28006:1;28031:2;28026:3;28023:11;28048:1;28043:616;;;;28703:1;28720:3;28717:93;;;-1:-1:-1;28776:19:821;;;28763:33;28717:93;28836:64;28896:3;28889:5;28836:64;:::i;:::-;28830:4;28823:78;;28016:895;;28043:616;26955:1;26948:14;;;26992:4;26979:18;;-1:-1:-1;;28079:17:821;;;28180:9;28202:229;28216:7;28213:1;28210:14;28202:229;;;28305:19;;;28292:33;28277:49;;28412:4;28397:20;;;;28365:1;28353:14;;;;28232:12;28202:229;;;28206:3;28459;28450:7;28447:16;28444:159;;;28583:1;28579:6;28573:3;28567;28564:1;28560:11;28556:21;28552:34;28548:39;28535:9;28530:3;28526:19;28513:33;28509:79;28501:6;28494:95;28444:159;;;28646:1;28640:3;28637:1;28633:11;28629:19;28623:4;28616:33;28016:895;;27727:1190;;;:::o;28922:950::-;29101:5;29088:19;29082:4;29075:33;29162:2;29155:5;29151:14;29138:28;29134:1;29128:4;29124:12;29117:50;29221:2;29214:5;29210:14;29197:28;29193:1;29187:4;29183:12;29176:50;29280:2;29273:5;29269:14;29256:28;29252:1;29246:4;29242:12;29235:50;29339:3;29332:5;29328:15;29315:29;29311:1;29305:4;29301:12;29294:51;29399:3;29392:5;29388:15;29375:29;29371:1;29365:4;29361:12;29354:51;29442:1;29436:4;29432:12;29492:3;29485:5;29481:15;29468:29;29506:33;29531:7;29506:33;:::i;:::-;29574:17;;-1:-1:-1;;;;;;29570:48:821;-1:-1:-1;;;;;29620:33:821;;;;29567:87;29548:107;;29698:60;29753:3;29742:15;;29746:5;29698:60;:::i;:::-;29767:99;29852:13;29839:11;29835:1;29829:4;29825:12;29767:99;:::i;29877:501::-;29936:5;29943:6;30003:3;29990:17;30089:2;30085:7;30074:8;30058:14;30054:29;30050:43;30030:18;30026:68;30016:96;;30108:1;30105;30098:12;30016:96;30136:33;;30240:4;30227:18;;;-1:-1:-1;30188:21:821;;-1:-1:-1;;;;;;30257:30:821;;30254:50;;;30300:1;30297;30290:12;30254:50;30347:6;30331:14;30327:27;30320:5;30316:39;30313:59;;;30368:1;30365;30358:12;30383:267;30472:6;30467:3;30460:19;30524:6;30517:5;30510:4;30505:3;30501:14;30488:43;-1:-1:-1;30576:1:821;30551:16;;;30569:4;30547:27;;;30540:38;;;;30632:2;30611:15;;;-1:-1:-1;;30607:29:821;30598:39;;;30594:50;;30383:267::o;30655:2051::-;30926:2;30978:21;;;30951:18;;;31034:22;;;30897:4;;31075:2;31093:18;;;31157:1;31153:14;;;31138:30;;31134:39;;31196:6;30897:4;;31251:1372;31267:6;31262:3;31259:15;31251:1372;;;31336:22;;;-1:-1:-1;;31332:36:821;31320:49;;31408:20;;31483:14;31479:27;;;-1:-1:-1;;31475:42:821;31451:67;;31441:95;;31532:1;31529;31522:12;31441:95;31562:31;;31650:19;;31635:35;;31693:4;31747:14;;;31734:28;31717:15;;;31710:53;31813:14;;;31800:28;31783:15;;;31776:53;31879:14;;;31866:28;31849:15;;;31842:53;31918:4;31972:14;;;31959:28;31942:15;;;31935:53;32011:4;32065:14;;;32052:28;32035:15;;;32028:53;31616:6;;32104:4;32149:14;;;32136:28;32177:33;32136:28;32177:33;:::i;:::-;-1:-1:-1;;;;;32247:33:821;32230:15;;;32223:58;32304:4;32355:54;32394:14;;;32398:5;32355:54;:::i;:::-;32321:88;;32446:2;32441;32433:6;32429:15;32422:27;32472:71;32539:2;32531:6;32527:15;32513:12;32499;32472:71;:::i;:::-;32601:12;;;;32462:81;-1:-1:-1;;;32566:15:821;;;;;-1:-1:-1;;31293:1:821;31284:11;31251:1372;;;-1:-1:-1;;;1247:13:821;;1240:21;32694:4;32679:20;;1228:34;32640:6;-1:-1:-1;32655:45:821;;-1:-1:-1;;;1177:91:821;33053:168;33126:9;;;33157;;33174:15;;;33168:22;;33154:37;33144:71;;33195:18;;:::i;33358:217::-;33398:1;33424;33414:132;;33468:10;33463:3;33459:20;33456:1;33449:31;33503:4;33500:1;33493:15;33531:4;33528:1;33521:15;33414:132;-1:-1:-1;33560:9:821;;33358:217::o;33580:410::-;33782:2;33764:21;;;33821:2;33801:18;;;33794:30;33860:34;33855:2;33840:18;;33833:62;-1:-1:-1;;;33926:2:821;33911:18;;33904:44;33980:3;33965:19;;33580:410::o;35118:128::-;35185:9;;;35206:11;;;35203:37;;;35220:18;;:::i;35251:136::-;35290:3;35318:5;35308:39;;35327:18;;:::i;:::-;-1:-1:-1;;;35363:18:821;;35251:136::o;36669:352::-;36880:6;36872;36867:3;36854:33;36975:2;36946:15;;;;-1:-1:-1;;;;;;36942:45:821;36906:16;;36931:57;;;37012:2;37004:11;;36669:352;-1:-1:-1;36669:352:821:o;37359:506::-;37602:6;37591:9;37584:25;37645:2;37640;37629:9;37625:18;37618:30;37565:4;37671:62;37729:2;37718:9;37714:18;37706:6;37698;37671:62;:::i;:::-;37781:9;37773:6;37769:22;37764:2;37753:9;37749:18;37742:50;37809;37852:6;37844;37836;37809:50;:::i;:::-;37801:58;37359:506;-1:-1:-1;;;;;;;;37359:506:821:o;38285:1345::-;38411:3;38405:10;-1:-1:-1;;;;;38430:6:821;38427:30;38424:56;;;38460:18;;:::i;:::-;38489:97;38579:6;38539:38;38571:4;38565:11;38539:38;:::i;:::-;38533:4;38489:97;:::i;:::-;38641:4;;38698:2;38687:14;;38715:1;38710:663;;;;39417:1;39434:6;39431:89;;;-1:-1:-1;39486:19:821;;;39480:26;39431:89;39546:67;39606:6;39599:5;39546:67;:::i;:::-;39540:4;39533:81;;38680:944;;38710:663;26955:1;26948:14;;;26992:4;26979:18;;-1:-1:-1;;38746:20:821;;;38864:236;38878:7;38875:1;38872:14;38864:236;;;38967:19;;;38961:26;38946:42;;39059:27;;;;39027:1;39015:14;;;;38894:19;;38864:236;;;38868:3;39128:6;39119:7;39116:19;39113:201;;;39189:19;;;39183:26;-1:-1:-1;;39272:1:821;39268:14;;;39284:3;39264:24;39260:37;39256:42;39241:58;39226:74;;39113:201;-1:-1:-1;;;;;39360:1:821;39344:14;;;39340:22;39327:36;;-1:-1:-1;38285:1345:821:o;39834:545::-;39927:4;39933:6;39993:11;39980:25;40087:2;40083:7;40072:8;40056:14;40052:29;40048:43;40028:18;40024:68;40014:96;;40106:1;40103;40096:12;40014:96;40133:33;;40185:20;;;-1:-1:-1;;;;;;40217:30:821;;40214:50;;;40260:1;40257;40250:12;40214:50;40293:4;40281:17;;-1:-1:-1;40344:1:821;40340:14;;;40324;40320:35;40310:46;;40307:66;;;40369:1;40366;40359:12;42548:339;42750:2;42732:21;;;42789:2;42769:18;;;42762:30;-1:-1:-1;;;42823:2:821;42808:18;;42801:45;42878:2;42863:18;;42548:339::o;42892:341::-;43094:2;43076:21;;;43133:2;43113:18;;;43106:30;-1:-1:-1;;;43167:2:821;43152:18;;43145:47;43224:2;43209:18;;42892:341::o;43238:810::-;-1:-1:-1;;;43644:3:821;43637:36;43619:3;43702:6;43696:13;43718:75;43786:6;43781:2;43776:3;43772:12;43765:4;43757:6;43753:17;43718:75;:::i;:::-;-1:-1:-1;;;43852:2:821;43812:16;;;43844:11;;;43837:40;43902:13;;43924:76;43902:13;43986:2;43978:11;;43971:4;43959:17;;43924:76;:::i;:::-;44020:17;44039:2;44016:26;;43238:810;-1:-1:-1;;;;43238:810:821:o;44053:404::-;44255:2;44237:21;;;44294:2;44274:18;;;44267:30;44333:34;44328:2;44313:18;;44306:62;-1:-1:-1;;;44399:2:821;44384:18;;44377:38;44447:3;44432:19;;44053:404::o;44462:401::-;44664:2;44646:21;;;44703:2;44683:18;;;44676:30;44742:34;44737:2;44722:18;;44715:62;-1:-1:-1;;;44808:2:821;44793:18;;44786:35;44853:3;44838:19;;44462:401::o;44868:406::-;45070:2;45052:21;;;45109:2;45089:18;;;45082:30;45148:34;45143:2;45128:18;;45121:62;-1:-1:-1;;;45214:2:821;45199:18;;45192:40;45264:3;45249:19;;44868:406::o;45279:465::-;45536:2;45525:9;45518:21;45499:4;45562:56;45614:2;45603:9;45599:18;45591:6;45562:56;:::i;:::-;45666:9;45658:6;45654:22;45649:2;45638:9;45634:18;45627:50;45694:44;45731:6;45723;45694:44;:::i;:::-;45686:52;45279:465;-1:-1:-1;;;;;45279:465:821:o;46101:325::-;46303:2;46285:21;;;46342:1;46322:18;;;46315:29;-1:-1:-1;;;46375:2:821;46360:18;;46353:32;46417:2;46402:18;;46101:325::o;47240:383::-;47437:2;47426:9;47419:21;47400:4;47463:45;47504:2;47493:9;47489:18;47481:6;47463:45;:::i;:::-;47556:9;47548:6;47544:22;47539:2;47528:9;47524:18;47517:50;47584:33;47610:6;47602;47584:33;:::i;48721:407::-;48923:2;48905:21;;;48962:2;48942:18;;;48935:30;49001:34;48996:2;48981:18;;48974:62;-1:-1:-1;;;49067:2:821;49052:18;;49045:41;49118:3;49103:19;;48721:407::o;50151:827::-;-1:-1:-1;;;;;50548:15:821;;;50530:34;;50600:15;;50595:2;50580:18;;50573:43;50510:3;50647:2;50632:18;;50625:31;;;50473:4;;50679:57;;50716:19;;50708:6;50679:57;:::i;:::-;50784:9;50776:6;50772:22;50767:2;50756:9;50752:18;50745:50;50818:44;50855:6;50847;50818:44;:::i;:::-;50804:58;;50911:9;50903:6;50899:22;50893:3;50882:9;50878:19;50871:51;50939:33;50965:6;50957;50939:33;:::i;50983:249::-;51052:6;51105:2;51093:9;51084:7;51080:23;51076:32;51073:52;;;51121:1;51118;51111:12;51073:52;51153:9;51147:16;51172:30;51196:5;51172:30;:::i;51237:179::-;51272:3;51314:1;51296:16;51293:23;51290:120;;;51360:1;51357;51354;51339:23;-1:-1:-1;51397:1:821;51391:8;51386:3;51382:18;51237:179;:::o;51421:671::-;51460:3;51502:4;51484:16;51481:26;51478:39;;;51421:671;:::o;51478:39::-;51544:2;51538:9;-1:-1:-1;;51609:16:821;51605:25;;51602:1;51538:9;51581:50;51660:4;51654:11;51684:16;-1:-1:-1;;;;;51790:2:821;51783:4;51775:6;51771:17;51768:25;51763:2;51755:6;51752:14;51749:45;51746:58;;;51797:5;;;;;51421:671;:::o;51746:58::-;51834:6;51828:4;51824:17;51813:28;;51870:3;51864:10;51897:2;51889:6;51886:14;51883:27;;;51903:5;;;;;;51421:671;:::o;51883:27::-;51987:2;51968:16;51962:4;51958:27;51954:36;51947:4;51938:6;51933:3;51929:16;51925:27;51922:69;51919:82;;;51994:5;;;;;;51421:671;:::o;51919:82::-;52010:57;52061:4;52052:6;52044;52040:19;52036:30;52030:4;52010:57;:::i;:::-;-1:-1:-1;52083:3:821;;51421:671;-1:-1:-1;;;;;51421:671:821:o;52518:404::-;52720:2;52702:21;;;52759:2;52739:18;;;52732:30;52798:34;52793:2;52778:18;;52771:62;-1:-1:-1;;;52864:2:821;52849:18;;52842:38;52912:3;52897:19;;52518:404::o;53329:287::-;53458:3;53496:6;53490:13;53512:66;53571:6;53566:3;53559:4;53551:6;53547:17;53512:66;:::i;53965:561::-;-1:-1:-1;;;;;54262:15:821;;;54244:34;;54314:15;;54309:2;54294:18;;54287:43;54361:2;54346:18;;54339:34;;;54404:2;54389:18;;54382:34;;;54224:3;54447;54432:19;;54425:32;;;54187:4;;54474:46;;54500:19;;54492:6;54474:46;:::i;55836:245::-;55903:6;55956:2;55944:9;55935:7;55931:23;55927:32;55924:52;;;55972:1;55969;55962:12;55924:52;56004:9;55998:16;56023:28;56045:5;56023:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchFrozen(uint256)": "83040532",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "57bc3d78",
    "claimCondition(uint256)": "e9703d25",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "freezeBatchBaseURI(uint256)": "a07ced9e",
    "getActiveClaimConditionId(uint256)": "5ab063e8",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimConditionById(uint256,uint256)": "d45b28d7",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,uint256,address)": "5811ddab",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply(uint256)": "24aaffaa",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "saleRecipient(uint256)": "c7337d6b",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "183718d1",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256,uint256)": "87198cf2",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSaleRecipientForToken(uint256,address)": "29c49b9b",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "updateBatchBaseURI(uint256,string)": "de903ddd",
    "uri(uint256)": "0e89341c",
    "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "ea1def9c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleRecipient\",\"type\":\"address\"}],\"name\":\"SaleRecipientForTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"freezeBatchBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setSaleRecipientForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"updateBatchBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"FlatPlatformFeeUpdated(address,uint256)\":{\"details\":\"Emitted when the flat platform fee is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MaxTotalSupplyUpdated(uint256,uint256)\":{\"details\":\"Emitted when the global max supply of a token is updated.\"},\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PlatformFeeInfoUpdated(address,uint256)\":{\"details\":\"Emitted when fee on primary sales is updated.\"},\"PlatformFeeTypeUpdated(uint8)\":{\"details\":\"Emitted when the platform fee type is updated.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"SaleRecipientForTokenUpdated(uint256,address)\":{\"details\":\"Emitted when the sale recipient for a particular tokenId is updated.\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burnBatch(address,uint256[],uint256[])\":{\"details\":\"Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)\"},\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"freezeBatchBaseURI(uint256)\":{\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getActiveClaimConditionId(uint256)\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getClaimConditionById(uint256,uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee type.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256,uint256)\":{\"details\":\"Lets a module admin set a max total supply for token.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"setSaleRecipientForToken(uint256,address)\":{\"details\":\"Lets a contract admin set the recipient for all primary sales.\"},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"updateBatchBaseURI(uint256,string)\":{\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\",\"_uri\":\"the new base URI for the batch.\"}},\"uri(uint256)\":{\"details\":\"Returns the uri for a given tokenId.\"},\"verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Mapping from token ID => maximum possible total circulating supply of tokens with that ID.\"},\"metadataRole\":{\"details\":\"Only METADATA_ROLE holders can reveal the URI for a batch of delayed reveal NFTs, and update or freeze batch metadata.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"saleRecipient\":{\"details\":\"Mapping from token ID => the address of the recipient of primary sales.\"},\"totalSupply\":{\"details\":\"Mapping from token ID => total circulating supply of tokens with that ID.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"ClaimConditionsUpdated(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"freezeBatchBaseURI(uint256)\":{\"notice\":\"Freezes the base URI for a batch of tokens.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"updateBatchBaseURI(uint256,string)\":{\"notice\":\"Updates the base URI for a batch of tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/drop/DropERC1155.sol\":\"DropERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365\",\"dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop1155.sol\":{\"keccak256\":\"0x2e108c8c392be17b0d5b2e471cc50178b42591b151fa146dac44943f8c73957e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06e77356ce999fd438aa6a76da89c46939579af6fe7f59360ca2ea60da7ff4a1\",\"dweb:/ipfs/QmRG79zmfJ4GBWQk5eG1A8nDkwU59p1WdpdCmAqoNJVzmX\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e\",\"dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop1155.sol\":{\"keccak256\":\"0xf2d1bdb2bcca1c6c239ca66e8d7c53061e98071b6f359aa7fac2aa9ca18ed0a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2a475e1c82a83d6a0129ca94fd235c104e4855b2ee948a1ee960c59bf0cda8da\",\"dweb:/ipfs/QmbfuSuU4fuU5XVTkmpefft9XSEgDocgWGcVwfW4rMsGgG\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732\",\"dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/drop/DropERC1155.sol\":{\"keccak256\":\"0xdec06ebf976aa1205eb38a8bacbcab04285144acb57c4c10b6d68dc735187cd7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://615fe9bc1c63ecd3c7d41fd569cfe91e75265fa6ffcb44d8c0db72f1897a38e2\",\"dweb:/ipfs/QmP6BNGTSg58DWPe4Zvep6YgNMfWGbhjA1RPzjf1qjdB8j\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b\",\"dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xc3e465e1fdd0e491688ad75ef1b946e1680e7f9f78bf5beeefd6daed8693c856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeeca7e860afd73ce8f694de1696a5150ef5b94c9877661fc2db7283446fccb7\",\"dweb:/ipfs/QmdbxAah67ohhR8ZEdFfDcVRAeFJ6JaGb49r6aiAQ54nTe\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "saleRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SaleRecipientForTokenUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop1155.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeBatchBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSaleRecipientForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBatchBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop1155.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "details": "Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)"
          },
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "freezeBatchBaseURI(uint256)": {
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getActiveClaimConditionId(uint256)": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getClaimConditionById(uint256,uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee type."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "lazyMint(uint256,string,bytes)": {
            "params": {
              "_amount": "The number of NFTs to lazy mint.",
              "_baseURIForTokens": "The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.",
              "_data": "Additional bytes data to be used at the discretion of the consumer of the contract."
            },
            "returns": {
              "batchId": "         A unique integer identifier for the batch of NFTs lazy minted together."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256,uint256)": {
            "details": "Lets a module admin set a max total supply for token."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "setSaleRecipientForToken(uint256,address)": {
            "details": "Lets a contract admin set the recipient for all primary sales."
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "updateBatchBaseURI(uint256,string)": {
            "params": {
              "_index": "Index of the desired batch in batchIds array.",
              "_uri": "the new base URI for the batch."
            }
          },
          "uri(uint256)": {
            "details": "Returns the uri for a given tokenId."
          },
          "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "freezeBatchBaseURI(uint256)": {
            "notice": "Freezes the base URI for a batch of tokens."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an authorized address lazy mint a given amount of NFTs."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "updateBatchBaseURI(uint256,string)": {
            "notice": "Updates the base URI for a batch of tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/drop/DropERC1155.sol": "DropERC1155"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345",
        "urls": [
          "bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365",
          "dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop1155.sol": {
        "keccak256": "0x2e108c8c392be17b0d5b2e471cc50178b42591b151fa146dac44943f8c73957e",
        "urls": [
          "bzz-raw://06e77356ce999fd438aa6a76da89c46939579af6fe7f59360ca2ea60da7ff4a1",
          "dweb:/ipfs/QmRG79zmfJ4GBWQk5eG1A8nDkwU59p1WdpdCmAqoNJVzmX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb",
        "urls": [
          "bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e",
          "dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop1155.sol": {
        "keccak256": "0xf2d1bdb2bcca1c6c239ca66e8d7c53061e98071b6f359aa7fac2aa9ca18ed0a1",
        "urls": [
          "bzz-raw://2a475e1c82a83d6a0129ca94fd235c104e4855b2ee948a1ee960c59bf0cda8da",
          "dweb:/ipfs/QmbfuSuU4fuU5XVTkmpefft9XSEgDocgWGcVwfW4rMsGgG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad",
        "urls": [
          "bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732",
          "dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/drop/DropERC1155.sol": {
        "keccak256": "0xdec06ebf976aa1205eb38a8bacbcab04285144acb57c4c10b6d68dc735187cd7",
        "urls": [
          "bzz-raw://615fe9bc1c63ecd3c7d41fd569cfe91e75265fa6ffcb44d8c0db72f1897a38e2",
          "dweb:/ipfs/QmP6BNGTSg58DWPe4Zvep6YgNMfWGbhjA1RPzjf1qjdB8j"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf",
        "urls": [
          "bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b",
          "dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
        "keccak256": "0xc3e465e1fdd0e491688ad75ef1b946e1680e7f9f78bf5beeefd6daed8693c856",
        "urls": [
          "bzz-raw://aeeca7e860afd73ce8f694de1696a5150ef5b94c9877661fc2db7283446fccb7",
          "dweb:/ipfs/QmdbxAah67ohhR8ZEdFfDcVRAeFJ6JaGb49r6aiAQ54nTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
        "keccak256": "0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8",
        "urls": [
          "bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83",
          "dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
        "keccak256": "0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448",
        "urls": [
          "bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9",
          "dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/drop/DropERC1155.sol",
    "id": 74354,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "BatchMintMetadata": [
        17840
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "Drop1155": [
        19595
      ],
      "DropERC1155": [
        74353
      ],
      "ERC1155Upgradeable": [
        155615
      ],
      "ERC165Upgradeable": [
        162692
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "IClaimCondition": [
        32931
      ],
      "IClaimConditionMultiPhase": [
        32955
      ],
      "IContractMetadata": [
        33084
      ],
      "IDrop1155": [
        33294
      ],
      "IERC1155MetadataURIUpgradeable": [
        155953
      ],
      "IERC1155ReceiverUpgradeable": [
        155656
      ],
      "IERC1155Upgradeable": [
        155778
      ],
      "IERC165": [
        13945
      ],
      "IERC165Upgradeable": [
        162704
      ],
      "IERC20": [
        14015
      ],
      "IERC2981": [
        14089
      ],
      "IERC2981Upgradeable": [
        153941
      ],
      "ILazyMint": [
        33463
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IPlatformFee": [
        33976
      ],
      "IPrimarySale": [
        33997
      ],
      "IRoyalty": [
        34061
      ],
      "IWETH": [
        55358
      ],
      "Initializable": [
        154159
      ],
      "LazyMint": [
        20828
      ],
      "MathUpgradeable": [
        163570
      ],
      "MerkleProof": [
        65274
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "PlatformFee": [
        22629
      ],
      "PrimarySale": [
        22703
      ],
      "Royalty": [
        23031
      ],
      "SafeERC20": [
        49165
      ],
      "SignedMathUpgradeable": [
        165216
      ],
      "Strings": [
        66084
      ],
      "StringsUpgradeable": [
        161995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14407:331",
    "nodes": [
      {
        "id": 73473,
        "nodeType": "PragmaDirective",
        "src": "39:24:331",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 73474,
        "nodeType": "ImportDirective",
        "src": "775:82:331",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 155616,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73475,
        "nodeType": "ImportDirective",
        "src": "859:39:331",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73476,
        "nodeType": "ImportDirective",
        "src": "899:74:331",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 161996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73477,
        "nodeType": "ImportDirective",
        "src": "974:80:331",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 153942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73478,
        "nodeType": "ImportDirective",
        "src": "1104:79:331",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73479,
        "nodeType": "ImportDirective",
        "src": "1184:43:331",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 65176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73480,
        "nodeType": "ImportDirective",
        "src": "1269:46:331",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73481,
        "nodeType": "ImportDirective",
        "src": "1316:41:331",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 22630,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73482,
        "nodeType": "ImportDirective",
        "src": "1358:37:331",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 23032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73483,
        "nodeType": "ImportDirective",
        "src": "1396:41:331",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73484,
        "nodeType": "ImportDirective",
        "src": "1438:37:331",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73485,
        "nodeType": "ImportDirective",
        "src": "1476:38:331",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 20829,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73486,
        "nodeType": "ImportDirective",
        "src": "1515:51:331",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73487,
        "nodeType": "ImportDirective",
        "src": "1567:38:331",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop1155.sol",
        "file": "../../extension/Drop1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74354,
        "sourceUnit": 19596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74353,
        "nodeType": "ContractDefinition",
        "src": "1607:12838:331",
        "nodes": [
          {
            "id": 73514,
            "nodeType": "UsingForDirective",
            "src": "1862:37:331",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73512,
              "name": "StringsUpgradeable",
              "nameLocations": [
                "1868:18:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161995,
              "src": "1868:18:331"
            },
            "typeName": {
              "id": 73513,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1891:7:331",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 73516,
            "nodeType": "VariableDeclaration",
            "src": "2107:18:331",
            "nodes": [],
            "constant": false,
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "2121:4:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 73515,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2107:6:331",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73518,
            "nodeType": "VariableDeclaration",
            "src": "2152:20:331",
            "nodes": [],
            "constant": false,
            "functionSelector": "95d89b41",
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "2166:6:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 73517,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2152:6:331",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73521,
            "nodeType": "VariableDeclaration",
            "src": "2282:28:331",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73519,
              "nodeType": "StructuredDocumentation",
              "src": "2179:98:331",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2298:12:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 73520,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2282:7:331",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 73524,
            "nodeType": "VariableDeclaration",
            "src": "2407:26:331",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73522,
              "nodeType": "StructuredDocumentation",
              "src": "2316:86:331",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2423:10:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 73523,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2407:7:331",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 73527,
            "nodeType": "VariableDeclaration",
            "src": "2571:28:331",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73525,
              "nodeType": "StructuredDocumentation",
              "src": "2439:127:331",
              "text": "@dev Only METADATA_ROLE holders can reveal the URI for a batch of delayed reveal NFTs, and update or freeze batch metadata."
            },
            "mutability": "mutable",
            "name": "metadataRole",
            "nameLocation": "2587:12:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 73526,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2571:7:331",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 73531,
            "nodeType": "VariableDeclaration",
            "src": "2651:41:331",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 73528,
              "nodeType": "StructuredDocumentation",
              "src": "2606:40:331",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2676:7:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73529,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2651:7:331",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 73530,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2686:6:331",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 73536,
            "nodeType": "VariableDeclaration",
            "src": "2967:46:331",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73532,
              "nodeType": "StructuredDocumentation",
              "src": "2880:82:331",
              "text": "@dev Mapping from token ID => total circulating supply of tokens with that ID."
            },
            "functionSelector": "bd85b039",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "3002:11:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 73535,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73533,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2975:7:331",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2967:27:331",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73534,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2986:7:331",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73541,
            "nodeType": "VariableDeclaration",
            "src": "3124:49:331",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73537,
              "nodeType": "StructuredDocumentation",
              "src": "3020:99:331",
              "text": "@dev Mapping from token ID => maximum possible total circulating supply of tokens with that ID."
            },
            "functionSelector": "24aaffaa",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "3159:14:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 73540,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73538,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3132:7:331",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3124:27:331",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73539,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3143:7:331",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73546,
            "nodeType": "VariableDeclaration",
            "src": "3265:48:331",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73542,
              "nodeType": "StructuredDocumentation",
              "src": "3180:80:331",
              "text": "@dev Mapping from token ID => the address of the recipient of primary sales."
            },
            "functionSelector": "c7337d6b",
            "mutability": "mutable",
            "name": "saleRecipient",
            "nameLocation": "3300:13:331",
            "scope": 74353,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 73545,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73543,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3273:7:331",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3265:27:331",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73544,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3284:7:331",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73553,
            "nodeType": "EventDefinition",
            "src": "3569:69:331",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73547,
              "nodeType": "StructuredDocumentation",
              "src": "3498:66:331",
              "text": "@dev Emitted when the global max supply of a token is updated."
            },
            "eventSelector": "c58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd",
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "3575:21:331",
            "parameters": {
              "id": 73552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3605:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73553,
                  "src": "3597:15:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "3622:14:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73553,
                  "src": "3614:22:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3614:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3596:41:331"
            }
          },
          {
            "id": 73560,
            "nodeType": "EventDefinition",
            "src": "3726:83:331",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73554,
              "nodeType": "StructuredDocumentation",
              "src": "3644:77:331",
              "text": "@dev Emitted when the sale recipient for a particular tokenId is updated."
            },
            "eventSelector": "359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b016",
            "name": "SaleRecipientForTokenUpdated",
            "nameLocation": "3732:28:331",
            "parameters": {
              "id": 73559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73556,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3777:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73560,
                  "src": "3761:23:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73558,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "saleRecipient",
                  "nameLocation": "3794:13:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73560,
                  "src": "3786:21:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3786:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3760:48:331"
            }
          },
          {
            "id": 73566,
            "nodeType": "FunctionDefinition",
            "src": "4007:28:331",
            "nodes": [],
            "body": {
              "id": 73565,
              "nodeType": "Block",
              "src": "4033:2:331",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 73563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73562,
                  "name": "initializer",
                  "nameLocations": [
                    "4021:11:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "4021:11:331"
                },
                "nodeType": "ModifierInvocation",
                "src": "4021:11:331"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4018:2:331"
            },
            "returnParameters": {
              "id": 73564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4033:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73695,
            "nodeType": "FunctionDefinition",
            "src": "4100:1511:331",
            "nodes": [],
            "body": {
              "id": 73694,
              "nodeType": "Block",
              "src": "4487:1124:331",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73594,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "4505:13:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 73694,
                      "src": "4497:21:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 73593,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4497:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73598,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 73596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4531:15:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 73595,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4521:9:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 73597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:26:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4497:50:331"
                },
                {
                  "assignments": [
                    73600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73600,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "4565:11:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 73694,
                      "src": "4557:19:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 73599,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4557:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73604,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 73602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 73601,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4579:9:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 73603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4579:24:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4557:46:331"
                },
                {
                  "assignments": [
                    73606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73606,
                      "mutability": "mutable",
                      "name": "_metadataRole",
                      "nameLocation": "4621:13:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 73694,
                      "src": "4613:21:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 73605,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4613:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73610,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d455441444154415f524f4c45",
                        "id": 73608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4647:15:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                          "typeString": "literal_string \"METADATA_ROLE\""
                        },
                        "value": "METADATA_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                          "typeString": "literal_string \"METADATA_ROLE\""
                        }
                      ],
                      "id": 73607,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4637:9:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 73609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4637:26:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4613:50:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73612,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73578,
                        "src": "4771:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 73611,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "4749:21:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 73613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4749:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73614,
                  "nodeType": "ExpressionStatement",
                  "src": "4749:41:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 73616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4825:2:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 73615,
                      "name": "__ERC1155_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154432,
                      "src": "4800:24:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 73617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4800:28:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73618,
                  "nodeType": "ExpressionStatement",
                  "src": "4800:28:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73620,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73575,
                        "src": "4902:12:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 73619,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "4884:17:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 73621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4884:31:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73622,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:31:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73624,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73569,
                        "src": "4937:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73623,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "4925:11:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 73625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4925:26:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73626,
                  "nodeType": "ExpressionStatement",
                  "src": "4925:26:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73628,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "4973:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 73629,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73569,
                        "src": "4993:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73627,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4962:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 73630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:45:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73631,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:45:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73633,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73600,
                        "src": "5028:11:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 73634,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73569,
                        "src": "5041:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73632,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "5017:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 73635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:38:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73636,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:38:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73638,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73594,
                        "src": "5076:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 73639,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73569,
                        "src": "5091:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73637,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "5065:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 73640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:40:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73641,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:40:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73643,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73594,
                        "src": "5126:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 73646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5149:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 73645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5141:7:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5141:7:331",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5141:10:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73642,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "5115:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 73648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5115:37:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73649,
                  "nodeType": "ExpressionStatement",
                  "src": "5115:37:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73651,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73606,
                        "src": "5173:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 73652,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73569,
                        "src": "5188:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73650,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "5162:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 73653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5162:40:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73654,
                  "nodeType": "ExpressionStatement",
                  "src": "5162:40:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73656,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73606,
                        "src": "5226:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 73657,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73606,
                        "src": "5241:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 73655,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21971,
                      "src": "5212:13:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 73658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5212:43:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73659,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:43:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73661,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73588,
                        "src": "5288:21:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73662,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73586,
                        "src": "5311:15:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 73660,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22540,
                      "src": "5266:21:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5266:61:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73664,
                  "nodeType": "ExpressionStatement",
                  "src": "5266:61:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73666,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73582,
                        "src": "5362:17:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73667,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73584,
                        "src": "5381:11:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 73665,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "5337:24:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5337:56:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73669,
                  "nodeType": "ExpressionStatement",
                  "src": "5337:56:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73671,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73580,
                        "src": "5430:14:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73670,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "5403:26:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 73672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5403:42:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73673,
                  "nodeType": "ExpressionStatement",
                  "src": "5403:42:331"
                },
                {
                  "expression": {
                    "id": 73676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73674,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73521,
                      "src": "5456:12:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73675,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73594,
                      "src": "5471:13:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5456:28:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 73677,
                  "nodeType": "ExpressionStatement",
                  "src": "5456:28:331"
                },
                {
                  "expression": {
                    "id": 73680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73678,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73524,
                      "src": "5494:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73679,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73600,
                      "src": "5507:11:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5494:24:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 73681,
                  "nodeType": "ExpressionStatement",
                  "src": "5494:24:331"
                },
                {
                  "expression": {
                    "id": 73684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73682,
                      "name": "metadataRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73527,
                      "src": "5528:12:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73683,
                      "name": "_metadataRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73606,
                      "src": "5543:13:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5528:28:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 73685,
                  "nodeType": "ExpressionStatement",
                  "src": "5528:28:331"
                },
                {
                  "expression": {
                    "id": 73688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73686,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73516,
                      "src": "5566:4:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73687,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73571,
                      "src": "5573:5:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5566:12:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 73689,
                  "nodeType": "ExpressionStatement",
                  "src": "5566:12:331"
                },
                {
                  "expression": {
                    "id": 73692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73690,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73518,
                      "src": "5588:6:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73691,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73573,
                      "src": "5597:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5588:16:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 73693,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:16:331"
                }
              ]
            },
            "documentation": {
              "id": 73567,
              "nodeType": "StructuredDocumentation",
              "src": "4041:54:331",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73590,
                  "name": "initializer",
                  "nameLocations": [
                    "4475:11:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "4475:11:331"
                },
                "nodeType": "ModifierInvocation",
                "src": "4475:11:331"
              }
            ],
            "name": "initialize",
            "nameLocation": "4109:10:331",
            "parameters": {
              "id": 73589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73569,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "4137:13:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4129:21:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4129:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73571,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4174:5:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4160:19:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73573,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "4203:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4189:21:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73572,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4189:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73575,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "4234:12:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4220:26:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4220:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73578,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "4273:18:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4256:35:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 73576,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4256:7:331",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 73577,
                    "nodeType": "ArrayTypeName",
                    "src": "4256:9:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73580,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "4309:14:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4301:22:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73582,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "4341:17:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4333:25:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73584,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "4376:11:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4368:19:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 73583,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4368:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73586,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "4405:15:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4397:23:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 73585,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4397:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73588,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "4438:21:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73695,
                  "src": "4430:29:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4119:346:331"
            },
            "returnParameters": {
              "id": 73592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4487:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73722,
            "nodeType": "FunctionDefinition",
            "src": "5859:211:331",
            "nodes": [],
            "body": {
              "id": 73721,
              "nodeType": "Block",
              "src": "5935:135:331",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73705,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "5959:8:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 73721,
                      "src": "5945:22:331",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 73704,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5945:6:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73709,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73707,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73698,
                        "src": "5982:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73706,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17682,
                      "src": "5970:11:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 73708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5970:21:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5945:46:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73714,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73705,
                            "src": "6032:8:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 73715,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73698,
                                "src": "6042:8:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 73716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6051:8:331",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 161825,
                              "src": "6042:17:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 73717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6042:19:331",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 73712,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6015:3:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 73713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6019:12:331",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6015:16:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 73718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6015:47:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 73711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6008:6:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 73710,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6008:6:331",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 73719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6008:55:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 73703,
                  "id": 73720,
                  "nodeType": "Return",
                  "src": "6001:62:331"
                }
              ]
            },
            "baseFunctions": [
              154475
            ],
            "documentation": {
              "id": 73696,
              "nodeType": "StructuredDocumentation",
              "src": "5809:45:331",
              "text": "@dev Returns the uri for a given tokenId."
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "5868:3:331",
            "overrides": {
              "id": 73700,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5902:8:331"
            },
            "parameters": {
              "id": 73699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73698,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5880:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73722,
                  "src": "5872:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5872:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5871:18:331"
            },
            "returnParameters": {
              "id": 73703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73722,
                  "src": "5920:13:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73701,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5919:15:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73746,
            "nodeType": "FunctionDefinition",
            "src": "6101:250:331",
            "nodes": [],
            "body": {
              "id": 73745,
              "nodeType": "Block",
              "src": "6235:116:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 73743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 73735,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73725,
                          "src": "6276:11:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 73733,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "6252:5:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_DropERC1155_$74353_$",
                            "typeString": "type(contract super DropERC1155)"
                          }
                        },
                        "id": 73734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6258:17:331",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154463,
                        "src": "6252:23:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 73736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6252:36:331",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 73742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73738,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153941,
                              "src": "6297:19:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 73737,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6292:4:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 73739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6292:25:331",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$153941",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 73740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6318:11:331",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6292:37:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 73741,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73725,
                        "src": "6333:11:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6292:52:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6252:92:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73732,
                  "id": 73744,
                  "nodeType": "Return",
                  "src": "6245:99:331"
                }
              ]
            },
            "baseFunctions": [
              13944,
              154463
            ],
            "documentation": {
              "id": 73723,
              "nodeType": "StructuredDocumentation",
              "src": "6076:20:331",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "6110:17:331",
            "overrides": {
              "id": 73729,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73727,
                  "name": "ERC1155Upgradeable",
                  "nameLocations": [
                    "6191:18:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155615,
                  "src": "6191:18:331"
                },
                {
                  "id": 73728,
                  "name": "IERC165",
                  "nameLocations": [
                    "6211:7:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "6211:7:331"
                }
              ],
              "src": "6182:37:331"
            },
            "parameters": {
              "id": 73726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73725,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "6144:11:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73746,
                  "src": "6137:18:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 73724,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6137:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6127:34:331"
            },
            "returnParameters": {
              "id": 73732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73746,
                  "src": "6229:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6229:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6228:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 73757,
            "nodeType": "FunctionDefinition",
            "src": "6542:102:331",
            "nodes": [],
            "body": {
              "id": 73756,
              "nodeType": "Block",
              "src": "6598:46:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f7045524331313535",
                        "id": 73753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6623:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a5229d422ec906ca19d4f5dfbabd8ec39bc13d8fe7bcd55b85fa08a6a60ec27",
                          "typeString": "literal_string \"DropERC1155\""
                        },
                        "value": "DropERC1155"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2a5229d422ec906ca19d4f5dfbabd8ec39bc13d8fe7bcd55b85fa08a6a60ec27",
                          "typeString": "literal_string \"DropERC1155\""
                        }
                      ],
                      "id": 73752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6615:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 73751,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6615:7:331",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 73754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6615:22:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 73750,
                  "id": 73755,
                  "nodeType": "Return",
                  "src": "6608:29:331"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "6551:12:331",
            "parameters": {
              "id": 73747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6563:2:331"
            },
            "returnParameters": {
              "id": 73750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73757,
                  "src": "6589:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6589:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6588:9:331"
            },
            "scope": 74353,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73768,
            "nodeType": "FunctionDefinition",
            "src": "6650:89:331",
            "nodes": [],
            "body": {
              "id": 73767,
              "nodeType": "Block",
              "src": "6707:32:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 73764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6730:1:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 73763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6724:5:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 73762,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6724:5:331",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 73765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6724:8:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 73761,
                  "id": 73766,
                  "nodeType": "Return",
                  "src": "6717:15:331"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "6659:15:331",
            "parameters": {
              "id": 73758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6674:2:331"
            },
            "returnParameters": {
              "id": 73761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73768,
                  "src": "6700:5:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 73759,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:5:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6699:7:331"
            },
            "scope": 74353,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73791,
            "nodeType": "FunctionDefinition",
            "src": "6993:230:331",
            "nodes": [],
            "body": {
              "id": 73790,
              "nodeType": "Block",
              "src": "7101:122:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 73779,
                        "name": "maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73541,
                        "src": "7111:14:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 73781,
                      "indexExpression": {
                        "id": 73780,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73771,
                        "src": "7126:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7111:24:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73782,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73773,
                      "src": "7138:15:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7111:42:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73784,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:42:331"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 73786,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73771,
                        "src": "7190:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73787,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73773,
                        "src": "7200:15:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73785,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73553,
                      "src": "7168:21:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 73788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7168:48:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73789,
                  "nodeType": "EmitStatement",
                  "src": "7163:53:331"
                }
              ]
            },
            "documentation": {
              "id": 73769,
              "nodeType": "StructuredDocumentation",
              "src": "6926:62:331",
              "text": "@dev Lets a module admin set a max total supply for token."
            },
            "functionSelector": "87198cf2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73776,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21787,
                    "src": "7081:18:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 73777,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73775,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7072:8:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "7072:8:331"
                },
                "nodeType": "ModifierInvocation",
                "src": "7072:28:331"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "7002:17:331",
            "parameters": {
              "id": 73774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73771,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7028:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73791,
                  "src": "7020:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7020:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73773,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "7046:15:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73791,
                  "src": "7038:23:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7038:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7019:43:331"
            },
            "returnParameters": {
              "id": 73778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7101:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73814,
            "nodeType": "FunctionDefinition",
            "src": "7305:240:331",
            "nodes": [],
            "body": {
              "id": 73813,
              "nodeType": "Block",
              "src": "7419:126:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 73802,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73546,
                        "src": "7429:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 73804,
                      "indexExpression": {
                        "id": 73803,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73794,
                        "src": "7443:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7429:23:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73805,
                      "name": "_saleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73796,
                      "src": "7455:14:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7429:40:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73807,
                  "nodeType": "ExpressionStatement",
                  "src": "7429:40:331"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 73809,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73794,
                        "src": "7513:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73810,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73796,
                        "src": "7523:14:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73808,
                      "name": "SaleRecipientForTokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73560,
                      "src": "7484:28:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 73811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7484:54:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73812,
                  "nodeType": "EmitStatement",
                  "src": "7479:59:331"
                }
              ]
            },
            "documentation": {
              "id": 73792,
              "nodeType": "StructuredDocumentation",
              "src": "7229:71:331",
              "text": "@dev Lets a contract admin set the recipient for all primary sales."
            },
            "functionSelector": "29c49b9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73799,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21787,
                    "src": "7399:18:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 73800,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73798,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7390:8:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "7390:8:331"
                },
                "nodeType": "ModifierInvocation",
                "src": "7390:28:331"
              }
            ],
            "name": "setSaleRecipientForToken",
            "nameLocation": "7314:24:331",
            "parameters": {
              "id": 73797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73794,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7347:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73814,
                  "src": "7339:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7339:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73796,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "7365:14:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73814,
                  "src": "7357:22:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7357:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7338:42:331"
            },
            "returnParameters": {
              "id": 73801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7419:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73837,
            "nodeType": "FunctionDefinition",
            "src": "7753:194:331",
            "nodes": [],
            "body": {
              "id": 73836,
              "nodeType": "Block",
              "src": "7851:96:331",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73826,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "7869:7:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 73836,
                      "src": "7861:15:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73825,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7861:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73830,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73828,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73817,
                        "src": "7897:6:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73827,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17570,
                      "src": "7879:17:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 73829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:25:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7861:43:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73832,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73826,
                        "src": "7926:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73833,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73819,
                        "src": "7935:4:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 73831,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17769,
                      "src": "7914:11:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 73834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7914:26:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73835,
                  "nodeType": "ExpressionStatement",
                  "src": "7914:26:331"
                }
              ]
            },
            "documentation": {
              "id": 73815,
              "nodeType": "StructuredDocumentation",
              "src": "7551:197:331",
              "text": " @notice Updates the base URI for a batch of tokens.\n @param _index Index of the desired batch in batchIds array.\n @param _uri   the new base URI for the batch."
            },
            "functionSelector": "de903ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73822,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73527,
                    "src": "7837:12:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 73823,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73821,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7828:8:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "7828:8:331"
                },
                "nodeType": "ModifierInvocation",
                "src": "7828:22:331"
              }
            ],
            "name": "updateBatchBaseURI",
            "nameLocation": "7762:18:331",
            "parameters": {
              "id": 73820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73817,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "7789:6:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73837,
                  "src": "7781:14:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7781:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73819,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "7813:4:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73837,
                  "src": "7797:20:331",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73818,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7797:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7780:38:331"
            },
            "returnParameters": {
              "id": 73824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7851:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73857,
            "nodeType": "FunctionDefinition",
            "src": "8102:169:331",
            "nodes": [],
            "body": {
              "id": 73856,
              "nodeType": "Block",
              "src": "8178:93:331",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73847,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "8196:7:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 73856,
                      "src": "8188:15:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8188:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73851,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73849,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73840,
                        "src": "8224:6:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73848,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17570,
                      "src": "8206:17:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 73850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8206:25:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8188:43:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73853,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73847,
                        "src": "8256:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73852,
                      "name": "_freezeBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17802,
                      "src": "8241:14:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 73854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8241:23:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73855,
                  "nodeType": "ExpressionStatement",
                  "src": "8241:23:331"
                }
              ]
            },
            "documentation": {
              "id": 73838,
              "nodeType": "StructuredDocumentation",
              "src": "7953:144:331",
              "text": " @notice Freezes the base URI for a batch of tokens.\n @param _index Index of the desired batch in batchIds array."
            },
            "functionSelector": "a07ced9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73843,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73527,
                    "src": "8164:12:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 73844,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73842,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8155:8:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "8155:8:331"
                },
                "nodeType": "ModifierInvocation",
                "src": "8155:22:331"
              }
            ],
            "name": "freezeBatchBaseURI",
            "nameLocation": "8111:18:331",
            "parameters": {
              "id": 73841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73840,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "8138:6:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73857,
                  "src": "8130:14:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8130:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8129:16:331"
            },
            "returnParameters": {
              "id": 73845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8178:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73897,
            "nodeType": "FunctionDefinition",
            "src": "8514:391:331",
            "nodes": [],
            "body": {
              "id": 73896,
              "nodeType": "Block",
              "src": "8724:181:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 73878,
                              "name": "maxTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73541,
                              "src": "8755:14:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 73880,
                            "indexExpression": {
                              "id": 73879,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73860,
                              "src": "8770:8:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8755:24:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 73881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8783:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8755:29:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 73883,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73536,
                                "src": "8788:11:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 73885,
                              "indexExpression": {
                                "id": 73884,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73860,
                                "src": "8800:8:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8788:21:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 73886,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73864,
                              "src": "8812:9:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8788:33:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 73888,
                              "name": "maxTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73541,
                              "src": "8825:14:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 73890,
                            "indexExpression": {
                              "id": 73889,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73860,
                              "src": "8840:8:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8825:24:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8788:61:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8755:94:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c79",
                        "id": 73893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8863:25:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40dc160d0c899650bc1d2267443cabb7167aec1c3a21c13aa54b24e73829f9df",
                          "typeString": "literal_string \"exceed max total supply\""
                        },
                        "value": "exceed max total supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40dc160d0c899650bc1d2267443cabb7167aec1c3a21c13aa54b24e73829f9df",
                          "typeString": "literal_string \"exceed max total supply\""
                        }
                      ],
                      "id": 73877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8734:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8734:164:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73895,
                  "nodeType": "ExpressionStatement",
                  "src": "8734:164:331"
                }
              ]
            },
            "baseFunctions": [
              19544
            ],
            "documentation": {
              "id": 73858,
              "nodeType": "StructuredDocumentation",
              "src": "8460:49:331",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8523:12:331",
            "overrides": {
              "id": 73875,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8715:8:331"
            },
            "parameters": {
              "id": 73874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73860,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8553:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8545:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8545:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8571:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8571:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73864,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8596:9:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8588:17:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8588:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8615:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8615:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73868,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8632:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8632:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8649:23:331",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33238_calldata_ptr",
                    "typeString": "struct IDrop1155.AllowlistProof"
                  },
                  "typeName": {
                    "id": 73870,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73869,
                      "name": "AllowlistProof",
                      "nameLocations": [
                        "8649:14:331"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33238,
                      "src": "8649:14:331"
                    },
                    "referencedDeclaration": 33238,
                    "src": "8649:14:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33238_storage_ptr",
                      "typeString": "struct IDrop1155.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73897,
                  "src": "8682:12:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73872,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8682:5:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8535:165:331"
            },
            "returnParameters": {
              "id": 73876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8724:0:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74026,
            "nodeType": "FunctionDefinition",
            "src": "8995:1236:331",
            "nodes": [],
            "body": {
              "id": 74025,
              "nodeType": "Block",
              "src": "9206:1025:331",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73912,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73908,
                      "src": "9220:14:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9238:1:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9220:19:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73925,
                  "nodeType": "IfStatement",
                  "src": "9216:99:331",
                  "trueBody": {
                    "id": 73924,
                    "nodeType": "Block",
                    "src": "9241:74:331",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 73919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 73916,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9263:3:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 73917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9267:5:331",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9263:9:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 73918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9276:1:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9263:14:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156",
                              "id": 73920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9279:4:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              },
                              "value": "!V"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              }
                            ],
                            "id": 73915,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9255:7:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 73921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9255:29:331",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73922,
                        "nodeType": "ExpressionStatement",
                        "src": "9255:29:331"
                      },
                      {
                        "functionReturnParameters": 73911,
                        "id": 73923,
                        "nodeType": "Return",
                        "src": "9298:7:331"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    73927,
                    73929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73927,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9334:20:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 74025,
                      "src": "9326:28:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73926,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9326:7:331",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73929,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9363:14:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 74025,
                      "src": "9356:21:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 73928,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9356:6:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73932,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 73930,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22447,
                      "src": "9381:18:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 73931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9381:20:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9325:76:331"
                },
                {
                  "assignments": [
                    73934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73934,
                      "mutability": "mutable",
                      "name": "_saleRecipient",
                      "nameLocation": "9420:14:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 74025,
                      "src": "9412:22:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73933,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9412:7:331",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73958,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 73940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 73935,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73902,
                        "src": "9437:21:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 73938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9470:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 73937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9462:7:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73936,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9462:7:331",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9462:10:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9437:35:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 73956,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73902,
                      "src": "9592:21:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 73957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9437:176:331",
                    "trueExpression": {
                      "components": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 73948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 73941,
                                "name": "saleRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73546,
                                "src": "9488:13:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 73943,
                              "indexExpression": {
                                "id": 73942,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73900,
                                "src": "9502:8:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9488:23:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 73946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9523:1:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 73945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9515:7:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73944,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9515:7:331",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9515:10:331",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9488:37:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "baseExpression": {
                              "id": 73951,
                              "name": "saleRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73546,
                              "src": "9553:13:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 73953,
                            "indexExpression": {
                              "id": 73952,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73900,
                              "src": "9567:8:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9553:23:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 73954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9488:88:331",
                          "trueExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73949,
                              "name": "primarySaleRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22648,
                              "src": "9528:20:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 73950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9528:22:331",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 73955,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9487:90:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9412:201:331"
                },
                {
                  "assignments": [
                    73960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73960,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9632:10:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 74025,
                      "src": "9624:18:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9624:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73964,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73961,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73904,
                      "src": "9645:16:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 73962,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73908,
                      "src": "9664:14:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9645:33:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9624:54:331"
                },
                {
                  "assignments": [
                    73966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73966,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9696:12:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 74025,
                      "src": "9688:20:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9688:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73973,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73967,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73960,
                            "src": "9712:10:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 73968,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73929,
                            "src": "9725:14:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9712:27:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 73970,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9711:29:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 73971,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73531,
                      "src": "9743:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9711:39:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9688:62:331"
                },
                {
                  "assignments": [
                    73975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73975,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9766:13:331",
                      "nodeType": "VariableDeclaration",
                      "scope": 74025,
                      "src": "9761:18:331",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 73974,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9761:4:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73976,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9761:18:331"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73977,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73906,
                      "src": "9793:9:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 73978,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "9806:19:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 73979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "9826:12:331",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "9806:32:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9793:45:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 73996,
                    "nodeType": "Block",
                    "src": "9910:55:331",
                    "statements": [
                      {
                        "expression": {
                          "id": 73994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73989,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73975,
                            "src": "9924:13:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 73990,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9940:3:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9944:5:331",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9940:9:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 73992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9953:1:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9940:14:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9924:30:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73995,
                        "nodeType": "ExpressionStatement",
                        "src": "9924:30:331"
                      }
                    ]
                  },
                  "id": 73997,
                  "nodeType": "IfStatement",
                  "src": "9789:176:331",
                  "trueBody": {
                    "id": 73988,
                    "nodeType": "Block",
                    "src": "9840:64:331",
                    "statements": [
                      {
                        "expression": {
                          "id": 73986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73981,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73975,
                            "src": "9854:13:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 73982,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9870:3:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9874:5:331",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9870:9:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 73984,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73960,
                              "src": "9883:10:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9870:23:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9854:39:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73987,
                        "nodeType": "ExpressionStatement",
                        "src": "9854:39:331"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73999,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73975,
                        "src": "9982:13:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 74000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9997:4:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 73998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9974:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9974:28:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74002,
                  "nodeType": "ExpressionStatement",
                  "src": "9974:28:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74006,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73906,
                        "src": "10050:9:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74007,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "10061:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10061:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74009,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73927,
                        "src": "10075:20:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74010,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73966,
                        "src": "10097:12:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74003,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "10013:19:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10033:16:331",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "10013:36:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10013:97:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74012,
                  "nodeType": "ExpressionStatement",
                  "src": "10013:97:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74016,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73906,
                        "src": "10157:9:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74017,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "10168:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10168:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74019,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73934,
                        "src": "10182:14:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74020,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73960,
                          "src": "10198:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 74021,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73966,
                          "src": "10211:12:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10198:25:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74013,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "10120:19:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10140:16:331",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "10120:36:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10120:104:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74024,
                  "nodeType": "ExpressionStatement",
                  "src": "10120:104:331"
                }
              ]
            },
            "baseFunctions": [
              19578
            ],
            "documentation": {
              "id": 73898,
              "nodeType": "StructuredDocumentation",
              "src": "8911:79:331",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectPriceOnClaim",
            "nameLocation": "9004:19:331",
            "overrides": {
              "id": 73910,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9197:8:331"
            },
            "parameters": {
              "id": 73909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73900,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9041:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74026,
                  "src": "9033:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9033:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73902,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9067:21:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74026,
                  "src": "9059:29:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9059:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73904,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9106:16:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74026,
                  "src": "9098:24:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9098:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73906,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9140:9:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74026,
                  "src": "9132:17:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9132:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73908,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9167:14:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74026,
                  "src": "9159:22:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9159:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9023:164:331"
            },
            "returnParameters": {
              "id": 73911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9206:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74045,
            "nodeType": "FunctionDefinition",
            "src": "10284:175:331",
            "nodes": [],
            "body": {
              "id": 74044,
              "nodeType": "Block",
              "src": "10395:64:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74038,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74029,
                        "src": "10411:3:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74039,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74031,
                        "src": "10416:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74040,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74033,
                        "src": "10426:21:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 74041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10449:2:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 74037,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155044,
                      "src": "10405:5:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 74042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10405:47:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74043,
                  "nodeType": "ExpressionStatement",
                  "src": "10405:47:331"
                }
              ]
            },
            "baseFunctions": [
              19588
            ],
            "documentation": {
              "id": 74027,
              "nodeType": "StructuredDocumentation",
              "src": "10237:42:331",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokensOnClaim",
            "nameLocation": "10293:21:331",
            "overrides": {
              "id": 74035,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10386:8:331"
            },
            "parameters": {
              "id": 74034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74029,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10323:3:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74045,
                  "src": "10315:11:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10315:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74031,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10336:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74045,
                  "src": "10328:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10328:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74033,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10354:21:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74045,
                  "src": "10346:29:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10346:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10314:62:331"
            },
            "returnParameters": {
              "id": 74036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10395:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74059,
            "nodeType": "FunctionDefinition",
            "src": "10554:137:331",
            "nodes": [],
            "body": {
              "id": 74058,
              "nodeType": "Block",
              "src": "10626:65:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74053,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "10651:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74054,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "10671:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10671:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74052,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10643:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10643:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74051,
                  "id": 74057,
                  "nodeType": "Return",
                  "src": "10636:48:331"
                }
              ]
            },
            "baseFunctions": [
              22628
            ],
            "documentation": {
              "id": 74046,
              "nodeType": "StructuredDocumentation",
              "src": "10465:84:331",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10563:22:331",
            "overrides": {
              "id": 74048,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10602:8:331"
            },
            "parameters": {
              "id": 74047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10585:2:331"
            },
            "returnParameters": {
              "id": 74051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74059,
                  "src": "10620:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10620:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10619:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74073,
            "nodeType": "FunctionDefinition",
            "src": "10791:142:331",
            "nodes": [],
            "body": {
              "id": 74072,
              "nodeType": "Block",
              "src": "10868:65:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74067,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "10893:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74068,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "10913:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10913:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74066,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10885:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10885:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74065,
                  "id": 74071,
                  "nodeType": "Return",
                  "src": "10878:48:331"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 74060,
              "nodeType": "StructuredDocumentation",
              "src": "10697:89:331",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10800:27:331",
            "overrides": {
              "id": 74062,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10844:8:331"
            },
            "parameters": {
              "id": 74061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10827:2:331"
            },
            "returnParameters": {
              "id": 74065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74064,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74073,
                  "src": "10862:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74063,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10862:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10861:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74087,
            "nodeType": "FunctionDefinition",
            "src": "11016:127:331",
            "nodes": [],
            "body": {
              "id": 74086,
              "nodeType": "Block",
              "src": "11078:65:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74081,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11103:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74082,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "11123:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11123:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74080,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11095:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11095:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74079,
                  "id": 74085,
                  "nodeType": "Return",
                  "src": "11088:48:331"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 74074,
              "nodeType": "StructuredDocumentation",
              "src": "10939:72:331",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "11025:12:331",
            "overrides": {
              "id": 74076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11054:8:331"
            },
            "parameters": {
              "id": 74075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11037:2:331"
            },
            "returnParameters": {
              "id": 74079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74087,
                  "src": "11072:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11072:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11071:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74101,
            "nodeType": "FunctionDefinition",
            "src": "11233:133:331",
            "nodes": [],
            "body": {
              "id": 74100,
              "nodeType": "Block",
              "src": "11301:65:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74095,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11326:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74096,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "11346:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11346:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74094,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11318:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11318:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74093,
                  "id": 74099,
                  "nodeType": "Return",
                  "src": "11311:48:331"
                }
              ]
            },
            "baseFunctions": [
              23030
            ],
            "documentation": {
              "id": 74088,
              "nodeType": "StructuredDocumentation",
              "src": "11149:79:331",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11242:18:331",
            "overrides": {
              "id": 74090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11277:8:331"
            },
            "parameters": {
              "id": 74089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11260:2:331"
            },
            "returnParameters": {
              "id": 74093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74101,
                  "src": "11295:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74091,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11295:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11294:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74115,
            "nodeType": "FunctionDefinition",
            "src": "11461:133:331",
            "nodes": [],
            "body": {
              "id": 74114,
              "nodeType": "Block",
              "src": "11529:65:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74109,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11554:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74110,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "11574:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11574:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74108,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11546:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11546:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74107,
                  "id": 74113,
                  "nodeType": "Return",
                  "src": "11539:48:331"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 74102,
              "nodeType": "StructuredDocumentation",
              "src": "11372:84:331",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11470:18:331",
            "overrides": {
              "id": 74104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11505:8:331"
            },
            "parameters": {
              "id": 74103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11488:2:331"
            },
            "returnParameters": {
              "id": 74107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74115,
                  "src": "11523:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11523:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11522:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74129,
            "nodeType": "FunctionDefinition",
            "src": "11689:137:331",
            "nodes": [],
            "body": {
              "id": 74128,
              "nodeType": "Block",
              "src": "11761:65:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74123,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11786:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74124,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "11806:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11806:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74122,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11778:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11778:41:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74121,
                  "id": 74127,
                  "nodeType": "Return",
                  "src": "11771:48:331"
                }
              ]
            },
            "baseFunctions": [
              19594
            ],
            "documentation": {
              "id": 74116,
              "nodeType": "StructuredDocumentation",
              "src": "11600:84:331",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11698:22:331",
            "overrides": {
              "id": 74118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11737:8:331"
            },
            "parameters": {
              "id": 74117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11720:2:331"
            },
            "returnParameters": {
              "id": 74121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74129,
                  "src": "11755:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74119,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11755:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11754:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74143,
            "nodeType": "FunctionDefinition",
            "src": "11918:127:331",
            "nodes": [],
            "body": {
              "id": 74142,
              "nodeType": "Block",
              "src": "11988:57:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74137,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73524,
                        "src": "12013:10:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74138,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            74339
                          ],
                          "referencedDeclaration": 74339,
                          "src": "12025:10:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12025:12:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74136,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "12005:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12005:33:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74135,
                  "id": 74141,
                  "nodeType": "Return",
                  "src": "11998:40:331"
                }
              ]
            },
            "baseFunctions": [
              20827
            ],
            "documentation": {
              "id": 74130,
              "nodeType": "StructuredDocumentation",
              "src": "11832:81:331",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "11927:12:331",
            "overrides": {
              "id": 74132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11964:8:331"
            },
            "parameters": {
              "id": 74131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11939:2:331"
            },
            "returnParameters": {
              "id": 74135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "11982:4:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11982:4:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11981:6:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74152,
            "nodeType": "FunctionDefinition",
            "src": "12305:106:331",
            "nodes": [],
            "body": {
              "id": 74151,
              "nodeType": "Block",
              "src": "12366:45:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74149,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20762,
                    "src": "12383:21:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74148,
                  "id": 74150,
                  "nodeType": "Return",
                  "src": "12376:28:331"
                }
              ]
            },
            "documentation": {
              "id": 74144,
              "nodeType": "StructuredDocumentation",
              "src": "12229:71:331",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12314:17:331",
            "parameters": {
              "id": 74145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12331:2:331"
            },
            "returnParameters": {
              "id": 74148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74152,
                  "src": "12357:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12357:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12356:9:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74185,
            "nodeType": "FunctionDefinition",
            "src": "12511:313:331",
            "nodes": [],
            "body": {
              "id": 74184,
              "nodeType": "Block",
              "src": "12609:215:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 74174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 74168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74165,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74155,
                            "src": "12640:7:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 74166,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                74339
                              ],
                              "referencedDeclaration": 74339,
                              "src": "12651:10:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12651:12:331",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12640:23:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 74170,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74155,
                              "src": "12684:7:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 74171,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  74339
                                ],
                                "referencedDeclaration": 74339,
                                "src": "12693:10:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 74172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12693:12:331",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74169,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154602,
                            "src": "12667:16:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 74173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12667:39:331",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12640:66:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642e",
                        "id": 74175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12720:44:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04734b189e922777d599884b7960472dc0629c731f10be0d8edb246be9142927",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved.\""
                        },
                        "value": "ERC1155: caller is not owner nor approved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04734b189e922777d599884b7960472dc0629c731f10be0d8edb246be9142927",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved.\""
                        }
                      ],
                      "id": 74164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12619:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12619:155:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74177,
                  "nodeType": "ExpressionStatement",
                  "src": "12619:155:331"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74179,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74155,
                        "src": "12796:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74180,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74158,
                        "src": "12805:3:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 74181,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74161,
                        "src": "12810:6:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 74178,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155383,
                      "src": "12785:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 74182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12785:32:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74183,
                  "nodeType": "ExpressionStatement",
                  "src": "12785:32:331"
                }
              ]
            },
            "documentation": {
              "id": 74153,
              "nodeType": "StructuredDocumentation",
              "src": "12417:89:331",
              "text": "@dev Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)"
            },
            "functionSelector": "6b20c454",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnBatch",
            "nameLocation": "12520:9:331",
            "parameters": {
              "id": 74162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74155,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12538:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74185,
                  "src": "12530:15:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12530:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74158,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "12564:3:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74185,
                  "src": "12547:20:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74156,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12547:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74157,
                    "nodeType": "ArrayTypeName",
                    "src": "12547:9:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74161,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "12586:6:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74185,
                  "src": "12569:23:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74159,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12569:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74160,
                    "nodeType": "ArrayTypeName",
                    "src": "12569:9:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12529:64:331"
            },
            "returnParameters": {
              "id": 74163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12609:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 74315,
            "nodeType": "FunctionDefinition",
            "src": "12894:951:331",
            "nodes": [],
            "body": {
              "id": 74314,
              "nodeType": "Block",
              "src": "13115:730:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74207,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74188,
                        "src": "13152:8:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74208,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74190,
                        "src": "13162:4:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74209,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74192,
                        "src": "13168:2:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74210,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74195,
                        "src": "13172:3:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 74211,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74198,
                        "src": "13177:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 74212,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74200,
                        "src": "13186:4:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74204,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13125:5:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC1155_$74353_$",
                          "typeString": "type(contract super DropERC1155)"
                        }
                      },
                      "id": 74206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13131:20:331",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 155434,
                      "src": "13125:26:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 74213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13125:66:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74214,
                  "nodeType": "ExpressionStatement",
                  "src": "13125:66:331"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 74236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 74229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13303:34:331",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 74216,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73521,
                              "src": "13312:12:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 74219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13334:1:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 74218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13326:7:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 74217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13326:7:331",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 74220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13326:10:331",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74215,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21818,
                            "src": "13304:7:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 74221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13304:33:331",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74223,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74190,
                          "src": "13341:4:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 74226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13357:1:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 74225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13349:7:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 74224,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13349:7:331",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13349:10:331",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13341:18:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "13303:56:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 74235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74230,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74192,
                        "src": "13363:2:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13377:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13369:7:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74231,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13369:7:331",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13369:10:331",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13363:16:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13303:76:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74251,
                  "nodeType": "IfStatement",
                  "src": "13299:212:331",
                  "trueBody": {
                    "id": 74250,
                    "nodeType": "Block",
                    "src": "13381:130:331",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 74246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 74239,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73521,
                                    "src": "13411:12:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 74240,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74190,
                                    "src": "13425:4:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74238,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21818,
                                  "src": "13403:7:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 74241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13403:27:331",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 74243,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73521,
                                    "src": "13442:12:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 74244,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74192,
                                    "src": "13456:2:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74242,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21818,
                                  "src": "13434:7:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 74245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13434:25:331",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13403:56:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7265737472696374656420746f205452414e534645525f524f4c4520686f6c646572732e",
                              "id": 74247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13461:38:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80653bc1019aa82133f98596117119bd52c35f971b64223fbf9db2d56405322f",
                                "typeString": "literal_string \"restricted to TRANSFER_ROLE holders.\""
                              },
                              "value": "restricted to TRANSFER_ROLE holders."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80653bc1019aa82133f98596117119bd52c35f971b64223fbf9db2d56405322f",
                                "typeString": "literal_string \"restricted to TRANSFER_ROLE holders.\""
                              }
                            ],
                            "id": 74237,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13395:7:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13395:105:331",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74249,
                        "nodeType": "ExpressionStatement",
                        "src": "13395:105:331"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74252,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74190,
                      "src": "13525:4:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 74255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13541:1:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 74254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13533:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 74253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13533:7:331",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 74256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13533:10:331",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13525:18:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74282,
                  "nodeType": "IfStatement",
                  "src": "13521:155:331",
                  "trueBody": {
                    "id": 74281,
                    "nodeType": "Block",
                    "src": "13545:131:331",
                    "statements": [
                      {
                        "body": {
                          "id": 74279,
                          "nodeType": "Block",
                          "src": "13600:66:331",
                          "statements": [
                            {
                              "expression": {
                                "id": 74277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 74269,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73536,
                                    "src": "13618:11:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 74273,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 74270,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74195,
                                      "src": "13630:3:331",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 74272,
                                    "indexExpression": {
                                      "id": 74271,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74259,
                                      "src": "13634:1:331",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13630:6:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13618:19:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 74274,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74198,
                                    "src": "13641:7:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 74276,
                                  "indexExpression": {
                                    "id": 74275,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74259,
                                    "src": "13649:1:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13641:10:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13618:33:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74278,
                              "nodeType": "ExpressionStatement",
                              "src": "13618:33:331"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74262,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74259,
                            "src": "13579:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 74263,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74195,
                              "src": "13583:3:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 74264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13587:6:331",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13583:10:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13579:14:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74280,
                        "initializationExpression": {
                          "assignments": [
                            74259
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 74259,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13572:1:331",
                              "nodeType": "VariableDeclaration",
                              "scope": 74280,
                              "src": "13564:9:331",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 74258,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13564:7:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 74261,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 74260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13576:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13564:13:331"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 74267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "13595:3:331",
                            "subExpression": {
                              "id": 74266,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74259,
                              "src": "13597:1:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 74268,
                          "nodeType": "ExpressionStatement",
                          "src": "13595:3:331"
                        },
                        "nodeType": "ForStatement",
                        "src": "13559:107:331"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74283,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74192,
                      "src": "13690:2:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 74286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13704:1:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 74285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13696:7:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 74284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13696:7:331",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 74287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13696:10:331",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13690:16:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74313,
                  "nodeType": "IfStatement",
                  "src": "13686:153:331",
                  "trueBody": {
                    "id": 74312,
                    "nodeType": "Block",
                    "src": "13708:131:331",
                    "statements": [
                      {
                        "body": {
                          "id": 74310,
                          "nodeType": "Block",
                          "src": "13763:66:331",
                          "statements": [
                            {
                              "expression": {
                                "id": 74308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 74300,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73536,
                                    "src": "13781:11:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 74304,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 74301,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74195,
                                      "src": "13793:3:331",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 74303,
                                    "indexExpression": {
                                      "id": 74302,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74290,
                                      "src": "13797:1:331",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13793:6:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13781:19:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 74305,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74198,
                                    "src": "13804:7:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 74307,
                                  "indexExpression": {
                                    "id": 74306,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74290,
                                    "src": "13812:1:331",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13804:10:331",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13781:33:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74309,
                              "nodeType": "ExpressionStatement",
                              "src": "13781:33:331"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74293,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74290,
                            "src": "13742:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 74294,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74195,
                              "src": "13746:3:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 74295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13750:6:331",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13746:10:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13742:14:331",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74311,
                        "initializationExpression": {
                          "assignments": [
                            74290
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 74290,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13735:1:331",
                              "nodeType": "VariableDeclaration",
                              "scope": 74311,
                              "src": "13727:9:331",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 74289,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13727:7:331",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 74292,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 74291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13739:1:331",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13727:13:331"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 74298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "13758:3:331",
                            "subExpression": {
                              "id": 74297,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74290,
                              "src": "13760:1:331",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 74299,
                          "nodeType": "ExpressionStatement",
                          "src": "13758:3:331"
                        },
                        "nodeType": "ForStatement",
                        "src": "13722:107:331"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              155434
            ],
            "documentation": {
              "id": 74186,
              "nodeType": "StructuredDocumentation",
              "src": "12830:59:331",
              "text": " @dev See {ERC1155-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12903:20:331",
            "overrides": {
              "id": 74202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13106:8:331"
            },
            "parameters": {
              "id": 74201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74188,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12941:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74315,
                  "src": "12933:16:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12933:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74190,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12967:4:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74315,
                  "src": "12959:12:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12959:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74192,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12989:2:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74315,
                  "src": "12981:10:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12981:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74195,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13018:3:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74315,
                  "src": "13001:20:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74193,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13001:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74194,
                    "nodeType": "ArrayTypeName",
                    "src": "13001:9:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74198,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13048:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74315,
                  "src": "13031:24:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74196,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13031:7:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74197,
                    "nodeType": "ArrayTypeName",
                    "src": "13031:9:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74200,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13078:4:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74315,
                  "src": "13065:17:331",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74199,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13065:5:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12923:165:331"
            },
            "returnParameters": {
              "id": 74203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13115:0:331"
            },
            "scope": 74353,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74325,
            "nodeType": "FunctionDefinition",
            "src": "13851:111:331",
            "nodes": [],
            "body": {
              "id": 74324,
              "nodeType": "Block",
              "src": "13926:36:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74321,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        74339
                      ],
                      "referencedDeclaration": 74339,
                      "src": "13943:10:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 74322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13943:12:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74320,
                  "id": 74323,
                  "nodeType": "Return",
                  "src": "13936:19:331"
                }
              ]
            },
            "baseFunctions": [
              19524
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "13860:14:331",
            "overrides": {
              "id": 74317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13899:8:331"
            },
            "parameters": {
              "id": 74316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13874:2:331"
            },
            "returnParameters": {
              "id": 74320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74325,
                  "src": "13917:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13917:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13916:9:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74339,
            "nodeType": "FunctionDefinition",
            "src": "13968:242:331",
            "nodes": [],
            "body": {
              "id": 74338,
              "nodeType": "Block",
              "src": "14148:62:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74334,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "14165:25:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 74335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14191:10:331",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "14165:36:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 74336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14165:38:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74333,
                  "id": 74337,
                  "nodeType": "Return",
                  "src": "14158:45:331"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370,
              161677
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "13977:10:331",
            "overrides": {
              "id": 74330,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74327,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "14053:18:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "14053:18:331"
                },
                {
                  "id": 74328,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "14073:25:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "14073:25:331"
                },
                {
                  "id": 74329,
                  "name": "Multicall",
                  "nameLocations": [
                    "14100:9:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "14100:9:331"
                }
              ],
              "src": "14044:66:331"
            },
            "parameters": {
              "id": 74326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13987:2:331"
            },
            "returnParameters": {
              "id": 74333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74332,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14136:6:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 74339,
                  "src": "14128:14:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14128:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14127:16:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74352,
            "nodeType": "FunctionDefinition",
            "src": "14216:227:331",
            "nodes": [],
            "body": {
              "id": 74351,
              "nodeType": "Block",
              "src": "14383:60:331",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74347,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "14400:25:331",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 74348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14426:8:331",
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46397,
                      "src": "14400:34:331",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 74349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14400:36:331",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 74346,
                  "id": 74350,
                  "nodeType": "Return",
                  "src": "14393:43:331"
                }
              ]
            },
            "baseFunctions": [
              46397,
              161686
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14225:8:331",
            "overrides": {
              "id": 74343,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74341,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "14299:18:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "14299:18:331"
                },
                {
                  "id": 74342,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "14319:25:331"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "14319:25:331"
                }
              ],
              "src": "14290:55:331"
            },
            "parameters": {
              "id": 74340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14233:2:331"
            },
            "returnParameters": {
              "id": 74346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74352,
                  "src": "14363:14:331",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74344,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14363:5:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14362:16:331"
            },
            "scope": 74353,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73488,
              "name": "Initializable",
              "nameLocations": [
                "1635:13:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1635:13:331"
            },
            "id": 73489,
            "nodeType": "InheritanceSpecifier",
            "src": "1635:13:331"
          },
          {
            "baseName": {
              "id": 73490,
              "name": "ContractMetadata",
              "nameLocations": [
                "1654:16:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1654:16:331"
            },
            "id": 73491,
            "nodeType": "InheritanceSpecifier",
            "src": "1654:16:331"
          },
          {
            "baseName": {
              "id": 73492,
              "name": "PlatformFee",
              "nameLocations": [
                "1676:11:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22629,
              "src": "1676:11:331"
            },
            "id": 73493,
            "nodeType": "InheritanceSpecifier",
            "src": "1676:11:331"
          },
          {
            "baseName": {
              "id": 73494,
              "name": "Royalty",
              "nameLocations": [
                "1693:7:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23031,
              "src": "1693:7:331"
            },
            "id": 73495,
            "nodeType": "InheritanceSpecifier",
            "src": "1693:7:331"
          },
          {
            "baseName": {
              "id": 73496,
              "name": "PrimarySale",
              "nameLocations": [
                "1706:11:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "1706:11:331"
            },
            "id": 73497,
            "nodeType": "InheritanceSpecifier",
            "src": "1706:11:331"
          },
          {
            "baseName": {
              "id": 73498,
              "name": "Ownable",
              "nameLocations": [
                "1723:7:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1723:7:331"
            },
            "id": 73499,
            "nodeType": "InheritanceSpecifier",
            "src": "1723:7:331"
          },
          {
            "baseName": {
              "id": 73500,
              "name": "LazyMint",
              "nameLocations": [
                "1736:8:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20828,
              "src": "1736:8:331"
            },
            "id": 73501,
            "nodeType": "InheritanceSpecifier",
            "src": "1736:8:331"
          },
          {
            "baseName": {
              "id": 73502,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1750:21:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1750:21:331"
            },
            "id": 73503,
            "nodeType": "InheritanceSpecifier",
            "src": "1750:21:331"
          },
          {
            "baseName": {
              "id": 73504,
              "name": "Drop1155",
              "nameLocations": [
                "1777:8:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19595,
              "src": "1777:8:331"
            },
            "id": 73505,
            "nodeType": "InheritanceSpecifier",
            "src": "1777:8:331"
          },
          {
            "baseName": {
              "id": 73506,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1791:25:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1791:25:331"
            },
            "id": 73507,
            "nodeType": "InheritanceSpecifier",
            "src": "1791:25:331"
          },
          {
            "baseName": {
              "id": 73508,
              "name": "Multicall",
              "nameLocations": [
                "1822:9:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1822:9:331"
            },
            "id": 73509,
            "nodeType": "InheritanceSpecifier",
            "src": "1822:9:331"
          },
          {
            "baseName": {
              "id": 73510,
              "name": "ERC1155Upgradeable",
              "nameLocations": [
                "1837:18:331"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 155615,
              "src": "1837:18:331"
            },
            "id": 73511,
            "nodeType": "InheritanceSpecifier",
            "src": "1837:18:331"
          }
        ],
        "canonicalName": "DropERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74353,
          155615,
          155953,
          155778,
          162692,
          162704,
          21206,
          33577,
          46402,
          161692,
          19595,
          33294,
          32955,
          32931,
          22411,
          22111,
          33932,
          33907,
          20828,
          17840,
          33463,
          21764,
          33834,
          22703,
          33997,
          23031,
          34061,
          14089,
          13945,
          22629,
          33976,
          18093,
          154159,
          33084
        ],
        "name": "DropERC1155",
        "nameLocation": "1616:11:331",
        "scope": 74354,
        "usedErrors": [],
        "usedEvents": [
          17530,
          17537,
          33083,
          33251,
          33262,
          33450,
          33833,
          33846,
          33855,
          33864,
          33962,
          33969,
          33975,
          33996,
          34051,
          34060,
          73553,
          73560,
          154005,
          155675,
          155690,
          155699,
          155706
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 331
}