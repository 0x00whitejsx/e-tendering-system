{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_defaultTimeUnit",
          "type": "uint80"
        },
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_defaultRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedDefaultRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedDefaultTimeUnit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensStaked",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfoForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isIndexed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_defaultTimeUnit",
          "type": "uint80"
        }
      ],
      "name": "setDefaultTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_amount",
          "type": "uint64"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "amountStaked",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_amount",
          "type": "uint64"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1640:5540:17:-:0;;;744:28:88;;;-1:-1:-1;;;;744:28:88;-1:-1:-1;;;744:28:88;;;2066:464:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:220;307:7;:22;2302:13:17;-1:-1:-1;;;;;2002:36:88;::::1;1994:58;;;::::0;-1:-1:-1;;;1994:58:88;;1095:2:821;1994:58:88::1;::::0;::::1;1077:21:821::0;1134:1;1114:18;;;1107:29;-1:-1:-1;;;1152:18:821;;;1145:39;1201:18;;1994:58:88::1;;;;;;;;;2062:12;:28:::0;;-1:-1:-1;;;;;;2062:28:88::1;-1:-1:-1::0;;;;;2062:28:88;;;::::1;::::0;;;::::1;::::0;;2327:26:17::1;2339:13:::0;2327:11:::1;:26::i;:::-;2363:73;2391:16:::0;2409:26;2363:27:::1;:73::i;:::-;2447:11;:26:::0;;-1:-1:-1;;;;;;2447:26:17::1;-1:-1:-1::0;;;;;2447:26:17;;::::1;;::::0;;2483:40:::1;;::::0;-1:-1:-1;1640:5540:17;;-1:-1:-1;;;1640:5540:17;1421:172:70;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;16243:622:88:-;16362:9;-1:-1:-1;;;;;16362:14:88;16375:1;16362:14;16354:47;;;;-1:-1:-1;;;16354:47:88;;1432:2:821;16354:47:88;;;1414:21:821;1471:2;1451:18;;;1444:30;1510:22;1490:18;;;1483:50;1550:18;;16354:47:88;1230:344:821;16354:47:88;16432:22;;;-1:-1:-1;;;16432:22:88;;-1:-1:-1;;;;;16432:22:88;;16490:1;;16432:22;16464:27;16490:1;16432:22;16464:27;:::i;:::-;;;-1:-1:-1;;;;;16464:27:88;;;;;;;;;;;;;;;;;;;;;;;16534:196;;;;;;;;-1:-1:-1;;;;;16534:196:88;;;;;16674:15;16534:196;;;;;;;;;-1:-1:-1;16534:196:88;;;;;;;;;;;;16502:29;;;;;;:16;:29;;;;;;:228;;;;;;;;;;-1:-1:-1;;;16502:228:88;-1:-1:-1;;;;;;;;16502:228:88;;;;;-1:-1:-1;;;;;;16502:228:88;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16502:228:88;;;;;;;;16745:15;;-1:-1:-1;16741:118:88;;16832:15;16776:16;:33;16793:15;16807:1;16793:11;:15;:::i;:::-;-1:-1:-1;;;;;16776:33:88;;;;;;;;;;;;-1:-1:-1;16776:33:88;:72;;-1:-1:-1;;;;;16776:72:88;;;;-1:-1:-1;;;16776:72:88;-1:-1:-1;;;;;;;;16776:72:88;;;;;;;;;16741:118;16344:521;16243:622;;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:692::-;310:6;318;326;334;342;350;403:3;391:9;382:7;378:23;374:33;371:53;;;420:1;417;410:12;371:53;446:16;;-1:-1:-1;;;;;491:30:821;;481:41;;471:69;;536:1;533;526:12;471:69;559:5;-1:-1:-1;583:49:821;628:2;613:18;;583:49;:::i;:::-;573:59;;672:2;661:9;657:18;651:25;641:35;;695:49;740:2;729:9;725:18;695:49;:::i;:::-;685:59;;763:50;808:3;797:9;793:19;763:50;:::i;:::-;753:60;;832:50;877:3;866:9;862:19;832:50;:::i;:::-;822:60;;196:692;;;;;;;;:::o;1579:127::-;1640:10;1635:3;1631:20;1628:1;1621:31;1671:4;1668:1;1661:15;1695:4;1692:1;1685:15;1711:180;-1:-1:-1;;;;;1816:10:821;;;1828;;;1812:27;;1851:11;;;1848:37;;;1865:18;;:::i;:::-;1848:37;1711:180;;;;:::o;1896:183::-;-1:-1:-1;;;;;2015:10:821;;;2003;;;1999:27;;2038:12;;;2035:38;;;2053:18;;:::i;1896:183::-;1640:5540:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101615760003560e01c806301ffc9a7146101ea5780630962ef791461021f57806313af40351461023f578063168fb5c51461025f57806316c621e01461029457806317363949146102a75780633b56dabd146102ca5780635b2238ba146102ea5780635e2256211461030a5780635fe4fac1146103ab57806372f702f3146103cb5780637faf3baf146103f857806381f56a7c146104185780638da5cb5b14610438578063938e3d7b1461044d57806393ce53431461046d57806394ebeac814610482578063952e68cf14610497578063961004d3146104b7578063ac9650d8146104d7578063bc197c8114610504578063c345315314610546578063c434dcfe14610575578063c66c90cd14610595578063cb43b2dd146105b5578063e8a3d485146105d5578063f23a6e61146105f7578063f7c618c114610617578063fd48ba1714610637578063ff37c06d1461066757600080fd5b366101e557336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101e35760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101f657600080fd5b5061020a61020536600461324f565b610687565b60405190151581526020015b60405180910390f35b34801561022b57600080fd5b506101e361023a366004613279565b6106be565b34801561024b57600080fd5b506101e361025a3660046132ae565b6106f4565b34801561026b57600080fd5b5061027f61027a3660046132c9565b610724565b60408051928352602083019190915201610216565b6101e36102a2366004613279565b61076b565b3480156102b357600080fd5b506102bc610799565b604051908152602001610216565b3480156102d657600080fd5b506101e36102e5366004613303565b6107e9565b3480156102f657600080fd5b506101e3610305366004613279565b610931565b34801561031657600080fd5b506103726103253660046132c9565b6008602090815260009283526040808420909152908252902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b03909116918301919091526060820152608001610216565b3480156103b757600080fd5b506101e36103c636600461331e565b610a70565b3480156103d757600080fd5b506003546103eb906001600160a01b031681565b6040516102169190613341565b34801561040457600080fd5b506102bc610413366004613279565b610c17565b34801561042457600080fd5b506101e3610433366004613355565b610ccc565b34801561044457600080fd5b506103eb610e69565b34801561045957600080fd5b506101e361046836600461338d565b610e78565b34801561047957600080fd5b50600c546102bc565b34801561048e57600080fd5b506102bc610ea5565b3480156104a357600080fd5b506101e36104b236600461343d565b610ef6565b3480156104c357600080fd5b506102bc6104d2366004613279565b610f2e565b3480156104e357600080fd5b506104f76104f23660046134bd565b610f4f565b604051610216919061354e565b34801561051057600080fd5b5061052d61051f3660046135f3565b600098975050505050505050565b6040516001600160e01b03199091168152602001610216565b34801561055257600080fd5b506105666105613660046132ae565b6110b4565b604051610216939291906136e9565b34801561058157600080fd5b506101e361059036600461343d565b6113a1565b3480156105a157600080fd5b506102bc6105b0366004613279565b6113d0565b3480156105c157600080fd5b506101e36105d0366004613279565b61148f565b3480156105e157600080fd5b506105ea6114bd565b604051610216919061371f565b34801561060357600080fd5b5061052d610612366004613732565b61154b565b34801561062357600080fd5b50600b546103eb906001600160a01b031681565b34801561064357600080fd5b5061020a610652366004613279565b60056020526000908152604090205460ff1681565b34801561067357600080fd5b506103eb610682366004613355565b6115af565b60006001600160e01b03198216630271189760e51b14806106b857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60028054036106df5760405162461bcd60e51b81526004016101da906137a9565b600280556106ec816115e7565b506001600255565b6106fc611750565b6107185760405162461bcd60e51b81526004016101da906137e0565b61072181611773565b50565b60008281526008602090815260408083206001600160a01b0385168452909152812054600160401b90046001600160401b03169061076284846117c5565b90509250929050565b600280540361078c5760405162461bcd60e51b81526004016101da906137a9565b600280556106ec8161186b565b6000600660006001600360159054906101000a90046001600160401b03166107c1919061381e565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b6107f1611750565b61080d5760405162461bcd60e51b81526004016101da906137e0565b6000600660006001600360159054906101000a90046001600160401b0316610835919061381e565b6001600160401b031681526020808201929092526040908101600020815160808101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b909104811693820193909352600190910154606082015292508316036108e55760405162461bcd60e51b815260206004820152601c60248201527b2232b330bab63a103a34b6b296bab734ba103ab731b430b733b2b21760211b60448201526064016101da565b6108f3828260600151611a45565b80516040517f8e85ad3aebc0f3b3c146192dae30a837e8393d79f58e2646ef0845c4b8f2be9c91610925918590613845565b60405180910390a15050565b610939611750565b6109555760405162461bcd60e51b81526004016101da906137e0565b6000600660006001600360159054906101000a90046001600160401b031661097d919061381e565b6001600160401b031681526020808201929092526040908101600020815160808101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b90049093169183019190915260010154606082018190529091508203610a295760405162461bcd60e51b81526020600482015260196024820152782232b330bab63a103932bbb0b932103ab731b430b733b2b21760391b60448201526064016101da565b8051610a359083611a45565b606081015160408051918252602082018490527fda0e94da83c5a5d3116a4b4dcf2e1a3986296893fa93dcd74dac56a210a9b5f39101610925565b610a78611750565b610a945760405162461bcd60e51b81526004016101da906137e0565b6000828152600760205260408120546001600160401b0316908115610af257600084815260096020526040812090610acd60018561381e565b6001600160401b03166001600160401b03168152602001908152602001600020610b38565b600354600690600090610b1790600190600160a81b90046001600160401b031661381e565b6001600160401b03166001600160401b031681526020019081526020016000205b6040805160808101825282546001600160501b03808216808452600160501b830482166020850152600160a01b90920481169383019390935260019093015460608201529250841603610bc45760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b60448201526064016101da565b610bd384848360600151611ba0565b837f658c746bb5015531e3f2905003d9209d14b3d8ff846a9b5ac95a23b7b7f56751826000015185604051610c09929190613845565b60405180910390a250505050565b6000818152600760205260408120546001600160401b0316808203610c8e5760405162461bcd60e51b815260206004820152602760248201527f52657761726473206e6f74207365742e20436865636b2064656661756c74207260448201526632bbb0b932399760c91b60648201526084016101da565b600083815260096020526040812090610ca860018461381e565b6001600160401b031681526020810191909152604001600020600101549392505050565b610cd4611750565b610cf05760405162461bcd60e51b81526004016101da906137e0565b6000828152600760205260408120546001600160401b0316908115610d4e57600084815260096020526040812090610d2960018561381e565b6001600160401b03166001600160401b03168152602001908152602001600020610d94565b600354600690600090610d7390600190600160a81b90046001600160401b031661381e565b6001600160401b03166001600160401b031681526020019081526020016000205b6040805160808101825282546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152600190910154606082018190529091508303610e1d5760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b60448201526064016101da565b610e2c84826000015185611ba0565b6060810151604080519182526020820185905285917f0f216a5f83ec09487fd0ea51499ab737ef5edc4c16d8aeb07b2ce6d45c67cdbb9101610c09565b6001546001600160a01b031690565b610e80611750565b610e9c5760405162461bcd60e51b81526004016101da906137e0565b61072181611f25565b6000600660006001600360159054906101000a90046001600160401b0316610ecd919061381e565b6001600160401b03166001600160401b0316815260200190815260200160002060010154905090565b6002805403610f175760405162461bcd60e51b81526004016101da906137a9565b60028055610f258282611ff4565b50506001600255565b60048181548110610f3e57600080fd5b600091825260209091200154905081565b6060816001600160401b03811115610f6957610f69613377565b604051908082528060200260200182016040528015610f9c57816020015b6060815260200190600190039081610f875790505b509050336000805b848110156110ab5781156110235761100130878784818110610fc857610fc861385f565b9050602002810190610fda9190613875565b86604051602001610fed939291906138bb565b6040516020818303038152906040526122fd565b8482815181106110135761101361385f565b60200260200101819052506110a3565b611085308787848181106110395761103961385f565b905060200281019061104b9190613875565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122fd92505050565b8482815181106110975761109761385f565b60200260200101819052505b600101610fa4565b50505092915050565b606080600080600480548060200260200160405190810160405280929190818152602001828054801561110657602002820191906000526020600020905b8154815260200190600101908083116110f2575b50505050509050600081516001600160401b0381111561112857611128613377565b604051908082528060200260200182016040528015611151578160200160208202803683370190505b5082519091506000805b8281101561122857600860008683815181106111795761117961385f565b6020026020010151815260200190815260200160002060008a6001600160a01b03166001600160a01b0316815260200190815260200160002060000160089054906101000a90046001600160401b03166001600160401b03168482815181106111e4576111e461385f565b60200260200101818152505060008482815181106112045761120461385f565b602002602001015111156112205761121d6001836138dc565b91505b60010161115b565b50806001600160401b0381111561124157611241613377565b60405190808252806020026020018201604052801561126a578160200160208202803683370190505b509650806001600160401b0381111561128557611285613377565b6040519080825280602002602001820160405280156112ae578160200160208202803683370190505b5095506000805b838110156113945760008582815181106112d1576112d161385f565b6020026020010151111561138c578581815181106112f1576112f161385f565b602002602001015189838151811061130b5761130b61385f565b6020026020010181815250508481815181106113295761132961385f565b60200260200101518883815181106113435761134361385f565b6020026020010181815250506113728682815181106113645761136461385f565b60200260200101518b6117c5565b61137c90886138dc565b96506113896001836138dc565b91505b6001016112b5565b5050505050509193909250565b60028054036113c25760405162461bcd60e51b81526004016101da906137a9565b60028055610f258282612322565b6000818152600760205260408120546001600160401b031680820361144b5760405162461bcd60e51b815260206004820152602b60248201527f54696d6520756e6974206e6f74207365742e20436865636b2064656661756c7460448201526a103a34b6b2903ab734ba1760a91b60648201526084016101da565b60008381526009602052604081209061146560018461381e565b6001600160401b031681526020810191909152604001600020546001600160501b03169392505050565b60028054036114b05760405162461bcd60e51b81526004016101da906137a9565b600280556106ec81612692565b600080546114ca906138ef565b80601f01602080910402602001604051908101604052809291908181526020018280546114f6906138ef565b80156115435780601f1061151857610100808354040283529160200191611543565b820191906000526020600020905b81548152906001019060200180831161152657829003601f168201915b505050505081565b600354600090600160a01b900460ff1660021461159c5760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b60448201526064016101da565b5063f23a6e6160e01b9695505050505050565b600a60205281600052604060002081815481106115cb57600080fd5b6000918252602090912001546001600160a01b03169150829050565b60006115f38233612725565b600083815260086020908152604080832033845290915290206001015461161a91906138dc565b9050806000036116595760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b60448201526064016101da565b6000828152600860209081526040808320338452825280832080546001600160801b0316600160801b6001600160501b0342160217815560010183905584835260079091529020546001600160401b031680156116b957600181036116d3565b6001600360159054906101000a90046001600160401b0316035b600084815260086020908152604080832033808552925290912080546001600160401b0319166001600160401b0393909316929092179091556117169083612a8f565b60405182815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a2505050565b600061175a610e69565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60008281526008602090815260408083206001600160a01b0385168452909152812054600160401b90046001600160401b0316810361182a575060008281526008602090815260408083206001600160a01b03851684529091529020600101546106b8565b6118348383612725565b60008481526008602090815260408083206001600160a01b038716845290915290206001015461186491906138dc565b9392505050565b611873610e69565b6001600160a01b0316336001600160a01b0316146118a35760405162461bcd60e51b81526004016101da906137e0565b600b546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146118dd57600b546001600160a01b03166118ff565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161192f9190613341565b602060405180830381865afa15801561194c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119709190613929565b600b549091506119ac906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000612b30565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016119db9190613341565b602060405180830381865afa1580156119f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1c9190613929565b611a269190613942565b905080600c6000828254611a3a91906138dc565b909155505050505050565b816001600160501b0316600003611a6e5760405162461bcd60e51b81526004016101da90613955565b60038054600160a81b90046001600160401b0316906001906015611a928385613983565b82546001600160401b039182166101009390930a928302928202191691909117909155604080516080810182526001600160501b03808816825242811660208084019182526000848601818152606086018b8152978a16808352600690935295902093518454925195518416600160a01b02600160a01b600160f01b0319968516600160501b026001600160a01b031990941691909416179190911793909316178155915160019290920191909155159050611b9b574260066000611b5860018561381e565b6001600160401b03168152602081019190915260400160002080546001600160501b0392909216600160a01b02600160a01b600160f01b03199092169190911790555b505050565b816001600160501b0316600003611bc95760405162461bcd60e51b81526004016101da90613955565b6000838152600760205260408120546001600160401b031690819003611e0f57600354600160a81b90046001600160401b03165b806001600160401b0316826001600160401b03161015611e0d57600060066000846001600160401b03166001600160401b031681526020019081526020016000206040518060800160405290816000820160009054906101000a90046001600160501b03166001600160501b03166001600160501b0316815260200160008201600a9054906101000a90046001600160501b03166001600160501b03166001600160501b031681526020016000820160149054906101000a90046001600160501b03166001600160501b03166001600160501b031681526020016001820154815250509050604051806080016040528082600001516001600160501b0316815260200182602001516001600160501b0316815260200182604001516001600160501b031681526020018260600151815250600960008881526020019081526020016000206000856001600160401b03166001600160401b0316815260200190815260200160002060008201518160000160006101000a8154816001600160501b0302191690836001600160501b03160217905550602082015181600001600a6101000a8154816001600160501b0302191690836001600160501b0316021790555060408201518160000160146101000a8154816001600160501b0302191690836001600160501b031602179055506060820151816001015590505050600182611e069190613983565b9150611bfd565b505b60008481526009602052604081204291611e2a60018561381e565b6001600160401b0390811682526020808301939093526040918201600090812080546001600160501b03968716600160a01b908102600160a01b600160f01b03199283161790925584516080810186528a88168152428816818801908152818701858152606083018c81528e875260098a52888720978c168752969098529590932092518354955196518816909202958716600160501b026001600160a01b03199095169190961617929092179093169190911781559051600191820155611ef3908290613983565b60009485526007602052604090942080546001600160401b0319166001600160401b0390951694909417909355505050565b6000808054611f33906138ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5f906138ef565b8015611fac5780601f10611f8157610100808354040283529160200191611fac565b820191906000526020600020905b815481529060010190602001808311611f8f57829003601f168201915b505050505090508160009081611fc291906139f3565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610925929190613ab2565b806001600160401b03166000036120405760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b60448201526064016101da565b6000828152600860209081526040808320338452909152902054600160401b90046001600160401b03161561207e576120798233612ca1565b612157565b6000828152600a6020908152604080832080546001810182559084528284200180546001600160a01b0319163390811790915585845260088352818420908452825280832080546001600160801b0316600160801b6001600160501b0342160217905584835260079091529020546001600160401b03168015612104576001810361211e565b6001600360159054906101000a90046001600160401b0316035b6000848152600860209081526040808320338452909152902080546001600160401b0319166001600160401b0392909216919091179055505b6003805460ff60a01b198116600160a11b179091556001600160a01b031663f242432a333085856040518563ffffffff1660e01b815260040161219d9493929190613ae0565b600060405180830381600087803b1580156121b757600080fd5b505af11580156121cb573d6000803e3d6000fd5b50506003805460ff60a01b1916600160a01b1790555050600082815260086020526040812082916121f93390565b6001600160a01b0316815260208101919091526040016000208054600890612232908490600160401b90046001600160401b0316613983565b82546001600160401b039182166101009390930a92830291909202199091161790555060008281526005602052604090205460ff166122b9576000828152600560205260408120805460ff191660019081179091556004805491820181559091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018290555b604080516001600160401b03831681529051839133917fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc9181900360200190a35050565b60606118648383604051806060016040528060278152602001613bc460279139612db1565b6000828152600860209081526040808320338452909152812054600160401b90046001600160401b039081169190831690036123975760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b60448201526064016101da565b816001600160401b03168110156123ef5760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b60448201526064016101da565b6123f98333612ca1565b816001600160401b03168103612573576000838152600a602090815260408083208054825181850281018501909352808352919290919083018282801561246957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161244b575b5050505050905060005b815181101561257057336001600160a01b03168282815181106124985761249861385f565b60200260200101516001600160a01b0316036125685781600183516124bd9190613942565b815181106124cd576124cd61385f565b6020026020010151600a600087815260200190815260200160002082815481106124f9576124f961385f565b600091825260208083209190910180546001600160a01b0319166001600160a01b039490941693909317909255868152600a9091526040902080548061254157612541613b20565b600082815260209020810160001990810180546001600160a01b0319169055019055612570565b600101612473565b50505b600083815260086020818152604080842033855290915290912080548492906125ad908490600160401b90046001600160401b031661381e565b82546001600160401b039182166101009390930a9283029190920219909116179055506003546001600160a01b031663f242432a306125e93390565b86866040518563ffffffff1660e01b815260040161260a9493929190613ae0565b600060405180830381600087803b15801561262457600080fd5b505af1158015612638573d6000803e3d6000fd5b50505050826126443390565b6040516001600160401b03851681526001600160a01b0391909116907fffe903c0abe6b2dbb2f3474ef43d7a3c1fca49e5a774453423ca8e1952aabffa9060200160405180910390a3505050565b61269a610e69565b6001600160a01b0316336001600160a01b0316146126ca5760405162461bcd60e51b81526004016101da906137e0565b600c5481116126e65780600c546126e19190613942565b6126e9565b60005b600c55600b54610721906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000612b30565b60008281526008602090815260408083206001600160a01b03851684528252808320815160808101835281546001600160401b03808216808452600160401b8304821684880152600160801b9092046001600160801b0316838601526001909301546060830152878652600790945291842054919291168084036129285750600354600160a81b90046001600160401b0316815b816001600160401b0316816001600160401b03161015612922576001600160401b038082166000818152600660209081526040808320815160808101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001015460608201529290919086169003612846578560400151612855565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660000361287d574261288c565b82604001516001600160501b03165b90506000806128c289602001516001600160401b031685856128ae9190613942565b6128b89190613b36565b8660600151612e29565b915091506000806128eb8c88600001516001600160501b0316856128e69190613b63565b612e74565b915091508380156128f95750815b612903578b612905565b805b9b505050505050505060018161291b9190613983565b90506127b9565b506110ab565b815b816001600160401b0316816001600160401b03161015612a855760008781526009602090815260408083206001600160401b03808616808652918452828520835160808101855281546001600160501b038082168352600160501b8204811697830197909752600160a01b900490951693850193909352600190920154606084015291929190861690036129c25785604001516129d1565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b03166000036129f95742612a08565b82604001516001600160501b03165b9050600080612a2a89602001516001600160401b031685856128ae9190613942565b91509150600080612a4e8c88600001516001600160501b0316856128e69190613b63565b91509150838015612a5c5750815b612a66578b612a68565b805b9b5050505050505050600181612a7e9190613983565b905061292a565b5050505092915050565b600c54811115612adc5760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b60448201526064016101da565b80600c6000828254612aee9190613942565b9091555050600b54612b2c906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000612b30565b5050565b8115612c9a5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601612c8e57306001600160a01b03851603612bd557604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015612bad57600080fd5b505af1158015612bc1573d6000803e3d6000fd5b50505050612bd0838383612e8f565b612c9a565b306001600160a01b03841603612c8357348214612c2a5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b60448201526064016101da565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015612c6557600080fd5b505af1158015612c79573d6000803e3d6000fd5b5050505050612c9a565b612bd0838383612e8f565b612c9a85858585612f5a565b5050505050565b6000612cad8383612725565b60008481526008602090815260408083206001600160a01b0387168452909152812060010180549293508392909190612ce79084906138dc565b909155505060008381526008602090815260408083206001600160a01b0386168452825280832080546001600160801b0316426001600160501b0316600160801b0217905585835260079091529020546001600160401b03168015612d4f5760018103612d69565b6001600360159054906101000a90046001600160401b0316035b60009485526008602090815260408087206001600160a01b039690961687529490529290932080546001600160401b0319166001600160401b03909316929092179091555050565b6060600080856001600160a01b031685604051612dce9190613b85565b600060405180830381855af49150503d8060008114612e09576040519150601f19603f3d011682016040523d82523d6000602084013e612e0e565b606091505b5091509150612e1f86838387612fb2565b9695505050505050565b60008083600003612e405750600190506000612e6d565b83830283858281612e5357612e53613b4d565b0414612e66576000809250925050612e6d565b6001925090505b9250929050565b60008083830184811015612e66576000809250925050612e6d565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612edc576040519150601f19603f3d011682016040523d82523d6000602084013e612ee1565b606091505b5050905080612f5457816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015612f2557600080fd5b505af1158015612f39573d6000803e3d6000fd5b50612f54935050506001600160a01b03841690508585613033565b50505050565b816001600160a01b0316836001600160a01b03160315612f5457306001600160a01b03841603612f9d57612f986001600160a01b0385168383613033565b612f54565b612f546001600160a01b038516848484613096565b6060831561302157825160000361301a576001600160a01b0385163b61301a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101da565b508161302b565b61302b83836130ce565b949350505050565b6040516001600160a01b038316602482015260448101829052611b9b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526130f8565b6040516001600160a01b0380851660248301528316604482015260648101829052612f549085906323b872dd60e01b9060840161305f565b8151156130de5781518083602001fd5b8060405162461bcd60e51b81526004016101da919061371f565b600061314d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131ca9092919063ffffffff16565b805190915015611b9b578080602001905181019061316b9190613ba1565b611b9b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101da565b606061302b848460008585600080866001600160a01b031685876040516131f19190613b85565b60006040518083038185875af1925050503d806000811461322e576040519150601f19603f3d011682016040523d82523d6000602084013e613233565b606091505b509150915061324487838387612fb2565b979650505050505050565b60006020828403121561326157600080fd5b81356001600160e01b03198116811461186457600080fd5b60006020828403121561328b57600080fd5b5035919050565b80356001600160a01b03811681146132a957600080fd5b919050565b6000602082840312156132c057600080fd5b61186482613292565b600080604083850312156132dc57600080fd5b8235915061076260208401613292565b80356001600160501b03811681146132a957600080fd5b60006020828403121561331557600080fd5b611864826132ec565b6000806040838503121561333157600080fd5b82359150610762602084016132ec565b6001600160a01b0391909116815260200190565b6000806040838503121561336857600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561339f57600080fd5b81356001600160401b03808211156133b657600080fd5b818401915084601f8301126133ca57600080fd5b8135818111156133dc576133dc613377565b604051601f8201601f19908116603f0116810190838211818310171561340457613404613377565b8160405282815287602084870101111561341d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561345057600080fd5b8235915060208301356001600160401b038116811461346e57600080fd5b809150509250929050565b60008083601f84011261348b57600080fd5b5081356001600160401b038111156134a257600080fd5b6020830191508360208260051b8501011115612e6d57600080fd5b600080602083850312156134d057600080fd5b82356001600160401b038111156134e657600080fd5b6134f285828601613479565b90969095509350505050565b60005b83811015613519578181015183820152602001613501565b50506000910152565b6000815180845261353a8160208601602086016134fe565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156135a557603f19888603018452613593858351613522565b94509285019290850190600101613577565b5092979650505050505050565b60008083601f8401126135c457600080fd5b5081356001600160401b038111156135db57600080fd5b602083019150836020828501011115612e6d57600080fd5b60008060008060008060008060a0898b03121561360f57600080fd5b61361889613292565b975061362660208a01613292565b965060408901356001600160401b038082111561364257600080fd5b61364e8c838d01613479565b909850965060608b013591508082111561366757600080fd5b6136738c838d01613479565b909650945060808b013591508082111561368c57600080fd5b506136998b828c016135b2565b999c989b5096995094979396929594505050565b60008151808452602080850194506020840160005b838110156136de578151875295820195908201906001016136c2565b509495945050505050565b6060815260006136fc60608301866136ad565b828103602084015261370e81866136ad565b915050826040830152949350505050565b6020815260006118646020830184613522565b60008060008060008060a0878903121561374b57600080fd5b61375487613292565b955061376260208801613292565b9450604087013593506060870135925060808701356001600160401b0381111561378b57600080fd5b61379789828a016135b2565b979a9699509497509295939492505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b0382811682821603908082111561383e5761383e613808565b5092915050565b6001600160501b0392831681529116602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261388c57600080fd5b8301803591506001600160401b038211156138a657600080fd5b602001915036819003821315612e6d57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b808201808211156106b8576106b8613808565b600181811c9082168061390357607f821691505b60208210810361392357634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561393b57600080fd5b5051919050565b818103818111156106b8576106b8613808565b602080825260149082015273074696d652d756e69742063616e277420626520360641b604082015260600190565b6001600160401b0381811683821601908082111561383e5761383e613808565b601f821115611b9b576000816000526020600020601f850160051c810160208610156139cc5750805b601f850160051c820191505b818110156139eb578281556001016139d8565b505050505050565b81516001600160401b03811115613a0c57613a0c613377565b613a2081613a1a84546138ef565b846139a3565b602080601f831160018114613a555760008415613a3d5750858301515b600019600386901b1c1916600185901b1785556139eb565b600085815260208120601f198616915b82811015613a8457888601518255948401946001909101908401613a65565b5085821015613aa25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000613ac56040830185613522565b8281036020840152613ad78185613522565b95945050505050565b6001600160a01b03948516815292909316602083015260408201526001600160401b03909116606082015260a06080820181905260009082015260c00190565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176106b8576106b8613808565b634e487b7160e01b600052601260045260246000fd5b600082613b8057634e487b7160e01b600052601260045260246000fd5b500490565b60008251613b978184602087016134fe565b9190910192915050565b600060208284031215613bb357600080fd5b8151801515811461186457600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122041543f3450a74e6a9d100d3a53443044f988b8d777fbfa32a1a35eac431687bd64736f6c63430008170033",
    "sourceMap": "1640:5540:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2659:10;-1:-1:-1;;;;;2673:18:17;2659:32;;2651:77;;;;-1:-1:-1;;;2651:77:17;;216:2:821;2651:77:17;;;198:21:821;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2651:77:17;;;;;;;;;1640:5540;;;;;4005:213;;;;;;;;;;-1:-1:-1;4005:213:17;;;;;:::i;:::-;;:::i;:::-;;;831:14:821;;824:22;806:41;;794:2;779:18;4005:213:17;;;;;;;;3302:102:88;;;;;;;;;;-1:-1:-1;3302:102:88;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;7494:288:88:-;;;;;;;;;;-1:-1:-1;7494:288:88;;;;;:::i;:::-;;:::i;:::-;;;;1845:25:821;;;1901:2;1886:18;;1879:34;;;;1818:18;7494:288:88;1671:248:821;2784:165:17;;;;;;:::i;:::-;;:::i;9964:152:88:-;;;;;;;;;;;;;:::i;:::-;;;2070:25:821;;;2058:2;2043:18;9964:152:88;1924:177:821;5730:540:88;;;;;;;;;;-1:-1:-1;5730:540:88;;;;;:::i;:::-;;:::i;6570:608::-;;;;;;;;;;-1:-1:-1;6570:608:88;;;;;:::i;:::-;;:::i;1516:61::-;;;;;;;;;;-1:-1:-1;1516:61:88;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1516:61:88;;;;-1:-1:-1;;;1516:61:88;;;;;;-1:-1:-1;;;1516:61:88;;;-1:-1:-1;;;;;1516:61:88;;;;;;;;-1:-1:-1;;;;;2753:15:821;;;2735:34;;2805:15;;;;2800:2;2785:18;;2778:43;-1:-1:-1;;;;;2857:32:821;;;2837:18;;;2830:60;;;;2921:2;2906:18;;2899:34;2685:3;2670:19;1516:61:88;2471:468:821;3728:650:88;;;;;;;;;;-1:-1:-1;3728:650:88;;;;;:::i;:::-;;:::i;647:27::-;;;;;;;;;;-1:-1:-1;647:27:88;;;;-1:-1:-1;;;;;647:27:88;;;;;;;;;;:::i;9608:350::-;;;;;;;;;;-1:-1:-1;9608:350:88;;;;;:::i;:::-;;:::i;4734:718::-;;;;;;;;;;-1:-1:-1;4734:718:88;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;;;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;3244:124:17:-;;;;;;;;;;-1:-1:-1;3343:18:17;;3244:124;;10122:192:88;;;;;;;;;;;;;:::i;2533:113::-;;;;;;;;;;-1:-1:-1;2533:113:88;;;;;:::i;:::-;;:::i;947:30::-;;;;;;;;;;-1:-1:-1;947:30:88;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3781:218:17:-;;;;;;;;;;-1:-1:-1;3781:218:17;;;;;:::i;:::-;3989:6;3781:218;;;;;;;;;;;;;;-1:-1:-1;;;;;;8995:33:821;;;8977:52;;8965:2;8950:18;3781:218:17;8833:202:821;8132:1150:88;;;;;;;;;;-1:-1:-1;8132:1150:88;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2904:119::-;;;;;;;;;;-1:-1:-1;2904:119:88;;;;;:::i;:::-;;:::i;9288:314::-;;;;;;;;;;-1:-1:-1;9288:314:88;;;;;:::i;:::-;;:::i;3009:159:17:-;;;;;;;;;;-1:-1:-1;3009:159:17;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3558:217:17:-;;;;;;;;;;-1:-1:-1;3558:217:17;;;;;:::i;:::-;;:::i;1817:26::-;;;;;;;;;;-1:-1:-1;1817:26:17;;;;-1:-1:-1;;;;;1817:26:17;;;1051:41:88;;;;;;;;;;-1:-1:-1;1051:41:88;;;;;:::i;:::-;;;;;;;;;;;;;;;;1875:49;;;;;;;;;;-1:-1:-1;1875:49:88;;;;;:::i;:::-;;:::i;4005:213:17:-;4099:4;-1:-1:-1;;;;;;4122:49:17;;-1:-1:-1;;;4122:49:17;;:89;;-1:-1:-1;;;;;;;;;;947:40:22;;;4175:36:17;4115:96;4005:213;-1:-1:-1;;4005:213:17:o;3302:102:88:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;3374:23:88::1;3388:8:::0;3374:13:::1;:23::i;:::-;-1:-1:-1::0;202:1:220;851:7;:22;3302:102:88:o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;7494:288:88:-;7612:21;7679:17;;;:7;:17;;;;;;;;-1:-1:-1;;;;;7679:26:88;;;;;;;;;:39;-1:-1:-1;;;7679:39:88;;-1:-1:-1;;;;;7679:39:88;;7739:36;7679:17;:26;7739:17;:36::i;:::-;7728:47;;7494:288;;;;;:::o;2784:165:17:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2878:29:17::1;2899:7:::0;2878:20:::1;:29::i;9964:152:88:-:0;10015:17;10056:16;:44;10098:1;10073:22;;;;;;;;;-1:-1:-1;;;;;10073:22:88;:26;;;;:::i;:::-;-1:-1:-1;;;;;10056:44:88;;;;;;;;;;;;-1:-1:-1;10056:44:88;:53;-1:-1:-1;;;;;10056:53:88;;9964:152;-1:-1:-1;9964:152:88:o;5730:540::-;5815:24;:22;:24::i;:::-;5810:80;;5855:24;;-1:-1:-1;;;5855:24:88;;;;;;;:::i;5810:80::-;5900:41;5944:16;:44;5986:1;5961:22;;;;;;;;;-1:-1:-1;;;;;5961:22:88;:26;;;;:::i;:::-;-1:-1:-1;;;;;5944:44:88;;;;;;;;;;;;;;;-1:-1:-1;5944:44:88;5900:88;;;;;;;;;-1:-1:-1;;;;;5900:88:88;;;;;;-1:-1:-1;;;5900:88:88;;;;;;;;;;;-1:-1:-1;;;5900:88:88;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6006:46:88;;;5998:87;;;;-1:-1:-1;;;5998:87:88;;12174:2:821;5998:87:88;;;12156:21:821;12213:2;12193:18;;;12186:30;-1:-1:-1;;;12232:18:821;;;12225:58;12300:18;;5998:87:88;11972:352:821;5998:87:88;6096:83;6124:16;6142:17;:36;;;6096:27;:83::i;:::-;6218:26;;6195:68;;;;;;6246:16;;6195:68;:::i;:::-;;;;;;;;5800:470;5730:540;:::o;6570:608::-;6676:24;:22;:24::i;:::-;6671:80;;6716:24;;-1:-1:-1;;;6716:24:88;;;;;;;:::i;6671:80::-;6761:41;6805:16;:44;6847:1;6822:22;;;;;;;;;-1:-1:-1;;;;;6822:22:88;:26;;;;:::i;:::-;-1:-1:-1;;;;;6805:44:88;;;;;;;;;;;;;;;-1:-1:-1;6805:44:88;6761:88;;;;;;;;;-1:-1:-1;;;;;6761:88:88;;;;;-1:-1:-1;;;6761:88:88;;;;;;;;;;;-1:-1:-1;;;6761:88:88;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6867:66:88;;6859:104;;;;-1:-1:-1;;;6859:104:88;;12837:2:821;6859:104:88;;;12819:21:821;12876:2;12856:18;;;12849:30;-1:-1:-1;;;12895:18:821;;;12888:55;12960:18;;6859:104:88;12635:349:821;6859:104:88;7002:26;;6974:83;;7030:26;6974:27;:83::i;:::-;7106:36;;;;7073:98;;;1845:25:821;;;1901:2;1886:18;;1879:34;;;7073:98:88;;1818:18:821;7073:98:88;1671:248:821;3728:650:88;3817:24;:22;:24::i;:::-;3812:80;;3857:24;;-1:-1:-1;;;3857:24:88;;;;;;;:::i;3812:80::-;3902:23;3928:25;;;:15;:25;;;;;;-1:-1:-1;;;;;3928:25:88;;3999:21;;:144;;4094:27;;;;:17;:27;;;;;;4122:20;4141:1;4122:16;:20;:::i;:::-;-1:-1:-1;;;;;4094:49:88;-1:-1:-1;;;;;4094:49:88;;;;;;;;;;;;3999:144;;;4052:22;;4035:16;;:44;;4052:26;;4077:1;;-1:-1:-1;;;4052:22:88;;-1:-1:-1;;;;;4052:22:88;:26;:::i;:::-;-1:-1:-1;;;;;4035:44:88;-1:-1:-1;;;;;4035:44:88;;;;;;;;;;;;3999:144;3963:180;;;;;;;;;;-1:-1:-1;;;;;3963:180:88;;;;;;-1:-1:-1;;;3963:180:88;;;;;;;;-1:-1:-1;;;3963:180:88;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4161:31:88;;;4153:64;;;;-1:-1:-1;;;4153:64:88;;13191:2:821;4153:64:88;;;13173:21:821;13230:2;13210:18;;;13203:30;-1:-1:-1;;;13249:18:821;;;13242:50;13309:18;;4153:64:88;12989:344:821;4153:64:88;4228:71;4249:8;4259:9;4270;:28;;;4228:20;:71::i;:::-;4331:8;4315:56;4341:9;:18;;;4361:9;4315:56;;;;;;;:::i;:::-;;;;;;;;3802:576;;3728:650;;:::o;9608:350::-;9678:27;9743:25;;;:15;:25;;;;;;-1:-1:-1;;;;;9743:25:88;9786:21;;;9778:73;;;;-1:-1:-1;;;9778:73:88;;13540:2:821;9778:73:88;;;13522:21:821;13579:2;13559:18;;;13552:30;13618:34;13598:18;;;13591:62;-1:-1:-1;;;13669:18:821;;;13662:37;13716:19;;9778:73:88;13338:403:821;9778:73:88;9883:27;;;;:17;:27;;;;;;9911:20;9930:1;9911:16;:20;:::i;:::-;-1:-1:-1;;;;;9883:49:88;;;;;;;;;;;;-1:-1:-1;9883:49:88;:68;;;;9608:350;-1:-1:-1;;;9608:350:88:o;4734:718::-;4844:24;:22;:24::i;:::-;4839:80;;4884:24;;-1:-1:-1;;;4884:24:88;;;;;;;:::i;4839:80::-;4929:23;4955:25;;;:15;:25;;;;;;-1:-1:-1;;;;;4955:25:88;;5026:21;;:144;;5121:27;;;;:17;:27;;;;;;5149:20;5168:1;5149:16;:20;:::i;:::-;-1:-1:-1;;;;;5121:49:88;-1:-1:-1;;;;;5121:49:88;;;;;;;;;;;;5026:144;;;5079:22;;5062:16;;:44;;5079:26;;5104:1;;-1:-1:-1;;;5079:22:88;;-1:-1:-1;;;;;5079:22:88;:26;:::i;:::-;-1:-1:-1;;;;;5062:44:88;-1:-1:-1;;;;;5062:44:88;;;;;;;;;;;;5026:144;4990:180;;;;;;;;;;-1:-1:-1;;;;;4990:180:88;;;;;-1:-1:-1;;;4990:180:88;;;;;;;;-1:-1:-1;;;4990:180:88;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5188:51:88;;5180:81;;;;-1:-1:-1;;;5180:81:88;;13948:2:821;5180:81:88;;;13930:21:821;13987:2;13967:18;;;13960:30;-1:-1:-1;;;14006:18:821;;;13999:47;14063:18;;5180:81:88;13746:341:821;5180:81:88;5272:71;5293:8;5303:9;:18;;;5323:19;5272:20;:71::i;:::-;5395:28;;;;5359:86;;;1845:25:821;;;1901:2;1886:18;;1879:34;;;5385:8:88;;5359:86;;1818:18:821;5359:86:88;1671:248:821;871:86:70;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;10122:192:88:-;10183:27;10244:16;:44;10286:1;10261:22;;;;;;;;;-1:-1:-1;;;;;10261:22:88;:26;;;;:::i;:::-;-1:-1:-1;;;;;10244:44:88;-1:-1:-1;;;;;10244:44:88;;;;;;;;;;;;:63;;;10222:85;;10122:192;:::o;2533:113::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2614:25:88::1;2621:8:::0;2631:7;2614:6:::1;:25::i;:::-;-1:-1:-1::0;;202:1:220;851:7;:22;2533:113:88:o;947:30::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:30:88;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;1415:10:65;834:14;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;8132:1150:88:-;8248:30;8280;8312:21;8349:31;8383:13;8349:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8406:31;8454:14;:21;-1:-1:-1;;;;;8440:36:88;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8440:36:88;-1:-1:-1;8514:21:88;;8406:70;;-1:-1:-1;8486:25:88;;8584:203;8608:17;8604:1;:21;8584:203;;;8666:7;:26;8674:14;8689:1;8674:17;;;;;;;;:::i;:::-;;;;;;;8666:26;;;;;;;;;;;:35;8693:7;-1:-1:-1;;;;;8666:35:88;-1:-1:-1;;;;;8666:35:88;;;;;;;;;;;;:48;;;;;;;;;;-1:-1:-1;;;;;8666:48:88;-1:-1:-1;;;;;8646:68:88;:14;8661:1;8646:17;;;;;;;;:::i;:::-;;;;;;:68;;;;;8752:1;8732:14;8747:1;8732:17;;;;;;;;:::i;:::-;;;;;;;:21;8728:48;;;8755:21;8775:1;8755:21;;:::i;:::-;;;8728:48;8627:3;;8584:203;;;;8827:16;-1:-1:-1;;;;;8813:31:88;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8813:31:88;;8797:47;;8884:16;-1:-1:-1;;;;;8870:31:88;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8870:31:88;;8854:47;;8911:13;8943:9;8938:338;8962:17;8958:1;:21;8938:338;;;9024:1;9004:14;9019:1;9004:17;;;;;;;;:::i;:::-;;;;;;;:21;9000:266;;;9068:14;9083:1;9068:17;;;;;;;;:::i;:::-;;;;;;;9045:13;9059:5;9045:20;;;;;;;;:::i;:::-;;;;;;:40;;;;;9126:14;9141:1;9126:17;;;;;;;;:::i;:::-;;;;;;;9103:13;9117:5;9103:20;;;;;;;;:::i;:::-;;;;;;:40;;;;;9178:45;9196:14;9211:1;9196:17;;;;;;;;:::i;:::-;;;;;;;9215:7;9178:17;:45::i;:::-;9161:62;;;;:::i;:::-;;-1:-1:-1;9241:10:88;9250:1;9241:10;;:::i;:::-;;;9000:266;8981:3;;8938:338;;;;8339:943;;;;;8132:1150;;;;;:::o;2904:119::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2988:28:88::1;2998:8:::0;3008:7;2988:9:::1;:28::i;9288:314::-:0;9348:17;9403:25;;;:15;:25;;;;;;-1:-1:-1;;;;;9403:25:88;9446:21;;;9438:77;;;;-1:-1:-1;;;9438:77:88;;15439:2:821;9438:77:88;;;15421:21:821;15478:2;15458:18;;;15451:30;15517:34;15497:18;;;15490:62;-1:-1:-1;;;15568:18:821;;;15561:41;15619:19;;9438:77:88;15237:407:821;9438:77:88;9537:27;;;;:17;:27;;;;;;9565:20;9584:1;9565:16;:20;:::i;:::-;-1:-1:-1;;;;;9537:49:88;;;;;;;;;;;;-1:-1:-1;9537:49:88;:58;-1:-1:-1;;;;;9537:58:88;;9288:314;-1:-1:-1;;;9288:314:88:o;3009:159:17:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;3096:30:17::1;3118:7:::0;3096:21:::1;:30::i;565:34:56:-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3558:217:17:-;3686:9;;3660:6;;-1:-1:-1;;;3686:9:17;;;;3699:1;3686:14;3678:42;;;;-1:-1:-1;;;3678:42:17;;16236:2:821;3678:42:17;;;16218:21:821;16275:2;16255:18;;;16248:30;-1:-1:-1;;;16294:18:821;;;16287:45;16349:18;;3678:42:17;16034:339:821;3678:42:17;-1:-1:-1;;;;3558:217:17;;;;;;;;:::o;1875:49:88:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1875:49:88;;-1:-1:-1;1875:49:88;;-1:-1:-1;1875:49:88:o;12973:782::-;13041:15;13127:46;13145:8;1415:10:65;13127:17:88;:46::i;:::-;13059:17;;;;:7;:17;;;;;;;;1415:10:65;13059:36:88;;;;;;;:53;;;:114;;;;:::i;:::-;13041:132;;13192:7;13203:1;13192:12;13184:35;;;;-1:-1:-1;;;13184:35:88;;16580:2:821;13184:35:88;;;16562:21:821;16619:2;16599:18;;;16592:30;-1:-1:-1;;;16638:18:821;;;16631:40;16688:18;;13184:35:88;16378:334:821;13184:35:88;13230:17;;;;:7;:17;;;;;;;;1415:10:65;13230:36:88;;;;;;;:79;;-1:-1:-1;;;;;13230:79:88;-1:-1:-1;;;;;;;;13293:15:88;13230:79;;;;;-1:-1:-1;13319:53:88;:57;;;13409:25;;;:15;:25;;;;;;-1:-1:-1;;;;;13409:25:88;13532:17;;:97;;13628:1;13613:12;:16;13532:97;;;13593:1;13568:22;;;;;;;;;-1:-1:-1;;;;;13568:22:88;:26;13532:97;13469:17;;;;:7;:17;;;;;;;;1415:10:65;13469:36:88;;;;;;;;:160;;-1:-1:-1;;;;;;13469:160:88;-1:-1:-1;;;;;13469:160:88;;;;;;;;;;;13650:40;;13682:7;13650:12;:40::i;:::-;13706:42;;2070:25:821;;;1415:10:65;;13706:42:88;;2058:2:821;2043:18;13706:42:88;;;;;;;13031:724;;12973:782;:::o;7063:115:17:-;7127:4;7164:7;:5;:7::i;:::-;-1:-1:-1;;;;;7150:21:17;:10;-1:-1:-1;;;;;7150:21:17;;7143:28;;7063:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;13809:370:88:-;13900:16;13932:17;;;:7;:17;;;;;;;;-1:-1:-1;;;;;13932:24:88;;;;;;;;;:37;-1:-1:-1;;;13932:37:88;;-1:-1:-1;;;;;13932:37:88;:42;;13928:245;;-1:-1:-1;14001:17:88;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14001:24:88;;;;;;;;;:41;;;13928:245;;;14128:34;14146:8;14156:5;14128:17;:34::i;:::-;14084:17;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14084:24:88;;;;;;;;;:41;;;:78;;;;:::i;:::-;14073:89;13809:370;-1:-1:-1;;;13809:370:88:o;5312:660:17:-;5408:7;:5;:7::i;:::-;-1:-1:-1;;;;;5394:21:17;:10;-1:-1:-1;;;;;5394:21:17;;5386:48;;;;-1:-1:-1;;;5386:48:17;;;;;;;:::i;:::-;5468:11;;5445:20;;-1:-1:-1;;;;;5468:11:17;434:42:292;5468:47:17;:82;;5539:11;;-1:-1:-1;;;;;5539:11:17;5468:82;;;5518:18;5468:82;5445:105;;5561:21;5592:12;-1:-1:-1;;;;;5585:30:17;;5624:4;5585:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5701:11;;5561:69;;-1:-1:-1;5640:186:17;;-1:-1:-1;;;;;5701:11:17;5726:10;5758:4;5777:7;5798:18;5640:47;:186::i;:::-;5836:20;5907:13;5866:12;-1:-1:-1;;;;;5859:30:17;;5898:4;5859:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5836:84;;5953:12;5931:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;5312:660:17:o;16243:622:88:-;16362:9;-1:-1:-1;;;;;16362:14:88;16375:1;16362:14;16354:47;;;;-1:-1:-1;;;16354:47:88;;;;;;;:::i;:::-;16432:22;;;-1:-1:-1;;;16432:22:88;;-1:-1:-1;;;;;16432:22:88;;16490:1;;16432:22;16464:27;16490:1;16432:22;16464:27;:::i;:::-;;;-1:-1:-1;;;;;16464:27:88;;;;;;;;;;;;;;;;;;;;;;;16534:196;;;;;;;;-1:-1:-1;;;;;16534:196:88;;;;;16674:15;16534:196;;;;;;;;;-1:-1:-1;16534:196:88;;;;;;;;;;;;16502:29;;;;;;:16;:29;;;;;;:228;;;;;;;;;;-1:-1:-1;;;16502:228:88;-1:-1:-1;;;;;;;;16502:228:88;;;-1:-1:-1;;;16502:228:88;-1:-1:-1;;;;;;16502:228:88;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16502:228:88;;;;;;;;16745:15;;-1:-1:-1;16741:118:88;;16832:15;16776:16;:33;16793:15;16807:1;16793:11;:15;:::i;:::-;-1:-1:-1;;;;;16776:33:88;;;;;;;;;;;;-1:-1:-1;16776:33:88;:72;;-1:-1:-1;;;;;16776:72:88;;;;-1:-1:-1;;;16776:72:88;-1:-1:-1;;;;;;;;16776:72:88;;;;;;;;;16741:118;16344:521;16243:622;;:::o;14897:1295::-;15027:9;-1:-1:-1;;;;;15027:14:88;15040:1;15027:14;15019:47;;;;-1:-1:-1;;;15019:47:88;;;;;;;:::i;:::-;15076:18;15097:25;;;:15;:25;;;;;;-1:-1:-1;;;;;15097:25:88;;15137:16;;;15133:655;;15202:22;;-1:-1:-1;;;15202:22:88;;-1:-1:-1;;;;;15202:22:88;15238:540;15259:23;-1:-1:-1;;;;;15245:37:88;:11;-1:-1:-1;;;;;15245:37:88;;15238:540;;;15320:41;15364:16;:29;15381:11;-1:-1:-1;;;;;15364:29:88;-1:-1:-1;;;;;15364:29:88;;;;;;;;;;;;15320:73;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15320:73:88;-1:-1:-1;;;;;15320:73:88;-1:-1:-1;;;;;15320:73:88;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15320:73:88;-1:-1:-1;;;;;15320:73:88;-1:-1:-1;;;;;15320:73:88;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15320:73:88;-1:-1:-1;;;;;15320:73:88;-1:-1:-1;;;;;15320:73:88;;;;;;;;;;;;;;;15455:308;;;;;;;;15504:17;:26;;;-1:-1:-1;;;;;15455:308:88;;;;;15646:17;:32;;;-1:-1:-1;;;;;15455:308:88;;;;;15714:17;:30;;;-1:-1:-1;;;;;15455:308:88;;;;;15572:17;:36;;;15455:308;;;15412:17;:27;15430:8;15412:27;;;;;;;;;;;:40;15440:11;-1:-1:-1;;;;;15412:40:88;-1:-1:-1;;;;;15412:40:88;;;;;;;;;;;;:351;;;;;;;;;;;;;-1:-1:-1;;;;;15412:351:88;;;;;-1:-1:-1;;;;;15412:351:88;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15412:351:88;;;;;-1:-1:-1;;;;;15412:351:88;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15412:351:88;;;;;-1:-1:-1;;;;;15412:351:88;;;;;;;;;;;;;;;;;15302:476;15299:1;15284:16;;;;;:::i;:::-;;;15238:540;;;15155:633;15133:655;15798:27;;;;:17;:27;;;;;15865:15;;15826;15840:1;15826:11;:15;:::i;:::-;-1:-1:-1;;;;;15798:44:88;;;;;;;;;;;;;;;;;-1:-1:-1;15798:44:88;;;:83;;-1:-1:-1;;;;;15798:83:88;;;-1:-1:-1;;;15798:83:88;;;-1:-1:-1;;;;;;;;15798:83:88;;;;;;;15935:196;;;;;;;;;;;;16075:15;15935:196;;;;;;;;;;;;;;;;;;;;15892:27;;;:17;:27;;;;;:40;;;;;;;;;;;;;:239;;;;;;;;;;;;;;;;-1:-1:-1;;;15892:239:88;-1:-1:-1;;;;;;15892:239:88;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15892:239:88;;;;16170:15;;15920:11;;16170:15;:::i;:::-;16142:25;;;;:15;:25;;;;;;:43;;-1:-1:-1;;;;;;16142:43:88;-1:-1:-1;;;;;16142:43:88;;;;;;;;;;-1:-1:-1;;;14897:1295:88:o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;10565:1214:88:-;10650:7;-1:-1:-1;;;;;10650:12:88;10661:1;10650:12;10642:41;;;;-1:-1:-1;;;10642:41:88;;20356:2:821;10642:41:88;;;20338:21:821;20395:2;20375:18;;;20368:30;-1:-1:-1;;;20414:18:821;;;20407:46;20470:18;;10642:41:88;20154:340:821;10642:41:88;10750:1;10698:17;;;:7;:17;;;;;;;;1415:10:65;10698:36:88;;;;;;;:49;-1:-1:-1;;;10698:49:88;;-1:-1:-1;;;;;10698:49:88;:53;10694:601;;10767:61;10800:8;1415:10:65;10767:32:88;:61::i;:::-;10694:601;;;10859:22;;;;:12;:22;;;;;;;;:46;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10859:46:88;1415:10:65;10859:46:88;;;;;;10919:17;;;:7;:17;;;;;:36;;;;;;;;:79;;-1:-1:-1;;;;;10919:79:88;-1:-1:-1;;;;;;;;10982:15:88;10919:79;;;;;11035:25;;;:15;:25;;;;;;-1:-1:-1;;;;;11035:25:88;11165:17;;:105;;11269:1;11254:12;:16;11165:105;;;11230:1;11205:22;;;;;;;;;-1:-1:-1;;;;;11205:22:88;:26;11165:105;11102:17;;;;:7;:17;;;;;;;;1415:10:65;11102:36:88;;;;;;;:168;;-1:-1:-1;;;;;;11102:168:88;-1:-1:-1;;;;;11102:168:88;;;;;;;;;;-1:-1:-1;10694:601:88;11305:9;:13;;-1:-1:-1;;;;11305:13:88;;-1:-1:-1;;;11305:13:88;;;;-1:-1:-1;;;;;11337:12:88;11328:39;1415:10:65;11395:4:88;11402:8;11412:7;11328:96;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11434:9:88;:13;;-1:-1:-1;;;;11434:13:88;-1:-1:-1;;;11434:13:88;;;-1:-1:-1;;;11517:17:88;;;:7;:17;;;;;11570:7;;11535:17;1415:10:65;;1336:96;11535:17:88;-1:-1:-1;;;;;11517:36:88;;;;;;;;;;;;-1:-1:-1;11517:36:88;:60;;:49;;:60;;;;-1:-1:-1;;;11517:60:88;;-1:-1:-1;;;;;11517:60:88;;:::i;:::-;;;-1:-1:-1;;;;;11517:60:88;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11593:19:88;;;:9;:19;;;;;;;;11588:119;;11628:19;;;;:9;:19;;;;;:26;;-1:-1:-1;;11628:26:88;11650:4;11628:26;;;;;;11668:13;:28;;;;;;;;;;;;;;;11588:119;11722:50;;;-1:-1:-1;;;;;21318:31:821;;21300:50;;11722::88;;11754:8;;1415:10:65;;11722:50:88;;;;;21288:2:821;11722:50:88;;;10565:1214;;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;11844:1052:88:-;11924:21;11948:17;;;:7;:17;;;;;;;;1415:10:65;11948:36:88;;;;;;;:49;-1:-1:-1;;;11948:49:88;;-1:-1:-1;;;;;11948:49:88;;;;12015:12;;;;;12007:45;;;;-1:-1:-1;;;12007:45:88;;21563:2:821;12007:45:88;;;21545:21:821;21602:2;21582:18;;;21575:30;-1:-1:-1;;;21621:18:821;;;21614:50;21681:18;;12007:45:88;21361:344:821;12007:45:88;12087:7;-1:-1:-1;;;;;12070:24:88;:13;:24;;12062:65;;;;-1:-1:-1;;;12062:65:88;;21912:2:821;12062:65:88;;;21894:21:821;21951:2;21931:18;;;21924:30;-1:-1:-1;;;21970:18:821;;;21963:58;22038:18;;12062:65:88;21710:352:821;12062:65:88;12138:61;12171:8;1415:10:65;10767:32:88;:61::i;12138:::-;12231:7;-1:-1:-1;;;;;12214:24:88;:13;:24;12210:434;;12254:30;12287:22;;;:12;:22;;;;;;;;12254:55;;;;;;;;;;;;;;;;;;;12287:22;;12254:55;;;12287:22;12254:55;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12254:55:88;;;;;;;;;;;;;;;;;;;;;;;12328:9;12323:311;12347:13;:20;12343:1;:24;12323:311;;;1415:10:65;-1:-1:-1;;;;;12396:37:88;:13;12410:1;12396:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12396:37:88;;12392:228;;12485:13;12522:1;12499:13;:20;:24;;;;:::i;:::-;12485:39;;;;;;;;:::i;:::-;;;;;;;12457:12;:22;12470:8;12457:22;;;;;;;;;;;12480:1;12457:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;:67;;-1:-1:-1;;;;;;12457:67:88;-1:-1:-1;;;;;12457:67:88;;;;;;;;;;;12546:22;;;:12;:22;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;12546:28:88;;;;;-1:-1:-1;;;;;;12546:28:88;;;;;;12596:5;;12392:228;12369:3;;12323:311;;;;12240:404;12210:434;12653:17;;;;:7;:17;;;;;;;;1415:10:65;12653:36:88;;;;;;;;:60;;12706:7;;12653;:60;;12706:7;;-1:-1:-1;;;12653:60:88;;-1:-1:-1;;;;;12653:60:88;;:::i;:::-;;;-1:-1:-1;;;;;12653:60:88;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12733:12:88;;-1:-1:-1;;;;;12733:12:88;12724:39;12772:4;12779:17;1415:10:65;;1336:96;12779:17:88;12798:8;12808:7;12724:96;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12871:8;12852:17;1415:10:65;;1336:96;12852:17:88;12836:53;;-1:-1:-1;;;;;21318:31:821;;21300:50;;-1:-1:-1;;;;;12836:53:88;;;;;;;21288:2:821;21273:18;12836:53:88;;;;;;;11914:982;11844:1052;;:::o;6061:481:17:-;6158:7;:5;:7::i;:::-;-1:-1:-1;;;;;6144:21:17;:10;-1:-1:-1;;;;;6144:21:17;;6136:48;;;;-1:-1:-1;;;6136:48:17;;;;;;;:::i;:::-;6285:18;;6275:7;:28;:63;;6331:7;6310:18;;:28;;;;:::i;:::-;6275:63;;;6306:1;6275:63;6254:18;:84;6410:11;;6349:186;;-1:-1:-1;;;;;6410:11:17;6443:4;6462:10;6486:7;6507:18;6349:47;:186::i;16946:2188:88:-;17039:16;17090:17;;;:7;:17;;;;;;;;-1:-1:-1;;;;;17090:26:88;;;;;;;;;17067:49;;;;;;;;;-1:-1:-1;;;;;17067:49:88;;;;;;-1:-1:-1;;;17067:49:88;;;;;;;;-1:-1:-1;;;17067:49:88;;;-1:-1:-1;;;;;17067:49:88;;;;;;;;;;;;;;17220:25;;;:15;:25;;;;;;;17067:49;;;17220:25;17260:21;;;17256:1872;;-1:-1:-1;17316:22:88;;-1:-1:-1;;;17316:22:88;;-1:-1:-1;;;;;17316:22:88;17369:18;17353:862;17393:16;-1:-1:-1;;;;;17389:20:88;:1;-1:-1:-1;;;;;17389:20:88;;17353:862;;;-1:-1:-1;;;;;17473:19:88;;;17437:33;17473:19;;;:16;:19;;;;;;;;17437:55;;;;;;;;;-1:-1:-1;;;;;17437:55:88;;;;;-1:-1:-1;;;17437:55:88;;;;;;;;;;;-1:-1:-1;;;17437:55:88;;;;;;;;;;;;;;;;;;;;:33;;17531:23;;;;;:76;;17584:6;:23;;;17531:76;;;17557:9;:24;;;-1:-1:-1;;;;;17531:76:88;;-1:-1:-1;;;;;17511:96:88;;;17625:15;17643:9;:22;;;-1:-1:-1;;;;;17643:27:88;17669:1;17643:27;:70;;17698:15;17643:70;;;17673:9;:22;;;-1:-1:-1;;;;;17643:70:88;;17625:88;;17733:22;17757;17783:148;17844:6;:19;;;-1:-1:-1;;;;;17820:43:88;17831:9;17821:7;:19;;;;:::i;:::-;17820:43;;;;:::i;:::-;17885:9;:28;;;17783:15;:148::i;:::-;17732:199;;;;17950:18;17970;17992:120;18029:8;18076:9;:18;;;-1:-1:-1;;;;;18059:35:88;:14;:35;;;;:::i;:::-;17992:15;:120::i;:::-;17949:163;;;;18142:17;:34;;;;;18163:13;18142:34;:58;;18192:8;18142:58;;;18179:10;18142:58;18131:69;;17419:796;;;;;;;17416:1;17411:6;;;;;:::i;:::-;;;17353:862;;;;17256:1872;;;18261:18;18245:873;18285:16;-1:-1:-1;;;;;18281:20:88;:1;-1:-1:-1;;;;;18281:20:88;;18245:873;;;18329:33;18365:27;;;:17;:27;;;;;;;;-1:-1:-1;;;;;18365:30:88;;;;;;;;;;;;18329:66;;;;;;;;;-1:-1:-1;;;;;18329:66:88;;;;;-1:-1:-1;;;18329:66:88;;;;;;;;;;;-1:-1:-1;;;18329:66:88;;;;;;;;;;;;;;;;;;;;;;;:33;18434:23;;;;;:76;;18487:6;:23;;;18434:76;;;18460:9;:24;;;-1:-1:-1;;;;;18434:76:88;;-1:-1:-1;;;;;18414:96:88;;;18528:15;18546:9;:22;;;-1:-1:-1;;;;;18546:27:88;18572:1;18546:27;:70;;18601:15;18546:70;;;18576:9;:22;;;-1:-1:-1;;;;;18546:70:88;;18528:88;;18636:22;18660;18686:148;18747:6;:19;;;-1:-1:-1;;;;;18723:43:88;18734:9;18724:7;:19;;;;:::i;18686:148::-;18635:199;;;;18853:18;18873;18895:120;18932:8;18979:9;:18;;;-1:-1:-1;;;;;18962:35:88;:14;:35;;;;:::i;18895:120::-;18852:163;;;;19045:17;:34;;;;;19066:13;19045:34;:58;;19095:8;19045:58;;;19082:10;19045:58;19034:69;;18311:807;;;;;;;18308:1;18303:6;;;;;:::i;:::-;;;18245:873;;;;17057:2077;;;16946:2188;;;;:::o;4645:401:17:-;4758:18;;4746:8;:30;;4738:67;;;;-1:-1:-1;;;4738:67:17;;22928:2:821;4738:67:17;;;22910:21:821;22967:2;22947:18;;;22940:30;-1:-1:-1;;;22986:18:821;;;22979:54;23050:18;;4738:67:17;22726:348:821;4738:67:17;4837:8;4815:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4916:11:17;;4855:184;;-1:-1:-1;;;;;4916:11:17;4949:4;4968:7;4989:8;5011:18;4855:47;:184::i;:::-;4645:401;;:::o;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;2070:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;2043:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;:::-;1221:761;;1266:626;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;23281:2:821;1645:52:292;;;23263:21:821;23320:2;23300:18;;;23293:30;-1:-1:-1;;;23339:18:821;;;23332:49;23398:18;;1645:52:292;23079:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:761;;1552:340;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;:::-;967:1021;;;;;:::o;14278:560:88:-;14382:15;14400:36;14418:8;14428:7;14400:17;:36::i;:::-;14446:17;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14446:26:88;;;;;;;;;:43;;:54;;14382;;-1:-1:-1;14382:54:88;;14446:43;;:17;:54;;14382;;14446;:::i;:::-;;;;-1:-1:-1;;14510:17:88;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14510:26:88;;;;;;;;;:69;;-1:-1:-1;;;;;14510:69:88;14563:15;-1:-1:-1;;;;;14510:69:88;-1:-1:-1;;;14510:69:88;;;;14612:25;;;:15;:25;;;;;;-1:-1:-1;;;;;14612:25:88;14724:17;;:97;;14820:1;14805:12;:16;14724:97;;;14785:1;14760:22;;;;;;;;;-1:-1:-1;;;;;14760:22:88;:26;14724:97;14671:17;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14671:26:88;;;;;;;;;;;;;:150;;-1:-1:-1;;;;;;14671:150:88;-1:-1:-1;;;;;14671:150:88;;;;;;;;;;-1:-1:-1;;14278:560:88:o;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;1339:493:243:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:243;;-1:-1:-1;1705:1:243;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:243;-1:-1:-1;1339:493:243;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;2866:439:292;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;:::-;2975:330;2866:439;;;:::o;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;24131:2:821;8110:60:289;;;24113:21:821;24170:2;24150:18;;;24143:30;24209:31;24189:18;;;24182:59;24258:18;;8110:60:289;23929:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;759:175:228:-;868:58;;-1:-1:-1;;;;;24479:32:821;;868:58:228;;;24461:51:821;24528:18;;;24521:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;24434:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;24824:15:821;;;1067:68:228;;;24806:34:821;24876:15;;24856:18;;;24849:43;24908:18;;;24901:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;24741:18:821;;1067:68:228;24566:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;25430:2:821;3711:85:228;;;25412:21:821;25469:2;25449:18;;;25442:30;25508:34;25488:18;;;25481:62;-1:-1:-1;;;25559:18:821;;;25552:40;25609:19;;3711:85:228;25228:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;375:286:821:-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:23;;-1:-1:-1;;;;;;580:32:821;;570:43;;560:71;;627:1;624;617:12;858:180;917:6;970:2;958:9;949:7;945:23;941:32;938:52;;;986:1;983;976:12;938:52;-1:-1:-1;1009:23:821;;858:180;-1:-1:-1;858:180:821:o;1043:173::-;1111:20;;-1:-1:-1;;;;;1160:31:821;;1150:42;;1140:70;;1206:1;1203;1196:12;1140:70;1043:173;;;:::o;1221:186::-;1280:6;1333:2;1321:9;1312:7;1308:23;1304:32;1301:52;;;1349:1;1346;1339:12;1301:52;1372:29;1391:9;1372:29;:::i;1412:254::-;1480:6;1488;1541:2;1529:9;1520:7;1516:23;1512:32;1509:52;;;1557:1;1554;1547:12;1509:52;1593:9;1580:23;1570:33;;1622:38;1656:2;1645:9;1641:18;1622:38;:::i;2106:171::-;2173:20;;-1:-1:-1;;;;;2222:30:821;;2212:41;;2202:69;;2267:1;2264;2257:12;2282:184;2340:6;2393:2;2381:9;2372:7;2368:23;2364:32;2361:52;;;2409:1;2406;2399:12;2361:52;2432:28;2450:9;2432:28;:::i;2944:252::-;3011:6;3019;3072:2;3060:9;3051:7;3047:23;3043:32;3040:52;;;3088:1;3085;3078:12;3040:52;3124:9;3111:23;3101:33;;3153:37;3186:2;3175:9;3171:18;3153:37;:::i;3201:203::-;-1:-1:-1;;;;;3365:32:821;;;;3347:51;;3335:2;3320:18;;3201:203::o;3409:248::-;3477:6;3485;3538:2;3526:9;3517:7;3513:23;3509:32;3506:52;;;3554:1;3551;3544:12;3506:52;-1:-1:-1;;3577:23:821;;;3647:2;3632:18;;;3619:32;;-1:-1:-1;3409:248:821:o;3662:127::-;3723:10;3718:3;3714:20;3711:1;3704:31;3754:4;3751:1;3744:15;3778:4;3775:1;3768:15;3794:922;3863:6;3916:2;3904:9;3895:7;3891:23;3887:32;3884:52;;;3932:1;3929;3922:12;3884:52;3972:9;3959:23;-1:-1:-1;;;;;4042:2:821;4034:6;4031:14;4028:34;;;4058:1;4055;4048:12;4028:34;4096:6;4085:9;4081:22;4071:32;;4141:7;4134:4;4130:2;4126:13;4122:27;4112:55;;4163:1;4160;4153:12;4112:55;4199:2;4186:16;4221:2;4217;4214:10;4211:36;;;4227:18;;:::i;:::-;4302:2;4296:9;4270:2;4356:13;;-1:-1:-1;;4352:22:821;;;4376:2;4348:31;4344:40;4332:53;;;4400:18;;;4420:22;;;4397:46;4394:72;;;4446:18;;:::i;:::-;4486:10;4482:2;4475:22;4521:2;4513:6;4506:18;4561:7;4556:2;4551;4547;4543:11;4539:20;4536:33;4533:53;;;4582:1;4579;4572:12;4533:53;4638:2;4633;4629;4625:11;4620:2;4612:6;4608:15;4595:46;4683:1;4661:15;;;4678:2;4657:24;4650:35;;;;-1:-1:-1;4665:6:821;3794:922;-1:-1:-1;;;;;3794:922:821:o;4721:352::-;4788:6;4796;4849:2;4837:9;4828:7;4824:23;4820:32;4817:52;;;4865:1;4862;4855:12;4817:52;4901:9;4888:23;4878:33;;4961:2;4950:9;4946:18;4933:32;-1:-1:-1;;;;;4998:5:821;4994:30;4987:5;4984:41;4974:69;;5039:1;5036;5029:12;4974:69;5062:5;5052:15;;;4721:352;;;;;:::o;5078:374::-;5148:8;5158:6;5212:3;5205:4;5197:6;5193:17;5189:27;5179:55;;5230:1;5227;5220:12;5179:55;-1:-1:-1;5253:20:821;;-1:-1:-1;;;;;5285:30:821;;5282:50;;;5328:1;5325;5318:12;5282:50;5365:4;5357:6;5353:17;5341:29;;5425:3;5418:4;5408:6;5405:1;5401:14;5393:6;5389:27;5385:38;5382:47;5379:67;;;5442:1;5439;5432:12;5457:455;5554:6;5562;5615:2;5603:9;5594:7;5590:23;5586:32;5583:52;;;5631:1;5628;5621:12;5583:52;5671:9;5658:23;-1:-1:-1;;;;;5696:6:821;5693:30;5690:50;;;5736:1;5733;5726:12;5690:50;5775:77;5844:7;5835:6;5824:9;5820:22;5775:77;:::i;:::-;5871:8;;5749:103;;-1:-1:-1;5457:455:821;-1:-1:-1;;;;5457:455:821:o;5917:250::-;6002:1;6012:113;6026:6;6023:1;6020:13;6012:113;;;6102:11;;;6096:18;6083:11;;;6076:39;6048:2;6041:10;6012:113;;;-1:-1:-1;;6159:1:821;6141:16;;6134:27;5917:250::o;6172:270::-;6213:3;6251:5;6245:12;6278:6;6273:3;6266:19;6294:76;6363:6;6356:4;6351:3;6347:14;6340:4;6333:5;6329:16;6294:76;:::i;:::-;6424:2;6403:15;-1:-1:-1;;6399:29:821;6390:39;;;;6431:4;6386:50;;6172:270;-1:-1:-1;;6172:270:821:o;6447:800::-;6607:4;6636:2;6676;6665:9;6661:18;6706:2;6695:9;6688:21;6729:6;6764;6758:13;6795:6;6787;6780:22;6833:2;6822:9;6818:18;6811:25;;6895:2;6885:6;6882:1;6878:14;6867:9;6863:30;6859:39;6845:53;;6933:2;6925:6;6921:15;6954:1;6964:254;6978:6;6975:1;6972:13;6964:254;;;7071:2;7067:7;7055:9;7047:6;7043:22;7039:36;7034:3;7027:49;7099:39;7131:6;7122;7116:13;7099:39;:::i;:::-;7089:49;-1:-1:-1;7196:12:821;;;;7161:15;;;;7000:1;6993:9;6964:254;;;-1:-1:-1;7235:6:821;;6447:800;-1:-1:-1;;;;;;;6447:800:821:o;7252:347::-;7303:8;7313:6;7367:3;7360:4;7352:6;7348:17;7344:27;7334:55;;7385:1;7382;7375:12;7334:55;-1:-1:-1;7408:20:821;;-1:-1:-1;;;;;7440:30:821;;7437:50;;;7483:1;7480;7473:12;7437:50;7520:4;7512:6;7508:17;7496:29;;7572:3;7565:4;7556:6;7548;7544:19;7540:30;7537:39;7534:59;;;7589:1;7586;7579:12;7604:1224;7764:6;7772;7780;7788;7796;7804;7812;7820;7873:3;7861:9;7852:7;7848:23;7844:33;7841:53;;;7890:1;7887;7880:12;7841:53;7913:29;7932:9;7913:29;:::i;:::-;7903:39;;7961:38;7995:2;7984:9;7980:18;7961:38;:::i;:::-;7951:48;;8050:2;8039:9;8035:18;8022:32;-1:-1:-1;;;;;8114:2:821;8106:6;8103:14;8100:34;;;8130:1;8127;8120:12;8100:34;8169:77;8238:7;8229:6;8218:9;8214:22;8169:77;:::i;:::-;8265:8;;-1:-1:-1;8143:103:821;-1:-1:-1;8353:2:821;8338:18;;8325:32;;-1:-1:-1;8369:16:821;;;8366:36;;;8398:1;8395;8388:12;8366:36;8437:79;8508:7;8497:8;8486:9;8482:24;8437:79;:::i;:::-;8535:8;;-1:-1:-1;8411:105:821;-1:-1:-1;8623:3:821;8608:19;;8595:33;;-1:-1:-1;8640:16:821;;;8637:36;;;8669:1;8666;8659:12;8637:36;;8708:60;8760:7;8749:8;8738:9;8734:24;8708:60;:::i;:::-;7604:1224;;;;-1:-1:-1;7604:1224:821;;-1:-1:-1;7604:1224:821;;;;;;8787:8;-1:-1:-1;;;7604:1224:821:o;9040:439::-;9093:3;9131:5;9125:12;9158:6;9153:3;9146:19;9184:4;9213;9208:3;9204:14;9197:21;;9252:4;9245:5;9241:16;9275:1;9285:169;9299:6;9296:1;9293:13;9285:169;;;9360:13;;9348:26;;9394:12;;;;9429:15;;;;9321:1;9314:9;9285:169;;;-1:-1:-1;9470:3:821;;9040:439;-1:-1:-1;;;;;9040:439:821:o;9484:536::-;9769:2;9758:9;9751:21;9732:4;9795:56;9847:2;9836:9;9832:18;9824:6;9795:56;:::i;:::-;9899:9;9891:6;9887:22;9882:2;9871:9;9867:18;9860:50;9927:44;9964:6;9956;9927:44;:::i;:::-;9919:52;;;10007:6;10002:2;9991:9;9987:18;9980:34;9484:536;;;;;;:::o;10025:219::-;10174:2;10163:9;10156:21;10137:4;10194:44;10234:2;10223:9;10219:18;10211:6;10194:44;:::i;10249:695::-;10355:6;10363;10371;10379;10387;10395;10448:3;10436:9;10427:7;10423:23;10419:33;10416:53;;;10465:1;10462;10455:12;10416:53;10488:29;10507:9;10488:29;:::i;:::-;10478:39;;10536:38;10570:2;10559:9;10555:18;10536:38;:::i;:::-;10526:48;;10621:2;10610:9;10606:18;10593:32;10583:42;;10672:2;10661:9;10657:18;10644:32;10634:42;;10727:3;10716:9;10712:19;10699:33;-1:-1:-1;;;;;10747:6:821;10744:30;10741:50;;;10787:1;10784;10777:12;10741:50;10826:58;10876:7;10867:6;10856:9;10852:22;10826:58;:::i;:::-;10249:695;;;;-1:-1:-1;10249:695:821;;-1:-1:-1;10249:695:821;;10903:8;;10249:695;-1:-1:-1;;;10249:695:821:o;10949:355::-;11151:2;11133:21;;;11190:2;11170:18;;;11163:30;11229:33;11224:2;11209:18;;11202:61;11295:2;11280:18;;10949:355::o;11309:338::-;11511:2;11493:21;;;11550:2;11530:18;;;11523:30;-1:-1:-1;;;11584:2:821;11569:18;;11562:44;11638:2;11623:18;;11309:338::o;11652:127::-;11713:10;11708:3;11704:20;11701:1;11694:31;11744:4;11741:1;11734:15;11768:4;11765:1;11758:15;11784:183;-1:-1:-1;;;;;11903:10:821;;;11891;;;11887:27;;11926:12;;;11923:38;;;11941:18;;:::i;:::-;11923:38;11784:183;;;;:::o;12329:301::-;-1:-1:-1;;;;;12556:15:821;;;12538:34;;12608:15;;12603:2;12588:18;;12581:43;12489:2;12474:18;;12329:301::o;14092:127::-;14153:10;14148:3;14144:20;14141:1;14134:31;14184:4;14181:1;14174:15;14208:4;14205:1;14198:15;14224:521;14301:4;14307:6;14367:11;14354:25;14461:2;14457:7;14446:8;14430:14;14426:29;14422:43;14402:18;14398:68;14388:96;;14480:1;14477;14470:12;14388:96;14507:33;;14559:20;;;-1:-1:-1;;;;;;14591:30:821;;14588:50;;;14634:1;14631;14624:12;14588:50;14667:4;14655:17;;-1:-1:-1;14698:14:821;14694:27;;;14684:38;;14681:58;;;14735:1;14732;14725:12;14750:352;14961:6;14953;14948:3;14935:33;15056:2;15027:15;;;;-1:-1:-1;;;;;;15023:45:821;14987:16;;15012:57;;;15093:2;15085:11;;14750:352;-1:-1:-1;14750:352:821:o;15107:125::-;15172:9;;;15193:10;;;15190:36;;;15206:18;;:::i;15649:380::-;15728:1;15724:12;;;;15771;;;15792:61;;15846:4;15838:6;15834:17;15824:27;;15792:61;15899:2;15891:6;15888:14;15868:18;15865:38;15862:161;;15945:10;15940:3;15936:20;15933:1;15926:31;15980:4;15977:1;15970:15;16008:4;16005:1;15998:15;15862:161;;15649:380;;;:::o;16717:184::-;16787:6;16840:2;16828:9;16819:7;16815:23;16811:32;16808:52;;;16856:1;16853;16846:12;16808:52;-1:-1:-1;16879:16:821;;16717:184;-1:-1:-1;16717:184:821:o;16906:128::-;16973:9;;;16994:11;;;16991:37;;;17008:18;;:::i;17039:344::-;17241:2;17223:21;;;17280:2;17260:18;;;17253:30;-1:-1:-1;;;17314:2:821;17299:18;;17292:50;17374:2;17359:18;;17039:344::o;17388:180::-;-1:-1:-1;;;;;17493:10:821;;;17505;;;17489:27;;17528:11;;;17525:37;;;17542:18;;:::i;17699:543::-;17801:2;17796:3;17793:11;17790:446;;;17837:1;17861:5;17858:1;17851:16;17905:4;17902:1;17892:18;17975:2;17963:10;17959:19;17956:1;17952:27;17946:4;17942:38;18011:4;17999:10;17996:20;17993:47;;;-1:-1:-1;18034:4:821;17993:47;18089:2;18084:3;18080:12;18077:1;18073:20;18067:4;18063:31;18053:41;;18144:82;18162:2;18155:5;18152:13;18144:82;;;18207:17;;;18188:1;18177:13;18144:82;;;18148:3;;;17699:543;;;:::o;18418:1345::-;18544:3;18538:10;-1:-1:-1;;;;;18563:6:821;18560:30;18557:56;;;18593:18;;:::i;:::-;18622:97;18712:6;18672:38;18704:4;18698:11;18672:38;:::i;:::-;18666:4;18622:97;:::i;:::-;18774:4;;18831:2;18820:14;;18848:1;18843:663;;;;19550:1;19567:6;19564:89;;;-1:-1:-1;19619:19:821;;;19613:26;19564:89;-1:-1:-1;;18375:1:821;18371:11;;;18367:24;18363:29;18353:40;18399:1;18395:11;;;18350:57;19666:81;;18813:944;;18843:663;17646:1;17639:14;;;17683:4;17670:18;;-1:-1:-1;;18879:20:821;;;18997:236;19011:7;19008:1;19005:14;18997:236;;;19100:19;;;19094:26;19079:42;;19192:27;;;;19160:1;19148:14;;;;19027:19;;18997:236;;;19001:3;19261:6;19252:7;19249:19;19246:201;;;19322:19;;;19316:26;-1:-1:-1;;19405:1:821;19401:14;;;19417:3;19397:24;19393:37;19389:42;19374:58;19359:74;;19246:201;-1:-1:-1;;;;;19493:1:821;19477:14;;;19473:22;19460:36;;-1:-1:-1;18418:1345:821:o;19768:381::-;19965:2;19954:9;19947:21;19928:4;19991:44;20031:2;20020:9;20016:18;20008:6;19991:44;:::i;:::-;20083:9;20075:6;20071:22;20066:2;20055:9;20051:18;20044:50;20111:32;20136:6;20128;20111:32;:::i;:::-;20103:40;19768:381;-1:-1:-1;;;;;19768:381:821:o;20499:651::-;-1:-1:-1;;;;;20849:15:821;;;20831:34;;20901:15;;;;20896:2;20881:18;;20874:43;20948:2;20933:18;;20926:34;-1:-1:-1;;;;;20996:31:821;;;20991:2;20976:18;;20969:59;20811:3;21059;21044:19;;21037:32;;;-1:-1:-1;21085:19:821;;;21078:30;21140:3;21125:19;;20499:651::o;22067:127::-;22128:10;22123:3;22119:20;22116:1;22109:31;22159:4;22156:1;22149:15;22183:4;22180:1;22173:15;22199:168;22272:9;;;22303;;22320:15;;;22314:22;;22300:37;22290:71;;22341:18;;:::i;22372:127::-;22433:10;22428:3;22424:20;22421:1;22414:31;22464:4;22461:1;22454:15;22488:4;22485:1;22478:15;22504:217;22544:1;22570;22560:132;;22614:10;22609:3;22605:20;22602:1;22595:31;22649:4;22646:1;22639:15;22677:4;22674:1;22667:15;22560:132;-1:-1:-1;22706:9:821;;22504:217::o;23427:287::-;23556:3;23594:6;23588:13;23610:66;23669:6;23664:3;23657:4;23649:6;23645:17;23610:66;:::i;:::-;23692:16;;;;;23427:287;-1:-1:-1;;23427:287:821:o;24946:277::-;25013:6;25066:2;25054:9;25045:7;25041:23;25037:32;25034:52;;;25082:1;25079;25072:12;25034:52;25114:9;25108:16;25167:5;25160:13;25153:21;25146:5;25143:32;25133:60;;25189:1;25186;25179:12",
    "linkReferences": {},
    "immutableReferences": {
      "5836": [
        {
          "start": 369,
          "length": 32
        },
        {
          "start": 6367,
          "length": 32
        },
        {
          "start": 6536,
          "length": 32
        },
        {
          "start": 9985,
          "length": 32
        },
        {
          "start": 11016,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "claimRewards(uint256)": "0962ef79",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getDefaultRewardsPerUnitTime()": "94ebeac8",
    "getDefaultTimeUnit()": "17363949",
    "getRewardTokenBalance()": "93ce5343",
    "getRewardsPerUnitTime(uint256)": "7faf3baf",
    "getStakeInfo(address)": "c3453153",
    "getStakeInfoForToken(uint256,address)": "168fb5c5",
    "getTimeUnit(uint256)": "c66c90cd",
    "indexedTokens(uint256)": "961004d3",
    "isIndexed(uint256)": "fd48ba17",
    "multicall(bytes[])": "ac9650d8",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRewardsPerUnitTime(uint256)": "5b2238ba",
    "setDefaultTimeUnit(uint80)": "3b56dabd",
    "setOwner(address)": "13af4035",
    "setRewardsPerUnitTime(uint256,uint256)": "81f56a7c",
    "setTimeUnit(uint256,uint80)": "5fe4fac1",
    "stake(uint256,uint64)": "952e68cf",
    "stakers(uint256,address)": "5e225621",
    "stakersArray(uint256,uint256)": "ff37c06d",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdraw(uint256,uint64)": "c434dcfe",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_defaultTimeUnit\",\"type\":\"uint80\"},{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultRewardsPerUnitTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedDefaultRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedDefaultTimeUnit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensStaked\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_totalRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfoForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isIndexed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setDefaultRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_defaultTimeUnit\",\"type\":\"uint80\"}],\"name\":\"setDefaultTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"amountStaked\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RewardsClaimed(address,uint256)\":{\"details\":\"Emitted when a staker claims staking rewards.\"},\"TokensStaked(address,uint256,uint256)\":{\"details\":\"Emitted when tokens are staked.\"},\"TokensWithdrawn(address,uint256,uint256)\":{\"details\":\"Emitted when a set of staked token-ids are withdrawn.\"},\"UpdatedDefaultRewardsPerUnitTime(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates rewardsPerUnitTime.\"},\"UpdatedDefaultTimeUnit(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates timeUnit.\"},\"UpdatedRewardsPerUnitTime(uint256,uint256,uint256)\":{\"details\":\"Emitted when contract admin updates rewardsPerUnitTime.\"},\"UpdatedTimeUnit(uint256,uint256,uint256)\":{\"details\":\"Emitted when contract admin updates timeUnit.\"}},\"kind\":\"dev\",\"methods\":{\"claimRewards(uint256)\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\",\"params\":{\"_tokenId\":\"Staked token Id.\"}},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_tokenAmounts\":\"  Amount of each token-id staked.\",\"_tokensStaked\":\"  List of token-ids staked.\",\"_totalRewards\":\"  Total rewards available.\"}},\"getStakeInfoForToken(uint256,address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked for given token-id.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRewardsPerUnitTime(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_defaultRewardsPerUnitTime\":\"New rewards per unit time.\"}},\"setDefaultTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_defaultTimeUnit\":\"New time unit.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardsPerUnitTime(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_rewardsPerUnitTime\":\"New rewards per unit time.\",\"_tokenId\":\"ERC1155 token Id.\"}},\"setTimeUnit(uint256,uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\",\"_tokenId\":\"ERC1155 token Id.\"}},\"stake(uint256,uint64)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\",\"_tokenId\":\"ERC1155 token-id to stake.\"}},\"withdraw(uint256,uint64)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\",\"_tokenId\":\"ERC1155 token-id to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"nativeTokenWrapper\":{\"details\":\"The address of the native token wrapper contract.\"},\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards(uint256)\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View all tokens staked and total rewards for a user.\"},\"getStakeInfoForToken(uint256,address)\":{\"notice\":\"View amount staked and rewards for a user, for a given token-id.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRewardsPerUnitTime(uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setDefaultTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardsPerUnitTime(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setTimeUnit(uint256,uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256,uint64)\":{\"notice\":\"Stake ERC721 Tokens.\"},\"withdraw(uint256,uint64)\":{\"notice\":\"Withdraw staked tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking1155Base.sol\":\"Staking1155Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/Staking1155Base.sol\":{\"keccak256\":\"0x7980a512862f1b1dc8c976b157878eb38a952b50aa3d887b53e05fcdbdf082c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://792c63e0dd8a6518bbbf7274b9336bdbced9bf5edc357c516fc5c0bd38e78e7a\",\"dweb:/ipfs/QmQSKFcDta31RAxDUvxz5rAQ4GWQPxUKRBwLqZvzCdGtDp\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5\",\"dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking1155.sol\":{\"keccak256\":\"0xcb537795a1841361c0975fb4155a5ea556a10ed39c75a8c4540a44a8eff47264\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb28c51906edcfcba8a4d7d93e1407d51965aecba99c457a97517e6e5cc16168\",\"dweb:/ipfs/Qmf3hL2coigtpRKzL5mVj4QePanWz1RwFM39QXGoTZdKfv\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking1155.sol\":{\"keccak256\":\"0x14f412c8e754e9c16530e243520fd95fb9e683f5b0a47cab8f7c196a99a686bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d51939ebdde0b85bf47363aad955dc42e1ee2b72fda128f6eddd6db840fef0b1\",\"dweb:/ipfs/QmcHYjD9xQoT8SEtX5Fog6uYqpGYUe1yKsY8AtpXayXsfe\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_defaultTimeUnit",
              "type": "uint80"
            },
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_defaultRewardsPerUnitTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedDefaultRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedDefaultTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokensStaked",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_totalRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfoForToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexedTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIndexed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultRewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_defaultTimeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_amount",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "amountStaked",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_amount",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards(uint256)": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.",
            "params": {
              "_tokenId": "Staked token Id."
            }
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_tokenAmounts": "  Amount of each token-id staked.",
              "_tokensStaked": "  List of token-ids staked.",
              "_totalRewards": "  Total rewards available."
            }
          },
          "getStakeInfoForToken(uint256,address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked for given token-id."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
            "params": {
              "data": "Additional data with no specified format",
              "from": "The address which previously owned the token",
              "ids": "An array containing ids of each token being transferred (order and length must match values array)",
              "operator": "The address which initiated the batch transfer (i.e. msg.sender)",
              "values": "An array containing amounts of each token being transferred (order and length must match ids array)"
            },
            "returns": {
              "_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRewardsPerUnitTime(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_defaultRewardsPerUnitTime": "New rewards per unit time."
            }
          },
          "setDefaultTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_defaultTimeUnit": "New time unit."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardsPerUnitTime(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_rewardsPerUnitTime": "New rewards per unit time.",
              "_tokenId": "ERC1155 token Id."
            }
          },
          "setTimeUnit(uint256,uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit.",
              "_tokenId": "ERC1155 token Id."
            }
          },
          "stake(uint256,uint64)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake.",
              "_tokenId": "ERC1155 token-id to stake."
            }
          },
          "withdraw(uint256,uint64)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw.",
              "_tokenId": "ERC1155 token-id to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards(uint256)": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View all tokens staked and total rewards for a user."
          },
          "getStakeInfoForToken(uint256,address)": {
            "notice": "View amount staked and rewards for a user, for a given token-id."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRewardsPerUnitTime(uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setDefaultTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardsPerUnitTime(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setTimeUnit(uint256,uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256,uint64)": {
            "notice": "Stake ERC721 Tokens."
          },
          "withdraw(uint256,uint64)": {
            "notice": "Withdraw staked tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking1155Base.sol": "Staking1155Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking1155Base.sol": {
        "keccak256": "0x7980a512862f1b1dc8c976b157878eb38a952b50aa3d887b53e05fcdbdf082c0",
        "urls": [
          "bzz-raw://792c63e0dd8a6518bbbf7274b9336bdbced9bf5edc357c516fc5c0bd38e78e7a",
          "dweb:/ipfs/QmQSKFcDta31RAxDUvxz5rAQ4GWQPxUKRBwLqZvzCdGtDp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4",
        "urls": [
          "bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5",
          "dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking1155.sol": {
        "keccak256": "0xcb537795a1841361c0975fb4155a5ea556a10ed39c75a8c4540a44a8eff47264",
        "urls": [
          "bzz-raw://bb28c51906edcfcba8a4d7d93e1407d51965aecba99c457a97517e6e5cc16168",
          "dweb:/ipfs/Qmf3hL2coigtpRKzL5mVj4QePanWz1RwFM39QXGoTZdKfv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking1155.sol": {
        "keccak256": "0x14f412c8e754e9c16530e243520fd95fb9e683f5b0a47cab8f7c196a99a686bf",
        "urls": [
          "bzz-raw://d51939ebdde0b85bf47363aad955dc42e1ee2b72fda128f6eddd6db840fef0b1",
          "dweb:/ipfs/QmcHYjD9xQoT8SEtX5Fog6uYqpGYUe1yKsY8AtpXayXsfe"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking1155Base.sol",
    "id": 6181,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ERC165": [
        7939
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC1155": [
        13858
      ],
      "IERC1155Receiver": [
        13921
      ],
      "IERC165": [
        13945
      ],
      "IERC20": [
        14015
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IStaking1155": [
        34690
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "ReentrancyGuard": [
        47279
      ],
      "SafeMath": [
        51488
      ],
      "Staking1155": [
        26387
      ],
      "Staking1155Base": [
        6180
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7142:17",
    "nodes": [
      {
        "id": 5808,
        "nodeType": "PragmaDirective",
        "src": "39:23:17",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 5809,
        "nodeType": "ImportDirective",
        "src": "86:43:17",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5810,
        "nodeType": "ImportDirective",
        "src": "130:36:17",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5811,
        "nodeType": "ImportDirective",
        "src": "167:34:17",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5812,
        "nodeType": "ImportDirective",
        "src": "202:38:17",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking1155.sol",
        "file": "../extension/Staking1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 26388,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5813,
        "nodeType": "ImportDirective",
        "src": "242:27:17",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC165.sol",
        "file": "../eip/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 7940,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5814,
        "nodeType": "ImportDirective",
        "src": "270:37:17",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 14016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5815,
        "nodeType": "ImportDirective",
        "src": "308:47:17",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC1155Receiver.sol",
        "file": "../eip/interface/IERC1155Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 13922,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5817,
        "nodeType": "ImportDirective",
        "src": "357:69:17",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6181,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5816,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "366:19:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6180,
        "nodeType": "ContractDefinition",
        "src": "1640:5540:17",
        "nodes": [
          {
            "id": 5833,
            "nodeType": "VariableDeclaration",
            "src": "1817:26:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5831,
              "nodeType": "StructuredDocumentation",
              "src": "1750:62:17",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1832:11:17",
            "scope": 6180,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5832,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1817:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5836,
            "nodeType": "VariableDeclaration",
            "src": "1913:45:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5834,
              "nodeType": "StructuredDocumentation",
              "src": "1850:58:17",
              "text": "@dev The address of the native token wrapper contract."
            },
            "mutability": "immutable",
            "name": "nativeTokenWrapper",
            "nameLocation": "1940:18:17",
            "scope": 6180,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5835,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1913:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5839,
            "nodeType": "VariableDeclaration",
            "src": "2025:34:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5837,
              "nodeType": "StructuredDocumentation",
              "src": "1965:55:17",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "2041:18:17",
            "scope": 6180,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5838,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2025:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5875,
            "nodeType": "FunctionDefinition",
            "src": "2066:464:17",
            "nodes": [],
            "body": {
              "id": 5874,
              "nodeType": "Block",
              "src": "2317:213:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5858,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5843,
                        "src": "2339:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5857,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "2327:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2327:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5860,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:26:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5862,
                        "name": "_defaultTimeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5841,
                        "src": "2391:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 5863,
                        "name": "_defaultRewardsPerUnitTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5845,
                        "src": "2409:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5861,
                      "name": "_setDefaultStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26149,
                      "src": "2363:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256)"
                      }
                    },
                    "id": 5864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:73:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5865,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:73:17"
                },
                {
                  "expression": {
                    "id": 5868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5866,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5833,
                      "src": "2447:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5867,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5849,
                      "src": "2461:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2447:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5869,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:26:17"
                },
                {
                  "expression": {
                    "id": 5872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5870,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5836,
                      "src": "2483:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5871,
                      "name": "_nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "2504:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2483:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5873,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:40:17"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5854,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5847,
                    "src": "2302:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5855,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5853,
                  "name": "Staking1155",
                  "nameLocations": [
                    "2290:11:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26387,
                  "src": "2290:11:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2290:26:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5841,
                  "mutability": "mutable",
                  "name": "_defaultTimeUnit",
                  "nameLocation": "2094:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "2087:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 5840,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5843,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2128:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "2120:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5845,
                  "mutability": "mutable",
                  "name": "_defaultRewardsPerUnitTime",
                  "nameLocation": "2159:26:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "2151:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5847,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2203:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "2195:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5849,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2234:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "2226:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5851,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2264:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5875,
                  "src": "2256:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:212:17"
            },
            "returnParameters": {
              "id": 5856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2317:0:17"
            },
            "scope": 6180,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5888,
            "nodeType": "FunctionDefinition",
            "src": "2606:129:17",
            "nodes": [],
            "body": {
              "id": 5887,
              "nodeType": "Block",
              "src": "2641:94:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5880,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2659:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2663:6:17",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2659:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5882,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5836,
                          "src": "2673:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2659:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 5884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2693:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 5879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2651:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2651:77:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5886,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:77:17"
                }
              ]
            },
            "documentation": {
              "id": 5876,
              "nodeType": "StructuredDocumentation",
              "src": "2536:65:17",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:2:17"
            },
            "returnParameters": {
              "id": 5878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:17"
            },
            "scope": 6180,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5901,
            "nodeType": "FunctionDefinition",
            "src": "2784:165:17",
            "nodes": [],
            "body": {
              "id": 5900,
              "nodeType": "Block",
              "src": "2868:81:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5897,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5891,
                        "src": "2899:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5896,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6096,
                      "src": "2878:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5899,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:29:17"
                }
              ]
            },
            "documentation": {
              "id": 5889,
              "nodeType": "StructuredDocumentation",
              "src": "2741:38:17",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5894,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5893,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2855:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47278,
                  "src": "2855:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2855:12:17"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2793:19:17",
            "parameters": {
              "id": 5892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5891,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2821:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "2813:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2813:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2812:17:17"
            },
            "returnParameters": {
              "id": 5895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2868:0:17"
            },
            "scope": 6180,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5914,
            "nodeType": "FunctionDefinition",
            "src": "3009:159:17",
            "nodes": [],
            "body": {
              "id": 5913,
              "nodeType": "Block",
              "src": "3086:82:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5910,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5904,
                        "src": "3118:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5909,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6137,
                      "src": "3096:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5912,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:30:17"
                }
              ]
            },
            "documentation": {
              "id": 5902,
              "nodeType": "StructuredDocumentation",
              "src": "2955:49:17",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5907,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5906,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3073:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47278,
                  "src": "3073:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3073:12:17"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "3018:20:17",
            "parameters": {
              "id": 5905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5904,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3047:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5914,
                  "src": "3039:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:17:17"
            },
            "returnParameters": {
              "id": 5908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:0:17"
            },
            "scope": 6180,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5924,
            "nodeType": "FunctionDefinition",
            "src": "3244:124:17",
            "nodes": [],
            "body": {
              "id": 5923,
              "nodeType": "Block",
              "src": "3326:42:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5921,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5839,
                    "src": "3343:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5920,
                  "id": 5922,
                  "nodeType": "Return",
                  "src": "3336:25:17"
                }
              ]
            },
            "baseFunctions": [
              26372
            ],
            "documentation": {
              "id": 5915,
              "nodeType": "StructuredDocumentation",
              "src": "3174:65:17",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3253:21:17",
            "overrides": {
              "id": 5917,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3299:8:17"
            },
            "parameters": {
              "id": 5916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3274:2:17"
            },
            "returnParameters": {
              "id": 5920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5924,
                  "src": "3317:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:9:17"
            },
            "scope": 6180,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5951,
            "nodeType": "FunctionDefinition",
            "src": "3558:217:17",
            "nodes": [],
            "body": {
              "id": 5950,
              "nodeType": "Block",
              "src": "3668:107:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 5942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5940,
                          "name": "isStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24914,
                          "src": "3686:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 5941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3699:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3686:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446972656374207472616e73666572",
                        "id": 5943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        },
                        "value": "Direct transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        }
                      ],
                      "id": 5939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3678:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3678:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5945,
                  "nodeType": "ExpressionStatement",
                  "src": "3678:42:17"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 5946,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3737:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                          "typeString": "contract Staking1155Base"
                        }
                      },
                      "id": 5947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3742:17:17",
                      "memberName": "onERC1155Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5951,
                      "src": "3737:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 5948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3760:8:17",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3737:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 5938,
                  "id": 5949,
                  "nodeType": "Return",
                  "src": "3730:38:17"
                }
              ]
            },
            "baseFunctions": [
              13902
            ],
            "functionSelector": "f23a6e61",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155Received",
            "nameLocation": "3567:17:17",
            "parameters": {
              "id": 5935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5926,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3585:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3594:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3603:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3612:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5934,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3621:14:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5933,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:52:17"
            },
            "returnParameters": {
              "id": 5938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "3660:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5936,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3659:8:17"
            },
            "scope": 6180,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5969,
            "nodeType": "FunctionDefinition",
            "src": "3781:218:17",
            "nodes": [],
            "body": {
              "id": 5968,
              "nodeType": "Block",
              "src": "3997:2:17",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              13920
            ],
            "functionSelector": "bc197c81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155BatchReceived",
            "nameLocation": "3790:22:17",
            "parameters": {
              "id": 5964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5953,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3830:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "3822:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5955,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3856:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "3848:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3848:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5958,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "3889:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "3870:22:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5956,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3870:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5957,
                    "nodeType": "ArrayTypeName",
                    "src": "3870:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5961,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "3921:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "3902:25:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5959,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3902:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5960,
                    "nodeType": "ArrayTypeName",
                    "src": "3902:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5963,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3952:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "3937:19:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5962,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3937:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3812:150:17"
            },
            "returnParameters": {
              "id": 5967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "3989:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5965,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3988:8:17"
            },
            "scope": 6180,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5992,
            "nodeType": "FunctionDefinition",
            "src": "4005:213:17",
            "nodes": [],
            "body": {
              "id": 5991,
              "nodeType": "Block",
              "src": "4105:113:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5979,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5971,
                        "src": "4122:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5981,
                              "name": "IERC1155Receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13921,
                              "src": "4142:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13921_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13921_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            ],
                            "id": 5980,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4137:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4137:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$13921",
                            "typeString": "type(contract IERC1155Receiver)"
                          }
                        },
                        "id": 5983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4160:11:17",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4137:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4122:49:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5987,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5971,
                          "src": "4199:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5985,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4175:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Staking1155Base_$6180_$",
                            "typeString": "type(contract super Staking1155Base)"
                          }
                        },
                        "id": 5986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4181:17:17",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7938,
                        "src": "4175:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4175:36:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4122:89:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5978,
                  "id": 5990,
                  "nodeType": "Return",
                  "src": "4115:96:17"
                }
              ]
            },
            "baseFunctions": [
              7938,
              13944
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4014:17:17",
            "overrides": {
              "id": 5975,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5973,
                  "name": "ERC165",
                  "nameLocations": [
                    "4073:6:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7939,
                  "src": "4073:6:17"
                },
                {
                  "id": 5974,
                  "name": "IERC165",
                  "nameLocations": [
                    "4081:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "4081:7:17"
                }
              ],
              "src": "4064:25:17"
            },
            "parameters": {
              "id": 5972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5971,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4039:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5992,
                  "src": "4032:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5970,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4031:20:17"
            },
            "returnParameters": {
              "id": 5978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5977,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5992,
                  "src": "4099:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5976,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4099:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4098:6:17"
            },
            "scope": 6180,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6026,
            "nodeType": "FunctionDefinition",
            "src": "4645:401:17",
            "nodes": [],
            "body": {
              "id": 6025,
              "nodeType": "Block",
              "src": "4728:318:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6002,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5997,
                          "src": "4746:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 6003,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5839,
                          "src": "4758:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4746:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 6005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4778:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 6001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4738:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:67:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6007,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:67:17"
                },
                {
                  "expression": {
                    "id": 6010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6008,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5839,
                      "src": "4815:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 6009,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5997,
                      "src": "4837:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4815:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6011,
                  "nodeType": "ExpressionStatement",
                  "src": "4815:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6015,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5833,
                        "src": "4916:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6018,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4949:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 6017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4941:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4941:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4941:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6020,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5995,
                        "src": "4968:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6021,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5997,
                        "src": "4989:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6022,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5836,
                        "src": "5011:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6012,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4855:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4875:27:17",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4855:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:184:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6024,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:184:17"
                }
              ]
            },
            "baseFunctions": [
              26380
            ],
            "documentation": {
              "id": 5993,
              "nodeType": "StructuredDocumentation",
              "src": "4401:239:17",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "4654:12:17",
            "overrides": {
              "id": 5999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4719:8:17"
            },
            "parameters": {
              "id": 5998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5995,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "4675:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "4667:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4667:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5997,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "4692:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "4684:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4684:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4666:35:17"
            },
            "returnParameters": {
              "id": 6000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4728:0:17"
            },
            "scope": 6180,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6096,
            "nodeType": "FunctionDefinition",
            "src": "5312:660:17",
            "nodes": [],
            "body": {
              "id": 6095,
              "nodeType": "Block",
              "src": "5376:596:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6033,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5394:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5398:6:17",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5394:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6035,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21716,
                            "src": "5408:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5408:7:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5394:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5417:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5386:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5386:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6040,
                  "nodeType": "ExpressionStatement",
                  "src": "5386:48:17"
                },
                {
                  "assignments": [
                    6042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6042,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "5453:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6095,
                      "src": "5445:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6041,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5445:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6050,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6043,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5833,
                        "src": "5468:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6044,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "5483:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5503:12:17",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "5483:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5468:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6048,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5833,
                      "src": "5539:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5468:82:17",
                    "trueExpression": {
                      "id": 6047,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5836,
                      "src": "5518:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5445:105:17"
                },
                {
                  "assignments": [
                    6052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6052,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "5569:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6095,
                      "src": "5561:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6051,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5561:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6062,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6059,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5624:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 6058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5616:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6057,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5616:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5616:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6054,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6042,
                            "src": "5592:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6053,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14015,
                          "src": "5585:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5585:20:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14015",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5606:9:17",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13960,
                      "src": "5585:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5585:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5561:69:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6066,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5833,
                        "src": "5701:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5726:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5730:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5726:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6071,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5758:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 6070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5750:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5750:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5750:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6073,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6029,
                        "src": "5777:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6074,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5836,
                        "src": "5798:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6063,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "5640:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5660:27:17",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "5640:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5640:186:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6076,
                  "nodeType": "ExpressionStatement",
                  "src": "5640:186:17"
                },
                {
                  "assignments": [
                    6078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6078,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5844:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 6095,
                      "src": "5836:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6077,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5836:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6090,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6085,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5898:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                                "typeString": "contract Staking1155Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                                "typeString": "contract Staking1155Base"
                              }
                            ],
                            "id": 6084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5890:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6083,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5890:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5890:13:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 6080,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6042,
                              "src": "5866:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6079,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14015,
                            "src": "5859:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 6081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5859:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$14015",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 6082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5880:9:17",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13960,
                        "src": "5859:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 6087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5859:45:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6088,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6052,
                      "src": "5907:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5859:61:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5836:84:17"
                },
                {
                  "expression": {
                    "id": 6093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6091,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5839,
                      "src": "5931:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6092,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6078,
                      "src": "5953:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5931:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6094,
                  "nodeType": "ExpressionStatement",
                  "src": "5931:34:17"
                }
              ]
            },
            "documentation": {
              "id": 6027,
              "nodeType": "StructuredDocumentation",
              "src": "5240:67:17",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "5321:20:17",
            "parameters": {
              "id": 6030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6029,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5350:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "5342:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5342:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5341:17:17"
            },
            "returnParameters": {
              "id": 6031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5376:0:17"
            },
            "scope": 6180,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6137,
            "nodeType": "FunctionDefinition",
            "src": "6061:481:17",
            "nodes": [],
            "body": {
              "id": 6136,
              "nodeType": "Block",
              "src": "6126:416:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6144:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6148:6:17",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6144:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6105,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21716,
                            "src": "6158:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6158:7:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6144:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6167:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6136:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6110,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:48:17"
                },
                {
                  "expression": {
                    "id": 6120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6111,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5839,
                      "src": "6254:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6112,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6099,
                          "src": "6275:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 6113,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5839,
                          "src": "6285:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6275:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6116,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5839,
                          "src": "6310:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 6117,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6099,
                          "src": "6331:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6310:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6275:63:17",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 6115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6306:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6254:84:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6121,
                  "nodeType": "ExpressionStatement",
                  "src": "6254:84:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6125,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5833,
                        "src": "6410:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6443:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6180",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 6127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6435:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6435:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6435:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6462:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6466:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6462:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6132,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6099,
                        "src": "6486:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6133,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5836,
                        "src": "6507:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6122,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6349:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6369:27:17",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "6349:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6349:186:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6135,
                  "nodeType": "ExpressionStatement",
                  "src": "6349:186:17"
                }
              ]
            },
            "documentation": {
              "id": 6097,
              "nodeType": "StructuredDocumentation",
              "src": "5978:78:17",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "6070:21:17",
            "parameters": {
              "id": 6100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6099,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6100:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6137,
                  "src": "6092:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6092:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6091:17:17"
            },
            "returnParameters": {
              "id": 6101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6126:0:17"
            },
            "scope": 6180,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6151,
            "nodeType": "FunctionDefinition",
            "src": "6637:125:17",
            "nodes": [],
            "body": {
              "id": 6150,
              "nodeType": "Block",
              "src": "6717:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6144,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6734:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6738:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6734:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6146,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6748:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6748:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6734:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6143,
                  "id": 6149,
                  "nodeType": "Return",
                  "src": "6727:28:17"
                }
              ]
            },
            "baseFunctions": [
              26386
            ],
            "documentation": {
              "id": 6138,
              "nodeType": "StructuredDocumentation",
              "src": "6548:84:17",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6646:22:17",
            "overrides": {
              "id": 6140,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6693:8:17"
            },
            "parameters": {
              "id": 6139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6668:2:17"
            },
            "returnParameters": {
              "id": 6143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6151,
                  "src": "6711:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6711:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6710:6:17"
            },
            "scope": 6180,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6165,
            "nodeType": "FunctionDefinition",
            "src": "6858:121:17",
            "nodes": [],
            "body": {
              "id": 6164,
              "nodeType": "Block",
              "src": "6934:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6158,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6951:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6955:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6951:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6160,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6965:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6965:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6951:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6157,
                  "id": 6163,
                  "nodeType": "Return",
                  "src": "6944:28:17"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 6152,
              "nodeType": "StructuredDocumentation",
              "src": "6768:85:17",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6867:18:17",
            "overrides": {
              "id": 6154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6910:8:17"
            },
            "parameters": {
              "id": 6153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6885:2:17"
            },
            "returnParameters": {
              "id": 6157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6165,
                  "src": "6928:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6928:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6927:6:17"
            },
            "scope": 6180,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6179,
            "nodeType": "FunctionDefinition",
            "src": "7063:115:17",
            "nodes": [],
            "body": {
              "id": 6178,
              "nodeType": "Block",
              "src": "7133:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6172,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7150:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7154:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7150:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6174,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "7164:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7164:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7150:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6171,
                  "id": 6177,
                  "nodeType": "Return",
                  "src": "7143:28:17"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 6166,
              "nodeType": "StructuredDocumentation",
              "src": "6985:73:17",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "7072:12:17",
            "overrides": {
              "id": 6168,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7109:8:17"
            },
            "parameters": {
              "id": 6167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7084:2:17"
            },
            "returnParameters": {
              "id": 6171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6179,
                  "src": "7127:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7127:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7126:6:17"
            },
            "scope": 6180,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5819,
              "name": "ContractMetadata",
              "nameLocations": [
                "1668:16:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1668:16:17"
            },
            "id": 5820,
            "nodeType": "InheritanceSpecifier",
            "src": "1668:16:17"
          },
          {
            "baseName": {
              "id": 5821,
              "name": "Multicall",
              "nameLocations": [
                "1686:9:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1686:9:17"
            },
            "id": 5822,
            "nodeType": "InheritanceSpecifier",
            "src": "1686:9:17"
          },
          {
            "baseName": {
              "id": 5823,
              "name": "Ownable",
              "nameLocations": [
                "1697:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1697:7:17"
            },
            "id": 5824,
            "nodeType": "InheritanceSpecifier",
            "src": "1697:7:17"
          },
          {
            "baseName": {
              "id": 5825,
              "name": "Staking1155",
              "nameLocations": [
                "1706:11:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26387,
              "src": "1706:11:17"
            },
            "id": 5826,
            "nodeType": "InheritanceSpecifier",
            "src": "1706:11:17"
          },
          {
            "baseName": {
              "id": 5827,
              "name": "ERC165",
              "nameLocations": [
                "1719:6:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7939,
              "src": "1719:6:17"
            },
            "id": 5828,
            "nodeType": "InheritanceSpecifier",
            "src": "1719:6:17"
          },
          {
            "baseName": {
              "id": 5829,
              "name": "IERC1155Receiver",
              "nameLocations": [
                "1727:16:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13921,
              "src": "1727:16:17"
            },
            "id": 5830,
            "nodeType": "InheritanceSpecifier",
            "src": "1727:16:17"
          }
        ],
        "canonicalName": "Staking1155Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5818,
          "nodeType": "StructuredDocumentation",
          "src": "1312:56:17",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6180,
          13921,
          7939,
          13945,
          26387,
          34690,
          47279,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084
        ],
        "name": "Staking1155Base",
        "nameLocation": "1649:15:17",
        "scope": 6181,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33833,
          34573,
          34582,
          34589,
          34598,
          34607,
          34614,
          34621
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 17
}