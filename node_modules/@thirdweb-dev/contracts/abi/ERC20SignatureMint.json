{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b50604051620031a6380380620031a683398101604081905262000059916200048d565b6040518060400160405280601281526020017105369676e61747572654d696e7445524332360741b815250604051806040016040528060018152602001603160f81b815250858585818181818160059081620000b69190620005ae565b506006620000c58282620005ae565b50504660a052503060c052620000da6200019d565b60805250620000eb90508362000223565b50508251602080850191909120835191840191909120610160829052610180819052466101205290915060008051602062003186833981519152620001758184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101005230610140526101a052506200019392508391505062000275565b505050506200067a565b600060008051602062003186833981519152620001b96200030e565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038116620002c45760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640160405180910390fd5b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060600580546200031f906200051d565b80601f01602080910402602001604051908101604052809291908181526020018280546200034d906200051d565b80156200039e5780601f1062000372576101008083540402835291602001916200039e565b820191906000526020600020905b8154815290600101906020018083116200038057829003601f168201915b5050505050905090565b80516001600160a01b0381168114620003c057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003ed57600080fd5b81516001600160401b03808211156200040a576200040a620003c5565b604051601f8301601f19908116603f01168101908282118183101715620004355762000435620003c5565b81604052838152602092508660208588010111156200045357600080fd5b600091505b8382101562000477578582018301518183018401529082019062000458565b6000602085830101528094505050505092915050565b60008060008060808587031215620004a457600080fd5b620004af85620003a8565b60208601519094506001600160401b0380821115620004cd57600080fd5b620004db88838901620003db565b94506040870151915080821115620004f257600080fd5b506200050187828801620003db565b9250506200051260608601620003a8565b905092959194509250565b600181811c908216806200053257607f821691505b6020821081036200055357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005a9576000816000526020600020601f850160051c81016020861015620005845750805b601f850160051c820191505b81811015620005a55782815560010162000590565b5050505b505050565b81516001600160401b03811115620005ca57620005ca620003c5565b620005e281620005db84546200051d565b8462000559565b602080601f8311600181146200061a5760008415620006015750858301515b600019600386901b1c1916600185901b178555620005a5565b600085815260208120601f198616915b828110156200064b578886015182559484019460019091019084016200062a565b50858210156200066a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051612a90620006f66000396000611f3501526000611f7701526000611f5601526000611eba01526000611ee401526000611f0e01526000610bf6015260006105b3015260006105dd015260006106070152612a906000f3fe6080604052600436106101315760003560e01c806306fdde0314610136578063079fe40e14610161578063095ea7b31461018e57806313af4035146101be57806318160ddd146101e057806323b872dd146101ff578063313ce5671461021f5780633644e5151461023b578063395093511461025057806342966c6814610270578063449a52f8146102905780636f4f2837146102b057806370a08231146102d057806379cc6790146102f05780637ecebe00146103105780638da5cb5b146103305780638f0fefbb14610345578063938e3d7b1461035857806395d89b4114610378578063a457c2d71461038d578063a9059cbb146103ad578063ac9650d8146103cd578063c1b606e2146103fa578063d505accf14610439578063dd62ed3e14610459578063e8a3d48514610479575b600080fd5b34801561014257600080fd5b5061014b61048e565b6040516101589190612286565b60405180910390f35b34801561016d57600080fd5b50610176610520565b6040516001600160a01b039091168152602001610158565b34801561019a57600080fd5b506101ae6101a93660046122b5565b61052f565b6040519015158152602001610158565b3480156101ca57600080fd5b506101de6101d93660046122df565b610549565b005b3480156101ec57600080fd5b506004545b604051908152602001610158565b34801561020b57600080fd5b506101ae61021a3660046122fa565b610582565b34801561022b57600080fd5b5060405160128152602001610158565b34801561024757600080fd5b506101f16105a6565b34801561025c57600080fd5b506101ae61026b3660046122b5565b610636565b34801561027c57600080fd5b506101de61028b366004612336565b610675565b34801561029c57600080fd5b506101de6102ab3660046122b5565b6106a7565b3480156102bc57600080fd5b506101de6102cb3660046122df565b610723565b3480156102dc57600080fd5b506101f16102eb3660046122df565b610750565b3480156102fc57600080fd5b506101de61030b3660046122b5565b61076b565b34801561031c57600080fd5b506101f161032b3660046122df565b610820565b34801561033c57600080fd5b5061017661083e565b61017661035336600461234f565b61084d565b34801561036457600080fd5b506101de6103733660046123f1565b61091e565b34801561038457600080fd5b5061014b61094b565b34801561039957600080fd5b506101ae6103a83660046122b5565b61095a565b3480156103b957600080fd5b506101ae6103c83660046122b5565b6109ec565b3480156103d957600080fd5b506103ed6103e83660046124a1565b6109fa565b6040516101589190612515565b34801561040657600080fd5b5061041a61041536600461234f565b610b5f565b6040805192151583526001600160a01b03909116602083015201610158565b34801561044557600080fd5b506101de610454366004612579565b610ba2565b34801561046557600080fd5b506101f16104743660046125ec565b610d28565b34801561048557600080fd5b5061014b610d53565b60606005805461049d9061261f565b80601f01602080910402602001604051908101604052809291908181526020018280546104c99061261f565b80156105165780601f106104eb57610100808354040283529160200191610516565b820191906000526020600020905b8154815290600101906020018083116104f957829003601f168201915b5050505050905090565b6008546001600160a01b031690565b60003361053d818585610de1565b60019150505b92915050565b610551610f05565b6105765760405162461bcd60e51b815260040161056d90612653565b60405180910390fd5b61057f81610f28565b50565b600033610590858285610f7a565b61059b858585610ff4565b506001949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105ff57507f000000000000000000000000000000000000000000000000000000000000000046145b1561062957507f000000000000000000000000000000000000000000000000000000000000000090565b6106316111b0565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061053d9082908690610670908790612691565b610de1565b8061067f33610750565b101561069d5760405162461bcd60e51b815260040161056d906126a4565b61057f3382611232565b6106af610f05565b6106f55760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604482015260640161056d565b806000036107155760405162461bcd60e51b815260040161056d906126d0565b61071f828261136e565b5050565b61072b610f05565b6107475760405162461bcd60e51b815260040161056d90612653565b61057f8161143b565b6001600160a01b031660009081526002602052604090205490565b610773610f05565b6107b95760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b604482015260640161056d565b806107c383610750565b10156107e15760405162461bcd60e51b815260040161056d906126a4565b6000816107ee8433610d28565b6107f891906126fe565b905061080683336000610de1565b610811833383610de1565b61081b8383611232565b505050565b6001600160a01b038116600090815260076020526040812054610543565b6001546001600160a01b031690565b6000808460400135116108725760405162461bcd60e51b815260040161056d906126d0565b61087d8484846114cf565b9050600061088e60208601866122df565b90506108bd6108a360408701602088016122df565b6108b360a08801608089016122df565b876060013561165c565b6108cb81866040013561136e565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c678760405161090e9190612728565b60405180910390a3509392505050565b610926610f05565b6109425760405162461bcd60e51b815260040161056d90612653565b61057f8161177d565b60606006805461049d9061261f565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156109df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161056d565b61059b8286868403610de1565b60003361053d818585610ff4565b6060816001600160401b03811115610a1457610a146123db565b604051908082528060200260200182016040528015610a4757816020015b6060815260200190600190039081610a325790505b509050336000805b84811015610b56578115610ace57610aac30878784818110610a7357610a736127be565b9050602002810190610a8591906127d4565b86604051602001610a989392919061281a565b604051602081830303815290604052611858565b848281518110610abe57610abe6127be565b6020026020010181905250610b4e565b610b3030878784818110610ae457610ae46127be565b9050602002810190610af691906127d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185892505050565b848281518110610b4257610b426127be565b60200260200101819052505b600101610a4f565b50505092915050565b600080610b6d858585611884565b60e086013560009081526009602052604090205490915060ff16158015610b985750610b98816118e8565b9150935093915050565b83421115610bf25760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161056d565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610c218c61190d565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c9e610c7e6105a6565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610cae82878787611935565b9050896001600160a01b0316816001600160a01b031614610d115760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161056d565b610d1c8a8a8a610de1565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054610d609061261f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c9061261f565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b505050505081565b6001600160a01b038316610e435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056d565b6001600160a01b038216610ea45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056d565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f0f61083e565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000610f868484610d28565b90506000198114610fee5781811015610fe15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161056d565b610fee8484848403610de1565b50505050565b6001600160a01b0383166110585760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056d565b6001600160a01b0382166110ba5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056d565b6001600160a01b038316600090815260026020526040902054818110156111325760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161056d565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290611169908490612691565b92505081905550826001600160a01b0316846001600160a01b0316600080516020612a3b833981519152846040516111a391815260200190565b60405180910390a3610fee565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111db61048e565b805160209182012060405161121793927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc691469130910161283b565b60405160208183030381529060405280519060200120905090565b6001600160a01b0382166112925760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161056d565b6001600160a01b038216600090815260026020526040902054818110156113065760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161056d565b6001600160a01b03831660009081526002602052604081208383039055600480548492906113359084906126fe565b90915550506040518281526000906001600160a01b03851690600080516020612a3b8339815191529060200160405180910390a3505050565b6001600160a01b0382166113c45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161056d565b80600460008282546113d69190612691565b90915550506001600160a01b03821660009081526002602052604081208054839290611403908490612691565b90915550506040518181526001600160a01b03831690600090600080516020612a3b8339815191529060200160405180910390a35050565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161056d565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000806114dd858585610b5f565b92509050806115205760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b604482015260640161056d565b4261153160c0870160a08801612867565b6001600160801b031611158015611560575061155360e0860160c08701612867565b6001600160801b03164211155b61159e5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b604482015260640161056d565b60006115ad60208701876122df565b6001600160a01b0316036115f95760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b604482015260640161056d565b60008560400135116116355760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b604482015260640161056d565b5060e0909301356000908152600960205260409020805460ff191660011790555090919050565b8060000361169b57341561081b5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b604482015260640161056d565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0383160161170d578034146117085760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b604482015260640161056d565b611750565b34156117505760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b604482015260640161056d565b60006001600160a01b03841615611767578361176f565b61176f610520565b9050610fee8333838561195d565b600080805461178b9061261f565b80601f01602080910402602001604051908101604052809291908181526020018280546117b79061261f565b80156118045780601f106117d957610100808354040283529160200191611804565b820191906000526020600020905b8154815290600101906020018083116117e757829003601f168201915b50505050509050816000908161181a91906128d2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161184c929190612991565b60405180910390a15050565b606061187d8383604051806060016040528060278152602001612a14602791396119a3565b9392505050565b60006118e083838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118da92506118ce9150889050611a1b565b80519060200120611b0f565b90611b1c565b949350505050565b60006118f261083e565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600080600061194687878787611b40565b9150915061195381611bfa565b5095945050505050565b8015610fee5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601611997576119928282611d3f565b610fee565b610fee84848484611de1565b6060600080856001600160a01b0316856040516119c091906129bf565b600060405180830381855af49150503d80600081146119fb576040519150601f19603f3d011682016040523d82523d6000602084013e611a00565b606091505b5091509150611a1186838387611e34565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e1611a4b60208401846122df565b611a5b60408501602086016122df565b60408501356060860135611a7560a08801608089016122df565b611a8560c0890160a08a01612867565b611a9560e08a0160c08b01612867565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610543610c7e611ead565b6000806000611b2b8585611f9b565b91509150611b3881611bfa565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611b6d5750600090506003611bf1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611bc1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bea57600060019250925050611bf1565b9150600090505b94509492505050565b6000816004811115611c0e57611c0e6129db565b03611c165750565b6001816004811115611c2a57611c2a6129db565b03611c725760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161056d565b6002816004811115611c8657611c866129db565b03611cd35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161056d565b6003816004811115611ce757611ce76129db565b0361057f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161056d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611d8c576040519150601f19603f3d011682016040523d82523d6000602084013e611d91565b606091505b505090508061081b5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b604482015260640161056d565b816001600160a01b0316836001600160a01b03160315610fee57306001600160a01b03841603611e1f576119926001600160a01b0385168383611fe0565b610fee6001600160a01b038516848484612043565b60608315611ea3578251600003611e9c576001600160a01b0385163b611e9c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056d565b50816118e0565b6118e0838361207b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611f0657507f000000000000000000000000000000000000000000000000000000000000000046145b15611f3057507f000000000000000000000000000000000000000000000000000000000000000090565b6106317f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006120a5565b6000808251604103611fd15760208301516040840151606085015160001a611fc587828585611b40565b94509450505050611fd9565b506000905060025b9250929050565b6040516001600160a01b03831660248201526044810182905261081b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120df565b6040516001600160a01b0380851660248301528316604482015260648101829052610fee9085906323b872dd60e01b9060840161200c565b81511561208b5781518083602001fd5b8060405162461bcd60e51b815260040161056d9190612286565b600083838346306040516020016120c095949392919061283b565b6040516020818303038152906040528051906020012090509392505050565b6000612134826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121b19092919063ffffffff16565b80519091501561081b578080602001905181019061215291906129f1565b61081b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161056d565b60606118e0848460008585600080866001600160a01b031685876040516121d891906129bf565b60006040518083038185875af1925050503d8060008114612215576040519150601f19603f3d011682016040523d82523d6000602084013e61221a565b606091505b509150915061222b87838387611e34565b979650505050505050565b60005b83811015612251578181015183820152602001612239565b50506000910152565b60008151808452612272816020860160208601612236565b601f01601f19169290920160200192915050565b60208152600061187d602083018461225a565b80356001600160a01b03811681146122b057600080fd5b919050565b600080604083850312156122c857600080fd5b6122d183612299565b946020939093013593505050565b6000602082840312156122f157600080fd5b61187d82612299565b60008060006060848603121561230f57600080fd5b61231884612299565b925061232660208501612299565b9150604084013590509250925092565b60006020828403121561234857600080fd5b5035919050565b600080600083850361012081121561236657600080fd5b6101008082121561237657600080fd5b85945084013590506001600160401b038082111561239357600080fd5b818601915086601f8301126123a757600080fd5b8135818111156123b657600080fd5b8760208285010111156123c857600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561240357600080fd5b81356001600160401b038082111561241a57600080fd5b818401915084601f83011261242e57600080fd5b813581811115612440576124406123db565b604051601f8201601f19908116603f01168101908382118183101715612468576124686123db565b8160405282815287602084870101111561248157600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156124b457600080fd5b82356001600160401b03808211156124cb57600080fd5b818501915085601f8301126124df57600080fd5b8135818111156124ee57600080fd5b8660208260051b850101111561250357600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561256c57603f1988860301845261255a85835161225a565b9450928501929085019060010161253e565b5092979650505050505050565b600080600080600080600060e0888a03121561259457600080fd5b61259d88612299565b96506125ab60208901612299565b95506040880135945060608801359350608088013560ff811681146125cf57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156125ff57600080fd5b61260883612299565b915061261660208401612299565b90509250929050565b600181811c9082168061263357607f821691505b60208210810361192f57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105435761054361267b565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b818103818111156105435761054361267b565b80356001600160801b03811681146122b057600080fd5b61010081016001600160a01b038061273f85612299565b1683528061274f60208601612299565b16602084015260408401356040840152606084013560608401528061277660808601612299565b1660808401525061278960a08401612711565b6001600160801b0381811660a0850152806127a660c08701612711565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126127eb57600080fd5b8301803591506001600160401b0382111561280557600080fd5b602001915036819003821315611fd957600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60006020828403121561287957600080fd5b61187d82612711565b601f82111561081b576000816000526020600020601f850160051c810160208610156128ab5750805b601f850160051c820191505b818110156128ca578281556001016128b7565b505050505050565b81516001600160401b038111156128eb576128eb6123db565b6128ff816128f9845461261f565b84612882565b602080601f831160018114612934576000841561291c5750858301515b600019600386901b1c1916600185901b1785556128ca565b600085815260208120601f198616915b8281101561296357888601518255948401946001909101908401612944565b50858210156129815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006129a4604083018561225a565b82810360208401526129b6818561225a565b95945050505050565b600082516129d1818460208701612236565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612a0357600080fd5b8151801515811461187d57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122091e300845e8b165ef9c0e177dccab7d0ff66baaaa19e375604ba61aa5c8da27b64736f6c634300081700338b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
    "sourceMap": "875:2925:8:-:0;;;1443:95:226;1390:148;;1134:255:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:240;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;1292:13:8;1307:5;1314:7;1403:5:5;1410:7;1832:5:226;1839:7;2089:5:225;2081;:13;;;;;;:::i;:::-;-1:-1:-1;2104:7:225;:17;2114:7;2104;:17;:::i;:::-;-1:-1:-1;;1877:13:226::1;1858:32;::::0;-1:-1:-1;1923:4:226::1;1900:28;::::0;1965:23:::1;:21;:23::i;:::-;1938:50;::::0;-1:-1:-1;1429:26:5::1;::::0;-1:-1:-1;1441:13:5;1429:11:::1;:26::i;:::-;-1:-1:-1::0;;2541:22:240;;;;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;2541:22;;-1:-1:-1;;;;;;;;;;;;2923:58:240;2651:117;2541:22;2597:25;3633:73;;;;;;4754:25:821;;;4795:18;;;4788:34;;;4838:18;;;4831:34;;;3677:13:240;4881:18:821;;;4874:34;3700:4:240;4924:19:821;;;4917:61;3597:7:240;;4726:19:821;;3633:73:240;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;1333:49:8::1;::::0;-1:-1:-1;1360:21:8;;-1:-1:-1;;1333:26:8::1;:49::i;:::-;1134:255:::0;;;;875:2925;;3296:438:226;3351:7;-1:-1:-1;;;;;;;;;;;3581:6:226;:4;:6::i;:::-;3565:24;;;;;;;3416:297;;;;;;4754:25:821;;;;4795:18;;;4788:34;;;;3611:14:226;4838:18:821;;;4831:34;3647:13:226;4881:18:821;;;4874:34;3690:4:226;4924:19:821;;;4917:61;4726:19;;3416:297:226;;;;;;;;;;;;3389:338;;;;;;3370:357;;3296:438;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;5191:2:821;1626:27:74;;;5173:21:821;5230:2;5210:18;;;5203:30;-1:-1:-1;;;5249:18:821;;;5242:47;5306:18;;1626:27:74;;;;;;;1578:86;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;2193:98:225:-;2247:13;2279:5;2272:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:844;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:821;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:821;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;914:3;907:4;902:2;894:6;890:15;886:26;883:35;880:55;;;931:1;928;921:12;880:55;953:1;944:10;;963:133;977:2;974:1;971:9;963:133;;;1065:14;;;1061:23;;1055:30;1034:14;;;1030:23;;1023:63;988:10;;;;963:133;;;1140:1;1133:4;1128:2;1120:6;1116:15;1112:26;1105:37;1160:6;1151:15;;;;;;328:844;;;;:::o;1177:733::-;1294:6;1302;1310;1318;1371:3;1359:9;1350:7;1346:23;1342:33;1339:53;;;1388:1;1385;1378:12;1339:53;1411:40;1441:9;1411:40;:::i;:::-;1495:2;1480:18;;1474:25;1401:50;;-1:-1:-1;;;;;;1548:14:821;;;1545:34;;;1575:1;1572;1565:12;1545:34;1598:61;1651:7;1642:6;1631:9;1627:22;1598:61;:::i;:::-;1588:71;;1705:2;1694:9;1690:18;1684:25;1668:41;;1734:2;1724:8;1721:16;1718:36;;;1750:1;1747;1740:12;1718:36;;1773:63;1828:7;1817:8;1806:9;1802:24;1773:63;:::i;:::-;1763:73;;;1855:49;1900:2;1889:9;1885:18;1855:49;:::i;:::-;1845:59;;1177:733;;;;;;;:::o;1915:380::-;1994:1;1990:12;;;;2037;;;2058:61;;2112:4;2104:6;2100:17;2090:27;;2058:61;2165:2;2157:6;2154:14;2134:18;2131:38;2128:161;;2211:10;2206:3;2202:20;2199:1;2192:31;2246:4;2243:1;2236:15;2274:4;2271:1;2264:15;2128:161;;1915:380;;;:::o;2426:543::-;2528:2;2523:3;2520:11;2517:446;;;2564:1;2588:5;2585:1;2578:16;2632:4;2629:1;2619:18;2702:2;2690:10;2686:19;2683:1;2679:27;2673:4;2669:38;2738:4;2726:10;2723:20;2720:47;;;-1:-1:-1;2761:4:821;2720:47;2816:2;2811:3;2807:12;2804:1;2800:20;2794:4;2790:31;2780:41;;2871:82;2889:2;2882:5;2879:13;2871:82;;;2934:17;;;2915:1;2904:13;2871:82;;;2875:3;;;2517:446;2426:543;;;:::o;3145:1345::-;3265:10;;-1:-1:-1;;;;;3287:30:821;;3284:56;;;3320:18;;:::i;:::-;3349:97;3439:6;3399:38;3431:4;3425:11;3399:38;:::i;:::-;3393:4;3349:97;:::i;:::-;3501:4;;3558:2;3547:14;;3575:1;3570:663;;;;4277:1;4294:6;4291:89;;;-1:-1:-1;4346:19:821;;;4340:26;4291:89;-1:-1:-1;;3102:1:821;3098:11;;;3094:24;3090:29;3080:40;3126:1;3122:11;;;3077:57;4393:81;;3540:944;;3570:663;2373:1;2366:14;;;2410:4;2397:18;;-1:-1:-1;;3606:20:821;;;3724:236;3738:7;3735:1;3732:14;3724:236;;;3827:19;;;3821:26;3806:42;;3919:27;;;;3887:1;3875:14;;;;3754:19;;3724:236;;;3728:3;3988:6;3979:7;3976:19;3973:201;;;4049:19;;;4043:26;-1:-1:-1;;4132:1:821;4128:14;;;4144:3;4124:24;4120:37;4116:42;4101:58;4086:74;;3973:201;-1:-1:-1;;;;;4220:1:821;4204:14;;;4200:22;4187:36;;-1:-1:-1;3145:1345:821:o;4989:341::-;875:2925:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101315760003560e01c806306fdde0314610136578063079fe40e14610161578063095ea7b31461018e57806313af4035146101be57806318160ddd146101e057806323b872dd146101ff578063313ce5671461021f5780633644e5151461023b578063395093511461025057806342966c6814610270578063449a52f8146102905780636f4f2837146102b057806370a08231146102d057806379cc6790146102f05780637ecebe00146103105780638da5cb5b146103305780638f0fefbb14610345578063938e3d7b1461035857806395d89b4114610378578063a457c2d71461038d578063a9059cbb146103ad578063ac9650d8146103cd578063c1b606e2146103fa578063d505accf14610439578063dd62ed3e14610459578063e8a3d48514610479575b600080fd5b34801561014257600080fd5b5061014b61048e565b6040516101589190612286565b60405180910390f35b34801561016d57600080fd5b50610176610520565b6040516001600160a01b039091168152602001610158565b34801561019a57600080fd5b506101ae6101a93660046122b5565b61052f565b6040519015158152602001610158565b3480156101ca57600080fd5b506101de6101d93660046122df565b610549565b005b3480156101ec57600080fd5b506004545b604051908152602001610158565b34801561020b57600080fd5b506101ae61021a3660046122fa565b610582565b34801561022b57600080fd5b5060405160128152602001610158565b34801561024757600080fd5b506101f16105a6565b34801561025c57600080fd5b506101ae61026b3660046122b5565b610636565b34801561027c57600080fd5b506101de61028b366004612336565b610675565b34801561029c57600080fd5b506101de6102ab3660046122b5565b6106a7565b3480156102bc57600080fd5b506101de6102cb3660046122df565b610723565b3480156102dc57600080fd5b506101f16102eb3660046122df565b610750565b3480156102fc57600080fd5b506101de61030b3660046122b5565b61076b565b34801561031c57600080fd5b506101f161032b3660046122df565b610820565b34801561033c57600080fd5b5061017661083e565b61017661035336600461234f565b61084d565b34801561036457600080fd5b506101de6103733660046123f1565b61091e565b34801561038457600080fd5b5061014b61094b565b34801561039957600080fd5b506101ae6103a83660046122b5565b61095a565b3480156103b957600080fd5b506101ae6103c83660046122b5565b6109ec565b3480156103d957600080fd5b506103ed6103e83660046124a1565b6109fa565b6040516101589190612515565b34801561040657600080fd5b5061041a61041536600461234f565b610b5f565b6040805192151583526001600160a01b03909116602083015201610158565b34801561044557600080fd5b506101de610454366004612579565b610ba2565b34801561046557600080fd5b506101f16104743660046125ec565b610d28565b34801561048557600080fd5b5061014b610d53565b60606005805461049d9061261f565b80601f01602080910402602001604051908101604052809291908181526020018280546104c99061261f565b80156105165780601f106104eb57610100808354040283529160200191610516565b820191906000526020600020905b8154815290600101906020018083116104f957829003601f168201915b5050505050905090565b6008546001600160a01b031690565b60003361053d818585610de1565b60019150505b92915050565b610551610f05565b6105765760405162461bcd60e51b815260040161056d90612653565b60405180910390fd5b61057f81610f28565b50565b600033610590858285610f7a565b61059b858585610ff4565b506001949350505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105ff57507f000000000000000000000000000000000000000000000000000000000000000046145b1561062957507f000000000000000000000000000000000000000000000000000000000000000090565b6106316111b0565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061053d9082908690610670908790612691565b610de1565b8061067f33610750565b101561069d5760405162461bcd60e51b815260040161056d906126a4565b61057f3382611232565b6106af610f05565b6106f55760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604482015260640161056d565b806000036107155760405162461bcd60e51b815260040161056d906126d0565b61071f828261136e565b5050565b61072b610f05565b6107475760405162461bcd60e51b815260040161056d90612653565b61057f8161143b565b6001600160a01b031660009081526002602052604090205490565b610773610f05565b6107b95760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b604482015260640161056d565b806107c383610750565b10156107e15760405162461bcd60e51b815260040161056d906126a4565b6000816107ee8433610d28565b6107f891906126fe565b905061080683336000610de1565b610811833383610de1565b61081b8383611232565b505050565b6001600160a01b038116600090815260076020526040812054610543565b6001546001600160a01b031690565b6000808460400135116108725760405162461bcd60e51b815260040161056d906126d0565b61087d8484846114cf565b9050600061088e60208601866122df565b90506108bd6108a360408701602088016122df565b6108b360a08801608089016122df565b876060013561165c565b6108cb81866040013561136e565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c678760405161090e9190612728565b60405180910390a3509392505050565b610926610f05565b6109425760405162461bcd60e51b815260040161056d90612653565b61057f8161177d565b60606006805461049d9061261f565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156109df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161056d565b61059b8286868403610de1565b60003361053d818585610ff4565b6060816001600160401b03811115610a1457610a146123db565b604051908082528060200260200182016040528015610a4757816020015b6060815260200190600190039081610a325790505b509050336000805b84811015610b56578115610ace57610aac30878784818110610a7357610a736127be565b9050602002810190610a8591906127d4565b86604051602001610a989392919061281a565b604051602081830303815290604052611858565b848281518110610abe57610abe6127be565b6020026020010181905250610b4e565b610b3030878784818110610ae457610ae46127be565b9050602002810190610af691906127d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185892505050565b848281518110610b4257610b426127be565b60200260200101819052505b600101610a4f565b50505092915050565b600080610b6d858585611884565b60e086013560009081526009602052604090205490915060ff16158015610b985750610b98816118e8565b9150935093915050565b83421115610bf25760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161056d565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610c218c61190d565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c9e610c7e6105a6565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610cae82878787611935565b9050896001600160a01b0316816001600160a01b031614610d115760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161056d565b610d1c8a8a8a610de1565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054610d609061261f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c9061261f565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b505050505081565b6001600160a01b038316610e435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056d565b6001600160a01b038216610ea45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056d565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f0f61083e565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000610f868484610d28565b90506000198114610fee5781811015610fe15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161056d565b610fee8484848403610de1565b50505050565b6001600160a01b0383166110585760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056d565b6001600160a01b0382166110ba5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056d565b6001600160a01b038316600090815260026020526040902054818110156111325760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161056d565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290611169908490612691565b92505081905550826001600160a01b0316846001600160a01b0316600080516020612a3b833981519152846040516111a391815260200190565b60405180910390a3610fee565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111db61048e565b805160209182012060405161121793927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc691469130910161283b565b60405160208183030381529060405280519060200120905090565b6001600160a01b0382166112925760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161056d565b6001600160a01b038216600090815260026020526040902054818110156113065760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161056d565b6001600160a01b03831660009081526002602052604081208383039055600480548492906113359084906126fe565b90915550506040518281526000906001600160a01b03851690600080516020612a3b8339815191529060200160405180910390a3505050565b6001600160a01b0382166113c45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161056d565b80600460008282546113d69190612691565b90915550506001600160a01b03821660009081526002602052604081208054839290611403908490612691565b90915550506040518181526001600160a01b03831690600090600080516020612a3b8339815191529060200160405180910390a35050565b6001600160a01b0381166114855760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161056d565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000806114dd858585610b5f565b92509050806115205760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b604482015260640161056d565b4261153160c0870160a08801612867565b6001600160801b031611158015611560575061155360e0860160c08701612867565b6001600160801b03164211155b61159e5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b604482015260640161056d565b60006115ad60208701876122df565b6001600160a01b0316036115f95760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b604482015260640161056d565b60008560400135116116355760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b604482015260640161056d565b5060e0909301356000908152600960205260409020805460ff191660011790555090919050565b8060000361169b57341561081b5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b604482015260640161056d565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0383160161170d578034146117085760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b604482015260640161056d565b611750565b34156117505760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b604482015260640161056d565b60006001600160a01b03841615611767578361176f565b61176f610520565b9050610fee8333838561195d565b600080805461178b9061261f565b80601f01602080910402602001604051908101604052809291908181526020018280546117b79061261f565b80156118045780601f106117d957610100808354040283529160200191611804565b820191906000526020600020905b8154815290600101906020018083116117e757829003601f168201915b50505050509050816000908161181a91906128d2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161184c929190612991565b60405180910390a15050565b606061187d8383604051806060016040528060278152602001612a14602791396119a3565b9392505050565b60006118e083838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118da92506118ce9150889050611a1b565b80519060200120611b0f565b90611b1c565b949350505050565b60006118f261083e565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600080600061194687878787611b40565b9150915061195381611bfa565b5095945050505050565b8015610fee5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601611997576119928282611d3f565b610fee565b610fee84848484611de1565b6060600080856001600160a01b0316856040516119c091906129bf565b600060405180830381855af49150503d80600081146119fb576040519150601f19603f3d011682016040523d82523d6000602084013e611a00565b606091505b5091509150611a1186838387611e34565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e1611a4b60208401846122df565b611a5b60408501602086016122df565b60408501356060860135611a7560a08801608089016122df565b611a8560c0890160a08a01612867565b611a9560e08a0160c08b01612867565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610543610c7e611ead565b6000806000611b2b8585611f9b565b91509150611b3881611bfa565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611b6d5750600090506003611bf1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611bc1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bea57600060019250925050611bf1565b9150600090505b94509492505050565b6000816004811115611c0e57611c0e6129db565b03611c165750565b6001816004811115611c2a57611c2a6129db565b03611c725760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161056d565b6002816004811115611c8657611c866129db565b03611cd35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161056d565b6003816004811115611ce757611ce76129db565b0361057f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161056d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611d8c576040519150601f19603f3d011682016040523d82523d6000602084013e611d91565b606091505b505090508061081b5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b604482015260640161056d565b816001600160a01b0316836001600160a01b03160315610fee57306001600160a01b03841603611e1f576119926001600160a01b0385168383611fe0565b610fee6001600160a01b038516848484612043565b60608315611ea3578251600003611e9c576001600160a01b0385163b611e9c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056d565b50816118e0565b6118e0838361207b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611f0657507f000000000000000000000000000000000000000000000000000000000000000046145b15611f3057507f000000000000000000000000000000000000000000000000000000000000000090565b6106317f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006120a5565b6000808251604103611fd15760208301516040840151606085015160001a611fc587828585611b40565b94509450505050611fd9565b506000905060025b9250929050565b6040516001600160a01b03831660248201526044810182905261081b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120df565b6040516001600160a01b0380851660248301528316604482015260648101829052610fee9085906323b872dd60e01b9060840161200c565b81511561208b5781518083602001fd5b8060405162461bcd60e51b815260040161056d9190612286565b600083838346306040516020016120c095949392919061283b565b6040516020818303038152906040528051906020012090509392505050565b6000612134826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121b19092919063ffffffff16565b80519091501561081b578080602001905181019061215291906129f1565b61081b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161056d565b60606118e0848460008585600080866001600160a01b031685876040516121d891906129bf565b60006040518083038185875af1925050503d8060008114612215576040519150601f19603f3d011682016040523d82523d6000602084013e61221a565b606091505b509150915061222b87838387611e34565b979650505050505050565b60005b83811015612251578181015183820152602001612239565b50506000910152565b60008151808452612272816020860160208601612236565b601f01601f19169290920160200192915050565b60208152600061187d602083018461225a565b80356001600160a01b03811681146122b057600080fd5b919050565b600080604083850312156122c857600080fd5b6122d183612299565b946020939093013593505050565b6000602082840312156122f157600080fd5b61187d82612299565b60008060006060848603121561230f57600080fd5b61231884612299565b925061232660208501612299565b9150604084013590509250925092565b60006020828403121561234857600080fd5b5035919050565b600080600083850361012081121561236657600080fd5b6101008082121561237657600080fd5b85945084013590506001600160401b038082111561239357600080fd5b818601915086601f8301126123a757600080fd5b8135818111156123b657600080fd5b8760208285010111156123c857600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561240357600080fd5b81356001600160401b038082111561241a57600080fd5b818401915084601f83011261242e57600080fd5b813581811115612440576124406123db565b604051601f8201601f19908116603f01168101908382118183101715612468576124686123db565b8160405282815287602084870101111561248157600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156124b457600080fd5b82356001600160401b03808211156124cb57600080fd5b818501915085601f8301126124df57600080fd5b8135818111156124ee57600080fd5b8660208260051b850101111561250357600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561256c57603f1988860301845261255a85835161225a565b9450928501929085019060010161253e565b5092979650505050505050565b600080600080600080600060e0888a03121561259457600080fd5b61259d88612299565b96506125ab60208901612299565b95506040880135945060608801359350608088013560ff811681146125cf57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156125ff57600080fd5b61260883612299565b915061261660208401612299565b90509250929050565b600181811c9082168061263357607f821691505b60208210810361192f57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105435761054361267b565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b818103818111156105435761054361267b565b80356001600160801b03811681146122b057600080fd5b61010081016001600160a01b038061273f85612299565b1683528061274f60208601612299565b16602084015260408401356040840152606084013560608401528061277660808601612299565b1660808401525061278960a08401612711565b6001600160801b0381811660a0850152806127a660c08701612711565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126127eb57600080fd5b8301803591506001600160401b0382111561280557600080fd5b602001915036819003821315611fd957600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60006020828403121561287957600080fd5b61187d82612711565b601f82111561081b576000816000526020600020601f850160051c810160208610156128ab5750805b601f850160051c820191505b818110156128ca578281556001016128b7565b505050505050565b81516001600160401b038111156128eb576128eb6123db565b6128ff816128f9845461261f565b84612882565b602080601f831160018114612934576000841561291c5750858301515b600019600386901b1c1916600185901b1785556128ca565b600085815260208120601f198616915b8281101561296357888601518255948401946001909101908401612944565b50858210156129815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006129a4604083018561225a565b82810360208401526129b6818561225a565b95945050505050565b600082516129d1818460208701612236565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612a0357600080fd5b8151801515811461187d57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122091e300845e8b165ef9c0e177dccab7d0ff66baaaa19e375604ba61aa5c8da27b64736f6c63430008170033",
    "sourceMap": "875:2925:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98:225;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:74;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;934:32:821;;;916:51;;904:2;889:18;676:104:74;770:203:821;4470:197:225;;;;;;;;;;-1:-1:-1;4470:197:225;;;;;:::i;:::-;;:::i;:::-;;;1580:14:821;;1573:22;1555:41;;1543:2;1528:18;4470:197:225;1415:187:821;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;:::-;;3281:106:225;;;;;;;;;;-1:-1:-1;3368:12:225;;3281:106;;;1944:25:821;;;1932:2;1917:18;3281:106:225;1798:177:821;5229:256:225;;;;;;;;;;-1:-1:-1;5229:256:225;;;;;:::i;:::-;;:::i;3130:91::-;;;;;;;;;;-1:-1:-1;3130:91:225;;3212:2;2455:36:821;;2443:2;2428:18;3130:91:225;2313:184:821;3018:272:226;;;;;;;;;;;;;:::i;5880:236:225:-;;;;;;;;;;-1:-1:-1;5880:236:225;;;;;:::i;:::-;;:::i;2421:164:5:-;;;;;;;;;;-1:-1:-1;2421:164:5;;;;;:::i;:::-;;:::i;1989:209::-;;;;;;;;;;-1:-1:-1;1989:209:5;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;3445:125:225:-;;;;;;;;;;-1:-1:-1;3445:125:225;;;;;:::i;:::-;;:::i;2882:430:5:-;;;;;;;;;;-1:-1:-1;2882:430:5;;;;;:::i;:::-;;:::i;2768:126:226:-;;;;;;;;;;-1:-1:-1;2768:126:226;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;;;;:::i;1827:589:8:-;;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;2404:102:225:-;;;;;;;;;;;;;:::i;6603:429::-;;;;;;;;;;-1:-1:-1;6603:429:225;;;;;:::i;:::-;;:::i;3766:189::-;;;;;;;;;;-1:-1:-1;3766:189:225;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;874:279:83:-;;;;;;;;;;-1:-1:-1;874:279:83;;;;;:::i;:::-;;:::i;:::-;;;;6328:14:821;;6321:22;6303:41;;-1:-1:-1;;;;;6380:32:821;;;6375:2;6360:18;;6353:60;6276:18;874:279:83;6135:284:821;2056:651:226;;;;;;;;;;-1:-1:-1;2056:651:226;;;;;:::i;:::-;;:::i;4013:149:225:-;;;;;;;;;;-1:-1:-1;4013:149:225;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;2193:98:225:-;2247:13;2279:5;2272:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;4470:197:225:-;4553:4;4478:10:5;4607:32:225;4478:10:5;4623:7:225;4632:6;4607:8;:32::i;:::-;4656:4;4649:11;;;4470:197;;;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;5229:256:225:-;5326:4;4478:10:5;5382:38:225;5398:4;4478:10:5;5413:6:225;5382:15;:38::i;:::-;5430:27;5440:4;5446:2;5450:6;5430:9;:27::i;:::-;-1:-1:-1;5474:4:225;;5229:256;-1:-1:-1;;;;5229:256:225:o;3018:272:226:-;3076:7;3107:4;-1:-1:-1;;;;;3116:12:226;3099:29;;:66;;;;;3149:16;3132:13;:33;3099:66;3095:189;;;-1:-1:-1;3188:24:226;;3018:272::o;3095:189::-;3250:23;:21;:23::i;:::-;3243:30;;3018:272;:::o;5880:236:225:-;4478:10:5;5968:4:225;6047:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6047:27:225;;;;;;;;;;5968:4;;4478:10:5;6022:66:225;;4478:10:5;;6047:27:225;;:40;;6077:10;;6047:40;:::i;:::-;6022:8;:66::i;2421:164:5:-;2512:7;2487:21;2497:10;2487:9;:21::i;:::-;:32;;2479:63;;;;-1:-1:-1;;;2479:63:5;;;;;;;:::i;:::-;2552:26;2558:10;2570:7;2552:5;:26::i;1989:209::-;2068:10;:8;:10::i;:::-;2060:46;;;;-1:-1:-1;;;2060:46:5;;8926:2:821;2060:46:5;;;8908:21:821;8965:2;8945:18;;;8938:30;-1:-1:-1;;;8984:18:821;;;8977:53;9047:18;;2060:46:5;8724:347:821;2060:46:5;2124:7;2135:1;2124:12;2116:45;;;;-1:-1:-1;;;2116:45:5;;;;;;;:::i;:::-;2172:19;2178:3;2183:7;2172:5;:19::i;:::-;1989:209;;:::o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3445:125:225:-;-1:-1:-1;;;;;3545:18:225;3519:7;3545:18;;;:9;:18;;;;;;;3445:125::o;2882:430:5:-;2979:10;:8;:10::i;:::-;2971:46;;;;-1:-1:-1;;;2971:46:5;;9627:2:821;2971:46:5;;;9609:21:821;9666:2;9646:18;;;9639:30;-1:-1:-1;;;9685:18:821;;;9678:53;9748:18;;2971:46:5;9425:347:821;2971:46:5;3058:7;3035:19;3045:8;3035:9;:19::i;:::-;:30;;3027:61;;;;-1:-1:-1;;;3027:61:5;;;;;;;:::i;:::-;3098:26;3161:7;3127:31;3137:8;3147:10;3127:9;:31::i;:::-;:41;;;;:::i;:::-;3098:70;;3178:33;3187:8;3197:10;3209:1;3178:8;:33::i;:::-;3221:50;3230:8;3240:10;3252:18;3221:8;:50::i;:::-;3281:24;3287:8;3297:7;3281:5;:24::i;:::-;2961:351;2882:430;;:::o;2768:126:226:-;-1:-1:-1;;;;;2863:14:226;;2837:7;2863:14;;;:7;:14;;;;;918::233;2863:24:226;827:112:233;871:86:70;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1827:589:8:-;1964:14;2014:1;1998:4;:13;;;:17;1990:50;;;;-1:-1:-1;;;1990:50:8;;;;;;;:::i;:::-;2099:33;2115:4;2121:10;;2099:15;:33::i;:::-;2090:42;-1:-1:-1;2143:16:8;2162:7;;;;:4;:7;:::i;:::-;2143:26;-1:-1:-1;2205:74:8;2226:25;;;;;;;;:::i;:::-;2253:13;;;;;;;;:::i;:::-;2268:4;:10;;;2205:20;:74::i;:::-;2314:30;2320:8;2330:4;:13;;;2314:5;:30::i;:::-;2394:8;-1:-1:-1;;;;;2360:49:8;2386:6;-1:-1:-1;;;;;2360:49:8;;2404:4;2360:49;;;;;;:::i;:::-;;;;;;;;1980:436;1827:589;;;;;:::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2404:102:225:-;2460:13;2492:7;2485:14;;;;;:::i;6603:429::-;4478:10:5;6696:4:225;6777:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6777:27:225;;;;;;;;;;6696:4;;4478:10:5;6822:35:225;;;;6814:85;;;;-1:-1:-1;;;6814:85:225;;11231:2:821;6814:85:225;;;11213:21:821;11270:2;11250:18;;;11243:30;11309:34;11289:18;;;11282:62;-1:-1:-1;;;11360:18:821;;;11353:35;11405:19;;6814:85:225;11029:401:821;6814:85:225;6933:60;6942:5;6949:7;6977:15;6958:16;:34;6933:8;:60::i;3766:189::-;3845:4;4478:10:5;3899:28:225;4478:10:5;3916:2:225;3920:6;3899:9;:28::i;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;4478:10:5;834:14:65;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;874:279:83:-;996:12;1010:14;1045:33;1061:4;1067:10;;1045:15;:33::i;:::-;1106:8;;;;1099:16;;;;:6;:16;;;;;;1036:42;;-1:-1:-1;1099:16:83;;1098:17;:48;;;;;1119:27;1139:6;1119:19;:27::i;:::-;1088:58;;874:279;;;;;;:::o;2056:651:226:-;2291:8;2272:15;:27;;2264:69;;;;-1:-1:-1;;;2264:69:226;;12652:2:821;2264:69:226;;;12634:21:821;12691:2;12671:18;;;12664:30;12730:31;12710:18;;;12703:59;12779:18;;2264:69:226;12450:353:821;2264:69:226;2344:18;2386:16;2404:5;2411:7;2420:5;2427:16;2437:5;2427:9;:16::i;:::-;2375:79;;;;;;13095:25:821;;;;-1:-1:-1;;;;;13194:15:821;;;13174:18;;;13167:43;13246:15;;;;13226:18;;;13219:43;13278:18;;;13271:34;13321:19;;;13314:35;13365:19;;;13358:35;;;13067:19;;2375:79:226;;;;;;;;;;;;2365:90;;;;;;2344:111;;2466:12;2481:53;2503:18;:16;:18::i;:::-;2523:10;8549:4:239;8543:11;-1:-1:-1;;;8567:23:239;;8619:4;8610:14;;8603:39;;;;8671:4;8662:14;;8655:34;8725:4;8710:20;;;8349:397;2481:53:226;2466:68;;2545:14;2562:28;2576:4;2582:1;2585;2588;2562:13;:28::i;:::-;2545:45;;2618:5;-1:-1:-1;;;;;2608:15:226;:6;-1:-1:-1;;;;;2608:15:226;;2600:58;;;;-1:-1:-1;;;2600:58:226;;13606:2:821;2600:58:226;;;13588:21:821;13645:2;13625:18;;;13618:30;13684:32;13664:18;;;13657:60;13734:18;;2600:58:226;13404:354:821;2600:58:226;2669:31;2678:5;2685:7;2694:5;2669:8;:31::i;:::-;2254:453;;;2056:651;;;;;;;:::o;4013:149:225:-;-1:-1:-1;;;;;4128:18:225;;;4102:7;4128:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4013:149::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10100:340:225:-;-1:-1:-1;;;;;10201:19:225;;10193:68;;;;-1:-1:-1;;;10193:68:225;;13965:2:821;10193:68:225;;;13947:21:821;14004:2;13984:18;;;13977:30;14043:34;14023:18;;;14016:62;-1:-1:-1;;;14094:18:821;;;14087:34;14138:19;;10193:68:225;13763:400:821;10193:68:225;-1:-1:-1;;;;;10279:21:225;;10271:68;;;;-1:-1:-1;;;10271:68:225;;14370:2:821;10271:68:225;;;14352:21:821;14409:2;14389:18;;;14382:30;14448:34;14428:18;;;14421:62;-1:-1:-1;;;14499:18:821;;;14492:32;14541:19;;10271:68:225;14168:398:821;10271:68:225;-1:-1:-1;;;;;10350:18:225;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10401:32;;1944:25:821;;;10401:32:225;;1917:18:821;10401:32:225;;;;;;;10100:340;;;:::o;4190:115:5:-;4254:4;4291:7;:5;:7::i;:::-;-1:-1:-1;;;;;4277:21:5;:10;-1:-1:-1;;;;;4277:21:5;;4270:28;;4190:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10717:411:225:-;10817:24;10844:25;10854:5;10861:7;10844:9;:25::i;:::-;10817:52;;-1:-1:-1;;10883:16:225;:37;10879:243;;10964:6;10944:16;:26;;10936:68;;;;-1:-1:-1;;;10936:68:225;;14773:2:821;10936:68:225;;;14755:21:821;14812:2;14792:18;;;14785:30;14851:31;14831:18;;;14824:59;14900:18;;10936:68:225;14571:353:821;10936:68:225;11046:51;11055:5;11062:7;11090:6;11071:16;:25;11046:8;:51::i;:::-;10807:321;10717:411;;;:::o;7495:621::-;-1:-1:-1;;;;;7591:18:225;;7583:68;;;;-1:-1:-1;;;7583:68:225;;15131:2:821;7583:68:225;;;15113:21:821;15170:2;15150:18;;;15143:30;15209:34;15189:18;;;15182:62;-1:-1:-1;;;15260:18:821;;;15253:35;15305:19;;7583:68:225;14929:401:821;7583:68:225;-1:-1:-1;;;;;7669:16:225;;7661:64;;;;-1:-1:-1;;;7661:64:225;;15537:2:821;7661:64:225;;;15519:21:821;15576:2;15556:18;;;15549:30;15615:34;15595:18;;;15588:62;-1:-1:-1;;;15666:18:821;;;15659:33;15709:19;;7661:64:225;15335:399:821;7661:64:225;-1:-1:-1;;;;;7807:15:225;;7785:19;7807:15;;;:9;:15;;;;;;7840:21;;;;7832:72;;;;-1:-1:-1;;;7832:72:225;;15941:2:821;7832:72:225;;;15923:21:821;15980:2;15960:18;;;15953:30;16019:34;15999:18;;;15992:62;-1:-1:-1;;;16070:18:821;;;16063:36;16116:19;;7832:72:225;15739:402:821;7832:72:225;-1:-1:-1;;;;;7938:15:225;;;;;;;:9;:15;;;;;;7956:20;;;7938:38;;7996:13;;;;;;;;:23;;7970:6;;7938:15;7996:23;;7970:6;;7996:23;:::i;:::-;;;;;;;;8050:2;-1:-1:-1;;;;;8035:26:225;8044:4;-1:-1:-1;;;;;8035:26:225;-1:-1:-1;;;;;;;;;;;8054:6:225;8035:26;;;;1944:25:821;;1932:2;1917:18;;1798:177;8035:26:225;;;;;;;;8072:37;2882:430:5;3296:438:226;3351:7;3448:95;3581:6;:4;:6::i;:::-;3565:24;;;;;;;3416:297;;;;;3611:14;;3647:13;;3690:4;;3416:297;;:::i;:::-;;;;;;;;;;;;;3389:338;;;;;;3370:357;;3296:438;:::o;9101:576:225:-;-1:-1:-1;;;;;9184:21:225;;9176:67;;;;-1:-1:-1;;;9176:67:225;;16842:2:821;9176:67:225;;;16824:21:821;16881:2;16861:18;;;16854:30;16920:34;16900:18;;;16893:62;-1:-1:-1;;;16971:18:821;;;16964:31;17012:19;;9176:67:225;16640:397:821;9176:67:225;-1:-1:-1;;;;;9339:18:225;;9314:22;9339:18;;;:9;:18;;;;;;9375:24;;;;9367:71;;;;-1:-1:-1;;;9367:71:225;;17244:2:821;9367:71:225;;;17226:21:821;17283:2;17263:18;;;17256:30;17322:34;17302:18;;;17295:62;-1:-1:-1;;;17373:18:821;;;17366:32;17415:19;;9367:71:225;17042:398:821;9367:71:225;-1:-1:-1;;;;;9472:18:225;;;;;;:9;:18;;;;;9493:23;;;9472:44;;9536:12;:22;;9510:6;;9472:18;9536:22;;9510:6;;9536:22;:::i;:::-;;;;-1:-1:-1;;9574:37:225;;1944:25:821;;;9600:1:225;;-1:-1:-1;;;;;9574:37:225;;;-1:-1:-1;;;;;;;;;;;9574:37:225;1932:2:821;1917:18;9574:37:225;;;;;;;2961:351:5;2882:430;;:::o;8392:389:225:-;-1:-1:-1;;;;;8475:21:225;;8467:65;;;;-1:-1:-1;;;8467:65:225;;17647:2:821;8467:65:225;;;17629:21:821;17686:2;17666:18;;;17659:30;17725:33;17705:18;;;17698:61;17776:18;;8467:65:225;17445:355:821;8467:65:225;8619:6;8603:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8635:18:225;;;;;;:9;:18;;;;;:28;;8657:6;;8635:18;:28;;8657:6;;8635:28;:::i;:::-;;;;-1:-1:-1;;8678:37:225;;1944:25:821;;;-1:-1:-1;;;;;8678:37:225;;;8695:1;;-1:-1:-1;;;;;;;;;;;8678:37:225;1932:2:821;1917:18;8678:37:225;;;;;;;1989:209:5;;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;18007:2:821;1626:27:74;;;17989:21:821;18046:2;18026:18;;;18019:30;-1:-1:-1;;;18065:18:821;;;18058:47;18122:18;;1626:27:74;17805:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;1400:550:83:-;1497:14;1523:12;1565:24;1572:4;1578:10;;1565:6;:24::i;:::-;1545:44;-1:-1:-1;1545:44:83;-1:-1:-1;1545:44:83;1600:35;;;;-1:-1:-1;;;1600:35:83;;18353:2:821;1600:35:83;;;18335:21:821;18392:2;18372:18;;;18365:30;-1:-1:-1;;;18411:18:821;;;18404:45;18466:18;;1600:35:83;18151:339:821;1600:35:83;1697:15;1666:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1666:46:83;;;:94;;;;-1:-1:-1;1735:25:83;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1716:44:83;:15;:44;;1666:94;1645:156;;;;-1:-1:-1;;;1645:156:83;;18888:2:821;1645:156:83;;;18870:21:821;18927:2;18907:18;;;18900:30;-1:-1:-1;;;18946:18:821;;;18939:45;19001:18;;1645:156:83;18686:339:821;1645:156:83;1838:1;1819:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1819:21:83;;1811:53;;;;-1:-1:-1;;;1811:53:83;;19232:2:821;1811:53:83;;;19214:21:821;19271:2;19251:18;;;19244:30;-1:-1:-1;;;19290:18:821;;;19283:49;19349:18;;1811:53:83;19030:343:821;1811:53:83;1898:1;1882:4;:13;;;:17;1874:35;;;;-1:-1:-1;;;1874:35:83;;19580:2:821;1874:35:83;;;19562:21:821;19619:1;19599:18;;;19592:29;-1:-1:-1;;;19637:18:821;;;19630:35;19682:18;;1874:35:83;19378:328:821;1874:35:83;-1:-1:-1;1927:8:83;;;;;1920:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;1920:23:83;1939:4;1920:23;;;-1:-1:-1;1400:550:83;;;-1:-1:-1;1400:550:83:o;3147:651:8:-;3274:6;3284:1;3274:11;3270:95;;3309:9;:14;3301:33;;;;-1:-1:-1;;;3301:33:8;;19913:2:821;3301:33:8;;;19895:21:821;19952:1;19932:18;;;19925:29;-1:-1:-1;;;19970:18:821;;;19963:36;20016:18;;3301:33:8;19711:329:821;3270:95:8;-1:-1:-1;;;;;;;3379:45:8;;;3375:206;;3461:6;3448:9;:19;3440:54;;;;-1:-1:-1;;;3440:54:8;;20247:2:821;3440:54:8;;;20229:21:821;20286:2;20266:18;;;20259:30;-1:-1:-1;;;20305:18:821;;;20298:52;20367:18;;3440:54:8;20045:346:821;3440:54:8;3375:206;;;3533:9;:14;3525:45;;;;-1:-1:-1;;;3525:45:8;;20598:2:821;3525:45:8;;;20580:21:821;20637:2;20617:18;;;20610:30;-1:-1:-1;;;20656:18:821;;;20649:48;20714:18;;3525:45:8;20396:342:821;3525:45:8;3591:21;-1:-1:-1;;;;;3615:35:8;;;:84;;3678:21;3615:84;;;3653:22;:20;:22::i;:::-;3591:108;;3709:82;3746:9;3757:10;3769:13;3784:6;3709:36;:82::i;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;2024:204:83:-;2126:7;2152:69;2210:10;;2152:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2152:49:83;;-1:-1:-1;2179:20:83;;-1:-1:-1;2194:4:83;;-1:-1:-1;2179:14:83;:20::i;:::-;2169:31;;;;;;2152:16;:49::i;:::-;:57;;:69::i;:::-;2145:76;2024:204;-1:-1:-1;;;;2024:204:83:o;2690:134:8:-;2776:4;2810:7;:5;:7::i;:::-;-1:-1:-1;;;;;2799:18:8;:7;-1:-1:-1;;;;;2799:18:8;;2792:25;;2690:134;;;:::o;3865:203:226:-;-1:-1:-1;;;;;3985:14:226;;3925:15;3985:14;;;:7;:14;;;;;918::233;;1050:1;1032:19;;;;918:14;4044:17:226;3942:126;3865:203;;;:::o;6611:232:239:-;6696:7;6716:17;6735:18;6757:25;6768:4;6774:1;6777;6780;6757:10;:25::i;:::-;6715:67;;;;6792:18;6804:5;6792:11;:18::i;:::-;-1:-1:-1;6827:9:239;6611:232;-1:-1:-1;;;;;6611:232:239:o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;:::-;702:173;;;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;2300:446:83:-;2374:12;351:207;2471:7;;;;:4;:7;:::i;:::-;2496:25;;;;;;;;:::i;:::-;2539:13;;;;2570:10;;;;2598:13;;;;;;;;:::i;:::-;2629:27;;;;;;;;:::i;:::-;2674:25;;;;;;;;:::i;:::-;2417:322;;;;;;23989:25:821;;;;-1:-1:-1;;;;;24088:15:821;;;24068:18;;;24061:43;24140:15;;;24120:18;;;24113:43;24172:18;;;24165:34;;;;24215:19;;;24208:35;;;;24280:15;;;24259:19;;;24252:44;-1:-1:-1;;;;;24371:15:821;;;2717:8:83;24350:19:821;;;24343:44;;;;24424:15;;24403:19;;;24396:44;2717:8:83;;;24456:19:821;;;24449:35;23961:19;;2417:322:83;;;;;;;;;;;;2398:341;;2300:446;;;:::o;4339:165:240:-;4416:7;4442:55;4464:20;:18;:20::i;3674:227:239:-;3752:7;3772:17;3791:18;3813:27;3824:4;3830:9;3813:10;:27::i;:::-;3771:69;;;;3850:18;3862:5;3850:11;:18::i;:::-;-1:-1:-1;3885:9:239;3674:227;-1:-1:-1;;;3674:227:239:o;5022:1456::-;5110:7;;-1:-1:-1;;;;;6021:79:239;;6017:161;;;-1:-1:-1;6132:1:239;;-1:-1:-1;6136:30:239;6116:51;;6017:161;6289:24;;;6272:14;6289:24;;;;;;;;;24722:25:821;;;24795:4;24783:17;;24763:18;;;24756:45;;;;24817:18;;;24810:34;;;24860:18;;;24853:34;;;6289:24:239;;24694:19:821;;6289:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6289:24:239;;-1:-1:-1;;6289:24:239;;;-1:-1:-1;;;;;;;6327:20:239;;6323:101;;6379:1;6383:29;6363:50;;;;;;;6323:101;6442:6;-1:-1:-1;6450:20:239;;-1:-1:-1;5022:1456:239;;;;;;;;:::o;583:511::-;660:20;651:5;:29;;;;;;;;:::i;:::-;;647:441;;583:511;:::o;647:441::-;756:29;747:5;:38;;;;;;;;:::i;:::-;;743:345;;801:34;;-1:-1:-1;;;801:34:239;;25232:2:821;801:34:239;;;25214:21:821;25271:2;25251:18;;;25244:30;-1:-1:-1;;;25290:18:821;;;25283:54;25354:18;;801:34:239;25030:348:821;743:345:239;865:35;856:5;:44;;;;;;;;:::i;:::-;;852:236;;916:41;;-1:-1:-1;;;916:41:239;;25585:2:821;916:41:239;;;25567:21:821;25624:2;25604:18;;;25597:30;25663:33;25643:18;;;25636:61;25714:18;;916:41:239;25383:355:821;852:236:239;987:30;978:5;:39;;;;;;;;:::i;:::-;;974:114;;1033:44;;-1:-1:-1;;;1033:44:239;;25945:2:821;1033:44:239;;;25927:21:821;25984:2;25964:18;;;25957:30;26023:34;26003:18;;;25996:62;-1:-1:-1;;;26074:18:821;;;26067:32;26116:19;;1033:44:239;25743:398:821;2482:292:292;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;26558:2:821;2719:48:292;;;26540:21:821;26597:2;26577:18;;;26570:30;-1:-1:-1;;;26616:18:821;;;26609:58;26684:18;;2719:48:292;26356:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;26915:2:821;8110:60:289;;;26897:21:821;26954:2;26934:18;;;26927:30;26993:31;26973:18;;;26966:59;27042:18;;8110:60:289;26713:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;3143:308:240:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:240;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:240;;3143:308::o;3215:230::-;3370:64;3392:10;3404:12;3418:15;3370:21;:64::i;2158:730:239:-;2239:7;2248:12;2276:9;:16;2296:2;2276:22;2272:610;;2612:4;2597:20;;2591:27;2661:4;2646:20;;2640:27;2718:4;2703:20;;2697:27;2314:9;2689:36;2759:25;2770:4;2689:36;2591:27;2640;2759:10;:25::i;:::-;2752:32;;;;;;;;;2272:610;-1:-1:-1;2831:1:239;;-1:-1:-1;2835:35:239;2272:610;2158:730;;;;;:::o;759:175:228:-;868:58;;-1:-1:-1;;;;;27263:32:821;;868:58:228;;;27245:51:821;27312:18;;;27305:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;27218:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;27608:15:821;;;1067:68:228;;;27590:34:821;27660:15;;27640:18;;;27633:43;27692:18;;;27685:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;27525:18:821;;1067:68:228;27350:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3457:257:240:-;3597:7;3644:8;3654;3664:11;3677:13;3700:4;3633:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;:::o;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;28214:2:821;3711:85:228;;;28196:21:821;28253:2;28233:18;;;28226:30;28292:34;28272:18;;;28265:62;-1:-1:-1;;;28343:18:821;;;28336:40;28393:19;;3711:85:228;28012:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;14:250:821:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:821;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:821;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:821:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;978:173::-;1046:20;;-1:-1:-1;;;;;1095:31:821;;1085:42;;1075:70;;1141:1;1138;1131:12;1075:70;978:173;;;:::o;1156:254::-;1224:6;1232;1285:2;1273:9;1264:7;1260:23;1256:32;1253:52;;;1301:1;1298;1291:12;1253:52;1324:29;1343:9;1324:29;:::i;:::-;1314:39;1400:2;1385:18;;;;1372:32;;-1:-1:-1;;;1156:254:821:o;1607:186::-;1666:6;1719:2;1707:9;1698:7;1694:23;1690:32;1687:52;;;1735:1;1732;1725:12;1687:52;1758:29;1777:9;1758:29;:::i;1980:328::-;2057:6;2065;2073;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2165:29;2184:9;2165:29;:::i;:::-;2155:39;;2213:38;2247:2;2236:9;2232:18;2213:38;:::i;:::-;2203:48;;2298:2;2287:9;2283:18;2270:32;2260:42;;1980:328;;;;;:::o;2684:180::-;2743:6;2796:2;2784:9;2775:7;2771:23;2767:32;2764:52;;;2812:1;2809;2802:12;2764:52;-1:-1:-1;2835:23:821;;2684:180;-1:-1:-1;2684:180:821:o;2869:765::-;2980:6;2988;2996;3040:9;3031:7;3027:23;3070:3;3066:2;3062:12;3059:32;;;3087:1;3084;3077:12;3059:32;3110:3;3133:2;3129;3125:11;3122:31;;;3149:1;3146;3139:12;3122:31;3172:9;;-1:-1:-1;3217:18:821;;3204:32;;-1:-1:-1;;;;;;3285:14:821;;;3282:34;;;3312:1;3309;3302:12;3282:34;3350:6;3339:9;3335:22;3325:32;;3395:7;3388:4;3384:2;3380:13;3376:27;3366:55;;3417:1;3414;3407:12;3366:55;3457:2;3444:16;3483:2;3475:6;3472:14;3469:34;;;3499:1;3496;3489:12;3469:34;3546:7;3539:4;3530:6;3526:2;3522:15;3518:26;3515:39;3512:59;;;3567:1;3564;3557:12;3512:59;3598:4;3594:2;3590:13;3580:23;;3622:6;3612:16;;;;;2869:765;;;;;:::o;3639:127::-;3700:10;3695:3;3691:20;3688:1;3681:31;3731:4;3728:1;3721:15;3755:4;3752:1;3745:15;3771:922;3840:6;3893:2;3881:9;3872:7;3868:23;3864:32;3861:52;;;3909:1;3906;3899:12;3861:52;3949:9;3936:23;-1:-1:-1;;;;;4019:2:821;4011:6;4008:14;4005:34;;;4035:1;4032;4025:12;4005:34;4073:6;4062:9;4058:22;4048:32;;4118:7;4111:4;4107:2;4103:13;4099:27;4089:55;;4140:1;4137;4130:12;4089:55;4176:2;4163:16;4198:2;4194;4191:10;4188:36;;;4204:18;;:::i;:::-;4279:2;4273:9;4247:2;4333:13;;-1:-1:-1;;4329:22:821;;;4353:2;4325:31;4321:40;4309:53;;;4377:18;;;4397:22;;;4374:46;4371:72;;;4423:18;;:::i;:::-;4463:10;4459:2;4452:22;4498:2;4490:6;4483:18;4538:7;4533:2;4528;4524;4520:11;4516:20;4513:33;4510:53;;;4559:1;4556;4549:12;4510:53;4615:2;4610;4606;4602:11;4597:2;4589:6;4585:15;4572:46;4660:1;4638:15;;;4655:2;4634:24;4627:35;;;;-1:-1:-1;4642:6:821;3771:922;-1:-1:-1;;;;;3771:922:821:o;4698:626::-;4795:6;4803;4856:2;4844:9;4835:7;4831:23;4827:32;4824:52;;;4872:1;4869;4862:12;4824:52;4912:9;4899:23;-1:-1:-1;;;;;4982:2:821;4974:6;4971:14;4968:34;;;4998:1;4995;4988:12;4968:34;5036:6;5025:9;5021:22;5011:32;;5081:7;5074:4;5070:2;5066:13;5062:27;5052:55;;5103:1;5100;5093:12;5052:55;5143:2;5130:16;5169:2;5161:6;5158:14;5155:34;;;5185:1;5182;5175:12;5155:34;5238:7;5233:2;5223:6;5220:1;5216:14;5212:2;5208:23;5204:32;5201:45;5198:65;;;5259:1;5256;5249:12;5198:65;5290:2;5282:11;;;;;5312:6;;-1:-1:-1;4698:626:821;;-1:-1:-1;;;;4698:626:821:o;5329:801::-;5489:4;5518:2;5558;5547:9;5543:18;5588:2;5577:9;5570:21;5611:6;5646;5640:13;5677:6;5669;5662:22;5715:2;5704:9;5700:18;5693:25;;5777:2;5767:6;5764:1;5760:14;5749:9;5745:30;5741:39;5727:53;;5815:2;5807:6;5803:15;5836:1;5846:255;5860:6;5857:1;5854:13;5846:255;;;5953:2;5949:7;5937:9;5929:6;5925:22;5921:36;5916:3;5909:49;5981:40;6014:6;6005;5999:13;5981:40;:::i;:::-;5971:50;-1:-1:-1;6079:12:821;;;;6044:15;;;;5882:1;5875:9;5846:255;;;-1:-1:-1;6118:6:821;;5329:801;-1:-1:-1;;;;;;;5329:801:821:o;6424:693::-;6535:6;6543;6551;6559;6567;6575;6583;6636:3;6624:9;6615:7;6611:23;6607:33;6604:53;;;6653:1;6650;6643:12;6604:53;6676:29;6695:9;6676:29;:::i;:::-;6666:39;;6724:38;6758:2;6747:9;6743:18;6724:38;:::i;:::-;6714:48;;6809:2;6798:9;6794:18;6781:32;6771:42;;6860:2;6849:9;6845:18;6832:32;6822:42;;6914:3;6903:9;6899:19;6886:33;6959:4;6952:5;6948:16;6941:5;6938:27;6928:55;;6979:1;6976;6969:12;6928:55;6424:693;;;;-1:-1:-1;6424:693:821;;;;7002:5;7054:3;7039:19;;7026:33;;-1:-1:-1;7106:3:821;7091:19;;;7078:33;;6424:693;-1:-1:-1;;6424:693:821:o;7122:260::-;7190:6;7198;7251:2;7239:9;7230:7;7226:23;7222:32;7219:52;;;7267:1;7264;7257:12;7219:52;7290:29;7309:9;7290:29;:::i;:::-;7280:39;;7338:38;7372:2;7361:9;7357:18;7338:38;:::i;:::-;7328:48;;7122:260;;;;;:::o;7387:380::-;7466:1;7462:12;;;;7509;;;7530:61;;7584:4;7576:6;7572:17;7562:27;;7530:61;7637:2;7629:6;7626:14;7606:18;7603:38;7600:161;;7683:10;7678:3;7674:20;7671:1;7664:31;7718:4;7715:1;7708:15;7746:4;7743:1;7736:15;7772:338;7974:2;7956:21;;;8013:2;7993:18;;;7986:30;-1:-1:-1;;;8047:2:821;8032:18;;8025:44;8101:2;8086:18;;7772:338::o;8115:127::-;8176:10;8171:3;8167:20;8164:1;8157:31;8207:4;8204:1;8197:15;8231:4;8228:1;8221:15;8247:125;8312:9;;;8333:10;;;8330:36;;;8346:18;;:::i;8377:342::-;8579:2;8561:21;;;8618:2;8598:18;;;8591:30;-1:-1:-1;;;8652:2:821;8637:18;;8630:48;8710:2;8695:18;;8377:342::o;9076:344::-;9278:2;9260:21;;;9317:2;9297:18;;;9290:30;-1:-1:-1;;;9351:2:821;9336:18;;9329:50;9411:2;9396:18;;9076:344::o;9777:128::-;9844:9;;;9865:11;;;9862:37;;;9879:18;;:::i;9910:173::-;9978:20;;-1:-1:-1;;;;;10027:31:821;;10017:42;;10007:70;;10073:1;10070;10063:12;10088:936;10284:3;10269:19;;-1:-1:-1;;;;;10307:19:821;10357:26;10376:6;10357:26;:::i;:::-;10353:35;10342:9;10335:54;10470:2;10431:37;10462:4;10454:6;10450:17;10431:37;:::i;:::-;10427:46;10420:4;10409:9;10405:20;10398:76;10537:4;10529:6;10525:17;10512:31;10505:4;10494:9;10490:20;10483:61;10607:4;10599:6;10595:17;10582:31;10575:4;10564:9;10560:20;10553:61;10695:2;10656:37;10687:4;10679:6;10675:17;10656:37;:::i;:::-;10652:46;10645:4;10634:9;10630:20;10623:76;;10728:37;10759:4;10751:6;10747:17;10728:37;:::i;:::-;-1:-1:-1;;;;;10841:21:821;;;10834:4;10819:20;;10812:51;10784:19;10905:37;10936:4;10924:17;;10905:37;:::i;:::-;10901:46;10894:4;10883:9;10879:20;10872:76;;;11011:4;11003:6;10999:17;10986:31;10979:4;10968:9;10964:20;10957:61;10088:936;;;;:::o;11435:127::-;11496:10;11491:3;11487:20;11484:1;11477:31;11527:4;11524:1;11517:15;11551:4;11548:1;11541:15;11567:521;11644:4;11650:6;11710:11;11697:25;11804:2;11800:7;11789:8;11773:14;11769:29;11765:43;11745:18;11741:68;11731:96;;11823:1;11820;11813:12;11731:96;11850:33;;11902:20;;;-1:-1:-1;;;;;;11934:30:821;;11931:50;;;11977:1;11974;11967:12;11931:50;12010:4;11998:17;;-1:-1:-1;12041:14:821;12037:27;;;12027:38;;12024:58;;;12078:1;12075;12068:12;12093:352;12304:6;12296;12291:3;12278:33;12399:2;12370:15;;;;-1:-1:-1;;;;;;12366:45:821;12330:16;;12355:57;;;12436:2;12428:11;;12093:352;-1:-1:-1;12093:352:821:o;16146:489::-;16405:25;;;16461:2;16446:18;;16439:34;;;;16504:2;16489:18;;16482:34;;;;16547:2;16532:18;;16525:34;-1:-1:-1;;;;;16596:32:821;16590:3;16575:19;;16568:61;16392:3;16377:19;;16146:489::o;18495:186::-;18554:6;18607:2;18595:9;18586:7;18582:23;18578:32;18575:52;;;18623:1;18620;18613:12;18575:52;18646:29;18665:9;18646:29;:::i;20869:543::-;20971:2;20966:3;20963:11;20960:446;;;21007:1;21031:5;21028:1;21021:16;21075:4;21072:1;21062:18;21145:2;21133:10;21129:19;21126:1;21122:27;21116:4;21112:38;21181:4;21169:10;21166:20;21163:47;;;-1:-1:-1;21204:4:821;21163:47;21259:2;21254:3;21250:12;21247:1;21243:20;21237:4;21233:31;21223:41;;21314:82;21332:2;21325:5;21322:13;21314:82;;;21377:17;;;21358:1;21347:13;21314:82;;;21318:3;;;20869:543;;;:::o;21588:1345::-;21714:3;21708:10;-1:-1:-1;;;;;21733:6:821;21730:30;21727:56;;;21763:18;;:::i;:::-;21792:97;21882:6;21842:38;21874:4;21868:11;21842:38;:::i;:::-;21836:4;21792:97;:::i;:::-;21944:4;;22001:2;21990:14;;22018:1;22013:663;;;;22720:1;22737:6;22734:89;;;-1:-1:-1;22789:19:821;;;22783:26;22734:89;-1:-1:-1;;21545:1:821;21541:11;;;21537:24;21533:29;21523:40;21569:1;21565:11;;;21520:57;22836:81;;21983:944;;22013:663;20816:1;20809:14;;;20853:4;20840:18;;-1:-1:-1;;22049:20:821;;;22167:236;22181:7;22178:1;22175:14;22167:236;;;22270:19;;;22264:26;22249:42;;22362:27;;;;22330:1;22318:14;;;;22197:19;;22167:236;;;22171:3;22431:6;22422:7;22419:19;22416:201;;;22492:19;;;22486:26;-1:-1:-1;;22575:1:821;22571:14;;;22587:3;22567:24;22563:37;22559:42;22544:58;22529:74;;22416:201;-1:-1:-1;;;;;22663:1:821;22647:14;;;22643:22;22630:36;;-1:-1:-1;21588:1345:821:o;22938:383::-;23135:2;23124:9;23117:21;23098:4;23161:45;23202:2;23191:9;23187:18;23179:6;23161:45;:::i;:::-;23254:9;23246:6;23242:22;23237:2;23226:9;23222:18;23215:50;23282:33;23308:6;23300;23282:33;:::i;:::-;23274:41;22938:383;-1:-1:-1;;;;;22938:383:821:o;23326:287::-;23455:3;23493:6;23487:13;23509:66;23568:6;23563:3;23556:4;23548:6;23544:17;23509:66;:::i;:::-;23591:16;;;;;23326:287;-1:-1:-1;;23326:287:821:o;24898:127::-;24959:10;24954:3;24950:20;24947:1;24940:31;24990:4;24987:1;24980:15;25014:4;25011:1;25004:15;27730:277;27797:6;27850:2;27838:9;27829:7;27825:23;27821:32;27818:52;;;27866:1;27863;27856:12;27818:52;27898:9;27892:16;27951:5;27944:13;27937:21;27930:5;27927:32;27917:60;;27973:1;27970;27963:12",
    "linkReferences": {},
    "immutableReferences": {
      "48074": [
        {
          "start": 1543,
          "length": 32
        }
      ],
      "48076": [
        {
          "start": 1501,
          "length": 32
        }
      ],
      "48078": [
        {
          "start": 1459,
          "length": 32
        }
      ],
      "48083": [
        {
          "start": 3062,
          "length": 32
        }
      ],
      "50547": [
        {
          "start": 7950,
          "length": 32
        }
      ],
      "50549": [
        {
          "start": 7908,
          "length": 32
        }
      ],
      "50551": [
        {
          "start": 7866,
          "length": 32
        }
      ],
      "50553": [
        {
          "start": 8022,
          "length": 32
        }
      ],
      "50555": [
        {
          "start": 8055,
          "length": 32
        }
      ],
      "50557": [
        {
          "start": 7989,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mintTo(address,uint256)": "449a52f8",
    "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "8f0fefbb",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "c1b606e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"TokensMinted(address,uint256)\":{\"details\":\"Emitted when tokens are minted with `mintTo`\"},\"TokensMintedWithSignature(address,address,(address,address,uint256,uint256,address,uint128,uint128,bytes32))\":{\"details\":\"Emitted when tokens are minted.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Caller should own the `_amount` of tokens.\",\"params\":{\"_amount\":\"The number of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"`_account` should own the `_amount` of tokens.\",\"params\":{\"_account\":\"The account to burn tokens from.\",\"_amount\":\"The number of tokens to burn.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintTo(address,uint256)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\",\"params\":{\"_amount\":\"Quantity of tokens to mint.\",\"_to\":\"The recipient of the tokens to mint.\"}},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Lets an owner a given amount of their tokens.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Lets an owner burn a given amount of an account's tokens.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an authorized address mint tokens to a recipient.\"},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"notice\":\"BASE:      ERC20      EXTENSION: SignatureMintERC20  The `ERC20SignatureMint` contract uses the `ERC20Base` contract, along with the `SignatureMintERC20` extension.  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC20SignatureMint.sol\":\"ERC20SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC20Base.sol\":{\"keccak256\":\"0x1d15b80763249bb85880f4d5864d7ffb11759daf725e0274287e679cf8eef4d7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://089433bbc23d3d8a85b69b0ecce874beec6eee64507493b19f6eeac8dad8d049\",\"dweb:/ipfs/QmZ3oWyBopPKajzm6apJspj5UjRZtXaxBbM5atTmJk8kuL\"]},\"contracts/base/ERC20SignatureMint.sol\":{\"keccak256\":\"0x2265db28f60750d23fb7a41f1fc5083e8099e3c00c5dce4624d89a55669e3718\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9da17e13007aa6a509cb76879a8bd460927c5982818892001bb649db7c6cc4ae\",\"dweb:/ipfs/QmZgBi3bZBqz8gvpMx9n6esDcwuk383qya8QJaxRyi88Tc\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/SignatureMintERC20.sol\":{\"keccak256\":\"0x5442271b7bdc1d322fd3644ce40ae8d753b5a2ac265f4083eba2085cfc81f724\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d30874146394448c2cf3e9cc3365baefb9b27b16cb34b1457afe3d022a54be9c\",\"dweb:/ipfs/Qmatpg7mwyxsEPyb1bT8Y8hMp3rY3aGHXJCzB6sJt4qTnW\"]},\"contracts/extension/interface/IBurnableERC20.sol\":{\"keccak256\":\"0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe\",\"dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMintableERC20.sol\":{\"keccak256\":\"0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4\",\"dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/ISignatureMintERC20.sol\":{\"keccak256\":\"0x0ab04c0efe1f8398dc9f6922b639dd7794c85cf50a195feb30ef0155db5a12bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d7fa322a853d5f8f371ee7d90a3364086284efba78112f378fe8783592ba02cf\",\"dweb:/ipfs/QmVEoAUS6ETzV4JZtZfwZ9avM8wmd9GHgwTBybciNi5zKS\"]},\"contracts/external-deps/openzeppelin/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x541806757302ea976b52d48ff7df59f50ec72c10684254e4f17c181f46fd381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b84a81fe700e99fc4741c535a84b008481160ec152da34d8ca49a99ea3a9396b\",\"dweb:/ipfs/Qmb3nCYyECbyFiobDHRNDop3qTYoGNt7FusxXpQNWj5dDn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x4bd6e2c824d3306bf73098f468366fc5ab8bc302065b8dbe40100115ac19579c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63c8e1da97d932e80e6916c068c7d275b0de0fd8ba42ddcf8949febd94a4455a\",\"dweb:/ipfs/QmSaKN8JXUiEwqTJZ7DhjocMwppXr6725ozguwdtHmw7Sn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/external-deps/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe\",\"dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Caller should own the `_amount` of tokens.",
            "params": {
              "_amount": "The number of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "`_account` should own the `_amount` of tokens.",
            "params": {
              "_account": "The account to burn tokens from.",
              "_amount": "The number of tokens to burn."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mintTo(address,uint256)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.",
            "params": {
              "_amount": "Quantity of tokens to mint.",
              "_to": "The recipient of the tokens to mint."
            }
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Lets an owner a given amount of their tokens."
          },
          "burnFrom(address,uint256)": {
            "notice": "Lets an owner burn a given amount of an account's tokens."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an authorized address mint tokens to a recipient."
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC20SignatureMint.sol": "ERC20SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC20Base.sol": {
        "keccak256": "0x1d15b80763249bb85880f4d5864d7ffb11759daf725e0274287e679cf8eef4d7",
        "urls": [
          "bzz-raw://089433bbc23d3d8a85b69b0ecce874beec6eee64507493b19f6eeac8dad8d049",
          "dweb:/ipfs/QmZ3oWyBopPKajzm6apJspj5UjRZtXaxBbM5atTmJk8kuL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20SignatureMint.sol": {
        "keccak256": "0x2265db28f60750d23fb7a41f1fc5083e8099e3c00c5dce4624d89a55669e3718",
        "urls": [
          "bzz-raw://9da17e13007aa6a509cb76879a8bd460927c5982818892001bb649db7c6cc4ae",
          "dweb:/ipfs/QmZgBi3bZBqz8gvpMx9n6esDcwuk383qya8QJaxRyi88Tc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC20.sol": {
        "keccak256": "0x5442271b7bdc1d322fd3644ce40ae8d753b5a2ac265f4083eba2085cfc81f724",
        "urls": [
          "bzz-raw://d30874146394448c2cf3e9cc3365baefb9b27b16cb34b1457afe3d022a54be9c",
          "dweb:/ipfs/Qmatpg7mwyxsEPyb1bT8Y8hMp3rY3aGHXJCzB6sJt4qTnW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IBurnableERC20.sol": {
        "keccak256": "0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272",
        "urls": [
          "bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe",
          "dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMintableERC20.sol": {
        "keccak256": "0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e",
        "urls": [
          "bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4",
          "dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC20.sol": {
        "keccak256": "0x0ab04c0efe1f8398dc9f6922b639dd7794c85cf50a195feb30ef0155db5a12bb",
        "urls": [
          "bzz-raw://d7fa322a853d5f8f371ee7d90a3364086284efba78112f378fe8783592ba02cf",
          "dweb:/ipfs/QmVEoAUS6ETzV4JZtZfwZ9avM8wmd9GHgwTBybciNi5zKS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/ERC20.sol": {
        "keccak256": "0x541806757302ea976b52d48ff7df59f50ec72c10684254e4f17c181f46fd381f",
        "urls": [
          "bzz-raw://b84a81fe700e99fc4741c535a84b008481160ec152da34d8ca49a99ea3a9396b",
          "dweb:/ipfs/Qmb3nCYyECbyFiobDHRNDop3qTYoGNt7FusxXpQNWj5dDn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x4bd6e2c824d3306bf73098f468366fc5ab8bc302065b8dbe40100115ac19579c",
        "urls": [
          "bzz-raw://63c8e1da97d932e80e6916c068c7d275b0de0fd8ba42ddcf8949febd94a4455a",
          "dweb:/ipfs/QmSaKN8JXUiEwqTJZ7DhjocMwppXr6725ozguwdtHmw7Sn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b",
        "urls": [
          "bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe",
          "dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC20SignatureMint.sol",
    "id": 3293,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "Context": [
        49279
      ],
      "ContractMetadata": [
        18093
      ],
      "Counters": [
        49353
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ECDSA": [
        50541
      ],
      "EIP712": [
        50695
      ],
      "ERC20": [
        48051
      ],
      "ERC20Base": [
        2496
      ],
      "ERC20Permit": [
        48293
      ],
      "ERC20SignatureMint": [
        3292
      ],
      "IBurnableERC20": [
        32899
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC20": [
        14015
      ],
      "IERC20Metadata": [
        14034
      ],
      "IERC20Permit": [
        14070
      ],
      "IMintableERC20": [
        33540
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPrimarySale": [
        33997
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "PrimarySale": [
        22703
      ],
      "SignatureMintERC20": [
        24141
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3762:8",
    "nodes": [
      {
        "id": 3104,
        "nodeType": "PragmaDirective",
        "src": "39:23:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3105,
        "nodeType": "ImportDirective",
        "src": "86:25:8",
        "nodes": [],
        "absolutePath": "contracts/base/ERC20Base.sol",
        "file": "./ERC20Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3293,
        "sourceUnit": 2497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3106,
        "nodeType": "ImportDirective",
        "src": "113:38:8",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3293,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3108,
        "nodeType": "ImportDirective",
        "src": "152:73:8",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC20.sol",
        "file": "../extension/SignatureMintERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3293,
        "sourceUnit": 24142,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3107,
              "name": "SignatureMintERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24141,
              "src": "161:18:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3110,
        "nodeType": "ImportDirective",
        "src": "227:69:8",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3293,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3109,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "236:19:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3292,
        "nodeType": "ContractDefinition",
        "src": "875:2925:8",
        "nodes": [
          {
            "id": 3138,
            "nodeType": "FunctionDefinition",
            "src": "1134:255:8",
            "nodes": [],
            "body": {
              "id": 3137,
              "nodeType": "Block",
              "src": "1323:66:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3134,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3125,
                        "src": "1360:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3133,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "1333:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:49:8"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3128,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3119,
                    "src": "1292:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3129,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3121,
                    "src": "1307:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3130,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3123,
                    "src": "1314:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3131,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3127,
                  "name": "ERC20Base",
                  "nameLocations": [
                    "1282:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2496,
                  "src": "1282:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1282:40:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3119,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1163:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3138,
                  "src": "1155:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3121,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1200:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3138,
                  "src": "1186:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3123,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1229:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3138,
                  "src": "1215:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1254:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3138,
                  "src": "1246:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1145:136:8"
            },
            "returnParameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:0:8"
            },
            "scope": 3292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3191,
            "nodeType": "FunctionDefinition",
            "src": "1827:589:8",
            "nodes": [],
            "body": {
              "id": 3190,
              "nodeType": "Block",
              "src": "1980:436:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3150,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3142,
                            "src": "1998:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                              "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                            }
                          },
                          "id": 3151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2003:8:8",
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34451,
                          "src": "1998:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2014:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1998:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 3154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2017:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 3149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1990:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:50:8"
                },
                {
                  "expression": {
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3157,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3147,
                      "src": "2090:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3159,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3142,
                          "src": "2115:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        {
                          "id": 3160,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3144,
                          "src": "2121:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 3158,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24086,
                        "src": "2099:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34462_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC20.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 3161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2099:33:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2090:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:42:8"
                },
                {
                  "assignments": [
                    3165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3165,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2151:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3190,
                      "src": "2143:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3164,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2143:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3168,
                  "initialValue": {
                    "expression": {
                      "id": 3166,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3142,
                      "src": "2162:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                        "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                      }
                    },
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2167:2:8",
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34447,
                    "src": "2162:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2143:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3170,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3142,
                          "src": "2226:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2231:20:8",
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34449,
                        "src": "2226:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3172,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3142,
                          "src": "2253:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2258:8:8",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34455,
                        "src": "2253:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3174,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3142,
                          "src": "2268:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2273:5:8",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34453,
                        "src": "2268:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3169,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3291,
                      "src": "2205:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:74:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3177,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:74:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3179,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3165,
                        "src": "2320:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3180,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3142,
                          "src": "2330:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 3181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2335:8:8",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34451,
                        "src": "2330:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3178,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47868,
                      "src": "2314:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2314:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3183,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:30:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3185,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3147,
                        "src": "2386:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3186,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3165,
                        "src": "2394:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3187,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3142,
                        "src": "2404:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      ],
                      "id": 3184,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34472,
                      "src": "2360:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_MintRequest_$34462_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureMintERC20.MintRequest memory)"
                      }
                    },
                    "id": 3188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3189,
                  "nodeType": "EmitStatement",
                  "src": "2355:54:8"
                }
              ]
            },
            "baseFunctions": [
              34496
            ],
            "documentation": {
              "id": 3139,
              "nodeType": "StructuredDocumentation",
              "src": "1582:240:8",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "8f0fefbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1836:17:8",
            "parameters": {
              "id": 3145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1884:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "1863:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34462_calldata_ptr",
                    "typeString": "struct ISignatureMintERC20.MintRequest"
                  },
                  "typeName": {
                    "id": 3141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3140,
                      "name": "MintRequest",
                      "nameLocations": [
                        "1863:11:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34462,
                      "src": "1863:11:8"
                    },
                    "referencedDeclaration": 34462,
                    "src": "1863:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34462_storage_ptr",
                      "typeString": "struct ISignatureMintERC20.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3144,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1913:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "1898:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3143,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:76:8"
            },
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3147,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1972:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "1964:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:16:8"
            },
            "scope": 3292,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3206,
            "nodeType": "FunctionDefinition",
            "src": "2690:134:8",
            "nodes": [],
            "body": {
              "id": 3205,
              "nodeType": "Block",
              "src": "2782:42:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3200,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3194,
                      "src": "2799:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3201,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "2810:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2810:7:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2799:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3199,
                  "id": 3204,
                  "nodeType": "Return",
                  "src": "2792:25:8"
                }
              ]
            },
            "baseFunctions": [
              24016
            ],
            "documentation": {
              "id": 3192,
              "nodeType": "StructuredDocumentation",
              "src": "2608:77:8",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "2699:19:8",
            "overrides": {
              "id": 3196,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2758:8:8"
            },
            "parameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3194,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "2727:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3206,
                  "src": "2719:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2718:17:8"
            },
            "returnParameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3206,
                  "src": "2776:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2775:6:8"
            },
            "scope": 3292,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3220,
            "nodeType": "FunctionDefinition",
            "src": "2925:130:8",
            "nodes": [],
            "body": {
              "id": 3219,
              "nodeType": "Block",
              "src": "3010:45:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3213,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3027:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3031:6:8",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3027:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3215,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3041:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3041:7:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3027:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3212,
                  "id": 3218,
                  "nodeType": "Return",
                  "src": "3020:28:8"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 3207,
              "nodeType": "StructuredDocumentation",
              "src": "2830:90:8",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "2934:27:8",
            "overrides": {
              "id": 3209,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2986:8:8"
            },
            "parameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2961:2:8"
            },
            "returnParameters": {
              "id": 3212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "3004:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3004:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3003:6:8"
            },
            "scope": 3292,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3291,
            "nodeType": "FunctionDefinition",
            "src": "3147:651:8",
            "nodes": [],
            "body": {
              "id": 3290,
              "nodeType": "Block",
              "src": "3260:538:8",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3230,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3227,
                      "src": "3274:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3284:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3274:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3243,
                  "nodeType": "IfStatement",
                  "src": "3270:95:8",
                  "trueBody": {
                    "id": 3242,
                    "nodeType": "Block",
                    "src": "3287:78:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3234,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3309:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3313:5:8",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3309:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3322:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3309:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 3238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3325:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 3233,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3301:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3301:33:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3240,
                        "nodeType": "ExpressionStatement",
                        "src": "3301:33:8"
                      },
                      {
                        "functionReturnParameters": 3229,
                        "id": 3241,
                        "nodeType": "Return",
                        "src": "3348:7:8"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3244,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3225,
                      "src": "3379:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3245,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "3392:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 3246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3412:12:8",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "3392:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3379:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3265,
                    "nodeType": "Block",
                    "src": "3511:70:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3258,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3533:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3537:5:8",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3533:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3546:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3533:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d73672076616c7565206e6f74207a65726f",
                              "id": 3262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3549:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              },
                              "value": "msg value not zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              }
                            ],
                            "id": 3257,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3525:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3525:45:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3264,
                        "nodeType": "ExpressionStatement",
                        "src": "3525:45:8"
                      }
                    ]
                  },
                  "id": 3266,
                  "nodeType": "IfStatement",
                  "src": "3375:206:8",
                  "trueBody": {
                    "id": 3256,
                    "nodeType": "Block",
                    "src": "3426:79:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3249,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3448:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3452:5:8",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3448:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3251,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3227,
                                "src": "3461:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3448:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742073656e6420746f74616c2070726963652e",
                              "id": 3253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3469:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              },
                              "value": "Must send total price."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              }
                            ],
                            "id": 3248,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3440:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3440:54:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3255,
                        "nodeType": "ExpressionStatement",
                        "src": "3440:54:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3268,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "3599:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3290,
                      "src": "3591:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3267,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3591:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3279,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3269,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3223,
                        "src": "3615:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3648:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3640:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3640:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3640:10:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3615:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 3277,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3223,
                      "src": "3678:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3615:84:8",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3275,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "3653:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3653:22:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3591:108:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3283,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3225,
                        "src": "3746:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3757:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3761:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3757:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3286,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3268,
                        "src": "3769:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3287,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3227,
                        "src": "3784:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3280,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "3709:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 3282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3729:16:8",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "3709:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 3288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3709:82:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3289,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:82:8"
                }
              ]
            },
            "documentation": {
              "id": 3221,
              "nodeType": "StructuredDocumentation",
              "src": "3061:81:8",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3156:20:8",
            "parameters": {
              "id": 3228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3223,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3185:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3291,
                  "src": "3177:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3177:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3225,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3216:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3291,
                  "src": "3208:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3227,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3235:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3291,
                  "src": "3227:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3227:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3176:66:8"
            },
            "returnParameters": {
              "id": 3229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3260:0:8"
            },
            "scope": 3292,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3112,
              "name": "ERC20Base",
              "nameLocations": [
                "906:9:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2496,
              "src": "906:9:8"
            },
            "id": 3113,
            "nodeType": "InheritanceSpecifier",
            "src": "906:9:8"
          },
          {
            "baseName": {
              "id": 3114,
              "name": "PrimarySale",
              "nameLocations": [
                "917:11:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "917:11:8"
            },
            "id": 3115,
            "nodeType": "InheritanceSpecifier",
            "src": "917:11:8"
          },
          {
            "baseName": {
              "id": 3116,
              "name": "SignatureMintERC20",
              "nameLocations": [
                "930:18:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24141,
              "src": "930:18:8"
            },
            "id": 3117,
            "nodeType": "InheritanceSpecifier",
            "src": "930:18:8"
          }
        ],
        "canonicalName": "ERC20SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3111,
          "nodeType": "StructuredDocumentation",
          "src": "298:575:8",
          "text": "      BASE:      ERC20\n      EXTENSION: SignatureMintERC20\n  The `ERC20SignatureMint` contract uses the `ERC20Base` contract, along with the `SignatureMintERC20` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3292,
          24141,
          34497,
          50695,
          22703,
          33997,
          2496,
          32899,
          33540,
          48293,
          14070,
          48051,
          14034,
          14015,
          49279,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084
        ],
        "name": "ERC20SignatureMint",
        "nameLocation": "884:18:8",
        "scope": 3293,
        "usedErrors": [],
        "usedEvents": [
          14006,
          14014,
          33083,
          33531,
          33833,
          33996,
          34472
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 8
}