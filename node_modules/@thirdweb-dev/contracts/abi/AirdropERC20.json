{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAirdropERC20.AirdropContent[]",
          "name": "_contents",
          "type": "tuple[]"
        }
      ],
      "name": "airdropERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611f29806100ec6000396000f3fe6080604052600436106100ce5760003560e01c80630670b2b3146100d3578063248a9ca3146100e85780632f2ff15d1461012857806336568abe146101485780633a105cfb14610168578063572b6c05146101885780639010d07c146101b857806391d14854146101e5578063938e3d7b14610205578063a0a8e46014610225578063a217fddf14610241578063a32fa5b314610256578063ac9650d814610276578063ca15c873146102a3578063cb2ef6f7146102c3578063d547741f146102e5578063e8a3d48514610305575b600080fd5b6100e66100e1366004611744565b610327565b005b3480156100f457600080fd5b506101156101033660046117d4565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561013457600080fd5b506100e66101433660046117ed565b6105c7565b34801561015457600080fd5b506100e66101633660046117ed565b610661565b34801561017457600080fd5b506100e66101833660046118ce565b6106c0565b34801561019457600080fd5b506101a86101a33660046119b1565b6107f7565b604051901515815260200161011f565b3480156101c457600080fd5b506101d86101d33660046119cc565b610815565b60405161011f91906119ee565b3480156101f157600080fd5b506101a86102003660046117ed565b610904565b34801561021157600080fd5b506100e6610220366004611a02565b61092f565b34801561023157600080fd5b506040516002815260200161011f565b34801561024d57600080fd5b50610115600081565b34801561026257600080fd5b506101a86102713660046117ed565b610980565b34801561028257600080fd5b50610296610291366004611a36565b6109d6565b60405161011f9190611afa565b3480156102af57600080fd5b506101156102be3660046117d4565b610b49565b3480156102cf57600080fd5b506b041697264726f7045524332360a41b610115565b3480156102f157600080fd5b506100e66103003660046117ed565b610bd2565b34801561031157600080fd5b5061031a610beb565b60405161011f9190611b5e565b61032f610c79565b61033c6000610200610cd2565b61037f5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b60448201526064015b60405180910390fd5b80600080805b838110156105545760006103dd89898989868181106103a6576103a6611b71565b6103bc92602060409092020190810191506119b1565b8a8a878181106103ce576103ce611b71565b90506040020160200135610ce1565b90508061047e578686838181106103f6576103f6611b71565b61040c92602060409092020190810191506119b1565b6001600160a01b0316886001600160a01b03168a6001600160a01b03167f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff8a8a8781811061045c5761045c611b71565b9050604002016020013560405161047591815260200190565b60405180910390a45b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038a160161054b578686838181106104b5576104b5611b71565b90506040020160200135846104ca9190611b9d565b93503484111561051c5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e617469766520746f6b656e20616d6f756e746044820152606401610376565b8061054b5786868381811061053357610533611b71565b90506040020160200135836105489190611b9d565b92505b50600101610385565b503482146105a45760405162461bcd60e51b815260206004820152601d60248201527f496e636f7272656374206e617469766520746f6b656e20616d6f756e740000006044820152606401610376565b80156105b4576105b43382610f92565b5050506105c16001600555565b50505050565b6000828152600360205260409020546105e09033611040565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16156106535760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610376565b61065d82826110c0565b5050565b336001600160a01b038216146106b65760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610376565b61065d82826110d4565b600054610100900460ff16158080156106e05750600054600160ff909116105b8061070157506106ef3061112b565b158015610701575060005460ff166001145b6107645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610376565b6000805460ff191660011790558015610787576000805461ff0019166101001790555b6107908261113a565b610799836111bf565b6107a46000856110c0565b6107ac61129b565b80156105c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6001600160a01b031660009081526069602052604090205460ff1690565b60008281526004602052604081205481805b828110156108fa5760008681526004602090815260408083208484526001019091529020546001600160a01b0316156108a3578482036108915760008681526004602090815260408083209383526001909301905220546001600160a01b031692506108fe915050565b61089c600183611b9d565b91506108e8565b6108ae866000610904565b80156108d55750600086815260046020908152604080832083805260020190915290205481145b156108e8576108e5600183611b9d565b91505b6108f3600182611b9d565b9050610827565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6109376112cc565b6109745760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610376565b61097d816111bf565b50565b600082815260026020908152604080832083805290915281205460ff166109cd575060008281526002602090815260408083206001600160a01b038516845290915290205460ff166108fe565b50600192915050565b6060816001600160401b038111156109f0576109f0611819565b604051908082528060200260200182016040528015610a2357816020015b6060815260200190600190039081610a0e5790505b5090506000610a30610cd2565b9050336001600160a01b038216141560005b848110156108fa578115610ac157610a9f30878784818110610a6657610a66611b71565b9050602002810190610a789190611bb0565b86604051602001610a8b93929190611bfd565b6040516020818303038152906040526112da565b848281518110610ab157610ab1611b71565b6020026020010181905250610b41565b610b2330878784818110610ad757610ad7611b71565b9050602002810190610ae99190611bb0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112da92505050565b848281518110610b3557610b35611b71565b60200260200101819052505b600101610a42565b600081815260046020526040812054815b81811015610bad5760008481526004602090815260408083208484526001019091529020546001600160a01b031615610b9b57610b98600184611b9d565b92505b610ba6600182611b9d565b9050610b5a565b50610bb9836000610904565b15610bcc57610bc9600183611b9d565b91505b50919050565b6000828152600360205260409020546106b69033611040565b60018054610bf890611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2490611c1e565b8015610c715780601f10610c4657610100808354040283529160200191610c71565b820191906000526020600020905b815481529060010190602001808311610c5457829003601f168201915b505050505081565b600260055403610ccb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610376565b6002600555565b6000610cdc611306565b905090565b600081600003610cf357506001610f8a565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601610d71576040516001600160a01b038416908390600081818185875af1925050503d8060008114610d61576040519150601f19603f3d011682016040523d82523d6000602084013e610d66565b606091505b505080915050610f8a565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610dd59190611c52565b6000604051808303816000865af19150503d8060008114610e12576040519150601f19603f3d011682016040523d82523d6000602084013e610e17565b606091505b5091509150819250821580610e49575060008151118015610e49575080806020019051810190610e479190611c6e565b155b15610f87576040516370a0823160e01b81526000935084906001600160a01b038916906370a0823190610e80908a906004016119ee565b602060405180830381865afa158015610e9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec19190611c90565b10158015610f405750604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285919089169063dd62ed3e90604401602060405180830381865afa158015610f19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3d9190611c90565b10155b610f875760405162461bcd60e51b81526020600482015260186024820152774e6f742062616c616e6365206f7220616c6c6f77616e636560401b6044820152606401610376565b50505b949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610fdf576040519150601f19603f3d011682016040523d82523d6000602084013e610fe4565b606091505b50509050806110345760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610376565b505050565b6001600555565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1661065d5761107e816001600160a01b03166014611328565b611089836020611328565b60405160200161109a929190611ca9565b60408051601f198184030181529082905262461bcd60e51b825261037691600401611b5e565b6110ca82826114c3565b61065d828261151e565b6110de828261158b565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6001600160a01b03163b151590565b600054610100900460ff166111615760405162461bcd60e51b815260040161037690611d16565b60005b815181101561065d5760016069600084848151811061118557611185611b71565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101611164565b6000600180546111ce90611c1e565b80601f01602080910402602001604051908101604052809291908181526020018280546111fa90611c1e565b80156112475780601f1061121c57610100808354040283529160200191611247565b820191906000526020600020905b81548152906001019060200180831161122a57829003601f168201915b50505050509050816001908161125d9190611db1565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161128f929190611e70565b60405180910390a15050565b600054610100900460ff166112c25760405162461bcd60e51b815260040161037690611d16565b6112ca6115ed565b565b6000610cdc81610200610cd2565b60606112ff8383604051806060016040528060278152602001611ecd60279139611614565b9392505050565b6000611311336107f7565b15611323575060131936013560601c90565b503390565b60606000611337836002611e9e565b611342906002611b9d565b6001600160401b0381111561135957611359611819565b6040519080825280601f01601f191660200182016040528015611383576020820181803683370190505b509050600360fc1b8160008151811061139e5761139e611b71565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113cd576113cd611b71565b60200101906001600160f81b031916908160001a90535060006113f1846002611e9e565b6113fc906001611b9d565b90505b6001811115611474576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061143057611430611b71565b1a60f81b82828151811061144657611446611b71565b60200101906001600160f81b031916908160001a90535060049490941c9361146d81611eb5565b90506113ff565b5083156112ff5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610376565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008281526004602052604081208054916001919061153d8385611b9d565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6115958282611040565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff166110395760405162461bcd60e51b815260040161037690611d16565b6060600080856001600160a01b0316856040516116319190611c52565b600060405180830381855af49150503d806000811461166c576040519150601f19603f3d011682016040523d82523d6000602084013e611671565b606091505b50915091506116828683838761168c565b9695505050505050565b606083156116f95782516000036116f2576116a68561112b565b6116f25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610376565b5081610f8a565b610f8a838381511561170e5781518083602001fd5b8060405162461bcd60e51b81526004016103769190611b5e565b80356001600160a01b038116811461173f57600080fd5b919050565b6000806000806060858703121561175a57600080fd5b61176385611728565b935061177160208601611728565b925060408501356001600160401b038082111561178d57600080fd5b818701915087601f8301126117a157600080fd5b8135818111156117b057600080fd5b8860208260061b85010111156117c557600080fd5b95989497505060200194505050565b6000602082840312156117e657600080fd5b5035919050565b6000806040838503121561180057600080fd5b8235915061181060208401611728565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561185757611857611819565b604052919050565b600082601f83011261187057600080fd5b81356001600160401b0381111561188957611889611819565b61189c601f8201601f191660200161182f565b8181528460208386010111156118b157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156118e357600080fd5b6118ec84611728565b92506020808501356001600160401b038082111561190957600080fd5b6119158883890161185f565b9450604087013591508082111561192b57600080fd5b818701915087601f83011261193f57600080fd5b81358181111561195157611951611819565b8060051b915061196284830161182f565b818152918301840191848101908a84111561197c57600080fd5b938501935b838510156119a15761199285611728565b82529385019390850190611981565b8096505050505050509250925092565b6000602082840312156119c357600080fd5b6112ff82611728565b600080604083850312156119df57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b600060208284031215611a1457600080fd5b81356001600160401b03811115611a2a57600080fd5b610f8a8482850161185f565b60008060208385031215611a4957600080fd5b82356001600160401b0380821115611a6057600080fd5b818501915085601f830112611a7457600080fd5b813581811115611a8357600080fd5b8660208260051b8501011115611a9857600080fd5b60209290920196919550909350505050565b60005b83811015611ac5578181015183820152602001611aad565b50506000910152565b60008151808452611ae6816020860160208601611aaa565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015611b5157603f19888603018452611b3f858351611ace565b94509285019290850190600101611b23565b5092979650505050505050565b6020815260006112ff6020830184611ace565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156108fe576108fe611b87565b6000808335601e19843603018112611bc757600080fd5b8301803591506001600160401b03821115611be157600080fd5b602001915036819003821315611bf657600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600181811c90821680611c3257607f821691505b602082108103610bcc57634e487b7160e01b600052602260045260246000fd5b60008251611c64818460208701611aaa565b9190910192915050565b600060208284031215611c8057600080fd5b815180151581146112ff57600080fd5b600060208284031215611ca257600080fd5b5051919050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351611cd9816015850160208801611aaa565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351611d0a816026840160208801611aaa565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611034576000816000526020600020601f850160051c81016020861015611d8a5750805b601f850160051c820191505b81811015611da957828155600101611d96565b505050505050565b81516001600160401b03811115611dca57611dca611819565b611dde81611dd88454611c1e565b84611d61565b602080601f831160018114611e135760008415611dfb5750858301515b600019600386901b1c1916600185901b178555611da9565b600085815260208120601f198616915b82811015611e4257888601518255948401946001909101908401611e23565b5085821015611e605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611e836040830185611ace565b8281036020840152611e958185611ace565b95945050505050565b80820281158282048414176108fe576108fe611b87565b600081611ec457611ec4611b87565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bd65bbe29e78d5428514d8ca650c8f2582e56a7c41c7b48222b77bad0504cde564736f6c63430008170033",
    "sourceMap": "1354:5658:384:-:0;;;2036:53;;;;;;;;;-1:-1:-1;2060:22:384;:20;:22::i;:::-;1354:5658;;5939:280:450;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:450;;216:2:821;5998:66:450;;;198:21:821;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:821;;;338:37;392:19;;5998:66:450;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:450;6140:15;6125:30;;;;;;6174:28;;564:36:821;;;6174:28:450;;552:2:821;537:18;6174:28:450;;;;;;;6074:139;5939:280::o;422:184:821:-;1354:5658:384;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100ce5760003560e01c80630670b2b3146100d3578063248a9ca3146100e85780632f2ff15d1461012857806336568abe146101485780633a105cfb14610168578063572b6c05146101885780639010d07c146101b857806391d14854146101e5578063938e3d7b14610205578063a0a8e46014610225578063a217fddf14610241578063a32fa5b314610256578063ac9650d814610276578063ca15c873146102a3578063cb2ef6f7146102c3578063d547741f146102e5578063e8a3d48514610305575b600080fd5b6100e66100e1366004611744565b610327565b005b3480156100f457600080fd5b506101156101033660046117d4565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561013457600080fd5b506100e66101433660046117ed565b6105c7565b34801561015457600080fd5b506100e66101633660046117ed565b610661565b34801561017457600080fd5b506100e66101833660046118ce565b6106c0565b34801561019457600080fd5b506101a86101a33660046119b1565b6107f7565b604051901515815260200161011f565b3480156101c457600080fd5b506101d86101d33660046119cc565b610815565b60405161011f91906119ee565b3480156101f157600080fd5b506101a86102003660046117ed565b610904565b34801561021157600080fd5b506100e6610220366004611a02565b61092f565b34801561023157600080fd5b506040516002815260200161011f565b34801561024d57600080fd5b50610115600081565b34801561026257600080fd5b506101a86102713660046117ed565b610980565b34801561028257600080fd5b50610296610291366004611a36565b6109d6565b60405161011f9190611afa565b3480156102af57600080fd5b506101156102be3660046117d4565b610b49565b3480156102cf57600080fd5b506b041697264726f7045524332360a41b610115565b3480156102f157600080fd5b506100e66103003660046117ed565b610bd2565b34801561031157600080fd5b5061031a610beb565b60405161011f9190611b5e565b61032f610c79565b61033c6000610200610cd2565b61037f5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b60448201526064015b60405180910390fd5b80600080805b838110156105545760006103dd89898989868181106103a6576103a6611b71565b6103bc92602060409092020190810191506119b1565b8a8a878181106103ce576103ce611b71565b90506040020160200135610ce1565b90508061047e578686838181106103f6576103f6611b71565b61040c92602060409092020190810191506119b1565b6001600160a01b0316886001600160a01b03168a6001600160a01b03167f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff8a8a8781811061045c5761045c611b71565b9050604002016020013560405161047591815260200190565b60405180910390a45b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038a160161054b578686838181106104b5576104b5611b71565b90506040020160200135846104ca9190611b9d565b93503484111561051c5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e617469766520746f6b656e20616d6f756e746044820152606401610376565b8061054b5786868381811061053357610533611b71565b90506040020160200135836105489190611b9d565b92505b50600101610385565b503482146105a45760405162461bcd60e51b815260206004820152601d60248201527f496e636f7272656374206e617469766520746f6b656e20616d6f756e740000006044820152606401610376565b80156105b4576105b43382610f92565b5050506105c16001600555565b50505050565b6000828152600360205260409020546105e09033611040565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16156106535760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610376565b61065d82826110c0565b5050565b336001600160a01b038216146106b65760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610376565b61065d82826110d4565b600054610100900460ff16158080156106e05750600054600160ff909116105b8061070157506106ef3061112b565b158015610701575060005460ff166001145b6107645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610376565b6000805460ff191660011790558015610787576000805461ff0019166101001790555b6107908261113a565b610799836111bf565b6107a46000856110c0565b6107ac61129b565b80156105c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6001600160a01b031660009081526069602052604090205460ff1690565b60008281526004602052604081205481805b828110156108fa5760008681526004602090815260408083208484526001019091529020546001600160a01b0316156108a3578482036108915760008681526004602090815260408083209383526001909301905220546001600160a01b031692506108fe915050565b61089c600183611b9d565b91506108e8565b6108ae866000610904565b80156108d55750600086815260046020908152604080832083805260020190915290205481145b156108e8576108e5600183611b9d565b91505b6108f3600182611b9d565b9050610827565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6109376112cc565b6109745760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610376565b61097d816111bf565b50565b600082815260026020908152604080832083805290915281205460ff166109cd575060008281526002602090815260408083206001600160a01b038516845290915290205460ff166108fe565b50600192915050565b6060816001600160401b038111156109f0576109f0611819565b604051908082528060200260200182016040528015610a2357816020015b6060815260200190600190039081610a0e5790505b5090506000610a30610cd2565b9050336001600160a01b038216141560005b848110156108fa578115610ac157610a9f30878784818110610a6657610a66611b71565b9050602002810190610a789190611bb0565b86604051602001610a8b93929190611bfd565b6040516020818303038152906040526112da565b848281518110610ab157610ab1611b71565b6020026020010181905250610b41565b610b2330878784818110610ad757610ad7611b71565b9050602002810190610ae99190611bb0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112da92505050565b848281518110610b3557610b35611b71565b60200260200101819052505b600101610a42565b600081815260046020526040812054815b81811015610bad5760008481526004602090815260408083208484526001019091529020546001600160a01b031615610b9b57610b98600184611b9d565b92505b610ba6600182611b9d565b9050610b5a565b50610bb9836000610904565b15610bcc57610bc9600183611b9d565b91505b50919050565b6000828152600360205260409020546106b69033611040565b60018054610bf890611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2490611c1e565b8015610c715780601f10610c4657610100808354040283529160200191610c71565b820191906000526020600020905b815481529060010190602001808311610c5457829003601f168201915b505050505081565b600260055403610ccb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610376565b6002600555565b6000610cdc611306565b905090565b600081600003610cf357506001610f8a565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601610d71576040516001600160a01b038416908390600081818185875af1925050503d8060008114610d61576040519150601f19603f3d011682016040523d82523d6000602084013e610d66565b606091505b505080915050610f8a565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610dd59190611c52565b6000604051808303816000865af19150503d8060008114610e12576040519150601f19603f3d011682016040523d82523d6000602084013e610e17565b606091505b5091509150819250821580610e49575060008151118015610e49575080806020019051810190610e479190611c6e565b155b15610f87576040516370a0823160e01b81526000935084906001600160a01b038916906370a0823190610e80908a906004016119ee565b602060405180830381865afa158015610e9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec19190611c90565b10158015610f405750604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285919089169063dd62ed3e90604401602060405180830381865afa158015610f19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3d9190611c90565b10155b610f875760405162461bcd60e51b81526020600482015260186024820152774e6f742062616c616e6365206f7220616c6c6f77616e636560401b6044820152606401610376565b50505b949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610fdf576040519150601f19603f3d011682016040523d82523d6000602084013e610fe4565b606091505b50509050806110345760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610376565b505050565b6001600555565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1661065d5761107e816001600160a01b03166014611328565b611089836020611328565b60405160200161109a929190611ca9565b60408051601f198184030181529082905262461bcd60e51b825261037691600401611b5e565b6110ca82826114c3565b61065d828261151e565b6110de828261158b565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6001600160a01b03163b151590565b600054610100900460ff166111615760405162461bcd60e51b815260040161037690611d16565b60005b815181101561065d5760016069600084848151811061118557611185611b71565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101611164565b6000600180546111ce90611c1e565b80601f01602080910402602001604051908101604052809291908181526020018280546111fa90611c1e565b80156112475780601f1061121c57610100808354040283529160200191611247565b820191906000526020600020905b81548152906001019060200180831161122a57829003601f168201915b50505050509050816001908161125d9190611db1565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161128f929190611e70565b60405180910390a15050565b600054610100900460ff166112c25760405162461bcd60e51b815260040161037690611d16565b6112ca6115ed565b565b6000610cdc81610200610cd2565b60606112ff8383604051806060016040528060278152602001611ecd60279139611614565b9392505050565b6000611311336107f7565b15611323575060131936013560601c90565b503390565b60606000611337836002611e9e565b611342906002611b9d565b6001600160401b0381111561135957611359611819565b6040519080825280601f01601f191660200182016040528015611383576020820181803683370190505b509050600360fc1b8160008151811061139e5761139e611b71565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113cd576113cd611b71565b60200101906001600160f81b031916908160001a90535060006113f1846002611e9e565b6113fc906001611b9d565b90505b6001811115611474576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061143057611430611b71565b1a60f81b82828151811061144657611446611b71565b60200101906001600160f81b031916908160001a90535060049490941c9361146d81611eb5565b90506113ff565b5083156112ff5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610376565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008281526004602052604081208054916001919061153d8385611b9d565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6115958282611040565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff166110395760405162461bcd60e51b815260040161037690611d16565b6060600080856001600160a01b0316856040516116319190611c52565b600060405180830381855af49150503d806000811461166c576040519150601f19603f3d011682016040523d82523d6000602084013e611671565b606091505b50915091506116828683838761168c565b9695505050505050565b606083156116f95782516000036116f2576116a68561112b565b6116f25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610376565b5081610f8a565b610f8a838381511561170e5781518083602001fd5b8060405162461bcd60e51b81526004016103769190611b5e565b80356001600160a01b038116811461173f57600080fd5b919050565b6000806000806060858703121561175a57600080fd5b61176385611728565b935061177160208601611728565b925060408501356001600160401b038082111561178d57600080fd5b818701915087601f8301126117a157600080fd5b8135818111156117b057600080fd5b8860208260061b85010111156117c557600080fd5b95989497505060200194505050565b6000602082840312156117e657600080fd5b5035919050565b6000806040838503121561180057600080fd5b8235915061181060208401611728565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561185757611857611819565b604052919050565b600082601f83011261187057600080fd5b81356001600160401b0381111561188957611889611819565b61189c601f8201601f191660200161182f565b8181528460208386010111156118b157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156118e357600080fd5b6118ec84611728565b92506020808501356001600160401b038082111561190957600080fd5b6119158883890161185f565b9450604087013591508082111561192b57600080fd5b818701915087601f83011261193f57600080fd5b81358181111561195157611951611819565b8060051b915061196284830161182f565b818152918301840191848101908a84111561197c57600080fd5b938501935b838510156119a15761199285611728565b82529385019390850190611981565b8096505050505050509250925092565b6000602082840312156119c357600080fd5b6112ff82611728565b600080604083850312156119df57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b600060208284031215611a1457600080fd5b81356001600160401b03811115611a2a57600080fd5b610f8a8482850161185f565b60008060208385031215611a4957600080fd5b82356001600160401b0380821115611a6057600080fd5b818501915085601f830112611a7457600080fd5b813581811115611a8357600080fd5b8660208260051b8501011115611a9857600080fd5b60209290920196919550909350505050565b60005b83811015611ac5578181015183820152602001611aad565b50506000910152565b60008151808452611ae6816020860160208601611aaa565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015611b5157603f19888603018452611b3f858351611ace565b94509285019290850190600101611b23565b5092979650505050505050565b6020815260006112ff6020830184611ace565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156108fe576108fe611b87565b6000808335601e19843603018112611bc757600080fd5b8301803591506001600160401b03821115611be157600080fd5b602001915036819003821315611bf657600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600181811c90821680611c3257607f821691505b602082108103610bcc57634e487b7160e01b600052602260045260246000fd5b60008251611c64818460208701611aaa565b9190910192915050565b600060208284031215611c8057600080fd5b815180151581146112ff57600080fd5b600060208284031215611ca257600080fd5b5051919050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351611cd9816015850160208801611aaa565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351611d0a816026840160208801611aaa565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611034576000816000526020600020601f850160051c81016020861015611d8a5750805b601f850160051c820191505b81811015611da957828155600101611d96565b505050505050565b81516001600160401b03811115611dca57611dca611819565b611dde81611dd88454611c1e565b84611d61565b602080601f831160018114611e135760008415611dfb5750858301515b600019600386901b1c1916600185901b178555611da9565b600085815260208120601f198616915b82811015611e4257888601518255948401946001909101908401611e23565b5085821015611e605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611e836040830185611ace565b8281036020840152611e958185611ace565b95945050505050565b80820281158282048414176108fe576108fe611b87565b600081611ec457611ec4611b87565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bd65bbe29e78d5428514d8ca650c8f2582e56a7c41c7b48222b77bad0504cde564736f6c63430008170033",
    "sourceMap": "1354:5658:384:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3687:1457;;;;;;:::i;:::-;;:::i;:::-;;2738:120:71;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;;;;1326:25:821;;;1314:2;1299:18;2738:120:71;;;;;;;;3253:271;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;2154:358:384:-;;;;;;;;;;-1:-1:-1;2154:358:384;;;;;:::i;:::-;;:::i;918:134:211:-;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;:::-;;;4156:14:821;;4149:22;4131:41;;4119:2;4104:18;918:134:211;3991:187:821;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;2899:95:384:-;;;;;;;;;;-1:-1:-1;2899:95:384;;1836:1;5113:36:821;;5101:2;5086:18;2899:95:384;4971:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;2204:211;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;2752:91:384:-;;;;;;;;;;-1:-1:-1;;;;2752:91:384;;3895:171:71;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3687:1457:384:-;2505:21:452;:19;:21::i;:::-;3868:41:384::1;785:4:71;3896:12:384;:10;:12::i;3868:41::-;3860:69;;;::::0;-1:-1:-1;;;3860:69:384;;7734:2:821;3860:69:384::1;::::0;::::1;7716:21:821::0;7773:2;7753:18;;;7746:30;-1:-1:-1;;;7792:18:821;;;7785:45;7847:18;;3860:69:384::1;;;;;;;;;3954:9:::0;3940:11:::1;::::0;;4046:811:::1;4070:3;4066:1;:7;4046:811;;;4091:12;4106:181;4154:13;4185:11;4214:9;;4224:1;4214:12;;;;;;;:::i;:::-;:22;::::0;::::1;:12;::::0;;::::1;;:22:::0;;::::1;::::0;-1:-1:-1;4214:22:384::1;:::i;:::-;4254:9;;4264:1;4254:12;;;;;;;:::i;:::-;;;;;;:19;;;4106:30;:181::i;:::-;4091:196;;4307:7;4302:138;;4381:9;;4391:1;4381:12;;;;;;;:::i;:::-;:22;::::0;::::1;:12;::::0;;::::1;;:22:::0;;::::1;::::0;-1:-1:-1;4381:22:384::1;:::i;:::-;-1:-1:-1::0;;;;;4339:86:384::1;4368:11;-1:-1:-1::0;;;;;4339:86:384::1;4353:13;-1:-1:-1::0;;;;;4339:86:384::1;;4405:9;;4415:1;4405:12;;;;;;;:::i;:::-;;;;;;:19;;;4339:86;;;;1326:25:821::0;;1314:2;1299:18;;1180:177;4339:86:384::1;;;;;;;;4302:138;-1:-1:-1::0;;;;;;;4458:49:384;::::1;::::0;4454:330:::1;;4548:9;;4558:1;4548:12;;;;;;;:::i;:::-;;;;;;:19;;;4527:40;;;;;:::i;:::-;;;4615:9;4594:17;:30;;4586:75;;;::::0;-1:-1:-1;;;4586:75:384;;8472:2:821;4586:75:384::1;::::0;::::1;8454:21:821::0;;;8491:18;;;8484:30;8550:34;8530:18;;;8523:62;8602:18;;4586:75:384::1;8270:356:821::0;4586:75:384::1;4685:7;4680:90;;4732:9;;4742:1;4732:12;;;;;;;:::i;:::-;;;;;;:19;;;4716:35;;;;;:::i;:::-;;;4680:90;-1:-1:-1::0;4831:1:384::1;4826:6;4046:811;;;;4896:9;4875:17;:30;4867:72;;;::::0;-1:-1:-1;;;4867:72:384;;8833:2:821;4867:72:384::1;::::0;::::1;8815:21:821::0;8872:2;8852:18;;;8845:30;8911:31;8891:18;;;8884:59;8960:18;;4867:72:384::1;8631:353:821::0;4867:72:384::1;4954:16:::0;;4950:188:::1;;5058:69;5102:10;5114:12;5058:43;:69::i;:::-;3850:1294;;;2547:20:452::0;1787:1;3053:7;:22;2873:209;2547:20;3687:1457:384;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;9191:2:821;3433:39:71;;;9173:21:821;9230:2;9210:18;;;9203:30;9269:31;9249:18;;;9242:59;9318:18;;3433:39:71;8989:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;:::-;3253:271;;:::o;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;9549:2:821;4592:36:71;;;9531:21:821;9588:2;9568:18;;;9561:30;-1:-1:-1;;;9607:18:821;;;9600:56;9673:18;;4592:36:71;9347:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;2154:358:384:-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;9904:2:821;3325:201:450;;;9886:21:821;9943:2;9923:18;;;9916:30;9982:34;9962:18;;;9955:62;-1:-1:-1;;;10033:18:821;;;10026:44;10087:19;;3325:201:450;9702:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;2323:51:384::1;2355:18;2323:31;:51::i;:::-;2385:31;2403:12;2385:17;:31::i;:::-;2426:45;785:4:71;2457:13:384::0;2426:10:::1;:45::i;:::-;2481:24;:22;:24::i;:::-;3651:14:450::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;5113:36:821;;3721:14:450;;5101:2:821;5086:18;3721:14:450;;;;;;;3269:483;2154:358:384;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;10518:2:821;1116:24:56;;;10500:21:821;10557:2;10537:18;;;10530:30;-1:-1:-1;;;10576:18:821;;;10569:44;10630:18;;1116:24:56;10316:338:821;1075:76:56;1161:23;1179:4;1161:17;:23::i;:::-;1003:188;:::o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;2683:398:72;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2580:287:452:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:452;;12129:2:821;2704:63:452;;;12111:21:821;12168:2;12148:18;;;12141:30;12207:33;12187:18;;;12180:61;12258:18;;2704:63:452;11927:355:821;2704:63:452;1830:1;2842:7;:18;2580:287::o;6788:222:384:-;6928:14;6965:38;:36;:38::i;:::-;6958:45;;6788:222;:::o;5419:1110::-;5579:12;5607:7;5618:1;5607:12;5603:85;;-1:-1:-1;5645:4:384;5663:14;;5603:85;-1:-1:-1;;;;;;;5702:45:384;;;5698:825;;5887:30;;-1:-1:-1;;;;;5887:8:384;;;5904:7;;5887:30;;;;5904:7;5887:8;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5873:44;;;;;5698:825;;;6018:73;;;-1:-1:-1;;;;;12755:15:821;;;6018:73:384;;;12737:34:821;12807:15;;;12787:18;;;12780:43;12839:18;;;;12832:34;;;6018:73:384;;;;;;;;;;12672:18:821;;;;6018:73:384;;;;;;;-1:-1:-1;;;;;6018:73:384;-1:-1:-1;;;6018:73:384;;;5986:119;;-1:-1:-1;;;;5986:14:384;;;;:119;;6018:73;5986:119;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5948:157;;;;6130:8;6120:18;;6157:7;6156:8;:60;;;;6184:1;6169:5;:12;:16;:46;;;;;6201:5;6190:25;;;;;;;;;;;;:::i;:::-;6189:26;6169:46;6152:361;;;6299:34;;-1:-1:-1;;;6299:34:384;;6246:5;;-1:-1:-1;6337:7:384;;-1:-1:-1;;;;;6299:27:384;;;;;:34;;6327:5;;6299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;:133;;;;-1:-1:-1;6372:49:384;;-1:-1:-1;;;6372:49:384;;-1:-1:-1;;;;;13870:15:821;;;6372:49:384;;;13852:34:821;6415:4:384;13902:18:821;;;13895:43;6425:7:384;;6372:27;;;;;;13787:18:821;;6372:49:384;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6299:133;6270:228;;;;-1:-1:-1;;;6270:228:384;;14151:2:821;6270:228:384;;;14133:21:821;14190:2;14170:18;;;14163:30;-1:-1:-1;;;14209:18:821;;;14202:54;14273:18;;6270:228:384;13949:348:821;6270:228:384;5934:589;;5698:825;5419:1110;;;;;;:::o;2482:292:292:-;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;14504:2:821;2719:48:292;;;14486:21:821;14543:2;14523:18;;;14516:30;-1:-1:-1;;;14562:18:821;;;14555:58;14630:18;;2719:48:292;14302:352:821;2719:48:292;2551:223;2482:292;;:::o;2873:209:452:-;1787:1;3053:7;:22;2873:209::o;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;3253:271:71;;:::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;1273:185:56::0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;1868:111:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1938:34:452::1;:32;:34::i;:::-;1868:111::o:0;6624:133:384:-;6686:4;6709:41;6686:4;6737:12;:10;:12::i;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;6788:222:384:o;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;18983:2:821;1911:55:298;;;18965:21:821;;;19002:18;;;18995:30;19061:34;19041:18;;;19034:62;19113:18;;1911:55:298;18781:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;1985:109:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;7668:628::-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;19344:2:821;8110:60:289;;;19326:21:821;19383:2;19363:18;;;19356:30;19422:31;19402:18;;;19395:59;19471:18;;8110:60:289;19142:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;14:173:821:-;82:20;;-1:-1:-1;;;;;131:31:821;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:798::-;331:6;339;347;355;408:2;396:9;387:7;383:23;379:32;376:52;;;424:1;421;414:12;376:52;447:29;466:9;447:29;:::i;:::-;437:39;;495:38;529:2;518:9;514:18;495:38;:::i;:::-;485:48;;584:2;573:9;569:18;556:32;-1:-1:-1;;;;;648:2:821;640:6;637:14;634:34;;;664:1;661;654:12;634:34;702:6;691:9;687:22;677:32;;747:7;740:4;736:2;732:13;728:27;718:55;;769:1;766;759:12;718:55;809:2;796:16;835:2;827:6;824:14;821:34;;;851:1;848;841:12;821:34;904:7;899:2;889:6;886:1;882:14;878:2;874:23;870:32;867:45;864:65;;;925:1;922;915:12;864:65;192:798;;;;-1:-1:-1;;956:2:821;948:11;;-1:-1:-1;;;192:798:821:o;995:180::-;1054:6;1107:2;1095:9;1086:7;1082:23;1078:32;1075:52;;;1123:1;1120;1113:12;1075:52;-1:-1:-1;1146:23:821;;995:180;-1:-1:-1;995:180:821:o;1362:254::-;1430:6;1438;1491:2;1479:9;1470:7;1466:23;1462:32;1459:52;;;1507:1;1504;1497:12;1459:52;1543:9;1530:23;1520:33;;1572:38;1606:2;1595:9;1591:18;1572:38;:::i;:::-;1562:48;;1362:254;;;;;:::o;1621:127::-;1682:10;1677:3;1673:20;1670:1;1663:31;1713:4;1710:1;1703:15;1737:4;1734:1;1727:15;1753:275;1824:2;1818:9;1889:2;1870:13;;-1:-1:-1;;1866:27:821;1854:40;;-1:-1:-1;;;;;1909:34:821;;1945:22;;;1906:62;1903:88;;;1971:18;;:::i;:::-;2007:2;2000:22;1753:275;;-1:-1:-1;1753:275:821:o;2033:531::-;2076:5;2129:3;2122:4;2114:6;2110:17;2106:27;2096:55;;2147:1;2144;2137:12;2096:55;2183:6;2170:20;-1:-1:-1;;;;;2205:2:821;2202:26;2199:52;;;2231:18;;:::i;:::-;2275:55;2318:2;2299:13;;-1:-1:-1;;2295:27:821;2324:4;2291:38;2275:55;:::i;:::-;2355:2;2346:7;2339:19;2401:3;2394:4;2389:2;2381:6;2377:15;2373:26;2370:35;2367:55;;;2418:1;2415;2408:12;2367:55;2483:2;2476:4;2468:6;2464:17;2457:4;2448:7;2444:18;2431:55;2531:1;2506:16;;;2524:4;2502:27;2495:38;;;;2510:7;2033:531;-1:-1:-1;;;2033:531:821:o;2569:1226::-;2681:6;2689;2697;2750:2;2738:9;2729:7;2725:23;2721:32;2718:52;;;2766:1;2763;2756:12;2718:52;2789:29;2808:9;2789:29;:::i;:::-;2779:39;;2837:2;2890;2879:9;2875:18;2862:32;-1:-1:-1;;;;;2954:2:821;2946:6;2943:14;2940:34;;;2970:1;2967;2960:12;2940:34;2993:50;3035:7;3026:6;3015:9;3011:22;2993:50;:::i;:::-;2983:60;;3096:2;3085:9;3081:18;3068:32;3052:48;;3125:2;3115:8;3112:16;3109:36;;;3141:1;3138;3131:12;3109:36;3179:8;3168:9;3164:24;3154:34;;3226:7;3219:4;3215:2;3211:13;3207:27;3197:55;;3248:1;3245;3238:12;3197:55;3284:2;3271:16;3306:2;3302;3299:10;3296:36;;;3312:18;;:::i;:::-;3358:2;3355:1;3351:10;3341:20;;3381:28;3405:2;3401;3397:11;3381:28;:::i;:::-;3443:15;;;3513:11;;;3509:20;;;3474:12;;;;3541:19;;;3538:39;;;3573:1;3570;3563:12;3538:39;3597:11;;;;3617:148;3633:6;3628:3;3625:15;3617:148;;;3699:23;3718:3;3699:23;:::i;:::-;3687:36;;3650:12;;;;3743;;;;3617:148;;;3784:5;3774:15;;;;;;;;2569:1226;;;;;:::o;3800:186::-;3859:6;3912:2;3900:9;3891:7;3887:23;3883:32;3880:52;;;3928:1;3925;3918:12;3880:52;3951:29;3970:9;3951:29;:::i;4183:248::-;4251:6;4259;4312:2;4300:9;4291:7;4287:23;4283:32;4280:52;;;4328:1;4325;4318:12;4280:52;-1:-1:-1;;4351:23:821;;;4421:2;4406:18;;;4393:32;;-1:-1:-1;4183:248:821:o;4436:203::-;-1:-1:-1;;;;;4600:32:821;;;;4582:51;;4570:2;4555:18;;4436:203::o;4644:322::-;4713:6;4766:2;4754:9;4745:7;4741:23;4737:32;4734:52;;;4782:1;4779;4772:12;4734:52;4822:9;4809:23;-1:-1:-1;;;;;4847:6:821;4844:30;4841:50;;;4887:1;4884;4877:12;4841:50;4910;4952:7;4943:6;4932:9;4928:22;4910:50;:::i;5160:626::-;5257:6;5265;5318:2;5306:9;5297:7;5293:23;5289:32;5286:52;;;5334:1;5331;5324:12;5286:52;5374:9;5361:23;-1:-1:-1;;;;;5444:2:821;5436:6;5433:14;5430:34;;;5460:1;5457;5450:12;5430:34;5498:6;5487:9;5483:22;5473:32;;5543:7;5536:4;5532:2;5528:13;5524:27;5514:55;;5565:1;5562;5555:12;5514:55;5605:2;5592:16;5631:2;5623:6;5620:14;5617:34;;;5647:1;5644;5637:12;5617:34;5700:7;5695:2;5685:6;5682:1;5678:14;5674:2;5670:23;5666:32;5663:45;5660:65;;;5721:1;5718;5711:12;5660:65;5752:2;5744:11;;;;;5774:6;;-1:-1:-1;5160:626:821;;-1:-1:-1;;;;5160:626:821:o;5791:250::-;5876:1;5886:113;5900:6;5897:1;5894:13;5886:113;;;5976:11;;;5970:18;5957:11;;;5950:39;5922:2;5915:10;5886:113;;;-1:-1:-1;;6033:1:821;6015:16;;6008:27;5791:250::o;6046:270::-;6087:3;6125:5;6119:12;6152:6;6147:3;6140:19;6168:76;6237:6;6230:4;6225:3;6221:14;6214:4;6207:5;6203:16;6168:76;:::i;:::-;6298:2;6277:15;-1:-1:-1;;6273:29:821;6264:39;;;;6305:4;6260:50;;6046:270;-1:-1:-1;;6046:270:821:o;6321:800::-;6481:4;6510:2;6550;6539:9;6535:18;6580:2;6569:9;6562:21;6603:6;6638;6632:13;6669:6;6661;6654:22;6707:2;6696:9;6692:18;6685:25;;6769:2;6759:6;6756:1;6752:14;6741:9;6737:30;6733:39;6719:53;;6807:2;6799:6;6795:15;6828:1;6838:254;6852:6;6849:1;6846:13;6838:254;;;6945:2;6941:7;6929:9;6921:6;6917:22;6913:36;6908:3;6901:49;6973:39;7005:6;6996;6990:13;6973:39;:::i;:::-;6963:49;-1:-1:-1;7070:12:821;;;;7035:15;;;;6874:1;6867:9;6838:254;;;-1:-1:-1;7109:6:821;;6321:800;-1:-1:-1;;;;;;;6321:800:821:o;7308:219::-;7457:2;7446:9;7439:21;7420:4;7477:44;7517:2;7506:9;7502:18;7494:6;7477:44;:::i;7876:127::-;7937:10;7932:3;7928:20;7925:1;7918:31;7968:4;7965:1;7958:15;7992:4;7989:1;7982:15;8008:127;8069:10;8064:3;8060:20;8057:1;8050:31;8100:4;8097:1;8090:15;8124:4;8121:1;8114:15;8140:125;8205:9;;;8226:10;;;8223:36;;;8239:18;;:::i;10659:521::-;10736:4;10742:6;10802:11;10789:25;10896:2;10892:7;10881:8;10865:14;10861:29;10857:43;10837:18;10833:68;10823:96;;10915:1;10912;10905:12;10823:96;10942:33;;10994:20;;;-1:-1:-1;;;;;;11026:30:821;;11023:50;;;11069:1;11066;11059:12;11023:50;11102:4;11090:17;;-1:-1:-1;11133:14:821;11129:27;;;11119:38;;11116:58;;;11170:1;11167;11160:12;11116:58;10659:521;;;;;:::o;11185:352::-;11396:6;11388;11383:3;11370:33;11491:2;11462:15;;;;-1:-1:-1;;;;;;11458:45:821;11422:16;;11447:57;;;11528:2;11520:11;;11185:352;-1:-1:-1;11185:352:821:o;11542:380::-;11621:1;11617:12;;;;11664;;;11685:61;;11739:4;11731:6;11727:17;11717:27;;11685:61;11792:2;11784:6;11781:14;11761:18;11758:38;11755:161;;11838:10;11833:3;11829:20;11826:1;11819:31;11873:4;11870:1;11863:15;11901:4;11898:1;11891:15;12877:287;13006:3;13044:6;13038:13;13060:66;13119:6;13114:3;13107:4;13099:6;13095:17;13060:66;:::i;:::-;13142:16;;;;;12877:287;-1:-1:-1;;12877:287:821:o;13169:277::-;13236:6;13289:2;13277:9;13268:7;13264:23;13260:32;13257:52;;;13305:1;13302;13295:12;13257:52;13337:9;13331:16;13390:5;13383:13;13376:21;13369:5;13366:32;13356:60;;13412:1;13409;13402:12;13451:184;13521:6;13574:2;13562:9;13553:7;13549:23;13545:32;13542:52;;;13590:1;13587;13580:12;13542:52;-1:-1:-1;13613:16:821;;13451:184;-1:-1:-1;13451:184:821:o;14659:810::-;-1:-1:-1;;;15065:3:821;15058:36;15040:3;15123:6;15117:13;15139:75;15207:6;15202:2;15197:3;15193:12;15186:4;15178:6;15174:17;15139:75;:::i;:::-;-1:-1:-1;;;15273:2:821;15233:16;;;15265:11;;;15258:40;15323:13;;15345:76;15323:13;15407:2;15399:11;;15392:4;15380:17;;15345:76;:::i;:::-;15441:17;15460:2;15437:26;;14659:810;-1:-1:-1;;;;14659:810:821:o;15474:407::-;15676:2;15658:21;;;15715:2;15695:18;;;15688:30;15754:34;15749:2;15734:18;;15727:62;-1:-1:-1;;;15820:2:821;15805:18;;15798:41;15871:3;15856:19;;15474:407::o;16012:543::-;16114:2;16109:3;16106:11;16103:446;;;16150:1;16174:5;16171:1;16164:16;16218:4;16215:1;16205:18;16288:2;16276:10;16272:19;16269:1;16265:27;16259:4;16255:38;16324:4;16312:10;16309:20;16306:47;;;-1:-1:-1;16347:4:821;16306:47;16402:2;16397:3;16393:12;16390:1;16386:20;16380:4;16376:31;16366:41;;16457:82;16475:2;16468:5;16465:13;16457:82;;;16520:17;;;16501:1;16490:13;16457:82;;;16461:3;;;16012:543;;;:::o;16731:1345::-;16857:3;16851:10;-1:-1:-1;;;;;16876:6:821;16873:30;16870:56;;;16906:18;;:::i;:::-;16935:97;17025:6;16985:38;17017:4;17011:11;16985:38;:::i;:::-;16979:4;16935:97;:::i;:::-;17087:4;;17144:2;17133:14;;17161:1;17156:663;;;;17863:1;17880:6;17877:89;;;-1:-1:-1;17932:19:821;;;17926:26;17877:89;-1:-1:-1;;16688:1:821;16684:11;;;16680:24;16676:29;16666:40;16712:1;16708:11;;;16663:57;17979:81;;17126:944;;17156:663;15959:1;15952:14;;;15996:4;15983:18;;-1:-1:-1;;17192:20:821;;;17310:236;17324:7;17321:1;17318:14;17310:236;;;17413:19;;;17407:26;17392:42;;17505:27;;;;17473:1;17461:14;;;;17340:19;;17310:236;;;17314:3;17574:6;17565:7;17562:19;17559:201;;;17635:19;;;17629:26;-1:-1:-1;;17718:1:821;17714:14;;;17730:3;17710:24;17706:37;17702:42;17687:58;17672:74;;17559:201;-1:-1:-1;;;;;17806:1:821;17790:14;;;17786:22;17773:36;;-1:-1:-1;16731:1345:821:o;18081:381::-;18278:2;18267:9;18260:21;18241:4;18304:44;18344:2;18333:9;18329:18;18321:6;18304:44;:::i;:::-;18396:9;18388:6;18384:22;18379:2;18368:9;18364:18;18357:50;18424:32;18449:6;18441;18424:32;:::i;:::-;18416:40;18081:381;-1:-1:-1;;;;;18081:381:821:o;18467:168::-;18540:9;;;18571;;18588:15;;;18582:22;;18568:37;18558:71;;18609:18;;:::i;18640:136::-;18679:3;18707:5;18697:39;;18716:18;;:::i;:::-;-1:-1:-1;;;18752:18:821;;18640:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "airdropERC20(address,address,(address,uint256)[])": "0670b2b3",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,address[])": "3a105cfb",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAirdropERC20.AirdropContent[]\",\"name\":\"_contents\",\"type\":\"tuple[]\"}],\"name\":\"airdropERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"airdropERC20(address,address,(address,uint256)[])\":{\"details\":\"The token-owner should approve target tokens to Airdrop contract,                   which acts as operator for the tokens.\",\"params\":{\"_contents\":\"List containing recipient, tokenId and amounts to airdrop.\",\"_tokenAddress\":\"The contract address of the tokens to transfer.\",\"_tokenOwner\":\"The owner of the tokens to transfer.\"}},\"contractType()\":{\"details\":\"Returns the type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[])\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AirdropFailed(address,address,address,uint256)\":{\"notice\":\"Emitted when an airdrop fails for a recipient address.\"}},\"kind\":\"user\",\"methods\":{\"airdropERC20(address,address,(address,uint256)[])\":{\"notice\":\"Lets contract-owner send ERC20 tokens to a list of addresses.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol\":\"AirdropERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/interface/airdrop/IAirdropERC20.sol\":{\"keccak256\":\"0xb8e73c69d917237dd2a138466f3d9c929ffed8ade89c1090ac1ef753f7b051c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d2ca5aff42c03644094c7f54935b8c885fff32196c846d5097395e9e768f96d9\",\"dweb:/ipfs/QmUoYJ6stVFFjkwRHCwwbD4i7nauSSp1GsdTNBQQXuSjAh\"]},\"contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol\":{\"keccak256\":\"0xcfd371cfa9b31326df4e0382121cdbf61d2d9026b3d81877eb86afdaa9908985\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da07b8a6d83ef221135d413c5cc228cbe1f672ae873ea12cc38aff88ce569525\",\"dweb:/ipfs/QmS37WL6wcHR9yvYuRwKqA3nAC5HBzDFu7f4F1k7qRGJYn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AirdropFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "struct IAirdropERC20.AirdropContent[]",
              "name": "_contents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "airdropERC20"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "airdropERC20(address,address,(address,uint256)[])": {
            "details": "The token-owner should approve target tokens to Airdrop contract,                   which acts as operator for the tokens.",
            "params": {
              "_contents": "List containing recipient, tokenId and amounts to airdrop.",
              "_tokenAddress": "The contract address of the tokens to transfer.",
              "_tokenOwner": "The owner of the tokens to transfer."
            }
          },
          "contractType()": {
            "details": "Returns the type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[])": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "airdropERC20(address,address,(address,uint256)[])": {
            "notice": "Lets contract-owner send ERC20 tokens to a list of addresses."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol": "AirdropERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/interface/airdrop/IAirdropERC20.sol": {
        "keccak256": "0xb8e73c69d917237dd2a138466f3d9c929ffed8ade89c1090ac1ef753f7b051c7",
        "urls": [
          "bzz-raw://d2ca5aff42c03644094c7f54935b8c885fff32196c846d5097395e9e768f96d9",
          "dweb:/ipfs/QmUoYJ6stVFFjkwRHCwwbD4i7nauSSp1GsdTNBQQXuSjAh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol": {
        "keccak256": "0xcfd371cfa9b31326df4e0382121cdbf61d2d9026b3d81877eb86afdaa9908985",
        "urls": [
          "bzz-raw://da07b8a6d83ef221135d413c5cc228cbe1f672ae873ea12cc38aff88ce569525",
          "dweb:/ipfs/QmS37WL6wcHR9yvYuRwKqA3nAC5HBzDFu7f4F1k7qRGJYn"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol",
    "id": 98947,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "AirdropERC20": [
        98946
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "IAirdropERC20": [
        77105
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC20": [
        14015
      ],
      "IMulticall": [
        33577
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "Initializable": [
        154159
      ],
      "Multicall": [
        21206
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "ReentrancyGuardUpgradeable": [
        154370
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6974:384",
    "nodes": [
      {
        "id": 98581,
        "nodeType": "PragmaDirective",
        "src": "39:24:384",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 98582,
        "nodeType": "ImportDirective",
        "src": "775:85:384",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 154371,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98583,
        "nodeType": "ImportDirective",
        "src": "861:42:384",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98584,
        "nodeType": "ImportDirective",
        "src": "953:51:384",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/airdrop/IAirdropERC20.sol",
        "file": "../../interface/airdrop/IAirdropERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 77106,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98586,
        "nodeType": "ImportDirective",
        "src": "1005:75:384",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98585,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "1014:19:384",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98587,
        "nodeType": "ImportDirective",
        "src": "1081:43:384",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../../../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 14016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98588,
        "nodeType": "ImportDirective",
        "src": "1125:82:384",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98589,
        "nodeType": "ImportDirective",
        "src": "1248:54:384",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98590,
        "nodeType": "ImportDirective",
        "src": "1303:49:384",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98947,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98946,
        "nodeType": "ContractDefinition",
        "src": "1354:5658:384",
        "nodes": [
          {
            "id": 98610,
            "nodeType": "VariableDeclaration",
            "src": "1733:62:384",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1758:11:384",
            "scope": 98946,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98605,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1733:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41697264726f704552433230",
                  "id": 98608,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1780:14:384",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d8a06fdfd641ef6e9bfa8682572ce0daaf81505bbd975ec0d64b7db90968bd10",
                    "typeString": "literal_string \"AirdropERC20\""
                  },
                  "value": "AirdropERC20"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d8a06fdfd641ef6e9bfa8682572ce0daaf81505bbd975ec0d64b7db90968bd10",
                    "typeString": "literal_string \"AirdropERC20\""
                  }
                ],
                "id": 98607,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1772:7:384",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 98606,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1772:7:384",
                  "typeDescriptions": {}
                }
              },
              "id": 98609,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1772:23:384",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 98613,
            "nodeType": "VariableDeclaration",
            "src": "1801:36:384",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1826:7:384",
            "scope": 98946,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98611,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1801:7:384",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 98612,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1836:1:384",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 98620,
            "nodeType": "FunctionDefinition",
            "src": "2036:53:384",
            "nodes": [],
            "body": {
              "id": 98619,
              "nodeType": "Block",
              "src": "2050:39:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98616,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154140,
                      "src": "2060:20:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 98617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:22:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98618,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:22:384"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:2:384"
            },
            "returnParameters": {
              "id": 98615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2050:0:384"
            },
            "scope": 98946,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98650,
            "nodeType": "FunctionDefinition",
            "src": "2154:358:384",
            "nodes": [],
            "body": {
              "id": 98649,
              "nodeType": "Block",
              "src": "2313:199:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98634,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98628,
                        "src": "2355:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 98633,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46339,
                      "src": "2323:31:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 98635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2323:51:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98636,
                  "nodeType": "ExpressionStatement",
                  "src": "2323:51:384"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98638,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98625,
                        "src": "2403:12:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 98637,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "2385:17:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 98639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:31:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98640,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:31:384"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98642,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "2437:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 98643,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98623,
                        "src": "2457:13:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 98641,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "2426:10:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 98644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2426:45:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98645,
                  "nodeType": "ExpressionStatement",
                  "src": "2426:45:384"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98646,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154309,
                      "src": "2481:22:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 98647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:24:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98648,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:24:384"
                }
              ]
            },
            "documentation": {
              "id": 98621,
              "nodeType": "StructuredDocumentation",
              "src": "2095:54:384",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "3a105cfb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 98631,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 98630,
                  "name": "initializer",
                  "nameLocations": [
                    "2301:11:384"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2301:11:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "2301:11:384"
              }
            ],
            "name": "initialize",
            "nameLocation": "2163:10:384",
            "parameters": {
              "id": 98629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98623,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2191:13:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98650,
                  "src": "2183:21:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98625,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2228:12:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98650,
                  "src": "2214:26:384",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2214:6:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98628,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2267:18:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98650,
                  "src": "2250:35:384",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 98626,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2250:7:384",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 98627,
                    "nodeType": "ArrayTypeName",
                    "src": "2250:9:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2173:118:384"
            },
            "returnParameters": {
              "id": 98632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2313:0:384"
            },
            "scope": 98946,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98659,
            "nodeType": "FunctionDefinition",
            "src": "2752:91:384",
            "nodes": [],
            "body": {
              "id": 98658,
              "nodeType": "Block",
              "src": "2808:35:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 98656,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98610,
                    "src": "2825:11:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98655,
                  "id": 98657,
                  "nodeType": "Return",
                  "src": "2818:18:384"
                }
              ]
            },
            "documentation": {
              "id": 98651,
              "nodeType": "StructuredDocumentation",
              "src": "2705:42:384",
              "text": "@dev Returns the type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "2761:12:384",
            "parameters": {
              "id": 98652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2773:2:384"
            },
            "returnParameters": {
              "id": 98655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98659,
                  "src": "2799:7:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98653,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2798:9:384"
            },
            "scope": 98946,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98671,
            "nodeType": "FunctionDefinition",
            "src": "2899:95:384",
            "nodes": [],
            "body": {
              "id": 98670,
              "nodeType": "Block",
              "src": "2956:38:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98667,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98613,
                        "src": "2979:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2973:5:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 98665,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2973:5:384",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 98668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:14:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 98664,
                  "id": 98669,
                  "nodeType": "Return",
                  "src": "2966:21:384"
                }
              ]
            },
            "documentation": {
              "id": 98660,
              "nodeType": "StructuredDocumentation",
              "src": "2849:45:384",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "2908:15:384",
            "parameters": {
              "id": 98661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2923:2:384"
            },
            "returnParameters": {
              "id": 98664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98671,
                  "src": "2949:5:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 98662,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:5:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:7:384"
            },
            "scope": 98946,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98805,
            "nodeType": "FunctionDefinition",
            "src": "3687:1457:384",
            "nodes": [],
            "body": {
              "id": 98804,
              "nodeType": "Block",
              "src": "3850:1294:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98687,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21787,
                            "src": "3876:18:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98688,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                98945
                              ],
                              "referencedDeclaration": 98945,
                              "src": "3896:10:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 98689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3896:12:384",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98686,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21818,
                          "src": "3868:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 98690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3868:41:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a65642e",
                        "id": 98691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3911:17:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        },
                        "value": "Not authorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        }
                      ],
                      "id": 98685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3860:7:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:69:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98693,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:69:384"
                },
                {
                  "assignments": [
                    98695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98695,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "3948:3:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 98804,
                      "src": "3940:11:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3940:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98698,
                  "initialValue": {
                    "expression": {
                      "id": 98696,
                      "name": "_contents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98680,
                      "src": "3954:9:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                      }
                    },
                    "id": 98697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3964:6:384",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3954:16:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3940:30:384"
                },
                {
                  "assignments": [
                    98700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98700,
                      "mutability": "mutable",
                      "name": "nativeTokenAmount",
                      "nameLocation": "3988:17:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 98804,
                      "src": "3980:25:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3980:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98701,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3980:25:384"
                },
                {
                  "assignments": [
                    98703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98703,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nameLocation": "4023:12:384",
                      "nodeType": "VariableDeclaration",
                      "scope": 98804,
                      "src": "4015:20:384",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98702,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4015:7:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98704,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4015:20:384"
                },
                {
                  "body": {
                    "id": 98781,
                    "nodeType": "Block",
                    "src": "4077:780:384",
                    "statements": [
                      {
                        "assignments": [
                          98713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98713,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4096:7:384",
                            "nodeType": "VariableDeclaration",
                            "scope": 98781,
                            "src": "4091:12:384",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 98712,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4091:4:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 98726,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 98715,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98674,
                              "src": "4154:13:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 98716,
                              "name": "_tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98676,
                              "src": "4185:11:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 98717,
                                  "name": "_contents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98680,
                                  "src": "4214:9:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                  }
                                },
                                "id": 98719,
                                "indexExpression": {
                                  "id": 98718,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98706,
                                  "src": "4224:1:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4214:12:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AirdropContent_$77092_calldata_ptr",
                                  "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                }
                              },
                              "id": 98720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4227:9:384",
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77089,
                              "src": "4214:22:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 98721,
                                  "name": "_contents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98680,
                                  "src": "4254:9:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                  }
                                },
                                "id": 98723,
                                "indexExpression": {
                                  "id": 98722,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98706,
                                  "src": "4264:1:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4254:12:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AirdropContent_$77092_calldata_ptr",
                                  "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                }
                              },
                              "id": 98724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4267:6:384",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77091,
                              "src": "4254:19:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 98714,
                            "name": "_transferCurrencyWithReturnVal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98917,
                            "src": "4106:30:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 98725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:181:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4091:196:384"
                      },
                      {
                        "condition": {
                          "id": 98728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4306:8:384",
                          "subExpression": {
                            "id": 98727,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98713,
                            "src": "4307:7:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98743,
                        "nodeType": "IfStatement",
                        "src": "4302:138:384",
                        "trueBody": {
                          "id": 98742,
                          "nodeType": "Block",
                          "src": "4316:124:384",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 98730,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98674,
                                    "src": "4353:13:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 98731,
                                    "name": "_tokenOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98676,
                                    "src": "4368:11:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 98732,
                                        "name": "_contents",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98680,
                                        "src": "4381:9:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                        }
                                      },
                                      "id": 98734,
                                      "indexExpression": {
                                        "id": 98733,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98706,
                                        "src": "4391:1:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4381:12:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AirdropContent_$77092_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                      }
                                    },
                                    "id": 98735,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4394:9:384",
                                    "memberName": "recipient",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 77089,
                                    "src": "4381:22:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 98736,
                                        "name": "_contents",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98680,
                                        "src": "4405:9:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                        }
                                      },
                                      "id": 98738,
                                      "indexExpression": {
                                        "id": 98737,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98706,
                                        "src": "4415:1:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4405:12:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AirdropContent_$77092_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                      }
                                    },
                                    "id": 98739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4418:6:384",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 77091,
                                    "src": "4405:19:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 98729,
                                  "name": "AirdropFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77086,
                                  "src": "4339:13:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 98740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4339:86:384",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 98741,
                              "nodeType": "EmitStatement",
                              "src": "4334:91:384"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 98747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98744,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98674,
                            "src": "4458:13:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 98745,
                              "name": "CurrencyTransferLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65175,
                              "src": "4475:19:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                                "typeString": "type(library CurrencyTransferLib)"
                              }
                            },
                            "id": 98746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4495:12:384",
                            "memberName": "NATIVE_TOKEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64943,
                            "src": "4475:32:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4458:49:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98775,
                        "nodeType": "IfStatement",
                        "src": "4454:330:384",
                        "trueBody": {
                          "id": 98774,
                          "nodeType": "Block",
                          "src": "4509:275:384",
                          "statements": [
                            {
                              "expression": {
                                "id": 98753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 98748,
                                  "name": "nativeTokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98700,
                                  "src": "4527:17:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 98749,
                                      "name": "_contents",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98680,
                                      "src": "4548:9:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                      }
                                    },
                                    "id": 98751,
                                    "indexExpression": {
                                      "id": 98750,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98706,
                                      "src": "4558:1:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4548:12:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AirdropContent_$77092_calldata_ptr",
                                      "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                    }
                                  },
                                  "id": 98752,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4561:6:384",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 77091,
                                  "src": "4548:19:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4527:40:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 98754,
                              "nodeType": "ExpressionStatement",
                              "src": "4527:40:384"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 98759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 98756,
                                      "name": "nativeTokenAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98700,
                                      "src": "4594:17:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 98757,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4615:3:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 98758,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4619:5:384",
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "4615:9:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4594:30:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e74206e617469766520746f6b656e20616d6f756e74",
                                    "id": 98760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4626:34:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b5f7847becfd85def84c08d77b158a27213a97332b8d819a8c96e6af6cf46854",
                                      "typeString": "literal_string \"Insufficient native token amount\""
                                    },
                                    "value": "Insufficient native token amount"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b5f7847becfd85def84c08d77b158a27213a97332b8d819a8c96e6af6cf46854",
                                      "typeString": "literal_string \"Insufficient native token amount\""
                                    }
                                  ],
                                  "id": 98755,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4586:7:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 98761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4586:75:384",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 98762,
                              "nodeType": "ExpressionStatement",
                              "src": "4586:75:384"
                            },
                            {
                              "condition": {
                                "id": 98764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4684:8:384",
                                "subExpression": {
                                  "id": 98763,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98713,
                                  "src": "4685:7:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 98773,
                              "nodeType": "IfStatement",
                              "src": "4680:90:384",
                              "trueBody": {
                                "id": 98772,
                                "nodeType": "Block",
                                "src": "4694:76:384",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 98770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 98765,
                                        "name": "refundAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98703,
                                        "src": "4716:12:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 98766,
                                            "name": "_contents",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98680,
                                            "src": "4732:9:384",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                                              "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                            }
                                          },
                                          "id": 98768,
                                          "indexExpression": {
                                            "id": 98767,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98706,
                                            "src": "4742:1:384",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4732:12:384",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AirdropContent_$77092_calldata_ptr",
                                            "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                          }
                                        },
                                        "id": 98769,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4745:6:384",
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 77091,
                                        "src": "4732:19:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4716:35:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 98771,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4716:35:384"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 98780,
                        "nodeType": "UncheckedBlock",
                        "src": "4798:49:384",
                        "statements": [
                          {
                            "expression": {
                              "id": 98778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 98776,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98706,
                                "src": "4826:1:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 98777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4831:1:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4826:6:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 98779,
                            "nodeType": "ExpressionStatement",
                            "src": "4826:6:384"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98709,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98706,
                      "src": "4066:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 98710,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98695,
                      "src": "4070:3:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4066:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98782,
                  "initializationExpression": {
                    "assignments": [
                      98706
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 98706,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4059:1:384",
                        "nodeType": "VariableDeclaration",
                        "scope": 98782,
                        "src": "4051:9:384",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98705,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4051:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 98708,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 98707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4063:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4051:13:384"
                  },
                  "isSimpleCounterLoop": false,
                  "nodeType": "ForStatement",
                  "src": "4046:811:384"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98784,
                          "name": "nativeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98700,
                          "src": "4875:17:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 98785,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4896:3:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 98786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4900:5:384",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4896:9:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4875:30:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206e617469766520746f6b656e20616d6f756e74",
                        "id": 98788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4907:31:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce5f59a11237ec549173ecd41c5fdf614dfe256f40250ad64b203f7b403da89",
                          "typeString": "literal_string \"Incorrect native token amount\""
                        },
                        "value": "Incorrect native token amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce5f59a11237ec549173ecd41c5fdf614dfe256f40250ad64b203f7b403da89",
                          "typeString": "literal_string \"Incorrect native token amount\""
                        }
                      ],
                      "id": 98783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4867:7:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4867:72:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98790,
                  "nodeType": "ExpressionStatement",
                  "src": "4867:72:384"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98791,
                      "name": "refundAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98703,
                      "src": "4954:12:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 98792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4969:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4954:16:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98803,
                  "nodeType": "IfStatement",
                  "src": "4950:188:384",
                  "trueBody": {
                    "id": 98802,
                    "nodeType": "Block",
                    "src": "4972:166:384",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 98797,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5102:3:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 98798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5106:6:384",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5102:10:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 98799,
                              "name": "refundAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98703,
                              "src": "5114:12:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 98794,
                              "name": "CurrencyTransferLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65175,
                              "src": "5058:19:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                                "typeString": "type(library CurrencyTransferLib)"
                              }
                            },
                            "id": 98796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5078:23:384",
                            "memberName": "safeTransferNativeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65134,
                            "src": "5058:43:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 98800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5058:69:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98801,
                        "nodeType": "ExpressionStatement",
                        "src": "5058:69:384"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              77104
            ],
            "documentation": {
              "id": 98672,
              "nodeType": "StructuredDocumentation",
              "src": "3182:500:384",
              "text": "  @notice          Lets contract-owner send ERC20 tokens to a list of addresses.\n  @dev             The token-owner should approve target tokens to Airdrop contract,\n                   which acts as operator for the tokens.\n  @param _tokenAddress    The contract address of the tokens to transfer.\n  @param _tokenOwner      The owner of the tokens to transfer.\n  @param _contents        List containing recipient, tokenId and amounts to airdrop."
            },
            "functionSelector": "0670b2b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 98683,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 98682,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3837:12:384"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "3837:12:384"
                },
                "nodeType": "ModifierInvocation",
                "src": "3837:12:384"
              }
            ],
            "name": "airdropERC20",
            "nameLocation": "3696:12:384",
            "parameters": {
              "id": 98681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98674,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3726:13:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98805,
                  "src": "3718:21:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3718:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98676,
                  "mutability": "mutable",
                  "name": "_tokenOwner",
                  "nameLocation": "3757:11:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98805,
                  "src": "3749:19:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98680,
                  "mutability": "mutable",
                  "name": "_contents",
                  "nameLocation": "3804:9:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98805,
                  "src": "3778:35:384",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IAirdropERC20.AirdropContent[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 98678,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 98677,
                        "name": "AirdropContent",
                        "nameLocations": [
                          "3778:14:384"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77092,
                        "src": "3778:14:384"
                      },
                      "referencedDeclaration": 77092,
                      "src": "3778:14:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AirdropContent_$77092_storage_ptr",
                        "typeString": "struct IAirdropERC20.AirdropContent"
                      }
                    },
                    "id": 98679,
                    "nodeType": "ArrayTypeName",
                    "src": "3778:16:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AirdropContent_$77092_storage_$dyn_storage_ptr",
                      "typeString": "struct IAirdropERC20.AirdropContent[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:111:384"
            },
            "returnParameters": {
              "id": 98684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3850:0:384"
            },
            "scope": 98946,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98917,
            "nodeType": "FunctionDefinition",
            "src": "5419:1110:384",
            "nodes": [],
            "body": {
              "id": 98916,
              "nodeType": "Block",
              "src": "5593:936:384",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98819,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98814,
                      "src": "5607:7:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 98820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5618:1:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5607:12:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98829,
                  "nodeType": "IfStatement",
                  "src": "5603:85:384",
                  "trueBody": {
                    "id": 98828,
                    "nodeType": "Block",
                    "src": "5621:67:384",
                    "statements": [
                      {
                        "expression": {
                          "id": 98824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98822,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98817,
                            "src": "5635:7:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 98823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5645:4:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5635:14:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98825,
                        "nodeType": "ExpressionStatement",
                        "src": "5635:14:384"
                      },
                      {
                        "expression": {
                          "id": 98826,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98817,
                          "src": "5670:7:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 98818,
                        "id": 98827,
                        "nodeType": "Return",
                        "src": "5663:14:384"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 98833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98830,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98808,
                      "src": "5702:9:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 98831,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "5715:19:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 98832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5735:12:384",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "5715:32:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5702:45:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 98914,
                    "nodeType": "Block",
                    "src": "5934:589:384",
                    "statements": [
                      {
                        "assignments": [
                          98846,
                          98848
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98846,
                            "mutability": "mutable",
                            "name": "success_",
                            "nameLocation": "5954:8:384",
                            "nodeType": "VariableDeclaration",
                            "scope": 98914,
                            "src": "5949:13:384",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 98845,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5949:4:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 98848,
                            "mutability": "mutable",
                            "name": "data_",
                            "nameLocation": "5977:5:384",
                            "nodeType": "VariableDeclaration",
                            "scope": 98914,
                            "src": "5964:18:384",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 98847,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5964:5:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 98861,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 98853,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14015,
                                      "src": "6041:6:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 98854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6048:12:384",
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13998,
                                    "src": "6041:19:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 98855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6061:8:384",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6041:28:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 98856,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98810,
                                  "src": "6071:5:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 98857,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98812,
                                  "src": "6078:3:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 98858,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98814,
                                  "src": "6083:7:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 98851,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6018:3:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 98852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6022:18:384",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "6018:22:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 98859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6018:73:384",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 98849,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98808,
                              "src": "5986:9:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 98850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5996:4:384",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5986:14:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 98860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5986:119:384",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5948:157:384"
                      },
                      {
                        "expression": {
                          "id": 98864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 98862,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98817,
                            "src": "6120:7:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 98863,
                            "name": "success_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98846,
                            "src": "6130:8:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6120:18:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98865,
                        "nodeType": "ExpressionStatement",
                        "src": "6120:18:384"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 98882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6156:8:384",
                            "subExpression": {
                              "id": 98866,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98817,
                              "src": "6157:7:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 98880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 98871,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 98868,
                                      "name": "data_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98848,
                                      "src": "6169:5:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 98869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6175:6:384",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "6169:12:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 98870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6184:1:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6169:16:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 98879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "6189:26:384",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "id": 98874,
                                        "name": "data_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98848,
                                        "src": "6201:5:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 98876,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6209:4:384",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 98875,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6209:4:384",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 98877,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "6208:6:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 98872,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "6190:3:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 98873,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6194:6:384",
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "6190:10:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 98878,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6190:25:384",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6169:46:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 98881,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6168:48:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6156:60:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98913,
                        "nodeType": "IfStatement",
                        "src": "6152:361:384",
                        "trueBody": {
                          "id": 98912,
                          "nodeType": "Block",
                          "src": "6218:295:384",
                          "statements": [
                            {
                              "expression": {
                                "id": 98885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 98883,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98817,
                                  "src": "6236:7:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 98884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6246:5:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6236:15:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 98886,
                              "nodeType": "ExpressionStatement",
                              "src": "6236:15:384"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 98908,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 98895,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 98892,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98810,
                                            "src": "6327:5:384",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 98889,
                                                "name": "_currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 98808,
                                                "src": "6306:9:384",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 98888,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 14015,
                                              "src": "6299:6:384",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 98890,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6299:17:384",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$14015",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 98891,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6317:9:384",
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 13960,
                                          "src": "6299:27:384",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 98893,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6299:34:384",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 98894,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98814,
                                        "src": "6337:7:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6299:45:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 98907,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 98900,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98810,
                                            "src": "6400:5:384",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 98903,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "6415:4:384",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AirdropERC20_$98946",
                                                  "typeString": "contract AirdropERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_AirdropERC20_$98946",
                                                  "typeString": "contract AirdropERC20"
                                                }
                                              ],
                                              "id": 98902,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "6407:7:384",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 98901,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6407:7:384",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 98904,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6407:13:384",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 98897,
                                                "name": "_currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 98808,
                                                "src": "6379:9:384",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 98896,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 14015,
                                              "src": "6372:6:384",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 98898,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6372:17:384",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$14015",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 98899,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6390:9:384",
                                          "memberName": "allowance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 13969,
                                          "src": "6372:27:384",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address,address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 98905,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6372:49:384",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 98906,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 98814,
                                        "src": "6425:7:384",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6372:60:384",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6299:133:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f742062616c616e6365206f7220616c6c6f77616e6365",
                                    "id": 98909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6454:26:384",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_938cb21e45b1cdea9582a25de019a56300a849007f54682c1db1a8fbf02c5005",
                                      "typeString": "literal_string \"Not balance or allowance\""
                                    },
                                    "value": "Not balance or allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_938cb21e45b1cdea9582a25de019a56300a849007f54682c1db1a8fbf02c5005",
                                      "typeString": "literal_string \"Not balance or allowance\""
                                    }
                                  ],
                                  "id": 98887,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6270:7:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 98910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6270:228:384",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 98911,
                              "nodeType": "ExpressionStatement",
                              "src": "6270:228:384"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 98915,
                  "nodeType": "IfStatement",
                  "src": "5698:825:384",
                  "trueBody": {
                    "id": 98844,
                    "nodeType": "Block",
                    "src": "5749:179:384",
                    "statements": [
                      {
                        "expression": {
                          "id": 98842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 98834,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98817,
                                "src": "5874:7:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 98835,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5873:11:384",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 98840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5914:2:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 98836,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98812,
                                  "src": "5887:3:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 98837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5891:4:384",
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "5887:8:384",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 98839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 98838,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98814,
                                  "src": "5904:7:384",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "5887:26:384",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 98841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5887:30:384",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "5873:44:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98843,
                        "nodeType": "ExpressionStatement",
                        "src": "5873:44:384"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 98806,
              "nodeType": "StructuredDocumentation",
              "src": "5328:86:384",
              "text": "@dev Transfers ERC20 tokens and returns a boolean i.e. the status of the transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferCurrencyWithReturnVal",
            "nameLocation": "5428:30:384",
            "parameters": {
              "id": 98815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98808,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5476:9:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98917,
                  "src": "5468:17:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5468:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98810,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5503:5:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98917,
                  "src": "5495:13:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5495:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98812,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5526:3:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98917,
                  "src": "5518:11:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5518:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98814,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5547:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98917,
                  "src": "5539:15:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5539:7:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5458:102:384"
            },
            "returnParameters": {
              "id": 98818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98817,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5584:7:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98917,
                  "src": "5579:12:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98816,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5579:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5578:14:384"
            },
            "scope": 98946,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 98931,
            "nodeType": "FunctionDefinition",
            "src": "6624:133:384",
            "nodes": [],
            "body": {
              "id": 98930,
              "nodeType": "Block",
              "src": "6692:65:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98925,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6717:18:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 98926,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            98945
                          ],
                          "referencedDeclaration": 98945,
                          "src": "6737:10:384",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 98927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6737:12:384",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 98924,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6709:7:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 98928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6709:41:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 98923,
                  "id": 98929,
                  "nodeType": "Return",
                  "src": "6702:48:384"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 98918,
              "nodeType": "StructuredDocumentation",
              "src": "6535:84:384",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6633:18:384",
            "overrides": {
              "id": 98920,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6668:8:384"
            },
            "parameters": {
              "id": 98919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6651:2:384"
            },
            "returnParameters": {
              "id": 98923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98922,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98931,
                  "src": "6686:4:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98921,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:4:384",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6685:6:384"
            },
            "scope": 98946,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 98945,
            "nodeType": "FunctionDefinition",
            "src": "6788:222:384",
            "nodes": [],
            "body": {
              "id": 98944,
              "nodeType": "Block",
              "src": "6948:62:384",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 98940,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "6965:25:384",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 98941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6991:10:384",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "6965:36:384",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 98942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6965:38:384",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 98939,
                  "id": 98943,
                  "nodeType": "Return",
                  "src": "6958:45:384"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370
            ],
            "documentation": {
              "id": 98932,
              "nodeType": "StructuredDocumentation",
              "src": "6763:20:384",
              "text": "@dev See ERC2771"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "6797:10:384",
            "overrides": {
              "id": 98936,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 98934,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "6873:25:384"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "6873:25:384"
                },
                {
                  "id": 98935,
                  "name": "Multicall",
                  "nameLocations": [
                    "6900:9:384"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "6900:9:384"
                }
              ],
              "src": "6864:46:384"
            },
            "parameters": {
              "id": 98933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6807:2:384"
            },
            "returnParameters": {
              "id": 98939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98938,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6936:6:384",
                  "nodeType": "VariableDeclaration",
                  "scope": 98945,
                  "src": "6928:14:384",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6928:7:384",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6927:16:384"
            },
            "scope": 98946,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98591,
              "name": "Initializable",
              "nameLocations": [
                "1383:13:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1383:13:384"
            },
            "id": 98592,
            "nodeType": "InheritanceSpecifier",
            "src": "1383:13:384"
          },
          {
            "baseName": {
              "id": 98593,
              "name": "ContractMetadata",
              "nameLocations": [
                "1402:16:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1402:16:384"
            },
            "id": 98594,
            "nodeType": "InheritanceSpecifier",
            "src": "1402:16:384"
          },
          {
            "baseName": {
              "id": 98595,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1424:21:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1424:21:384"
            },
            "id": 98596,
            "nodeType": "InheritanceSpecifier",
            "src": "1424:21:384"
          },
          {
            "baseName": {
              "id": 98597,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1451:26:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154370,
              "src": "1451:26:384"
            },
            "id": 98598,
            "nodeType": "InheritanceSpecifier",
            "src": "1451:26:384"
          },
          {
            "baseName": {
              "id": 98599,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1483:25:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1483:25:384"
            },
            "id": 98600,
            "nodeType": "InheritanceSpecifier",
            "src": "1483:25:384"
          },
          {
            "baseName": {
              "id": 98601,
              "name": "Multicall",
              "nameLocations": [
                "1514:9:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1514:9:384"
            },
            "id": 98602,
            "nodeType": "InheritanceSpecifier",
            "src": "1514:9:384"
          },
          {
            "baseName": {
              "id": 98603,
              "name": "IAirdropERC20",
              "nameLocations": [
                "1529:13:384"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77105,
              "src": "1529:13:384"
            },
            "id": 98604,
            "nodeType": "InheritanceSpecifier",
            "src": "1529:13:384"
          }
        ],
        "canonicalName": "AirdropERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98946,
          77105,
          21206,
          33577,
          46402,
          161692,
          154370,
          22411,
          22111,
          33932,
          33907,
          18093,
          154159,
          33084
        ],
        "name": "AirdropERC20",
        "nameLocation": "1363:12:384",
        "scope": 98947,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33846,
          33855,
          33864,
          77086,
          154005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 384
}