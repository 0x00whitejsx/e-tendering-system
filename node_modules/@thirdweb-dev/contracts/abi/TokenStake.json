{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensDepositedByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensWithdrawnByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDenominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioDenominator",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setRewardRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003f5738038062003f5783398101604081905262000034916200019e565b806001600160a01b0381166200007d5760405162461bcd60e51b815260206004820152600960248201526806164647265737320360bc1b60448201526064015b60405180910390fd5b6001600160a01b0316608052600054610100900460ff1615808015620000aa5750600054600160ff909116105b80620000c65750303b158015620000c6575060005460ff166001145b6200012b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000074565b6000805460ff1916600117905580156200014f576000805461ff0019166101001790555b801562000196576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050620001d0565b600060208284031215620001b157600080fd5b81516001600160a01b0381168114620001c957600080fd5b9392505050565b608051613d3a6200021d600039600081816101ac015281816108de0152818161098e0152818161122f0152818161128f01528181611e010152818161226c0152612f870152613d3a6000f3fe60806040526004361061019c5760003560e01c80639bdcecd1116100dd5780639bdcecd1146104c8578063a0a8e460146104fd578063a217fddf14610519578063a32fa5b31461052e578063a694fc3a1461054e578063ac9650d814610561578063b218f0691461058e578063b9f7a7b5146105ae578063c3453153146105d0578063ca15c873146105f0578063cb2ef6f714610610578063cb43b2dd14610630578063d547741f14610650578063d68124c714610670578063df6543761461069d578063e8a3d485146106bd578063f7c618c1146106df57600080fd5b80621b79341461022557806316c621e014610245578063248a9ca3146102585780632e1a7d4d146102985780632f2ff15d146102b857806336568abe146102d8578063372500ab146102f85780635357e9161461030d578063572b6c051461033a57806372f702f31461036a5780638caaa2711461038a5780639010d07c146103a05780639168ae72146103c057806391d1485414610449578063938e3d7b1461046957806393ce53431461048957806397e1b4bc1461049e57600080fd5b3661022057336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021e5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561023157600080fd5b5061021e61024036600461337f565b6106ff565b61021e6102533660046133a1565b610871565b34801561026457600080fd5b506102856102733660046133a1565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b3480156102a457600080fd5b5061021e6102b33660046133a1565b610a88565b3480156102c457600080fd5b5061021e6102d33660046133d1565b610aa3565b3480156102e457600080fd5b5061021e6102f33660046133d1565b610b3d565b34801561030457600080fd5b5061021e610b9c565b34801561031957600080fd5b5061032d6103283660046133a1565b610bb8565b60405161028f91906133fd565b34801561034657600080fd5b5061035a610355366004613411565b610be2565b604051901515815260200161028f565b34801561037657600080fd5b50609b5461032d906001600160a01b031681565b34801561039657600080fd5b50610285609c5481565b3480156103ac57600080fd5b5061032d6103bb36600461337f565b610c00565b3480156103cc57600080fd5b506104176103db366004613411565b609e602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b03909316602085015291830152606082015260800161028f565b34801561045557600080fd5b5061035a6104643660046133d1565b610cef565b34801561047557600080fd5b5061021e6104843660046134e1565b610d1a565b34801561049557600080fd5b5060a154610285565b3480156104aa57600080fd5b506104b3610d47565b6040805192835260208301919091520161028f565b3480156104d457600080fd5b50609b546104ea90600160b01b900461ffff1681565b60405161ffff909116815260200161028f565b34801561050957600080fd5b506040516001815260200161028f565b34801561052557600080fd5b50610285600081565b34801561053a57600080fd5b5061035a6105493660046133d1565b610dd4565b61021e61055c3660046133a1565b610e2a565b34801561056d57600080fd5b5061058161057c366004613515565b610e3b565b60405161028f91906135d9565b34801561059a57600080fd5b5061021e6105a9366004613654565b610fae565b3480156105ba57600080fd5b50609b546104ea90600160a01b900461ffff1681565b3480156105dc57600080fd5b506104b36105eb366004613411565b61110a565b3480156105fc57600080fd5b5061028561060b3660046133a1565b611137565b34801561061c57600080fd5b5069546f6b656e5374616b6560b01b610285565b34801561063c57600080fd5b5061021e61064b3660046133a1565b6111c0565b34801561065c57600080fd5b5061021e61066b3660046133d1565b6113ad565b34801561067c57600080fd5b506106856113c6565b6040516001600160501b03909116815260200161028f565b3480156106a957600080fd5b5061021e6106b836600461366f565b611416565b3480156106c957600080fd5b506106d261171e565b60405161028f9190613798565b3480156106eb57600080fd5b5060a05461032d906001600160a01b031681565b6107076117ac565b6107235760405162461bcd60e51b8152600401610215906137ab565b6000609f60006001609b60189054906101000a90046001600160401b031661074b91906137e9565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806107cb575080608001518214155b6108115760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b6044820152606401610215565b805161081e9084846117bf565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b61087961197d565b61088660006104646119d6565b6108a25760405162461bcd60e51b8152600401610215906137ab565b60a0546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108dc5760a0546001600160a01b03166108fe565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161092e91906133fd565b602060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190613810565b60a0549091506109b2906001600160a01b031661098a6119d6565b30867f00000000000000000000000000000000000000000000000000000000000000006119e0565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016109e191906133fd565b602060405180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190613810565b610a2c9190613829565b90508060a16000828254610a40919061383c565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a1505050610a856001606955565b50565b610a9061197d565b610a9981611b58565b610a856001606955565b600082815260036020526040902054610abc9033611e73565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610b2f5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610215565b610b398282611ef3565b5050565b336001600160a01b03821614610b925760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610215565b610b398282611f07565b610ba461197d565b610bac611f5e565b610bb66001606955565b565b609d8181548110610bc857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b60008281526004602052604081205481805b82811015610ce55760008681526004602090815260408083208484526001019091529020546001600160a01b031615610c8e57848203610c7c5760008681526004602090815260408083209383526001909301905220546001600160a01b03169250610ce9915050565b610c8760018361383c565b9150610cd3565b610c99866000610cef565b8015610cc05750600086815260046020908152604080832083805260020190915290205481145b15610cd357610cd060018361383c565b91505b610cde60018261383c565b9050610c12565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610d226117ac565b610d3e5760405162461bcd60e51b8152600401610215906137ab565b610a858161212c565b600080609f60006001609b60189054906101000a90046001600160401b0316610d7091906137e9565b6001600160401b03168152602001908152602001600020600101549150609f60006001609b60189054906101000a90046001600160401b0316610db391906137e9565b6001600160401b031681526020019081526020016000206002015490509091565b600082815260026020908152604080832083805290915281205460ff16610e21575060008281526002602090815260408083206001600160a01b038516845290915290205460ff16610ce9565b50600192915050565b610e3261197d565b610a99816121fc565b6060816001600160401b03811115610e5557610e5561342c565b604051908082528060200260200182016040528015610e8857816020015b6060815260200190600190039081610e735790505b5090506000610e956119d6565b9050336001600160a01b038216141560005b84811015610ce5578115610f2657610f0430878784818110610ecb57610ecb61384f565b9050602002810190610edd9190613865565b86604051602001610ef0939291906138ab565b6040516020818303038152906040526125cc565b848281518110610f1657610f1661384f565b6020026020010181905250610fa6565b610f8830878784818110610f3c57610f3c61384f565b9050602002810190610f4e9190613865565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125cc92505050565b848281518110610f9a57610f9a61384f565b60200260200101819052505b600101610ea7565b610fb66117ac565b610fd25760405162461bcd60e51b8152600401610215906137ab565b6000609f60006001609b60189054906101000a90046001600160401b0316610ffa91906137e9565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b90910481169382019390935260018201546060820152600290910154608082015292508316036110ac5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610215565b6110bf82826060015183608001516117bf565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b0381166000908152609e602052604081206001015490611130836125f8565b9050915091565b600081815260046020526040812054815b8181101561119b5760008481526004602090815260408083208484526001019091529020546001600160a01b0316156111895761118660018461383c565b92505b61119460018261383c565b9050611148565b506111a7836000610cef565b156111ba576111b760018361383c565b91505b50919050565b6111c861197d565b6111d560006104646119d6565b6111f15760405162461bcd60e51b8152600401610215906137ab565b60a154811161120d578060a1546112089190613829565b611210565b60005b60a15560a054611253906001600160a01b03163061122c6119d6565b847f00000000000000000000000000000000000000000000000000000000000000006119e0565b609b546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461128d57609b546001600160a01b03166112af565b7f00000000000000000000000000000000000000000000000000000000000000005b9050609c54816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016112e091906133fd565b602060405180830381865afa1580156112fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113219190613810565b101561136f5760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e00006044820152606401610215565b6040518281527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150610a856001606955565b600082815260036020526040902054610b929033611e73565b6000609f60006001609b60189054906101000a90046001600160401b03166113ee91906137e9565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b600054610100900460ff16158080156114365750600054600160ff909116105b80611457575061144530612670565b158015611457575060005460ff166001145b6114ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610215565b6000805460ff1916600117905580156114dd576000805461ff0019166101001790555b6114e68761267f565b846001600160a01b0316866001600160a01b03160361155d5760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b6064820152608401610215565b60a080546001600160a01b0319166001600160a01b038881169190911790915560009073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9087161461160457856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ff91906138cc565b611607565b60125b60ff16905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461169957876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611670573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169491906138cc565b61169c565b60125b60ff1690506116ac878383612704565b6116b78686866117bf565b6116c08a61212c565b6116cb60008c611ef3565b50508015611713576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001805461172b906138ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611757906138ef565b80156117a45780601f10611779576101008083540402835291602001916117a4565b820191906000526020600020905b81548152906001019060200180831161178757829003601f168201915b505050505081565b60006117ba816104646119d6565b905090565b806000036117fd5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b6044820152606401610215565b826001600160501b031660000361184d5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610215565b609b8054600160c01b90046001600160401b03169060019060186118718385613923565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a8152898452609f9094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b03199095169190951617929092179190911691909117825591516001820155905160029091015580156119775742609f6000611941600185613829565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b6002606954036119cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610215565b6002606955565b60006117ba61280e565b8115611b4a5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611b3e57306001600160a01b03851603611a8557604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611a5d57600080fd5b505af1158015611a71573d6000803e3d6000fd5b50505050611a80838383612830565b611b4a565b306001600160a01b03841603611b3357348214611ada5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610215565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b1557600080fd5b505af1158015611b29573d6000803e3d6000fd5b5050505050611b4a565b611a80838383612830565b611b4a858585856128f5565b5050505050565b6001606955565b6000609e6000611b6661294d565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010154905081600003611bd35760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610215565b81811015611c225760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610215565b611c32611c2d61294d565b612957565b818103611d88576000609d805480602002602001604051908101604052809291908181526020018280548015611c9157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c73575b5050505050905060005b8151811015611d8557611cac61294d565b6001600160a01b0316828281518110611cc757611cc761384f565b60200260200101516001600160a01b031603611d7d578160018351611cec9190613829565b81518110611cfc57611cfc61384f565b6020026020010151609d8281548110611d1757611d1761384f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550609d805480611d5657611d56613943565b600082815260209020810160001990810180546001600160a01b0319169055019055611d85565b600101611c9b565b50505b81609e6000611d9561294d565b6001600160a01b03166001600160a01b031681526020019081526020016000206001016000828254611dc79190613829565b9250508190555081609c6000828254611de09190613829565b9091555050609b54611e25906001600160a01b031630611dfe61294d565b857f00000000000000000000000000000000000000000000000000000000000000006119e0565b611e2d61294d565b6001600160a01b03167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b83604051611e6791815260200190565b60405180910390a25050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16610b3957611eb1816001600160a01b03166014612a2e565b611ebc836020612a2e565b604051602001611ecd929190613959565b60408051601f198184030181529082905262461bcd60e51b825261021591600401613798565b611efd8282612bc9565b610b398282612c24565b611f118282612c91565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f70611f6b61294d565b612cf3565b609e6000611f7c61294d565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020154611faa919061383c565b905080600003611fe95760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610215565b426001600160501b0316609e6000611fff61294d565b6001600160a01b031681526020810191909152604001600090812080546001600160801b0319166001600160801b039390931692909217909155609e8161204461294d565b6001600160a01b03168152602081019190915260400160002060020155609b5461208090600190600160c01b90046001600160401b03166137e9565b609e600061208c61294d565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790556120df6120d961294d565b82612f0e565b6120e761294d565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161212191815260200190565b60405180910390a250565b60006001805461213b906138ef565b80601f0160208091040260200160405190810160405280929190818152602001828054612167906138ef565b80156121b45780601f10612189576101008083540402835291602001916121b4565b820191906000526020600020905b81548152906001019060200180831161219757829003601f168201915b5050505050905081600190816121ca9190613a16565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110fe929190613ad5565b8060000361223f5760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610215565b609b546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed190161229057507f00000000000000000000000000000000000000000000000000000000000000006122da565b34156122cc5760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b6044820152606401610215565b50609b546001600160a01b03165b6000609e60006122e861294d565b6001600160a01b03166001600160a01b031681526020019081526020016000206001015411156123225761231d611c2d61294d565b612417565b609d61232c61294d565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b0392909216919091179055426001600160501b031690609e9061237261294d565b6001600160a01b03168152602081019190915260400160002080546001600160801b0319166001600160801b0392909216919091179055609b546123c890600190600160c01b90046001600160401b03166137e9565b609e60006123d461294d565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906124469030906004016133fd565b602060405180830381865afa158015612463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124879190613810565b609b549091506124a2906001600160a01b031661098a61294d565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016124d191906133fd565b602060405180830381865afa1580156124ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125129190613810565b61251c9190613829565b905080609e600061252b61294d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461255d919061383c565b9250508190555080609c6000828254612576919061383c565b90915550612584905061294d565b6001600160a01b03167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef826040516125be91815260200190565b60405180910390a250505050565b60606125f18383604051806060016040528060278152602001613cde60279139612fab565b9392505050565b6001600160a01b0381166000908152609e6020526040812060010154810361263957506001600160a01b03166000908152609e602052604090206002015490565b61264282612cf3565b6001600160a01b0383166000908152609e6020526040902060020154612668919061383c565b90505b919050565b6001600160a01b03163b151590565b600054610100900460ff166126a65760405162461bcd60e51b815260040161021590613afa565b60005b8151811015610b39576001603760008484815181106126ca576126ca61384f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016126a9565b600054610100900460ff1661272b5760405162461bcd60e51b815260040161021590613afa565b612733613023565b6001600160a01b03831661277b5760405162461bcd60e51b815260206004820152600f60248201526e0746f6b656e2061646472657373203608c1b6044820152606401610215565b61ffff821615801590612791575061ffff811615155b6127ca5760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b6044820152606401610215565b609b80546001600160a01b03949094166001600160b01b031990941693909317600160a01b61ffff938416021761ffff60b01b1916600160b01b9190921602179055565b600061281933610be2565b1561282b575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461287d576040519150601f19603f3d011682016040523d82523d6000602084013e612882565b606091505b505090508061197757816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156128c657600080fd5b505af11580156128da573d6000803e3d6000fd5b50611977935050506001600160a01b03841690508585613052565b816001600160a01b0316836001600160a01b0316031561197757306001600160a01b03841603612938576129336001600160a01b0385168383613052565b611977565b6119776001600160a01b0385168484846130ba565b60006117ba6119d6565b600061296282612cf3565b6001600160a01b0383166000908152609e602052604081206002018054929350839290919061299290849061383c565b90915550506001600160a01b0382166000908152609e6020526040902080546001600160801b0319166001600160501b034216179055609b546129e8906001906001600160401b03600160c01b909104166137e9565b6001600160a01b039092166000908152609e6020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b60606000612a3d836002613b45565b612a4890600261383c565b6001600160401b03811115612a5f57612a5f61342c565b6040519080825280601f01601f191660200182016040528015612a89576020820181803683370190505b509050600360fc1b81600081518110612aa457612aa461384f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612ad357612ad361384f565b60200101906001600160f81b031916908160001a9053506000612af7846002613b45565b612b0290600161383c565b90505b6001811115612b7a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612b3657612b3661384f565b1a60f81b828281518110612b4c57612b4c61384f565b60200101906001600160f81b031916908160001a90535060049490941c93612b7381613b5c565b9050612b05565b5083156125f15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610215565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612c43838561383c565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612c9b8282611e73565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0381166000908152609e60209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b90910481169482018590526001830154938201939093526002909101546060820152609b54909291600160c01b90910416815b81811015612eb9576000818152609f60209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083015260020154608082015290848303612dd7578551612de6565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b0316600003612e0e5742612e1d565b82604001516001600160501b03165b9050600080612e4a89604001518585612e369190613829565b612e409190613b45565b86606001516130f2565b91509150600080612e828c886080015189600001516001600160501b031686612e739190613b89565b612e7d9190613b89565b61313d565b91509150838015612e905750815b612e9a578b612e9c565b805b9b5050505050505050600181612eb2919061383c565b9050612d64565b50609b54612ede908590612ed990600160b01b900461ffff16600a613c8f565b6130f2565b609b54909550612efb9150600160a01b900461ffff16600a613c8f565b612f059085613b89565b95945050505050565b60a154811115612f5b5760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610215565b8060a16000828254612f6d9190613829565b909155505060a054610b39906001600160a01b03163084847f00000000000000000000000000000000000000000000000000000000000000006119e0565b6060600080856001600160a01b031685604051612fc89190613c9f565b600060405180830381855af49150503d8060008114613003576040519150601f19603f3d011682016040523d82523d6000602084013e613008565b606091505b509150915061301986838387613158565b9695505050505050565b600054610100900460ff1661304a5760405162461bcd60e51b815260040161021590613afa565b610bb66131d7565b6040516001600160a01b0383166024820152604481018290526130b590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526131fe565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119779085906323b872dd60e01b9060840161307e565b600080836000036131095750600190506000613136565b8383028385828161311c5761311c613b73565b041461312f576000809250925050613136565b6001925090505b9250929050565b6000808383018481101561312f576000809250925050613136565b606083156131c55782516000036131be5761317285612670565b6131be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b50816131cf565b6131cf83836132d0565b949350505050565b600054610100900460ff16611b515760405162461bcd60e51b815260040161021590613afa565b6000613253826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132fa9092919063ffffffff16565b8051909150156130b557808060200190518101906132719190613cbb565b6130b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b8151156132e05781518083602001fd5b8060405162461bcd60e51b81526004016102159190613798565b60606131cf848460008585600080866001600160a01b031685876040516133219190613c9f565b60006040518083038185875af1925050503d806000811461335e576040519150601f19603f3d011682016040523d82523d6000602084013e613363565b606091505b509150915061337487838387613158565b979650505050505050565b6000806040838503121561339257600080fd5b50508035926020909101359150565b6000602082840312156133b357600080fd5b5035919050565b80356001600160a01b038116811461266b57600080fd5b600080604083850312156133e457600080fd5b823591506133f4602084016133ba565b90509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561342357600080fd5b6125f1826133ba565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561346a5761346a61342c565b604052919050565b600082601f83011261348357600080fd5b81356001600160401b0381111561349c5761349c61342c565b6134af601f8201601f1916602001613442565b8181528460208386010111156134c457600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156134f357600080fd5b81356001600160401b0381111561350957600080fd5b6131cf84828501613472565b6000806020838503121561352857600080fd5b82356001600160401b038082111561353f57600080fd5b818501915085601f83011261355357600080fd5b81358181111561356257600080fd5b8660208260051b850101111561357757600080fd5b60209290920196919550909350505050565b60005b838110156135a457818101518382015260200161358c565b50506000910152565b600081518084526135c5816020860160208601613589565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561363057603f1988860301845261361e8583516135ad565b94509285019290850190600101613602565b5092979650505050505050565b80356001600160501b038116811461266b57600080fd5b60006020828403121561366657600080fd5b6125f18261363d565b600080600080600080600080610100898b03121561368c57600080fd5b613695896133ba565b97506020808a01356001600160401b03808211156136b257600080fd5b6136be8d838e01613472565b995060408c01359150808211156136d457600080fd5b818c0191508c601f8301126136e857600080fd5b8135818111156136fa576136fa61342c565b8060051b915061370b848301613442565b818152918301840191848101908f84111561372557600080fd5b938501935b8385101561374a5761373b856133ba565b8252938501939085019061372a565b809b5050505050505061375f60608a016133ba565b945061376d60808a016133ba565b935061377b60a08a0161363d565b925060c0890135915060e089013590509295985092959890939650565b6020815260006125f160208301846135ad565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03828116828216039080821115613809576138096137d3565b5092915050565b60006020828403121561382257600080fd5b5051919050565b81810381811115610ce957610ce96137d3565b80820180821115610ce957610ce96137d3565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261387c57600080fd5b8301803591506001600160401b0382111561389657600080fd5b60200191503681900382131561313657600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b6000602082840312156138de57600080fd5b815160ff811681146125f157600080fd5b600181811c9082168061390357607f821691505b6020821081036111ba57634e487b7160e01b600052602260045260246000fd5b6001600160401b03818116838216019080821115613809576138096137d3565b634e487b7160e01b600052603160045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613989816015850160208801613589565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516139ba816026840160208801613589565b01602601949350505050565b601f8211156130b5576000816000526020600020601f850160051c810160208610156139ef5750805b601f850160051c820191505b81811015613a0e578281556001016139fb565b505050505050565b81516001600160401b03811115613a2f57613a2f61342c565b613a4381613a3d84546138ef565b846139c6565b602080601f831160018114613a785760008415613a605750858301515b600019600386901b1c1916600185901b178555613a0e565b600085815260208120601f198616915b82811015613aa757888601518255948401946001909101908401613a88565b5085821015613ac55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000613ae860408301856135ad565b8281036020840152612f0581856135ad565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8082028115828204841417610ce957610ce96137d3565b600081613b6b57613b6b6137d3565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613ba657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613be6578160001904821115613bcc57613bcc6137d3565b80851615613bd957918102915b93841c9390800290613bb0565b509250929050565b600082613bfd57506001610ce9565b81613c0a57506000610ce9565b8160018114613c205760028114613c2a57613c46565b6001915050610ce9565b60ff841115613c3b57613c3b6137d3565b50506001821b610ce9565b5060208310610133831016604e8410600b8410161715613c69575081810a610ce9565b613c738383613bab565b8060001904821115613c8757613c876137d3565b029392505050565b60006125f161ffff841683613bee565b60008251613cb1818460208701613589565b9190910192915050565b600060208284031215613ccd57600080fd5b815180151581146125f157600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208a05a45507e2c645ea742e1dde2361088156136845f3eb865a9b1cebc4ef909c64736f6c63430008170033",
    "sourceMap": "1336:6122:377:-:0;;;1831:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1905:19;-1:-1:-1;;;;;1735:33:91;;1727:55;;;;-1:-1:-1;;;1727:55:91;;511:2:821;1727:55:91;;;493:21:821;550:1;530:18;;;523:29;-1:-1:-1;;;568:18:821;;;561:39;617:18;;1727:55:91;;;;;;;;;-1:-1:-1;;;;;1793:40:91;;;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:450;1713:19:476;:23;;;3387:66:450;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;848:2:821;3325:201:450;;;830:21:821;887:2;867:18;;;860:30;926:34;906:18;;;899:62;-1:-1:-1;;;977:18:821;;;970:44;1031:19;;3325:201:450;646:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3651:14;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;1213:36:821;;3721:14:450;;1201:2:821;1186:18;3721:14:450;;;;;;;3647:99;3269:483;1831:97:377;1336:6122;;14:290:821;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:821;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:821:o;1061:194::-;1336:6122:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061019c5760003560e01c80639bdcecd1116100dd5780639bdcecd1146104c8578063a0a8e460146104fd578063a217fddf14610519578063a32fa5b31461052e578063a694fc3a1461054e578063ac9650d814610561578063b218f0691461058e578063b9f7a7b5146105ae578063c3453153146105d0578063ca15c873146105f0578063cb2ef6f714610610578063cb43b2dd14610630578063d547741f14610650578063d68124c714610670578063df6543761461069d578063e8a3d485146106bd578063f7c618c1146106df57600080fd5b80621b79341461022557806316c621e014610245578063248a9ca3146102585780632e1a7d4d146102985780632f2ff15d146102b857806336568abe146102d8578063372500ab146102f85780635357e9161461030d578063572b6c051461033a57806372f702f31461036a5780638caaa2711461038a5780639010d07c146103a05780639168ae72146103c057806391d1485414610449578063938e3d7b1461046957806393ce53431461048957806397e1b4bc1461049e57600080fd5b3661022057336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021e5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561023157600080fd5b5061021e61024036600461337f565b6106ff565b61021e6102533660046133a1565b610871565b34801561026457600080fd5b506102856102733660046133a1565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b3480156102a457600080fd5b5061021e6102b33660046133a1565b610a88565b3480156102c457600080fd5b5061021e6102d33660046133d1565b610aa3565b3480156102e457600080fd5b5061021e6102f33660046133d1565b610b3d565b34801561030457600080fd5b5061021e610b9c565b34801561031957600080fd5b5061032d6103283660046133a1565b610bb8565b60405161028f91906133fd565b34801561034657600080fd5b5061035a610355366004613411565b610be2565b604051901515815260200161028f565b34801561037657600080fd5b50609b5461032d906001600160a01b031681565b34801561039657600080fd5b50610285609c5481565b3480156103ac57600080fd5b5061032d6103bb36600461337f565b610c00565b3480156103cc57600080fd5b506104176103db366004613411565b609e602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b03909316602085015291830152606082015260800161028f565b34801561045557600080fd5b5061035a6104643660046133d1565b610cef565b34801561047557600080fd5b5061021e6104843660046134e1565b610d1a565b34801561049557600080fd5b5060a154610285565b3480156104aa57600080fd5b506104b3610d47565b6040805192835260208301919091520161028f565b3480156104d457600080fd5b50609b546104ea90600160b01b900461ffff1681565b60405161ffff909116815260200161028f565b34801561050957600080fd5b506040516001815260200161028f565b34801561052557600080fd5b50610285600081565b34801561053a57600080fd5b5061035a6105493660046133d1565b610dd4565b61021e61055c3660046133a1565b610e2a565b34801561056d57600080fd5b5061058161057c366004613515565b610e3b565b60405161028f91906135d9565b34801561059a57600080fd5b5061021e6105a9366004613654565b610fae565b3480156105ba57600080fd5b50609b546104ea90600160a01b900461ffff1681565b3480156105dc57600080fd5b506104b36105eb366004613411565b61110a565b3480156105fc57600080fd5b5061028561060b3660046133a1565b611137565b34801561061c57600080fd5b5069546f6b656e5374616b6560b01b610285565b34801561063c57600080fd5b5061021e61064b3660046133a1565b6111c0565b34801561065c57600080fd5b5061021e61066b3660046133d1565b6113ad565b34801561067c57600080fd5b506106856113c6565b6040516001600160501b03909116815260200161028f565b3480156106a957600080fd5b5061021e6106b836600461366f565b611416565b3480156106c957600080fd5b506106d261171e565b60405161028f9190613798565b3480156106eb57600080fd5b5060a05461032d906001600160a01b031681565b6107076117ac565b6107235760405162461bcd60e51b8152600401610215906137ab565b6000609f60006001609b60189054906101000a90046001600160401b031661074b91906137e9565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806107cb575080608001518214155b6108115760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b6044820152606401610215565b805161081e9084846117bf565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b61087961197d565b61088660006104646119d6565b6108a25760405162461bcd60e51b8152600401610215906137ab565b60a0546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108dc5760a0546001600160a01b03166108fe565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161092e91906133fd565b602060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190613810565b60a0549091506109b2906001600160a01b031661098a6119d6565b30867f00000000000000000000000000000000000000000000000000000000000000006119e0565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016109e191906133fd565b602060405180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190613810565b610a2c9190613829565b90508060a16000828254610a40919061383c565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a1505050610a856001606955565b50565b610a9061197d565b610a9981611b58565b610a856001606955565b600082815260036020526040902054610abc9033611e73565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610b2f5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610215565b610b398282611ef3565b5050565b336001600160a01b03821614610b925760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610215565b610b398282611f07565b610ba461197d565b610bac611f5e565b610bb66001606955565b565b609d8181548110610bc857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b60008281526004602052604081205481805b82811015610ce55760008681526004602090815260408083208484526001019091529020546001600160a01b031615610c8e57848203610c7c5760008681526004602090815260408083209383526001909301905220546001600160a01b03169250610ce9915050565b610c8760018361383c565b9150610cd3565b610c99866000610cef565b8015610cc05750600086815260046020908152604080832083805260020190915290205481145b15610cd357610cd060018361383c565b91505b610cde60018261383c565b9050610c12565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610d226117ac565b610d3e5760405162461bcd60e51b8152600401610215906137ab565b610a858161212c565b600080609f60006001609b60189054906101000a90046001600160401b0316610d7091906137e9565b6001600160401b03168152602001908152602001600020600101549150609f60006001609b60189054906101000a90046001600160401b0316610db391906137e9565b6001600160401b031681526020019081526020016000206002015490509091565b600082815260026020908152604080832083805290915281205460ff16610e21575060008281526002602090815260408083206001600160a01b038516845290915290205460ff16610ce9565b50600192915050565b610e3261197d565b610a99816121fc565b6060816001600160401b03811115610e5557610e5561342c565b604051908082528060200260200182016040528015610e8857816020015b6060815260200190600190039081610e735790505b5090506000610e956119d6565b9050336001600160a01b038216141560005b84811015610ce5578115610f2657610f0430878784818110610ecb57610ecb61384f565b9050602002810190610edd9190613865565b86604051602001610ef0939291906138ab565b6040516020818303038152906040526125cc565b848281518110610f1657610f1661384f565b6020026020010181905250610fa6565b610f8830878784818110610f3c57610f3c61384f565b9050602002810190610f4e9190613865565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125cc92505050565b848281518110610f9a57610f9a61384f565b60200260200101819052505b600101610ea7565b610fb66117ac565b610fd25760405162461bcd60e51b8152600401610215906137ab565b6000609f60006001609b60189054906101000a90046001600160401b0316610ffa91906137e9565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b90910481169382019390935260018201546060820152600290910154608082015292508316036110ac5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610215565b6110bf82826060015183608001516117bf565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b0381166000908152609e602052604081206001015490611130836125f8565b9050915091565b600081815260046020526040812054815b8181101561119b5760008481526004602090815260408083208484526001019091529020546001600160a01b0316156111895761118660018461383c565b92505b61119460018261383c565b9050611148565b506111a7836000610cef565b156111ba576111b760018361383c565b91505b50919050565b6111c861197d565b6111d560006104646119d6565b6111f15760405162461bcd60e51b8152600401610215906137ab565b60a154811161120d578060a1546112089190613829565b611210565b60005b60a15560a054611253906001600160a01b03163061122c6119d6565b847f00000000000000000000000000000000000000000000000000000000000000006119e0565b609b546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461128d57609b546001600160a01b03166112af565b7f00000000000000000000000000000000000000000000000000000000000000005b9050609c54816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016112e091906133fd565b602060405180830381865afa1580156112fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113219190613810565b101561136f5760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e00006044820152606401610215565b6040518281527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150610a856001606955565b600082815260036020526040902054610b929033611e73565b6000609f60006001609b60189054906101000a90046001600160401b03166113ee91906137e9565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b600054610100900460ff16158080156114365750600054600160ff909116105b80611457575061144530612670565b158015611457575060005460ff166001145b6114ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610215565b6000805460ff1916600117905580156114dd576000805461ff0019166101001790555b6114e68761267f565b846001600160a01b0316866001600160a01b03160361155d5760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b6064820152608401610215565b60a080546001600160a01b0319166001600160a01b038881169190911790915560009073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9087161461160457856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ff91906138cc565b611607565b60125b60ff16905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461169957876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611670573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169491906138cc565b61169c565b60125b60ff1690506116ac878383612704565b6116b78686866117bf565b6116c08a61212c565b6116cb60008c611ef3565b50508015611713576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001805461172b906138ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611757906138ef565b80156117a45780601f10611779576101008083540402835291602001916117a4565b820191906000526020600020905b81548152906001019060200180831161178757829003601f168201915b505050505081565b60006117ba816104646119d6565b905090565b806000036117fd5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b6044820152606401610215565b826001600160501b031660000361184d5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610215565b609b8054600160c01b90046001600160401b03169060019060186118718385613923565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a8152898452609f9094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b03199095169190951617929092179190911691909117825591516001820155905160029091015580156119775742609f6000611941600185613829565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b6002606954036119cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610215565b6002606955565b60006117ba61280e565b8115611b4a5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611b3e57306001600160a01b03851603611a8557604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611a5d57600080fd5b505af1158015611a71573d6000803e3d6000fd5b50505050611a80838383612830565b611b4a565b306001600160a01b03841603611b3357348214611ada5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610215565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b1557600080fd5b505af1158015611b29573d6000803e3d6000fd5b5050505050611b4a565b611a80838383612830565b611b4a858585856128f5565b5050505050565b6001606955565b6000609e6000611b6661294d565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010154905081600003611bd35760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610215565b81811015611c225760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610215565b611c32611c2d61294d565b612957565b818103611d88576000609d805480602002602001604051908101604052809291908181526020018280548015611c9157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c73575b5050505050905060005b8151811015611d8557611cac61294d565b6001600160a01b0316828281518110611cc757611cc761384f565b60200260200101516001600160a01b031603611d7d578160018351611cec9190613829565b81518110611cfc57611cfc61384f565b6020026020010151609d8281548110611d1757611d1761384f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550609d805480611d5657611d56613943565b600082815260209020810160001990810180546001600160a01b0319169055019055611d85565b600101611c9b565b50505b81609e6000611d9561294d565b6001600160a01b03166001600160a01b031681526020019081526020016000206001016000828254611dc79190613829565b9250508190555081609c6000828254611de09190613829565b9091555050609b54611e25906001600160a01b031630611dfe61294d565b857f00000000000000000000000000000000000000000000000000000000000000006119e0565b611e2d61294d565b6001600160a01b03167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b83604051611e6791815260200190565b60405180910390a25050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16610b3957611eb1816001600160a01b03166014612a2e565b611ebc836020612a2e565b604051602001611ecd929190613959565b60408051601f198184030181529082905262461bcd60e51b825261021591600401613798565b611efd8282612bc9565b610b398282612c24565b611f118282612c91565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f70611f6b61294d565b612cf3565b609e6000611f7c61294d565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020154611faa919061383c565b905080600003611fe95760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610215565b426001600160501b0316609e6000611fff61294d565b6001600160a01b031681526020810191909152604001600090812080546001600160801b0319166001600160801b039390931692909217909155609e8161204461294d565b6001600160a01b03168152602081019190915260400160002060020155609b5461208090600190600160c01b90046001600160401b03166137e9565b609e600061208c61294d565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790556120df6120d961294d565b82612f0e565b6120e761294d565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161212191815260200190565b60405180910390a250565b60006001805461213b906138ef565b80601f0160208091040260200160405190810160405280929190818152602001828054612167906138ef565b80156121b45780601f10612189576101008083540402835291602001916121b4565b820191906000526020600020905b81548152906001019060200180831161219757829003601f168201915b5050505050905081600190816121ca9190613a16565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110fe929190613ad5565b8060000361223f5760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610215565b609b546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed190161229057507f00000000000000000000000000000000000000000000000000000000000000006122da565b34156122cc5760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b6044820152606401610215565b50609b546001600160a01b03165b6000609e60006122e861294d565b6001600160a01b03166001600160a01b031681526020019081526020016000206001015411156123225761231d611c2d61294d565b612417565b609d61232c61294d565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b0392909216919091179055426001600160501b031690609e9061237261294d565b6001600160a01b03168152602081019190915260400160002080546001600160801b0319166001600160801b0392909216919091179055609b546123c890600190600160c01b90046001600160401b03166137e9565b609e60006123d461294d565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906124469030906004016133fd565b602060405180830381865afa158015612463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124879190613810565b609b549091506124a2906001600160a01b031661098a61294d565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016124d191906133fd565b602060405180830381865afa1580156124ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125129190613810565b61251c9190613829565b905080609e600061252b61294d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461255d919061383c565b9250508190555080609c6000828254612576919061383c565b90915550612584905061294d565b6001600160a01b03167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef826040516125be91815260200190565b60405180910390a250505050565b60606125f18383604051806060016040528060278152602001613cde60279139612fab565b9392505050565b6001600160a01b0381166000908152609e6020526040812060010154810361263957506001600160a01b03166000908152609e602052604090206002015490565b61264282612cf3565b6001600160a01b0383166000908152609e6020526040902060020154612668919061383c565b90505b919050565b6001600160a01b03163b151590565b600054610100900460ff166126a65760405162461bcd60e51b815260040161021590613afa565b60005b8151811015610b39576001603760008484815181106126ca576126ca61384f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016126a9565b600054610100900460ff1661272b5760405162461bcd60e51b815260040161021590613afa565b612733613023565b6001600160a01b03831661277b5760405162461bcd60e51b815260206004820152600f60248201526e0746f6b656e2061646472657373203608c1b6044820152606401610215565b61ffff821615801590612791575061ffff811615155b6127ca5760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b6044820152606401610215565b609b80546001600160a01b03949094166001600160b01b031990941693909317600160a01b61ffff938416021761ffff60b01b1916600160b01b9190921602179055565b600061281933610be2565b1561282b575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461287d576040519150601f19603f3d011682016040523d82523d6000602084013e612882565b606091505b505090508061197757816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156128c657600080fd5b505af11580156128da573d6000803e3d6000fd5b50611977935050506001600160a01b03841690508585613052565b816001600160a01b0316836001600160a01b0316031561197757306001600160a01b03841603612938576129336001600160a01b0385168383613052565b611977565b6119776001600160a01b0385168484846130ba565b60006117ba6119d6565b600061296282612cf3565b6001600160a01b0383166000908152609e602052604081206002018054929350839290919061299290849061383c565b90915550506001600160a01b0382166000908152609e6020526040902080546001600160801b0319166001600160501b034216179055609b546129e8906001906001600160401b03600160c01b909104166137e9565b6001600160a01b039092166000908152609e6020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b60606000612a3d836002613b45565b612a4890600261383c565b6001600160401b03811115612a5f57612a5f61342c565b6040519080825280601f01601f191660200182016040528015612a89576020820181803683370190505b509050600360fc1b81600081518110612aa457612aa461384f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612ad357612ad361384f565b60200101906001600160f81b031916908160001a9053506000612af7846002613b45565b612b0290600161383c565b90505b6001811115612b7a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612b3657612b3661384f565b1a60f81b828281518110612b4c57612b4c61384f565b60200101906001600160f81b031916908160001a90535060049490941c93612b7381613b5c565b9050612b05565b5083156125f15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610215565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612c43838561383c565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612c9b8282611e73565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0381166000908152609e60209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b90910481169482018590526001830154938201939093526002909101546060820152609b54909291600160c01b90910416815b81811015612eb9576000818152609f60209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083015260020154608082015290848303612dd7578551612de6565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b0316600003612e0e5742612e1d565b82604001516001600160501b03165b9050600080612e4a89604001518585612e369190613829565b612e409190613b45565b86606001516130f2565b91509150600080612e828c886080015189600001516001600160501b031686612e739190613b89565b612e7d9190613b89565b61313d565b91509150838015612e905750815b612e9a578b612e9c565b805b9b5050505050505050600181612eb2919061383c565b9050612d64565b50609b54612ede908590612ed990600160b01b900461ffff16600a613c8f565b6130f2565b609b54909550612efb9150600160a01b900461ffff16600a613c8f565b612f059085613b89565b95945050505050565b60a154811115612f5b5760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610215565b8060a16000828254612f6d9190613829565b909155505060a054610b39906001600160a01b03163084847f00000000000000000000000000000000000000000000000000000000000000006119e0565b6060600080856001600160a01b031685604051612fc89190613c9f565b600060405180830381855af49150503d8060008114613003576040519150601f19603f3d011682016040523d82523d6000602084013e613008565b606091505b509150915061301986838387613158565b9695505050505050565b600054610100900460ff1661304a5760405162461bcd60e51b815260040161021590613afa565b610bb66131d7565b6040516001600160a01b0383166024820152604481018290526130b590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526131fe565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119779085906323b872dd60e01b9060840161307e565b600080836000036131095750600190506000613136565b8383028385828161311c5761311c613b73565b041461312f576000809250925050613136565b6001925090505b9250929050565b6000808383018481101561312f576000809250925050613136565b606083156131c55782516000036131be5761317285612670565b6131be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b50816131cf565b6131cf83836132d0565b949350505050565b600054610100900460ff16611b515760405162461bcd60e51b815260040161021590613afa565b6000613253826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132fa9092919063ffffffff16565b8051909150156130b557808060200190518101906132719190613cbb565b6130b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b8151156132e05781518083602001fd5b8060405162461bcd60e51b81526004016102159190613798565b60606131cf848460008585600080866001600160a01b031685876040516133219190613c9f565b60006040518083038185875af1925050503d806000811461335e576040519150601f19603f3d011682016040523d82523d6000602084013e613363565b606091505b509150915061337487838387613158565b979650505050505050565b6000806040838503121561339257600080fd5b50508035926020909101359150565b6000602082840312156133b357600080fd5b5035919050565b80356001600160a01b038116811461266b57600080fd5b600080604083850312156133e457600080fd5b823591506133f4602084016133ba565b90509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561342357600080fd5b6125f1826133ba565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561346a5761346a61342c565b604052919050565b600082601f83011261348357600080fd5b81356001600160401b0381111561349c5761349c61342c565b6134af601f8201601f1916602001613442565b8181528460208386010111156134c457600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156134f357600080fd5b81356001600160401b0381111561350957600080fd5b6131cf84828501613472565b6000806020838503121561352857600080fd5b82356001600160401b038082111561353f57600080fd5b818501915085601f83011261355357600080fd5b81358181111561356257600080fd5b8660208260051b850101111561357757600080fd5b60209290920196919550909350505050565b60005b838110156135a457818101518382015260200161358c565b50506000910152565b600081518084526135c5816020860160208601613589565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561363057603f1988860301845261361e8583516135ad565b94509285019290850190600101613602565b5092979650505050505050565b80356001600160501b038116811461266b57600080fd5b60006020828403121561366657600080fd5b6125f18261363d565b600080600080600080600080610100898b03121561368c57600080fd5b613695896133ba565b97506020808a01356001600160401b03808211156136b257600080fd5b6136be8d838e01613472565b995060408c01359150808211156136d457600080fd5b818c0191508c601f8301126136e857600080fd5b8135818111156136fa576136fa61342c565b8060051b915061370b848301613442565b818152918301840191848101908f84111561372557600080fd5b938501935b8385101561374a5761373b856133ba565b8252938501939085019061372a565b809b5050505050505061375f60608a016133ba565b945061376d60808a016133ba565b935061377b60a08a0161363d565b925060c0890135915060e089013590509295985092959890939650565b6020815260006125f160208301846135ad565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03828116828216039080821115613809576138096137d3565b5092915050565b60006020828403121561382257600080fd5b5051919050565b81810381811115610ce957610ce96137d3565b80820180821115610ce957610ce96137d3565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261387c57600080fd5b8301803591506001600160401b0382111561389657600080fd5b60200191503681900382131561313657600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b6000602082840312156138de57600080fd5b815160ff811681146125f157600080fd5b600181811c9082168061390357607f821691505b6020821081036111ba57634e487b7160e01b600052602260045260246000fd5b6001600160401b03818116838216019080821115613809576138096137d3565b634e487b7160e01b600052603160045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613989816015850160208801613589565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516139ba816026840160208801613589565b01602601949350505050565b601f8211156130b5576000816000526020600020601f850160051c810160208610156139ef5750805b601f850160051c820191505b81811015613a0e578281556001016139fb565b505050505050565b81516001600160401b03811115613a2f57613a2f61342c565b613a4381613a3d84546138ef565b846139c6565b602080601f831160018114613a785760008415613a605750858301515b600019600386901b1c1916600185901b178555613a0e565b600085815260208120601f198616915b82811015613aa757888601518255948401946001909101908401613a88565b5085821015613ac55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000613ae860408301856135ad565b8281036020840152612f0581856135ad565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8082028115828204841417610ce957610ce96137d3565b600081613b6b57613b6b6137d3565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613ba657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613be6578160001904821115613bcc57613bcc6137d3565b80851615613bd957918102915b93841c9390800290613bb0565b509250929050565b600082613bfd57506001610ce9565b81613c0a57506000610ce9565b8160018114613c205760028114613c2a57613c46565b6001915050610ce9565b60ff841115613c3b57613c3b6137d3565b50506001821b610ce9565b5060208310610133831016604e8410600b8410161715613c69575081810a610ce9565b613c738383613bab565b8060001904821115613c8757613c876137d3565b029392505050565b60006125f161ffff841683613bee565b60008251613cb1818460208701613589565b9190910192915050565b600060208284031215613ccd57600080fd5b815180151581146125f157600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208a05a45507e2c645ea742e1dde2361088156136845f3eb865a9b1cebc4ef909c64736f6c63430008170033",
    "sourceMap": "1336:6122:377:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3555:10;-1:-1:-1;;;;;3569:18:377;3555:32;;3547:77;;;;-1:-1:-1;;;3547:77:377;;216:2:821;3547:77:377;;;198:21:821;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;3547:77:377;;;;;;;;;1336:6122;;;;;4654:700:91;;;;;;;;;;-1:-1:-1;4654:700:91;;;;;:::i;:::-;;:::i;3680:752:377:-;;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;;;;1144:25:821;;;1132:2;1117:18;2738:120:71;;;;;;;;3043:92:91;;;;;;;;;;-1:-1:-1;3043:92:91;;;;;:::i;:::-;;:::i;3253:271:71:-;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;3364:78:91:-;;;;;;;;;;;;;:::i;1336:29::-;;;;;;;;;;-1:-1:-1;1336:29:91;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:134:211:-;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;:::-;;;2181:14:821;;2174:22;2156:41;;2144:2;2129:18;918:134:211;2016:187:821;861:27:91;;;;;;;;;;-1:-1:-1;861:27:91;;;;-1:-1:-1;;;;;861:27:91;;;1233:34;;;;;;;;;;;;;;;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1457:41:91:-;;;;;;;;;;-1:-1:-1;1457:41:91;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1457:41:91;;;-1:-1:-1;;;1457:41:91;;;-1:-1:-1;;;;;1457:41:91;;;;;;;;;-1:-1:-1;;;;;2890:32:821;;;2872:51;;-1:-1:-1;;;;;2959:31:821;;;2954:2;2939:18;;2932:59;3007:18;;;3000:34;3065:2;3050:18;;3043:34;2859:3;2844:19;1457:41:91;2643:440:821;1322:131:71;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;5513:116:377:-;;;;;;;;;;-1:-1:-1;5604:18:377;;5513:116;;5999:264:91;;;;;;;;;;;;;:::i;:::-;;;;4537:25:821;;;4593:2;4578:18;;4571:34;;;;4510:18;5999:264:91;4363:248:821;1015:33:91;;;;;;;;;;-1:-1:-1;1015:33:91;;;;-1:-1:-1;;;1015:33:91;;;;;;;;;4790:6:821;4778:19;;;4760:38;;4748:2;4733:18;1015:33:91;4616:188:821;3331:103:377;;;;;;;;;;-1:-1:-1;3331:103:377;;1622:1;4951:36:821;;4939:2;4924:18;3331:103:377;4809:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;2204:211;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;2741:94:91:-;;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3713:481:91:-;;;;;;;;;;-1:-1:-1;3713:481:91;;;;;:::i;:::-;;:::i;935:34::-;;;;;;;;;;-1:-1:-1;935:34:91;;;;-1:-1:-1;;;935:34:91;;;;;;5629:220;;;;;;;;;;-1:-1:-1;5629:220:91;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;3176:99:377:-;;;;;;;;;;-1:-1:-1;;;;3176:99:377;;4492:945;;;;;;;;;;-1:-1:-1;4492:945:377;;;;;:::i;:::-;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;5855:138:91:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;7491:31:821;;;7473:50;;7461:2;7446:18;5855:138:91;7329:200:821;1993:1123:377;;;;;;;;;;-1:-1:-1;1993:1123:377;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1697:26:377:-;;;;;;;;;;-1:-1:-1;1697:26:377;;;;-1:-1:-1;;;;;1697:26:377;;;4654:700:91;4752:24;:22;:24::i;:::-;4747:80;;4792:24;;-1:-1:-1;;;4792:24:91;;;;;;;:::i;4747:80::-;4837:33;4873:17;:38;4909:1;4891:15;;;;;;;;;-1:-1:-1;;;;;4891:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;4873:38:91;;;;;;;;;;;;;;;-1:-1:-1;4873:38:91;4837:74;;;;;;;;;-1:-1:-1;;;;;4837:74:91;;;;;-1:-1:-1;;;4837:74:91;;;;;;;;;;;-1:-1:-1;;;4837:74:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4942:44:91;;;;:96;;;5006:9;:32;;;4990:12;:48;;4942:96;4921:166;;;;-1:-1:-1;;;4921:166:91;;10215:2:821;4921:166:91;;;10197:21:821;10254:2;10234:18;;;10227:30;-1:-1:-1;;;10273:18:821;;;10266:53;10336:18;;4921:166:91;10013:347:821;4921:166:91;5118:18;;5097:66;;5138:10;5150:12;5097:20;:66::i;:::-;5211:30;;;;;5279:32;;;;;5179:168;;;10596:25:821;;;10652:2;10637:18;;10630:34;;;10680:18;;10673:34;10723:18;;;10716:34;;;5179:168:91;;10568:19:821;5179:168:91;;;;;;;4737:617;4654:700;;:::o;3680:752:377:-;2505:21:452;:19;:21::i;:::-;3774:41:377::1;785:4:71;3802:12:377;:10;:12::i;3774:41::-;3766:68;;;;-1:-1:-1::0;;;3766:68:377::1;;;;;;;:::i;:::-;3868:11;::::0;3845:20:::1;::::0;-1:-1:-1;;;;;3868:11:377::1;434:42:292;3868:47:377;:82;;3939:11;::::0;-1:-1:-1;;;;;3939:11:377::1;3868:82;;;3918:18;3868:82;3845:105;;3961:21;3992:12;-1:-1:-1::0;;;;;3985:30:377::1;;4024:4;3985:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4101:11;::::0;3961:69;;-1:-1:-1;4040:188:377::1;::::0;-1:-1:-1;;;;;4101:11:377::1;4126:12;:10;:12::i;:::-;4160:4;4179:7;4200:18;4040:47;:188::i;:::-;4238:20;4309:13;4268:12;-1:-1:-1::0;;;;;4261:30:377::1;;4300:4;4261:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;4238:84;;4355:12;4333:18;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4383:42:377::1;::::0;1144:25:821;;;4383:42:377::1;::::0;1132:2:821;1117:18;4383:42:377::1;;;;;;;3756:676;;;2547:20:452::0;1787:1;3053:7;:22;2873:209;2547:20;3680:752:377;:::o;3043:92:91:-;2505:21:452;:19;:21::i;:::-;3110:18:91::1;3120:7;3110:9;:18::i;:::-;2547:20:452::0;1787:1;3053:7;:22;2873:209;3253:271:71;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;11415:2:821;3433:39:71;;;11397:21:821;11454:2;11434:18;;;11427:30;11493:31;11473:18;;;11466:59;11542:18;;3433:39:71;11213:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;:::-;3253:271;;:::o;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;11773:2:821;4592:36:71;;;11755:21:821;11812:2;11792:18;;;11785:30;-1:-1:-1;;;11831:18:821;;;11824:56;11897:18;;4592:36:71;11571:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;3364:78:91:-;2505:21:452;:19;:21::i;:::-;3420:15:91::1;:13;:15::i;:::-;2547:20:452::0;1787:1;3053:7;:22;2873:209;2547:20;3364:78:91:o;1336:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1336:29:91;;-1:-1:-1;1336:29:91;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5999:264:91:-;6046:18;6066:20;6111:17;:38;6147:1;6129:15;;;;;;;;;-1:-1:-1;;;;;6129:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;6111:38:91;;;;;;;;;;;;:59;;;6098:72;;6195:17;:38;6231:1;6213:15;;;;;;;;;-1:-1:-1;;;;;6213:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;6195:38:91;;;;;;;;;;;;:61;;;6180:76;;5999:264;;:::o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;2741:94:91:-;2505:21:452;:19;:21::i;:::-;2813:15:91::1;2820:7;2813:6;:15::i;696:567:65:-:0;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;3713:481:91;3784:24;:22;:24::i;:::-;3779:80;;3824:24;;-1:-1:-1;;;3824:24:91;;;;;;;:::i;3779:80::-;3869:33;3905:17;:38;3941:1;3923:15;;;;;;;;;-1:-1:-1;;;;;3923:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;3905:38:91;;;;;;;;;;;;;;;-1:-1:-1;3905:38:91;3869:74;;;;;;;;;-1:-1:-1;;;;;3869:74:91;;;;;;-1:-1:-1;;;3869:74:91;;;;;;;;;;;-1:-1:-1;;;3869:74:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3961:31:91;;;3953:64;;;;-1:-1:-1;;;3953:64:91;;13143:2:821;3953:64:91;;;13125:21:821;13182:2;13162:18;;;13155:30;-1:-1:-1;;;13201:18:821;;;13194:50;13261:18;;3953:64:91;12941:344:821;3953:64:91;4028:97;4049:9;4060;:30;;;4092:9;:32;;;4028:20;:97::i;:::-;4157:18;;4141:46;;;-1:-1:-1;;;;;13517:15:821;;;13499:34;;13569:15;;;13564:2;13549:18;;13542:43;4141:46:91;;13435:18:821;4141:46:91;;;;;;;;3769:425;3713:481;:::o;5629:220::-;-1:-1:-1;;;;;5766:16:91;;5699:21;5766:16;;;:7;:16;;;;;:29;;;;5816:26;5774:7;5816:17;:26::i;:::-;5805:37;;5629:220;;;:::o;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;4492:945:377:-;2505:21:452;:19;:21::i;:::-;4579:41:377::1;785:4:71;4607:12:377;:10;:12::i;4579:41::-;4571:68;;;;-1:-1:-1::0;;;4571:68:377::1;;;;;;;:::i;:::-;4740:18;;4730:7;:28;:63;;4786:7;4765:18;;:28;;;;:::i;:::-;4730:63;;;4761:1;4730:63;4709:18;:84:::0;4865:11:::1;::::0;4804:188:::1;::::0;-1:-1:-1;;;;;4865:11:377::1;4898:4;4917:12;:10;:12::i;:::-;4943:7;4964:18;4804:47;:188::i;:::-;5137:12;::::0;5113:21:::1;::::0;-1:-1:-1;;;;;5137:12:377::1;434:42:292;5137:48:377;:84;;5209:12;::::0;-1:-1:-1;;;;;5209:12:377::1;5137:84;;;5188:18;5137:84;5113:108;;5302:19;;5259:13;-1:-1:-1::0;;;;;5252:31:377::1;;5292:4;5252:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;5231:146;;;::::0;-1:-1:-1;;;5231:146:377;;13798:2:821;5231:146:377::1;::::0;::::1;13780:21:821::0;13837:2;13817:18;;;13810:30;13876:32;13856:18;;;13849:60;13926:18;;5231:146:377::1;13596:354:821::0;5231:146:377::1;5393:37;::::0;1144:25:821;;;5393:37:377::1;::::0;1132:2:821;1117:18;5393:37:377::1;;;;;;;4561:876;2547:20:452::0;1787:1;3053:7;:22;2873:209;3895:171:71;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;5855:138:91:-;5899:16;5939:17;:38;5975:1;5957:15;;;;;;;;;-1:-1:-1;;;;;5957:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;5939:38:91;;;;;;;;;;;;-1:-1:-1;5939:38:91;:47;-1:-1:-1;;;;;5939:47:91;;5855:138;-1:-1:-1;5855:138:91:o;1993:1123:377:-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;14157:2:821;3325:201:450;;;14139:21:821;14196:2;14176:18;;;14169:30;14235:34;14215:18;;;14208:62;-1:-1:-1;;;14286:18:821;;;14279:44;14340:19;;3325:201:450;13955:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;2329:51:377::1;2361:18;2329:31;:51::i;:::-;2415:13;-1:-1:-1::0;;;;;2399:29:377::1;:12;-1:-1:-1::0;;;;;2399:29:377::1;::::0;2391:87:::1;;;::::0;-1:-1:-1;;;2391:87:377;;14572:2:821;2391:87:377::1;::::0;::::1;14554:21:821::0;14611:2;14591:18;;;14584:30;14650:34;14630:18;;;14623:62;-1:-1:-1;;;14701:18:821;;;14694:43;14754:19;;2391:87:377::1;14370:409:821::0;2391:87:377::1;2488:11;:26:::0;;-1:-1:-1;;;;;;2488:26:377::1;-1:-1:-1::0;;;;;2488:26:377;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;434:42:292::1;2556:49:377::0;;::::1;;:121;;2652:13;-1:-1:-1::0;;;;;2637:38:377::1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2556:121;;;2620:2;2556:121;2525:152;;::::0;-1:-1:-1;2687:27:377::1;-1:-1:-1::0;;;;;2717:48:377;::::1;434:42:292;2717:48:377;:119;;2812:12;-1:-1:-1::0;;;;;2797:37:377::1;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2717:119;;;2780:2;2717:119;2687:149;;;;2847:76;2864:13;2879:21;2902:20;2847:16;:76::i;:::-;2933:79;2954:9;2965:21;2988:23;2933:20;:79::i;:::-;3023:31;3041:12;3023:17;:31::i;:::-;3064:45;785:4:71;3095:13:377::0;3064:10:::1;:45::i;:::-;2319:797;;3651:14:450::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;4951:36:821;;3721:14:450;;4939:2:821;4924:18;3721:14:450;;;;;;;3647:99;3269:483;1993:1123:377;;;;;;;;:::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6563:137:377:-;6629:4;6652:41;6629:4;6680:12;:10;:12::i;6652:41::-;6645:48;;6563:137;:::o;10439:711:91:-;10564:12;10580:1;10564:17;10556:41;;;;-1:-1:-1;;;10556:41:91;;15848:2:821;10556:41:91;;;15830:21:821;15887:2;15867:18;;;15860:30;-1:-1:-1;;;15906:18:821;;;15899:41;15957:18;;10556:41:91;15646:335:821;10556:41:91;10615:9;-1:-1:-1;;;;;10615:14:91;10628:1;10615:14;10607:47;;;;-1:-1:-1;;;10607:47:91;;16188:2:821;10607:47:91;;;16170:21:821;16227:2;16207:18;;;16200:30;-1:-1:-1;;;16246:18:821;;;16239:50;16306:18;;10607:47:91;15986:344:821;10607:47:91;10686:15;;;-1:-1:-1;;;10686:15:91;;-1:-1:-1;;;;;10686:15:91;;10730:1;;10686:15;10711:20;10730:1;10686:15;10711:20;:::i;:::-;;;-1:-1:-1;;;;;10711:20:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10775:239:91;;;;;;;;-1:-1:-1;;;;;10775:239:91;;;;;10958:15;10775:239;;;;;;;;;-1:-1:-1;10775:239:91;;;;;;;;;;;;;;;;;;10742:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10742:272:91;-1:-1:-1;;;;;;;;10742:272:91;;;-1:-1:-1;;;10742:272:91;-1:-1:-1;;;;;;10742:272:91;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10742:272:91;;;;;;;;;;11029:15;;11025:119;;11117:15;11060:17;:34;11078:15;11092:1;11078:11;:15;:::i;:::-;11060:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;11060:73:91;;;;;-1:-1:-1;;;;;11060:73:91;;;;;;11025:119;10546:604;10439:711;;;:::o;2580:287:452:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:452;;16722:2:821;2704:63:452;;;16704:21:821;16761:2;16741:18;;;16734:30;16800:33;16780:18;;;16773:61;16851:18;;2704:63:452;16520:355:821;2704:63:452;1830:1;2842:7;:18;2580:287::o;7234:222:377:-;7374:14;7411:38;:36;:38::i;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;1144:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;1117:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;:::-;1221:761;;1266:626;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;17082:2:821;1645:52:292;;;17064:21:821;17121:2;17101:18;;;17094:30;-1:-1:-1;;;17140:18:821;;;17133:49;17199:18;;1645:52:292;16880:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:761;;1552:340;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;:::-;967:1021;;;;;:::o;2873:209:452:-;1787:1;3053:7;:22;2873:209::o;7875:1104:91:-;7938:21;7962:7;:26;7970:17;:15;:17::i;:::-;-1:-1:-1;;;;;7962:26:91;-1:-1:-1;;;;;7962:26:91;;;;;;;;;;;;:39;;;7938:63;;8019:7;8030:1;8019:12;8011:45;;;;-1:-1:-1;;;8011:45:91;;17430:2:821;8011:45:91;;;17412:21:821;17469:2;17449:18;;;17442:30;-1:-1:-1;;;17488:18:821;;;17481:50;17548:18;;8011:45:91;17228:344:821;8011:45:91;8091:7;8074:13;:24;;8066:65;;;;-1:-1:-1;;;8066:65:91;;17779:2:821;8066:65:91;;;17761:21:821;17818:2;17798:18;;;17791:30;-1:-1:-1;;;17837:18:821;;;17830:58;17905:18;;8066:65:91;17577:352:821;8066:65:91;8142:51;8175:17;:15;:17::i;:::-;8142:32;:51::i;:::-;8225:7;8208:13;:24;8204:404;;8248:30;8281:12;8248:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8248:45:91;;;;;;;;;;;;;;;;;;;;;;;8312:9;8307:291;8331:13;:20;8327:1;:24;8307:291;;;8400:17;:15;:17::i;:::-;-1:-1:-1;;;;;8380:37:91;:13;8394:1;8380:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8380:37:91;;8376:208;;8459:13;8496:1;8473:13;:20;:24;;;;:::i;:::-;8459:39;;;;;;;;:::i;:::-;;;;;;;8441:12;8454:1;8441:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8441:57:91;;;;;-1:-1:-1;;;;;8441:57:91;;;;;;8520:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8520:18:91;;;;;-1:-1:-1;;;;;;8520:18:91;;;;;;8560:5;;8376:208;8353:3;;8307:291;;;;8234:374;8204:404;8661:7;8618;:26;8626:17;:15;:17::i;:::-;-1:-1:-1;;;;;8618:26:91;-1:-1:-1;;;;;8618:26:91;;;;;;;;;;;;:39;;;:50;;;;;;;:::i;:::-;;;;;;;;8701:7;8678:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;8780:12:91;;8719:194;;-1:-1:-1;;;;;8780:12:91;8814:4;8833:17;:15;:17::i;:::-;8864:7;8885:18;8719:47;:194::i;:::-;8945:17;:15;:17::i;:::-;-1:-1:-1;;;;;8929:43:91;;8964:7;8929:43;;;;1144:25:821;;1132:2;1117:18;;998:177;8929:43:91;;;;;;;;7928:1051;7875:1104;:::o;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;3253:271:71;;:::o;9056:533:91:-;9108:15;9172:36;9190:17;:15;:17::i;:::-;9172;:36::i;:::-;9126:7;:26;9134:17;:15;:17::i;:::-;-1:-1:-1;;;;;9126:26:91;-1:-1:-1;;;;;9126:26:91;;;;;;;;;;;;:43;;;:82;;;;:::i;:::-;9108:100;;9227:7;9238:1;9227:12;9219:35;;;;-1:-1:-1;;;9219:35:91;;19083:2:821;9219:35:91;;;19065:21:821;19122:2;19102:18;;;19095:30;-1:-1:-1;;;19141:18:821;;;19134:40;19191:18;;9219:35:91;18881:334:821;9219:35:91;9318:15;-1:-1:-1;;;;;9265:69:91;:7;:26;9273:17;:15;:17::i;:::-;-1:-1:-1;;;;;9265:26:91;;;;;;;;;;;;-1:-1:-1;9265:26:91;;;:69;;-1:-1:-1;;;;;;9265:69:91;-1:-1:-1;;;;;9265:69:91;;;;;;;;;;;9344:7;-1:-1:-1;9352:17:91;:15;:17::i;:::-;-1:-1:-1;;;;;9344:26:91;;;;;;;;;;;;-1:-1:-1;9344:26:91;:43;;:47;9454:15;;:19;;9472:1;;-1:-1:-1;;;9454:15:91;;-1:-1:-1;;;;;9454:15:91;:19;:::i;:::-;9401:7;:26;9409:17;:15;:17::i;:::-;-1:-1:-1;;;;;9401:26:91;;;;;;;;;;;;-1:-1:-1;9401:26:91;:72;;-1:-1:-1;;;;;9401:72:91;;;;-1:-1:-1;;;9401:72:91;-1:-1:-1;;;;;;;;9401:72:91;;;;;;;;;9484:40;9497:17;:15;:17::i;:::-;9516:7;9484:12;:40::i;:::-;9555:17;:15;:17::i;:::-;-1:-1:-1;;;;;9540:42:91;;9574:7;9540:42;;;;1144:25:821;;1132:2;1117:18;;998:177;9540:42:91;;;;;;;;9098:491;9056:533::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6514:1296:91:-;6582:7;6593:1;6582:12;6574:41;;;;-1:-1:-1;;;6574:41:91;;22003:2:821;6574:41:91;;;21985:21:821;22042:2;22022:18;;;22015:30;-1:-1:-1;;;22061:18:821;;;22054:46;22117:18;;6574:41:91;21801:340:821;6574:41:91;6661:12;;6626:21;;-1:-1:-1;;;;;6661:12:91;-1:-1:-1;;6661:48:91;6657:224;;-1:-1:-1;6741:18:91;6657:224;;;6798:9;:14;6790:38;;;;-1:-1:-1;;;6790:38:91;;22348:2:821;6790:38:91;;;22330:21:821;22387:2;22367:18;;;22360:30;-1:-1:-1;;;22406:18:821;;;22399:41;22457:18;;6790:38:91;22146:335:821;6790:38:91;-1:-1:-1;6858:12:91;;-1:-1:-1;;;;;6858:12:91;6657:224;6937:1;6895:7;:26;6903:17;:15;:17::i;:::-;-1:-1:-1;;;;;6895:26:91;-1:-1:-1;;;;;6895:26:91;;;;;;;;;;;;:39;;;:43;6891:361;;;6954:51;6987:17;:15;:17::i;6954:51::-;6891:361;;;7036:12;7054:17;:15;:17::i;:::-;7036:36;;;;;;;-1:-1:-1;7036:36:91;;;;;;;;;-1:-1:-1;;;;;;7036:36:91;-1:-1:-1;;;;;7036:36:91;;;;;;;;;;7139:15;-1:-1:-1;;;;;7086:69:91;;:7;;7094:17;:15;:17::i;:::-;-1:-1:-1;;;;;7086:26:91;;;;;;;;;;;;-1:-1:-1;7086:26:91;:69;;-1:-1:-1;;;;;;7086:69:91;-1:-1:-1;;;;;7086:69:91;;;;;;;;;;7222:15;;:19;;-1:-1:-1;;;;;7222:15:91;;-1:-1:-1;;;;;7222:15:91;:19;:::i;:::-;7169:7;:26;7177:17;:15;:17::i;:::-;-1:-1:-1;;;;;7169:26:91;;;;;;;;;;;;-1:-1:-1;7169:26:91;:72;;-1:-1:-1;;;;;7169:72:91;;;;-1:-1:-1;;;7169:72:91;-1:-1:-1;;;;;;;;7169:72:91;;;;;;;;;6891:361;7286:46;;-1:-1:-1;;;7286:46:91;;7262:21;;-1:-1:-1;;;;;7286:31:91;;;;;:46;;7326:4;;7286:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7403:12;;7262:70;;-1:-1:-1;7342:194:91;;-1:-1:-1;;;;;7403:12:91;7429:17;:15;:17::i;7342:194::-;7546:20;7618:13;7576;-1:-1:-1;;;;;7569:31:91;;7609:4;7569:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;;:::i;:::-;7546:85;;7685:12;7642:7;:26;7650:17;:15;:17::i;:::-;-1:-1:-1;;;;;7642:26:91;-1:-1:-1;;;;;7642:26:91;;;;;;;;;;;;:39;;;:55;;;;;;;:::i;:::-;;;;;;;;7730:12;7707:19;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;7771:17:91;;-1:-1:-1;7771:15:91;:17::i;:::-;-1:-1:-1;;;;;7758:45:91;;7790:12;7758:45;;;;1144:25:821;;1132:2;1117:18;;998:177;7758:45:91;;;;;;;;6564:1246;;;6514:1296;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;9643:322:91:-;-1:-1:-1;;;;;9750:16:91;;9718;9750;;;:7;:16;;;;;:29;;;:34;;9746:213;;-1:-1:-1;;;;;;9811:16:91;;;;;:7;:16;;;;;:33;;;;9643:322::o;9746:213::-;9922:26;9940:7;9922:17;:26::i;:::-;-1:-1:-1;;;;;9886:16:91;;;;;;:7;:16;;;;;:33;;;:62;;;;:::i;:::-;9875:73;;9746:213;9643:322;;;:::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;1846:513:91::0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2020:24:91::1;:22;:24::i;:::-;-1:-1:-1::0;;;;;2063:36:91;::::1;2055:64;;;::::0;-1:-1:-1;;;2055:64:91;;23100:2:821;2055:64:91::1;::::0;::::1;23082:21:821::0;23139:2;23119:18;;;23112:30;-1:-1:-1;;;23158:18:821;;;23151:45;23213:18;;2055:64:91::1;22898:339:821::0;2055:64:91::1;2137:26;::::0;::::1;::::0;;::::1;::::0;:55:::1;;-1:-1:-1::0;2167:25:91::1;::::0;::::1;::::0;::::1;2137:55;2129:78;;;::::0;-1:-1:-1;;;2129:78:91;;23444:2:821;2129:78:91::1;::::0;::::1;23426:21:821::0;23483:2;23463:18;;;23456:30;-1:-1:-1;;;23502:18:821;;;23495:40;23552:18;;2129:78:91::1;23242:334:821::0;2129:78:91::1;2218:12;:28:::0;;-1:-1:-1;;;;;2218:28:91;;;::::1;-1:-1:-1::0;;;;;;2256:44:91;;;;;;;-1:-1:-1;;;2256:44:91::1;::::0;;::::1;;;-1:-1:-1::0;;;;2310:42:91::1;-1:-1:-1::0;;;2310:42:91;;;::::1;;;::::0;;1846:513::o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;6563:137:377:o;2866:439:292:-;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7116:112:377:-;7183:7;7209:12;:10;:12::i;10064:332:91:-;10150:15;10168:26;10186:7;10168:17;:26::i;:::-;-1:-1:-1;;;;;10204:16:91;;;;;;:7;:16;;;;;:33;;:44;;10150;;-1:-1:-1;10150:44:91;;10204:33;;:16;:44;;10150;;10204;:::i;:::-;;;;-1:-1:-1;;;;;;;10258:16:91;;;;;;:7;:16;;;;;:59;;-1:-1:-1;;;;;;10258:59:91;-1:-1:-1;;;;;10301:15:91;10258:59;;;;10370:15;;:19;;10258:59;;-1:-1:-1;;;;;;;;10370:15:91;;;;:19;:::i;:::-;-1:-1:-1;;;;;10327:16:91;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10327:62:91;;;;-1:-1:-1;;;10327:62:91;-1:-1:-1;;;;;;;;10327:62:91;;;;;;;;;;-1:-1:-1;10064:332:91:o;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;24307:2:821;1911:55:298;;;24289:21:821;;;24326:18;;;24319:30;24385:34;24365:18;;;24358:62;24437:18;;1911:55:298;24105:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;11201:1261:91:-;-1:-1:-1;;;;;11327:16:91;;11276;11327;;;:7;:16;;;;;;;;11304:39;;;;;;;;;-1:-1:-1;;;;;11304:39:91;;;;-1:-1:-1;;;;;;;;11304:39:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11450:15;;11304:39;;;-1:-1:-1;;;11450:15:91;;;;11304:39;11476:851;11517:16;11513:1;:20;11476:851;;;11557:33;11593:20;;;:17;:20;;;;;;;;11557:56;;;;;;;;;-1:-1:-1;;;;;11557:56:91;;;;;-1:-1:-1;;;11557:56:91;;;;;;;;;;;-1:-1:-1;;;11557:56:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;11648:23;;;:76;;11701:23;;11648:76;;;11674:9;:24;;;-1:-1:-1;;;;;11648:76:91;;-1:-1:-1;;;;;11628:96:91;;;11738:15;11756:9;:22;;;-1:-1:-1;;;;;11756:27:91;11782:1;11756:27;:70;;11811:15;11756:70;;;11786:9;:22;;;-1:-1:-1;;;;;11756:70:91;;11738:88;;11842:22;11866;11892:138;11949:6;:19;;;11936:9;11926:7;:19;;;;:::i;:::-;11925:43;;;;:::i;:::-;11986:9;:30;;;11892:15;:138::i;:::-;11841:189;;;;12045:18;12065;12087:145;12120:8;12186:9;:32;;;12164:9;:18;;;-1:-1:-1;;;;;12147:35:91;:14;:35;;;;:::i;:::-;12146:72;;;;:::i;:::-;12087:15;:145::i;:::-;12044:188;;;;12258:17;:34;;;;;12279:13;12258:34;:58;;12308:8;12258:58;;;12295:10;12258:58;12247:69;;11543:784;;;;;;;11540:1;11535:6;;;;;:::i;:::-;;;11476:851;;;-1:-1:-1;12384:19:91;;12352:52;;12368:8;;12378:25;;-1:-1:-1;;;12384:19:91;;;;12378:2;:25;:::i;:::-;12352:15;:52::i;:::-;12434:20;;12337:67;;-1:-1:-1;12428:26:91;;-1:-1:-1;;;;12434:20:91;;;;12428:2;:26;:::i;:::-;12415:40;;;;:::i;:::-;;11201:1261;-1:-1:-1;;;;;11201:1261:91:o;5880:393:377:-;5985:18;;5973:8;:30;;5965:67;;;;-1:-1:-1;;;5965:67:377;;26402:2:821;5965:67:377;;;26384:21:821;26441:2;26421:18;;;26414:30;-1:-1:-1;;;26460:18:821;;;26453:54;26524:18;;5965:67:377;26200:348:821;5965:67:377;6064:8;6042:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6143:11:377;;6082:184;;-1:-1:-1;;;;;6143:11:377;6176:4;6195:7;6216:8;6238:18;6082:47;:184::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;1868:111:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1938:34:452::1;:32;:34::i;759:175:228:-:0;868:58;;-1:-1:-1;;;;;27037:32:821;;868:58:228;;;27019:51:821;27086:18;;;27079:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;26992:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;:::-;759:175;;;:::o;940:203::-;1067:68;;-1:-1:-1;;;;;27382:15:821;;;1067:68:228;;;27364:34:821;27434:15;;27414:18;;;27407:43;27466:18;;;27459:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;27299:18:821;;1067:68:228;27124:375:821;1339:493:243;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:243;;-1:-1:-1;1705:1:243;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:243;-1:-1:-1;1339:493:243;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;7668:628:289;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;27706:2:821;8110:60:289;;;27688:21:821;27745:2;27725:18;;;27718:30;27784:31;27764:18;;;27757:59;27833:18;;8110:60:289;27504:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;1985:109:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;28346:2:821;3711:85:228;;;28328:21:821;28385:2;28365:18;;;28358:30;28424:34;28404:18;;;28397:62;-1:-1:-1;;;28475:18:821;;;28468:40;28525:19;;3711:85:228;28144:406:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;4108:223:530:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;375:248:821:-;443:6;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;-1:-1:-1;;543:23:821;;;613:2;598:18;;;585:32;;-1:-1:-1;375:248:821:o;628:180::-;687:6;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;-1:-1:-1;779:23:821;;628:180;-1:-1:-1;628:180:821:o;1180:173::-;1248:20;;-1:-1:-1;;;;;1297:31:821;;1287:42;;1277:70;;1343:1;1340;1333:12;1358:254;1426:6;1434;1487:2;1475:9;1466:7;1462:23;1458:32;1455:52;;;1503:1;1500;1493:12;1455:52;1539:9;1526:23;1516:33;;1568:38;1602:2;1591:9;1587:18;1568:38;:::i;:::-;1558:48;;1358:254;;;;;:::o;1617:203::-;-1:-1:-1;;;;;1781:32:821;;;;1763:51;;1751:2;1736:18;;1617:203::o;1825:186::-;1884:6;1937:2;1925:9;1916:7;1912:23;1908:32;1905:52;;;1953:1;1950;1943:12;1905:52;1976:29;1995:9;1976:29;:::i;3088:127::-;3149:10;3144:3;3140:20;3137:1;3130:31;3180:4;3177:1;3170:15;3204:4;3201:1;3194:15;3220:275;3291:2;3285:9;3356:2;3337:13;;-1:-1:-1;;3333:27:821;3321:40;;-1:-1:-1;;;;;3376:34:821;;3412:22;;;3373:62;3370:88;;;3438:18;;:::i;:::-;3474:2;3467:22;3220:275;;-1:-1:-1;3220:275:821:o;3500:531::-;3543:5;3596:3;3589:4;3581:6;3577:17;3573:27;3563:55;;3614:1;3611;3604:12;3563:55;3650:6;3637:20;-1:-1:-1;;;;;3672:2:821;3669:26;3666:52;;;3698:18;;:::i;:::-;3742:55;3785:2;3766:13;;-1:-1:-1;;3762:27:821;3791:4;3758:38;3742:55;:::i;:::-;3822:2;3813:7;3806:19;3868:3;3861:4;3856:2;3848:6;3844:15;3840:26;3837:35;3834:55;;;3885:1;3882;3875:12;3834:55;3950:2;3943:4;3935:6;3931:17;3924:4;3915:7;3911:18;3898:55;3998:1;3973:16;;;3991:4;3969:27;3962:38;;;;3977:7;3500:531;-1:-1:-1;;;3500:531:821:o;4036:322::-;4105:6;4158:2;4146:9;4137:7;4133:23;4129:32;4126:52;;;4174:1;4171;4164:12;4126:52;4214:9;4201:23;-1:-1:-1;;;;;4239:6:821;4236:30;4233:50;;;4279:1;4276;4269:12;4233:50;4302;4344:7;4335:6;4324:9;4320:22;4302:50;:::i;4998:626::-;5095:6;5103;5156:2;5144:9;5135:7;5131:23;5127:32;5124:52;;;5172:1;5169;5162:12;5124:52;5212:9;5199:23;-1:-1:-1;;;;;5282:2:821;5274:6;5271:14;5268:34;;;5298:1;5295;5288:12;5268:34;5336:6;5325:9;5321:22;5311:32;;5381:7;5374:4;5370:2;5366:13;5362:27;5352:55;;5403:1;5400;5393:12;5352:55;5443:2;5430:16;5469:2;5461:6;5458:14;5455:34;;;5485:1;5482;5475:12;5455:34;5538:7;5533:2;5523:6;5520:1;5516:14;5512:2;5508:23;5504:32;5501:45;5498:65;;;5559:1;5556;5549:12;5498:65;5590:2;5582:11;;;;;5612:6;;-1:-1:-1;4998:626:821;;-1:-1:-1;;;;4998:626:821:o;5629:250::-;5714:1;5724:113;5738:6;5735:1;5732:13;5724:113;;;5814:11;;;5808:18;5795:11;;;5788:39;5760:2;5753:10;5724:113;;;-1:-1:-1;;5871:1:821;5853:16;;5846:27;5629:250::o;5884:270::-;5925:3;5963:5;5957:12;5990:6;5985:3;5978:19;6006:76;6075:6;6068:4;6063:3;6059:14;6052:4;6045:5;6041:16;6006:76;:::i;:::-;6136:2;6115:15;-1:-1:-1;;6111:29:821;6102:39;;;;6143:4;6098:50;;5884:270;-1:-1:-1;;5884:270:821:o;6159:800::-;6319:4;6348:2;6388;6377:9;6373:18;6418:2;6407:9;6400:21;6441:6;6476;6470:13;6507:6;6499;6492:22;6545:2;6534:9;6530:18;6523:25;;6607:2;6597:6;6594:1;6590:14;6579:9;6575:30;6571:39;6557:53;;6645:2;6637:6;6633:15;6666:1;6676:254;6690:6;6687:1;6684:13;6676:254;;;6783:2;6779:7;6767:9;6759:6;6755:22;6751:36;6746:3;6739:49;6811:39;6843:6;6834;6828:13;6811:39;:::i;:::-;6801:49;-1:-1:-1;6908:12:821;;;;6873:15;;;;6712:1;6705:9;6676:254;;;-1:-1:-1;6947:6:821;;6159:800;-1:-1:-1;;;;;;;6159:800:821:o;6964:171::-;7031:20;;-1:-1:-1;;;;;7080:30:821;;7070:41;;7060:69;;7125:1;7122;7115:12;7140:184;7198:6;7251:2;7239:9;7230:7;7226:23;7222:32;7219:52;;;7267:1;7264;7257:12;7219:52;7290:28;7308:9;7290:28;:::i;7534:1587::-;7690:6;7698;7706;7714;7722;7730;7738;7746;7799:3;7787:9;7778:7;7774:23;7770:33;7767:53;;;7816:1;7813;7806:12;7767:53;7839:29;7858:9;7839:29;:::i;:::-;7829:39;;7887:2;7940;7929:9;7925:18;7912:32;-1:-1:-1;;;;;8004:2:821;7996:6;7993:14;7990:34;;;8020:1;8017;8010:12;7990:34;8043:50;8085:7;8076:6;8065:9;8061:22;8043:50;:::i;:::-;8033:60;;8146:2;8135:9;8131:18;8118:32;8102:48;;8175:2;8165:8;8162:16;8159:36;;;8191:1;8188;8181:12;8159:36;8229:8;8218:9;8214:24;8204:34;;8276:7;8269:4;8265:2;8261:13;8257:27;8247:55;;8298:1;8295;8288:12;8247:55;8334:2;8321:16;8356:2;8352;8349:10;8346:36;;;8362:18;;:::i;:::-;8408:2;8405:1;8401:10;8391:20;;8431:28;8455:2;8451;8447:11;8431:28;:::i;:::-;8493:15;;;8563:11;;;8559:20;;;8524:12;;;;8591:19;;;8588:39;;;8623:1;8620;8613:12;8588:39;8647:11;;;;8667:148;8683:6;8678:3;8675:15;8667:148;;;8749:23;8768:3;8749:23;:::i;:::-;8737:36;;8700:12;;;;8793;;;;8667:148;;;8834:5;8824:15;;;;;;;;8858:38;8892:2;8881:9;8877:18;8858:38;:::i;:::-;8848:48;;8915:39;8949:3;8938:9;8934:19;8915:39;:::i;:::-;8905:49;;8973:38;9006:3;8995:9;8991:19;8973:38;:::i;:::-;8963:48;;9058:3;9047:9;9043:19;9030:33;9020:43;;9110:3;9099:9;9095:19;9082:33;9072:43;;7534:1587;;;;;;;;;;;:::o;9126:219::-;9275:2;9264:9;9257:21;9238:4;9295:44;9335:2;9324:9;9320:18;9312:6;9295:44;:::i;9350:338::-;9552:2;9534:21;;;9591:2;9571:18;;;9564:30;-1:-1:-1;;;9625:2:821;9610:18;;9603:44;9679:2;9664:18;;9350:338::o;9693:127::-;9754:10;9749:3;9745:20;9742:1;9735:31;9785:4;9782:1;9775:15;9809:4;9806:1;9799:15;9825:183;-1:-1:-1;;;;;9944:10:821;;;9932;;;9928:27;;9967:12;;;9964:38;;;9982:18;;:::i;:::-;9964:38;9825:183;;;;:::o;10761:184::-;10831:6;10884:2;10872:9;10863:7;10859:23;10855:32;10852:52;;;10900:1;10897;10890:12;10852:52;-1:-1:-1;10923:16:821;;10761:184;-1:-1:-1;10761:184:821:o;10950:128::-;11017:9;;;11038:11;;;11035:37;;;11052:18;;:::i;11083:125::-;11148:9;;;11169:10;;;11166:36;;;11182:18;;:::i;11926:127::-;11987:10;11982:3;11978:20;11975:1;11968:31;12018:4;12015:1;12008:15;12042:4;12039:1;12032:15;12058:521;12135:4;12141:6;12201:11;12188:25;12295:2;12291:7;12280:8;12264:14;12260:29;12256:43;12236:18;12232:68;12222:96;;12314:1;12311;12304:12;12222:96;12341:33;;12393:20;;;-1:-1:-1;;;;;;12425:30:821;;12422:50;;;12468:1;12465;12458:12;12422:50;12501:4;12489:17;;-1:-1:-1;12532:14:821;12528:27;;;12518:38;;12515:58;;;12569:1;12566;12559:12;12584:352;12795:6;12787;12782:3;12769:33;12890:2;12861:15;;;;-1:-1:-1;;;;;;12857:45:821;12821:16;;12846:57;;;12927:2;12919:11;;12584:352;-1:-1:-1;12584:352:821:o;14784:273::-;14852:6;14905:2;14893:9;14884:7;14880:23;14876:32;14873:52;;;14921:1;14918;14911:12;14873:52;14953:9;14947:16;15003:4;14996:5;14992:16;14985:5;14982:27;14972:55;;15023:1;15020;15013:12;15261:380;15340:1;15336:12;;;;15383;;;15404:61;;15458:4;15450:6;15446:17;15436:27;;15404:61;15511:2;15503:6;15500:14;15480:18;15477:38;15474:161;;15557:10;15552:3;15548:20;15545:1;15538:31;15592:4;15589:1;15582:15;15620:4;15617:1;15610:15;16335:180;-1:-1:-1;;;;;16440:10:821;;;16452;;;16436:27;;16475:11;;;16472:37;;;16489:18;;:::i;17934:127::-;17995:10;17990:3;17986:20;17983:1;17976:31;18026:4;18023:1;18016:15;18050:4;18047:1;18040:15;18066:810;-1:-1:-1;;;18472:3:821;18465:36;18447:3;18530:6;18524:13;18546:75;18614:6;18609:2;18604:3;18600:12;18593:4;18585:6;18581:17;18546:75;:::i;:::-;-1:-1:-1;;;18680:2:821;18640:16;;;18672:11;;;18665:40;18730:13;;18752:76;18730:13;18814:2;18806:11;;18799:4;18787:17;;18752:76;:::i;:::-;18848:17;18867:2;18844:26;;18066:810;-1:-1:-1;;;;18066:810:821:o;19346:543::-;19448:2;19443:3;19440:11;19437:446;;;19484:1;19508:5;19505:1;19498:16;19552:4;19549:1;19539:18;19622:2;19610:10;19606:19;19603:1;19599:27;19593:4;19589:38;19658:4;19646:10;19643:20;19640:47;;;-1:-1:-1;19681:4:821;19640:47;19736:2;19731:3;19727:12;19724:1;19720:20;19714:4;19710:31;19700:41;;19791:82;19809:2;19802:5;19799:13;19791:82;;;19854:17;;;19835:1;19824:13;19791:82;;;19795:3;;;19346:543;;;:::o;20065:1345::-;20191:3;20185:10;-1:-1:-1;;;;;20210:6:821;20207:30;20204:56;;;20240:18;;:::i;:::-;20269:97;20359:6;20319:38;20351:4;20345:11;20319:38;:::i;:::-;20313:4;20269:97;:::i;:::-;20421:4;;20478:2;20467:14;;20495:1;20490:663;;;;21197:1;21214:6;21211:89;;;-1:-1:-1;21266:19:821;;;21260:26;21211:89;-1:-1:-1;;20022:1:821;20018:11;;;20014:24;20010:29;20000:40;20046:1;20042:11;;;19997:57;21313:81;;20460:944;;20490:663;19293:1;19286:14;;;19330:4;19317:18;;-1:-1:-1;;20526:20:821;;;20644:236;20658:7;20655:1;20652:14;20644:236;;;20747:19;;;20741:26;20726:42;;20839:27;;;;20807:1;20795:14;;;;20674:19;;20644:236;;;20648:3;20908:6;20899:7;20896:19;20893:201;;;20969:19;;;20963:26;-1:-1:-1;;21052:1:821;21048:14;;;21064:3;21044:24;21040:37;21036:42;21021:58;21006:74;;20893:201;-1:-1:-1;;;;;21140:1:821;21124:14;;;21120:22;21107:36;;-1:-1:-1;20065:1345:821:o;21415:381::-;21612:2;21601:9;21594:21;21575:4;21638:44;21678:2;21667:9;21663:18;21655:6;21638:44;:::i;:::-;21730:9;21722:6;21718:22;21713:2;21702:9;21698:18;21691:50;21758:32;21783:6;21775;21758:32;:::i;22486:407::-;22688:2;22670:21;;;22727:2;22707:18;;;22700:30;22766:34;22761:2;22746:18;;22739:62;-1:-1:-1;;;22832:2:821;22817:18;;22810:41;22883:3;22868:19;;22486:407::o;23791:168::-;23864:9;;;23895;;23912:15;;;23906:22;;23892:37;23882:71;;23933:18;;:::i;23964:136::-;24003:3;24031:5;24021:39;;24040:18;;:::i;:::-;-1:-1:-1;;;24076:18:821;;23964:136::o;24466:127::-;24527:10;24522:3;24518:20;24515:1;24508:31;24558:4;24555:1;24548:15;24582:4;24579:1;24572:15;24598:217;24638:1;24664;24654:132;;24708:10;24703:3;24699:20;24696:1;24689:31;24743:4;24740:1;24733:15;24771:4;24768:1;24761:15;24654:132;-1:-1:-1;24800:9:821;;24598:217::o;24820:416::-;24909:1;24946:5;24909:1;24960:270;24981:7;24971:8;24968:21;24960:270;;;25040:4;25036:1;25032:6;25028:17;25022:4;25019:27;25016:53;;;25049:18;;:::i;:::-;25099:7;25089:8;25085:22;25082:55;;;25119:16;;;;25082:55;25198:22;;;;25158:15;;;;24960:270;;;24964:3;24820:416;;;;;:::o;25241:806::-;25290:5;25320:8;25310:80;;-1:-1:-1;25361:1:821;25375:5;;25310:80;25409:4;25399:76;;-1:-1:-1;25446:1:821;25460:5;;25399:76;25491:4;25509:1;25504:59;;;;25577:1;25572:130;;;;25484:218;;25504:59;25534:1;25525:10;;25548:5;;;25572:130;25609:3;25599:8;25596:17;25593:43;;;25616:18;;:::i;:::-;-1:-1:-1;;25672:1:821;25658:16;;25687:5;;25484:218;;25786:2;25776:8;25773:16;25767:3;25761:4;25758:13;25754:36;25748:2;25738:8;25735:16;25730:2;25724:4;25721:12;25717:35;25714:77;25711:159;;;-1:-1:-1;25823:19:821;;;25855:5;;25711:159;25902:34;25927:8;25921:4;25902:34;:::i;:::-;25972:6;25968:1;25964:6;25960:19;25951:7;25948:32;25945:58;;;25983:18;;:::i;:::-;26021:20;;25241:806;-1:-1:-1;;;25241:806:821:o;26052:143::-;26111:5;26140:49;26181:6;26171:8;26167:21;26161:4;26140:49;:::i;26553:287::-;26682:3;26720:6;26714:13;26736:66;26795:6;26790:3;26783:4;26775:6;26771:17;26736:66;:::i;:::-;26818:16;;;;;26553:287;-1:-1:-1;;26553:287:821:o;27862:277::-;27929:6;27982:2;27970:9;27961:7;27957:23;27953:32;27950:52;;;27998:1;27995;27988:12;27950:52;28030:9;28024:16;28083:5;28076:13;28069:21;28062:5;28059:32;28049:60;;28105:1;28102;28095:12",
    "linkReferences": {},
    "immutableReferences": {
      "28830": [
        {
          "start": 428,
          "length": 32
        },
        {
          "start": 2270,
          "length": 32
        },
        {
          "start": 2446,
          "length": 32
        },
        {
          "start": 4655,
          "length": 32
        },
        {
          "start": 4751,
          "length": 32
        },
        {
          "start": 7681,
          "length": 32
        },
        {
          "start": 8812,
          "length": 32
        },
        {
          "start": 12167,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "claimRewards()": "372500ab",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardRatio()": "97e1b4bc",
    "getRewardTokenBalance()": "93ce5343",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,address[],address,address,uint80,uint256,uint256)": "df654376",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "rewardTokenDecimals()": "9bdcecd1",
    "setContractURI(string)": "938e3d7b",
    "setRewardRatio(uint256,uint256)": "001b7934",
    "setTimeUnit(uint80)": "b218f069",
    "stake(uint256)": "a694fc3a",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "stakingTokenBalance()": "8caaa271",
    "stakingTokenDecimals()": "b9f7a7b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioDenominator\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setRewardRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RewardTokensDepositedByAdmin(uint256)\":{\"details\":\"Emitted when contract admin deposits reward tokens.\"},\"RewardTokensWithdrawnByAdmin(uint256)\":{\"details\":\"Emitted when contract admin withdraws reward tokens.\"},\"RewardsClaimed(address,uint256)\":{\"details\":\"Emitted when a staker claims staking rewards.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokensStaked(address,uint256)\":{\"details\":\"Emitted when tokens are staked.\"},\"TokensWithdrawn(address,uint256)\":{\"details\":\"Emitted when a tokens are withdrawn.\"},\"UpdatedMinStakeAmount(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates minimum staking amount.\"},\"UpdatedRewardRatio(uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when contract admin updates rewardsPerUnitTime.\"},\"UpdatedTimeUnit(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates timeUnit.\"}},\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"contractType()\":{\"details\":\"Returns the module type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[],address,address,uint80,uint256,uint256)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setRewardRatio(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_denominator\":\"Reward ratio denominator.\",\"_numerator\":\"Reward ratio numerator.\"}},\"setTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\"}},\"withdraw(uint256)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and rewards for a user.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setRewardRatio(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked.\"},\"setTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256)\":{\"notice\":\"Stake ERC20 Tokens.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/staking/TokenStake.sol\":\"TokenStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Staking20Upgradeable.sol\":{\"keccak256\":\"0x63de44503900c9d55e0d4c7a06642145864f7d215c62ded95505dfdb50cfb4d4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3cd46801ec4dfbe1edfb9511bce6e154143c2b03851dbf63e41c998216ee294d\",\"dweb:/ipfs/QmVCbHvREYyZW8eUgk7KAucvjFfD2NhnU6mUbUVCGETx53\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IStaking20.sol\":{\"keccak256\":\"0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852\",\"dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/interface/staking/ITokenStake.sol\":{\"keccak256\":\"0x5e57570a9b8db064bfca10c4843d82551e89d230116f582eba7c9d5850460ed1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417939013614af1de97cc4143f7e71b5468513cafc984c6a6e1e1a1d11bb1ea1\",\"dweb:/ipfs/QmcRBdvc7dM9F3yGq1YUYvz6Cs7N4iJw4LLDLdGokPrAqC\"]},\"contracts/prebuilts/staking/TokenStake.sol\":{\"keccak256\":\"0x3eb6a0cebc2579c1ff96b9601d66e9c98e342e88660b959c709c6686386d7399\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a72e884bf1ab8d8e0da3467e907ca3d6deddac572e45a8a0c47c911d55b5b260\",\"dweb:/ipfs/QmQrBjqgtNn7aW4jmCJxY1cekFooRFZNNQGMwk9zjx7HQN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensDepositedByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensWithdrawnByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldDenominator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardRatio",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioNumerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioDenominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "amountStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "contractType()": {
            "details": "Returns the module type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[],address,address,uint80,uint256,uint256)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setRewardRatio(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_denominator": "Reward ratio denominator.",
              "_numerator": "Reward ratio numerator."
            }
          },
          "setTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake."
            }
          },
          "withdraw(uint256)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and rewards for a user."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setRewardRatio(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked."
          },
          "setTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256)": {
            "notice": "Stake ERC20 Tokens."
          },
          "withdraw(uint256)": {
            "notice": "Withdraw staked ERC20 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/staking/TokenStake.sol": "TokenStake"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking20Upgradeable.sol": {
        "keccak256": "0x63de44503900c9d55e0d4c7a06642145864f7d215c62ded95505dfdb50cfb4d4",
        "urls": [
          "bzz-raw://3cd46801ec4dfbe1edfb9511bce6e154143c2b03851dbf63e41c998216ee294d",
          "dweb:/ipfs/QmVCbHvREYyZW8eUgk7KAucvjFfD2NhnU6mUbUVCGETx53"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking20.sol": {
        "keccak256": "0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828",
        "urls": [
          "bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852",
          "dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/interface/staking/ITokenStake.sol": {
        "keccak256": "0x5e57570a9b8db064bfca10c4843d82551e89d230116f582eba7c9d5850460ed1",
        "urls": [
          "bzz-raw://417939013614af1de97cc4143f7e71b5468513cafc984c6a6e1e1a1d11bb1ea1",
          "dweb:/ipfs/QmcRBdvc7dM9F3yGq1YUYvz6Cs7N4iJw4LLDLdGokPrAqC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/staking/TokenStake.sol": {
        "keccak256": "0x3eb6a0cebc2579c1ff96b9601d66e9c98e342e88660b959c709c6686386d7399",
        "urls": [
          "bzz-raw://a72e884bf1ab8d8e0da3467e907ca3d6deddac572e45a8a0c47c911d55b5b260",
          "dweb:/ipfs/QmQrBjqgtNn7aW4jmCJxY1cekFooRFZNNQGMwk9zjx7HQN"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/staking/TokenStake.sol",
    "id": 93073,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC20": [
        169760
      ],
      "IERC20Metadata": [
        14034
      ],
      "IMulticall": [
        33577
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "ITokenStake": [
        77824
      ],
      "Initializable": [
        154159
      ],
      "Multicall": [
        21206
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "Staking20Upgradeable": [
        29764
      ],
      "Strings": [
        66084
      ],
      "TokenStake": [
        93072
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7420:377",
    "nodes": [
      {
        "id": 92655,
        "nodeType": "PragmaDirective",
        "src": "39:24:377",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 92656,
        "nodeType": "ImportDirective",
        "src": "736:56:377",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 169761,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92657,
        "nodeType": "ImportDirective",
        "src": "815:79:377",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92658,
        "nodeType": "ImportDirective",
        "src": "905:39:377",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92660,
        "nodeType": "ImportDirective",
        "src": "945:72:377",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 92659,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "954:19:377",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 92661,
        "nodeType": "ImportDirective",
        "src": "1018:48:377",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20Metadata.sol",
        "file": "../../eip/interface/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 14035,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92662,
        "nodeType": "ImportDirective",
        "src": "1108:46:377",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92663,
        "nodeType": "ImportDirective",
        "src": "1155:51:377",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92665,
        "nodeType": "ImportDirective",
        "src": "1207:80:377",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking20Upgradeable.sol",
        "file": "../../extension/Staking20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 29765,
        "symbolAliases": [
          {
            "foreign": {
              "id": 92664,
              "name": "Staking20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29764,
              "src": "1216:20:377",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 92666,
        "nodeType": "ImportDirective",
        "src": "1288:46:377",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/staking/ITokenStake.sol",
        "file": "../interface/staking/ITokenStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93073,
        "sourceUnit": 77825,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 93072,
        "nodeType": "ContractDefinition",
        "src": "1336:6122:377",
        "nodes": [
          {
            "id": 92686,
            "nodeType": "VariableDeclaration",
            "src": "1521:60:377",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1546:11:377",
            "scope": 93072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 92681,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1521:7:377",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "546f6b656e5374616b65",
                  "id": 92684,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1568:12:377",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e53bc57d7eba7cf71fa741a009e2b7a341830ecbf013709ae44b55d94803322c",
                    "typeString": "literal_string \"TokenStake\""
                  },
                  "value": "TokenStake"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e53bc57d7eba7cf71fa741a009e2b7a341830ecbf013709ae44b55d94803322c",
                    "typeString": "literal_string \"TokenStake\""
                  }
                ],
                "id": 92683,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1560:7:377",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 92682,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1560:7:377",
                  "typeDescriptions": {}
                }
              },
              "id": 92685,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1560:21:377",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 92689,
            "nodeType": "VariableDeclaration",
            "src": "1587:36:377",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1612:7:377",
            "scope": 93072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 92687,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1587:7:377",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 92688,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1622:1:377",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 92692,
            "nodeType": "VariableDeclaration",
            "src": "1697:26:377",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 92690,
              "nodeType": "StructuredDocumentation",
              "src": "1630:62:377",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1712:11:377",
            "scope": 93072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 92691,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1697:7:377",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 92695,
            "nodeType": "VariableDeclaration",
            "src": "1790:34:377",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 92693,
              "nodeType": "StructuredDocumentation",
              "src": "1730:55:377",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "1806:18:377",
            "scope": 93072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 92694,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1790:7:377",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 92706,
            "nodeType": "FunctionDefinition",
            "src": "1831:97:377",
            "nodes": [],
            "body": {
              "id": 92705,
              "nodeType": "Block",
              "src": "1926:2:377",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 92700,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92699,
                  "name": "initializer",
                  "nameLocations": [
                    "1872:11:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "1872:11:377"
                },
                "nodeType": "ModifierInvocation",
                "src": "1872:11:377"
              },
              {
                "arguments": [
                  {
                    "id": 92702,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92697,
                    "src": "1905:19:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 92703,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 92701,
                  "name": "Staking20Upgradeable",
                  "nameLocations": [
                    "1884:20:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29764,
                  "src": "1884:20:377"
                },
                "nodeType": "ModifierInvocation",
                "src": "1884:41:377"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 92698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92697,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "1851:19:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92706,
                  "src": "1843:27:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1842:29:377"
            },
            "returnParameters": {
              "id": 92704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1926:0:377"
            },
            "scope": 93072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92794,
            "nodeType": "FunctionDefinition",
            "src": "1993:1123:377",
            "nodes": [],
            "body": {
              "id": 92793,
              "nodeType": "Block",
              "src": "2319:797:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92730,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92714,
                        "src": "2361:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 92729,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46339,
                      "src": "2329:31:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 92731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2329:51:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92732,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:51:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 92736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92734,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92716,
                          "src": "2399:12:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 92735,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92718,
                          "src": "2415:13:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2399:29:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420546f6b656e20616e64205374616b696e6720546f6b656e2063616e27742062652073616d652e",
                        "id": 92737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2430:47:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        },
                        "value": "Reward Token and Staking Token can't be same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        }
                      ],
                      "id": 92733,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2391:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2391:87:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92739,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:87:377"
                },
                {
                  "expression": {
                    "id": 92742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92740,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92692,
                      "src": "2488:11:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92741,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92716,
                      "src": "2502:12:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2488:26:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 92743,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:26:377"
                },
                {
                  "assignments": [
                    92745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92745,
                      "mutability": "mutable",
                      "name": "_stakingTokenDecimals",
                      "nameLocation": "2532:21:377",
                      "nodeType": "VariableDeclaration",
                      "scope": 92793,
                      "src": "2525:28:377",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 92744,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:6:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92757,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 92749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 92746,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92718,
                        "src": "2556:13:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 92747,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "2573:19:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 92748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2593:12:377",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "2573:32:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2556:49:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 92752,
                              "name": "_stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92718,
                              "src": "2652:13:377",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 92751,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14034,
                            "src": "2637:14:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$14034_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 92753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2637:29:377",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$14034",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 92754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2667:8:377",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14033,
                        "src": "2637:38:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 92755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2637:40:377",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 92756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2556:121:377",
                    "trueExpression": {
                      "hexValue": "3138",
                      "id": 92750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2620:2:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2525:152:377"
                },
                {
                  "assignments": [
                    92759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92759,
                      "mutability": "mutable",
                      "name": "_rewardTokenDecimals",
                      "nameLocation": "2694:20:377",
                      "nodeType": "VariableDeclaration",
                      "scope": 92793,
                      "src": "2687:27:377",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 92758,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2687:6:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92771,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 92763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 92760,
                        "name": "_rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92716,
                        "src": "2717:12:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 92761,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "2733:19:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 92762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2753:12:377",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "2733:32:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2717:48:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 92766,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92716,
                              "src": "2812:12:377",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 92765,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14034,
                            "src": "2797:14:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$14034_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 92767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2797:28:377",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$14034",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 92768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2826:8:377",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14033,
                        "src": "2797:37:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 92769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2797:39:377",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 92770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2717:119:377",
                    "trueExpression": {
                      "hexValue": "3138",
                      "id": 92764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2780:2:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2687:149:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92773,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92718,
                        "src": "2864:13:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92774,
                        "name": "_stakingTokenDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92745,
                        "src": "2879:21:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 92775,
                        "name": "_rewardTokenDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92759,
                        "src": "2902:20:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 92772,
                      "name": "__Staking20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28932,
                      "src": "2847:16:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16,uint16)"
                      }
                    },
                    "id": 92776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:76:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92777,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:76:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92779,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92720,
                        "src": "2954:9:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 92780,
                        "name": "_rewardRatioNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92722,
                        "src": "2965:21:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92781,
                        "name": "_rewardRatioDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92724,
                        "src": "2988:23:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92778,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29604,
                      "src": "2933:20:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256,uint256)"
                      }
                    },
                    "id": 92782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:79:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92783,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:79:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92785,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92711,
                        "src": "3041:12:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 92784,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "3023:17:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 92786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:31:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92787,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:31:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92789,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3075:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 92790,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92709,
                        "src": "3095:13:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92788,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3064:10:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 92791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:45:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92792,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:45:377"
                }
              ]
            },
            "documentation": {
              "id": 92707,
              "nodeType": "StructuredDocumentation",
              "src": "1934:54:377",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "df654376",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 92727,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92726,
                  "name": "initializer",
                  "nameLocations": [
                    "2307:11:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2307:11:377"
                },
                "nodeType": "ModifierInvocation",
                "src": "2307:11:377"
              }
            ],
            "name": "initialize",
            "nameLocation": "2002:10:377",
            "parameters": {
              "id": 92725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92709,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2030:13:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2022:21:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92711,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2067:12:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2053:26:377",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:6:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92714,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2106:18:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2089:35:377",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92712,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2089:7:377",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 92713,
                    "nodeType": "ArrayTypeName",
                    "src": "2089:9:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92716,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2142:12:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2134:20:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92718,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2172:13:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2164:21:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92720,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "2202:9:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2195:16:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 92719,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:6:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92722,
                  "mutability": "mutable",
                  "name": "_rewardRatioNumerator",
                  "nameLocation": "2229:21:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2221:29:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2221:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92724,
                  "mutability": "mutable",
                  "name": "_rewardRatioDenominator",
                  "nameLocation": "2268:23:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92794,
                  "src": "2260:31:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2012:285:377"
            },
            "returnParameters": {
              "id": 92728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2319:0:377"
            },
            "scope": 93072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92803,
            "nodeType": "FunctionDefinition",
            "src": "3176:99:377",
            "nodes": [],
            "body": {
              "id": 92802,
              "nodeType": "Block",
              "src": "3240:35:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92800,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92686,
                    "src": "3257:11:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 92799,
                  "id": 92801,
                  "nodeType": "Return",
                  "src": "3250:18:377"
                }
              ]
            },
            "documentation": {
              "id": 92795,
              "nodeType": "StructuredDocumentation",
              "src": "3122:49:377",
              "text": "@dev Returns the module type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "3185:12:377",
            "parameters": {
              "id": 92796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3197:2:377"
            },
            "returnParameters": {
              "id": 92799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92803,
                  "src": "3231:7:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92797,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3231:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3230:9:377"
            },
            "scope": 93072,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 92815,
            "nodeType": "FunctionDefinition",
            "src": "3331:103:377",
            "nodes": [],
            "body": {
              "id": 92814,
              "nodeType": "Block",
              "src": "3396:38:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92811,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92689,
                        "src": "3419:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3413:5:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 92809,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3413:5:377",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 92812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3413:14:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 92808,
                  "id": 92813,
                  "nodeType": "Return",
                  "src": "3406:21:377"
                }
              ]
            },
            "documentation": {
              "id": 92804,
              "nodeType": "StructuredDocumentation",
              "src": "3281:45:377",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "3340:15:377",
            "parameters": {
              "id": 92805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3355:2:377"
            },
            "returnParameters": {
              "id": 92808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92815,
                  "src": "3389:5:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 92806,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3389:5:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3388:7:377"
            },
            "scope": 93072,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 92828,
            "nodeType": "FunctionDefinition",
            "src": "3510:121:377",
            "nodes": [],
            "body": {
              "id": 92827,
              "nodeType": "Block",
              "src": "3537:94:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 92823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 92820,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3555:3:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3559:6:377",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3555:10:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 92822,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28830,
                          "src": "3569:18:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3555:32:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 92824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3589:34:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 92819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3547:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3547:77:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92826,
                  "nodeType": "ExpressionStatement",
                  "src": "3547:77:377"
                }
              ]
            },
            "documentation": {
              "id": 92816,
              "nodeType": "StructuredDocumentation",
              "src": "3440:65:377",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 92817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3517:2:377"
            },
            "returnParameters": {
              "id": 92818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3537:0:377"
            },
            "scope": 93072,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92904,
            "nodeType": "FunctionDefinition",
            "src": "3680:752:377",
            "nodes": [],
            "body": {
              "id": 92903,
              "nodeType": "Block",
              "src": "3756:676:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92838,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21787,
                            "src": "3782:18:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 92839,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                93071
                              ],
                              "referencedDeclaration": 93071,
                              "src": "3802:10:377",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 92840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3802:12:377",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92837,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21818,
                          "src": "3774:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 92841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3774:41:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 92842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3817:16:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 92836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3766:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:68:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92844,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:68:377"
                },
                {
                  "assignments": [
                    92846
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92846,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "3853:12:377",
                      "nodeType": "VariableDeclaration",
                      "scope": 92903,
                      "src": "3845:20:377",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 92845,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3845:7:377",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92854,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 92850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 92847,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92692,
                        "src": "3868:11:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 92848,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "3883:19:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 92849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3903:12:377",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "3883:32:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3868:47:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 92852,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92692,
                      "src": "3939:11:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 92853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3868:82:377",
                    "trueExpression": {
                      "id": 92851,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28830,
                      "src": "3918:18:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3845:105:377"
                },
                {
                  "assignments": [
                    92856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92856,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "3969:13:377",
                      "nodeType": "VariableDeclaration",
                      "scope": 92903,
                      "src": "3961:21:377",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3961:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92866,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92863,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4024:4:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 92862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4016:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4016:7:377",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4016:13:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 92858,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92846,
                            "src": "3992:12:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92857,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169760,
                          "src": "3985:6:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$169760_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 92859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3985:20:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$169760",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 92860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4006:9:377",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 169717,
                      "src": "3985:30:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 92865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:45:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3961:69:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92870,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92692,
                        "src": "4101:11:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 92871,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            93071
                          ],
                          "referencedDeclaration": 93071,
                          "src": "4126:10:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 92872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4126:12:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 92875,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4160:4:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 92874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4152:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4152:7:377",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4152:13:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92877,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92831,
                        "src": "4179:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92878,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28830,
                        "src": "4200:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92867,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4040:19:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 92869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4060:27:377",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4040:47:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 92879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:188:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92880,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:188:377"
                },
                {
                  "assignments": [
                    92882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92882,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "4246:12:377",
                      "nodeType": "VariableDeclaration",
                      "scope": 92903,
                      "src": "4238:20:377",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4238:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92894,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 92893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 92889,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4300:4:377",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenStake_$93072",
                                "typeString": "contract TokenStake"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenStake_$93072",
                                "typeString": "contract TokenStake"
                              }
                            ],
                            "id": 92888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4292:7:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 92887,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4292:7:377",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 92890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4292:13:377",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 92884,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92846,
                              "src": "4268:12:377",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 92883,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169760,
                            "src": "4261:6:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$169760_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 92885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:20:377",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$169760",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 92886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4282:9:377",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 169717,
                        "src": "4261:30:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 92891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4261:45:377",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 92892,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92856,
                      "src": "4309:13:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4261:61:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4238:84:377"
                },
                {
                  "expression": {
                    "id": 92897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92895,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92695,
                      "src": "4333:18:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 92896,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92882,
                      "src": "4355:12:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4333:34:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92898,
                  "nodeType": "ExpressionStatement",
                  "src": "4333:34:377"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 92900,
                        "name": "actualAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92882,
                        "src": "4412:12:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92899,
                      "name": "RewardTokensDepositedByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77811,
                      "src": "4383:28:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:42:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92902,
                  "nodeType": "EmitStatement",
                  "src": "4378:47:377"
                }
              ]
            },
            "baseFunctions": [
              77817
            ],
            "documentation": {
              "id": 92829,
              "nodeType": "StructuredDocumentation",
              "src": "3637:38:377",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 92834,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92833,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3743:12:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "3743:12:377"
                },
                "nodeType": "ModifierInvocation",
                "src": "3743:12:377"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "3689:19:377",
            "parameters": {
              "id": 92832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92831,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3717:7:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92904,
                  "src": "3709:15:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:17:377"
            },
            "returnParameters": {
              "id": 92835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3756:0:377"
            },
            "scope": 93072,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92976,
            "nodeType": "FunctionDefinition",
            "src": "4492:945:377",
            "nodes": [],
            "body": {
              "id": 92975,
              "nodeType": "Block",
              "src": "4561:876:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92914,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21787,
                            "src": "4587:18:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 92915,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                93071
                              ],
                              "referencedDeclaration": 93071,
                              "src": "4607:10:377",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 92916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4607:12:377",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92913,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21818,
                          "src": "4579:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 92917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4579:41:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 92918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:16:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 92912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4571:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4571:68:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92920,
                  "nodeType": "ExpressionStatement",
                  "src": "4571:68:377"
                },
                {
                  "expression": {
                    "id": 92930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92921,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92695,
                      "src": "4709:18:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92922,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92907,
                          "src": "4730:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 92923,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92695,
                          "src": "4740:18:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4730:28:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92926,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92695,
                          "src": "4765:18:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 92927,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92907,
                          "src": "4786:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4765:28:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 92929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4730:63:377",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 92925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4761:1:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4709:84:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92931,
                  "nodeType": "ExpressionStatement",
                  "src": "4709:84:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92935,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92692,
                        "src": "4865:11:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 92938,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4898:4:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 92937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4890:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92936,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4890:7:377",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4890:13:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 92940,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            93071
                          ],
                          "referencedDeclaration": 93071,
                          "src": "4917:10:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 92941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4917:12:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92942,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92907,
                        "src": "4943:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92943,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28830,
                        "src": "4964:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92932,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4804:19:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 92934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4824:27:377",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4804:47:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 92944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:188:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92945,
                  "nodeType": "ExpressionStatement",
                  "src": "4804:188:377"
                },
                {
                  "assignments": [
                    92947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92947,
                      "mutability": "mutable",
                      "name": "_stakingToken",
                      "nameLocation": "5121:13:377",
                      "nodeType": "VariableDeclaration",
                      "scope": 92975,
                      "src": "5113:21:377",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 92946,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5113:7:377",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92955,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 92951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 92948,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28833,
                        "src": "5137:12:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 92949,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "5153:19:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 92950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5173:12:377",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "5153:32:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5137:48:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 92953,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28833,
                      "src": "5209:12:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 92954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5137:84:377",
                    "trueExpression": {
                      "id": 92952,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28830,
                      "src": "5188:18:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5113:108:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 92963,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5292:4:377",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenStake_$93072",
                                    "typeString": "contract TokenStake"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenStake_$93072",
                                    "typeString": "contract TokenStake"
                                  }
                                ],
                                "id": 92962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5284:7:377",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 92961,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5284:7:377",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 92964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5284:13:377",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 92958,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92947,
                                  "src": "5259:13:377",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 92957,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 169760,
                                "src": "5252:6:377",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$169760_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 92959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5252:21:377",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$169760",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 92960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5274:9:377",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 169717,
                            "src": "5252:31:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 92965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5252:46:377",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 92966,
                          "name": "stakingTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28845,
                          "src": "5302:19:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5252:69:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6720746f6b656e2062616c616e636520726564756365642e",
                        "id": 92968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5335:32:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        },
                        "value": "Staking token balance reduced."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        }
                      ],
                      "id": 92956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5231:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5231:146:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92970,
                  "nodeType": "ExpressionStatement",
                  "src": "5231:146:377"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 92972,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92907,
                        "src": "5422:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92971,
                      "name": "RewardTokensWithdrawnByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77806,
                      "src": "5393:28:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5393:37:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92974,
                  "nodeType": "EmitStatement",
                  "src": "5388:42:377"
                }
              ]
            },
            "baseFunctions": [
              77823
            ],
            "documentation": {
              "id": 92905,
              "nodeType": "StructuredDocumentation",
              "src": "4438:49:377",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 92910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92909,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4548:12:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "4548:12:377"
                },
                "nodeType": "ModifierInvocation",
                "src": "4548:12:377"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "4501:20:377",
            "parameters": {
              "id": 92908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92907,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4530:7:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 92976,
                  "src": "4522:15:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4522:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:17:377"
            },
            "returnParameters": {
              "id": 92911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4561:0:377"
            },
            "scope": 93072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92986,
            "nodeType": "FunctionDefinition",
            "src": "5513:116:377",
            "nodes": [],
            "body": {
              "id": 92985,
              "nodeType": "Block",
              "src": "5587:42:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92983,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92695,
                    "src": "5604:18:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 92982,
                  "id": 92984,
                  "nodeType": "Return",
                  "src": "5597:25:377"
                }
              ]
            },
            "baseFunctions": [
              29749
            ],
            "documentation": {
              "id": 92977,
              "nodeType": "StructuredDocumentation",
              "src": "5443:65:377",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "5522:21:377",
            "overrides": {
              "id": 92979,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5560:8:377"
            },
            "parameters": {
              "id": 92978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5543:2:377"
            },
            "returnParameters": {
              "id": 92982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92986,
                  "src": "5578:7:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5578:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5577:9:377"
            },
            "scope": 93072,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 93020,
            "nodeType": "FunctionDefinition",
            "src": "5880:393:377",
            "nodes": [],
            "body": {
              "id": 93019,
              "nodeType": "Block",
              "src": "5955:318:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92996,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92991,
                          "src": "5973:8:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 92997,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92695,
                          "src": "5985:18:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5973:30:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 92999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6005:26:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 92995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5965:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5965:67:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93001,
                  "nodeType": "ExpressionStatement",
                  "src": "5965:67:377"
                },
                {
                  "expression": {
                    "id": 93004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 93002,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92695,
                      "src": "6042:18:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 93003,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92991,
                      "src": "6064:8:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6042:30:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93005,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:30:377"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93009,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92692,
                        "src": "6143:11:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 93012,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6176:4:377",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$93072",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 93011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6168:7:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 93010,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6168:7:377",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 93013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6168:13:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93014,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92989,
                        "src": "6195:7:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93015,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92991,
                        "src": "6216:8:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 93016,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28830,
                        "src": "6238:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 93006,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6082:19:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 93008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6102:27:377",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "6082:47:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 93017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6082:184:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93018,
                  "nodeType": "ExpressionStatement",
                  "src": "6082:184:377"
                }
              ]
            },
            "baseFunctions": [
              29757
            ],
            "documentation": {
              "id": 92987,
              "nodeType": "StructuredDocumentation",
              "src": "5824:51:377",
              "text": "@dev Mint/Transfer ERC20 rewards to the staker."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "5889:12:377",
            "overrides": {
              "id": 92993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5946:8:377"
            },
            "parameters": {
              "id": 92992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92989,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "5910:7:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 93020,
                  "src": "5902:15:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92991,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "5927:8:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 93020,
                  "src": "5919:16:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5919:7:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:35:377"
            },
            "returnParameters": {
              "id": 92994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5955:0:377"
            },
            "scope": 93072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 93034,
            "nodeType": "FunctionDefinition",
            "src": "6563:137:377",
            "nodes": [],
            "body": {
              "id": 93033,
              "nodeType": "Block",
              "src": "6635:65:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93028,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6660:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 93029,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            93071
                          ],
                          "referencedDeclaration": 93071,
                          "src": "6680:10:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 93030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6680:12:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93027,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6652:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 93031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6652:41:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 93026,
                  "id": 93032,
                  "nodeType": "Return",
                  "src": "6645:48:377"
                }
              ]
            },
            "baseFunctions": [
              29763
            ],
            "documentation": {
              "id": 93021,
              "nodeType": "StructuredDocumentation",
              "src": "6462:96:377",
              "text": "@dev Returns whether staking related restrictions can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6572:22:377",
            "overrides": {
              "id": 93023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6611:8:377"
            },
            "parameters": {
              "id": 93022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6594:2:377"
            },
            "returnParameters": {
              "id": 93026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93034,
                  "src": "6629:4:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 93024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:4:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:6:377"
            },
            "scope": 93072,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 93048,
            "nodeType": "FunctionDefinition",
            "src": "6795:133:377",
            "nodes": [],
            "body": {
              "id": 93047,
              "nodeType": "Block",
              "src": "6863:65:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93042,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6888:18:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 93043,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            93071
                          ],
                          "referencedDeclaration": 93071,
                          "src": "6908:10:377",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 93044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6908:12:377",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93041,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6880:7:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 93045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6880:41:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 93040,
                  "id": 93046,
                  "nodeType": "Return",
                  "src": "6873:48:377"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 93035,
              "nodeType": "StructuredDocumentation",
              "src": "6706:84:377",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6804:18:377",
            "overrides": {
              "id": 93037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6839:8:377"
            },
            "parameters": {
              "id": 93036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6822:2:377"
            },
            "returnParameters": {
              "id": 93040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93048,
                  "src": "6857:4:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 93038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6857:4:377",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6856:6:377"
            },
            "scope": 93072,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 93058,
            "nodeType": "FunctionDefinition",
            "src": "7116:112:377",
            "nodes": [],
            "body": {
              "id": 93057,
              "nodeType": "Block",
              "src": "7192:36:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 93054,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        93071
                      ],
                      "referencedDeclaration": 93071,
                      "src": "7209:10:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 93055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7209:12:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 93053,
                  "id": 93056,
                  "nodeType": "Return",
                  "src": "7202:19:377"
                }
              ]
            },
            "baseFunctions": [
              29743
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stakeMsgSender",
            "nameLocation": "7125:15:377",
            "overrides": {
              "id": 93050,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7165:8:377"
            },
            "parameters": {
              "id": 93049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7140:2:377"
            },
            "returnParameters": {
              "id": 93053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93058,
                  "src": "7183:7:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7183:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7182:9:377"
            },
            "scope": 93072,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 93071,
            "nodeType": "FunctionDefinition",
            "src": "7234:222:377",
            "nodes": [],
            "body": {
              "id": 93070,
              "nodeType": "Block",
              "src": "7394:62:377",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 93066,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "7411:25:377",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 93067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7437:10:377",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "7411:36:377",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 93068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7411:38:377",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 93065,
                  "id": 93069,
                  "nodeType": "Return",
                  "src": "7404:45:377"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "7243:10:377",
            "overrides": {
              "id": 93062,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 93060,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "7319:25:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "7319:25:377"
                },
                {
                  "id": 93061,
                  "name": "Multicall",
                  "nameLocations": [
                    "7346:9:377"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "7346:9:377"
                }
              ],
              "src": "7310:46:377"
            },
            "parameters": {
              "id": 93059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7253:2:377"
            },
            "returnParameters": {
              "id": 93065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93064,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7382:6:377",
                  "nodeType": "VariableDeclaration",
                  "scope": 93071,
                  "src": "7374:14:377",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7374:7:377",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7373:16:377"
            },
            "scope": 93072,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 92667,
              "name": "Initializable",
              "nameLocations": [
                "1363:13:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1363:13:377"
            },
            "id": 92668,
            "nodeType": "InheritanceSpecifier",
            "src": "1363:13:377"
          },
          {
            "baseName": {
              "id": 92669,
              "name": "ContractMetadata",
              "nameLocations": [
                "1382:16:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1382:16:377"
            },
            "id": 92670,
            "nodeType": "InheritanceSpecifier",
            "src": "1382:16:377"
          },
          {
            "baseName": {
              "id": 92671,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1404:21:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1404:21:377"
            },
            "id": 92672,
            "nodeType": "InheritanceSpecifier",
            "src": "1404:21:377"
          },
          {
            "baseName": {
              "id": 92673,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1431:25:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1431:25:377"
            },
            "id": 92674,
            "nodeType": "InheritanceSpecifier",
            "src": "1431:25:377"
          },
          {
            "baseName": {
              "id": 92675,
              "name": "Multicall",
              "nameLocations": [
                "1462:9:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1462:9:377"
            },
            "id": 92676,
            "nodeType": "InheritanceSpecifier",
            "src": "1462:9:377"
          },
          {
            "baseName": {
              "id": 92677,
              "name": "Staking20Upgradeable",
              "nameLocations": [
                "1477:20:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29764,
              "src": "1477:20:377"
            },
            "id": 92678,
            "nodeType": "InheritanceSpecifier",
            "src": "1477:20:377"
          },
          {
            "baseName": {
              "id": 92679,
              "name": "ITokenStake",
              "nameLocations": [
                "1503:11:377"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77824,
              "src": "1503:11:377"
            },
            "id": 92680,
            "nodeType": "InheritanceSpecifier",
            "src": "1503:11:377"
          }
        ],
        "canonicalName": "TokenStake",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          93072,
          77824,
          29764,
          34788,
          154370,
          21206,
          33577,
          46402,
          161692,
          22411,
          22111,
          33932,
          33907,
          18093,
          154159,
          33084
        ],
        "name": "TokenStake",
        "nameLocation": "1345:10:377",
        "scope": 93073,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33846,
          33855,
          33864,
          34700,
          34707,
          34714,
          34721,
          34732,
          34739,
          77806,
          77811,
          154005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 377
}