{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162002c6438038062002c648339810160408190526200005991620002f4565b8181818160056200006b83826200040f565b5060066200007a82826200040f565b50504660a052503060c0526200008f620000a9565b60805250620000a090508362000140565b505050620004db565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000d662000192565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b606060058054620001a3906200037e565b80601f0160208091040260200160405190810160405280929190818152602001828054620001d1906200037e565b8015620002225780601f10620001f65761010080835404028352916020019162000222565b820191906000526020600020905b8154815290600101906020018083116200020457829003601f168201915b5050505050905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025457600080fd5b81516001600160401b03808211156200027157620002716200022c565b604051601f8301601f19908116603f011681019082821181831017156200029c576200029c6200022c565b8160405283815260209250866020858801011115620002ba57600080fd5b600091505b83821015620002de5785820183015181830184015290820190620002bf565b6000602085830101528094505050505092915050565b6000806000606084860312156200030a57600080fd5b83516001600160a01b03811681146200032257600080fd5b60208501519093506001600160401b03808211156200034057600080fd5b6200034e8783880162000242565b935060408601519150808211156200036557600080fd5b50620003748682870162000242565b9150509250925092565b600181811c908216806200039357607f821691505b602082108103620003b457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040a576000816000526020600020601f850160051c81016020861015620003e55750805b601f850160051c820191505b818110156200040657828155600101620003f1565b5050505b505050565b81516001600160401b038111156200042b576200042b6200022c565b62000443816200043c84546200037e565b84620003ba565b602080601f8311600181146200047b5760008415620004625750858301515b600019600386901b1c1916600185901b17855562000406565b600085815260208120601f198616915b82811015620004ac578886015182559484019460019091019084016200048b565b5085821015620004cb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161274f620005156000396000610cdc0152600061050f0152600061053901526000610563015261274f6000f3fe608060405234801561001057600080fd5b506004361061016a5760003560e01c806306fdde031461016f578063095ea7b31461018d57806313af4035146101b057806318160ddd146101c557806323b872dd146101d7578063313ce567146101ea5780633644e515146101f957806339509351146102015780633a46b1a81461021457806342966c6814610227578063449a52f81461023a578063587cde1e1461024d5780635c19a95c146102785780636fcfff451461028b57806370a08231146102b357806379cc6790146102c65780637ecebe00146102d95780638da5cb5b146102ec5780638e539e8c146102f4578063938e3d7b1461030757806395d89b411461031a5780639ab24eb014610322578063a457c2d714610335578063a9059cbb14610348578063ac9650d81461035b578063c3cda5201461037b578063d505accf1461038e578063dd62ed3e146103a1578063e8a3d485146103b4578063f1127ed8146103bc575b600080fd5b6101776103f9565b6040516101849190612015565b60405180910390f35b6101a061019b366004612044565b61048b565b6040519015158152602001610184565b6101c36101be36600461206e565b6104a5565b005b6004545b604051908152602001610184565b6101a06101e5366004612089565b6104de565b60405160128152602001610184565b6101c9610502565b6101a061020f366004612044565b610592565b6101c9610222366004612044565b6105d1565b6101c36102353660046120c5565b61061b565b6101c3610248366004612044565b61064d565b61026061025b36600461206e565b6106f0565b6040516001600160a01b039091168152602001610184565b6101c361028636600461206e565b61070e565b61029e61029936600461206e565b610718565b60405163ffffffff9091168152602001610184565b6101c96102c136600461206e565b61073a565b6101c36102d4366004612044565b610755565b6101c96102e736600461206e565b61080a565b610260610828565b6101c96103023660046120c5565b610837565b6101c36103153660046120f4565b610863565b610177610890565b6101c961033036600461206e565b61089f565b6101a0610343366004612044565b610925565b6101a0610356366004612044565b6109b7565b61036e6103693660046121a4565b6109c5565b6040516101849190612218565b6101c361038936600461228d565b610b2a565b6101c361039c3660046122e5565b610c88565b6101c96103af36600461234f565b610dee565b610177610e19565b6103cf6103ca366004612382565b610ea7565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610184565b606060058054610408906123c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906123c2565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b600033610499818585610f2a565b60019150505b92915050565b6104ad61104e565b6104d25760405162461bcd60e51b81526004016104c9906123f6565b60405180910390fd5b6104db81611071565b50565b6000336104ec8582856110c3565b6104f785858561113d565b506001949350505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561055b57507f000000000000000000000000000000000000000000000000000000000000000046145b1561058557507f000000000000000000000000000000000000000000000000000000000000000090565b61058d6112ff565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061049990829086906105cc908790612434565b610f2a565b60004382106105f25760405162461bcd60e51b81526004016104c990612447565b6001600160a01b03831660009081526009602052604090206106149083611394565b9392505050565b806106253361073a565b10156106435760405162461bcd60e51b81526004016104c99061247e565b6104db3382611450565b61065561104e565b61069b5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064016104c9565b806000036106e25760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b60448201526064016104c9565b6106ec8282611468565b5050565b6001600160a01b039081166000908152600860205260409020541690565b6104db33826114f2565b6001600160a01b03811660009081526009602052604081205461049f90611572565b6001600160a01b031660009081526002602052604090205490565b61075d61104e565b6107a35760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b60448201526064016104c9565b806107ad8361073a565b10156107cb5760405162461bcd60e51b81526004016104c99061247e565b6000816107d88433610dee565b6107e291906124aa565b90506107f083336000610f2a565b6107fb833383610f2a565b6108058383611450565b505050565b6001600160a01b03811660009081526007602052604081205461049f565b6001546001600160a01b031690565b60004382106108585760405162461bcd60e51b81526004016104c990612447565b61049f600a83611394565b61086b61104e565b6108875760405162461bcd60e51b81526004016104c9906123f6565b6104db816115db565b606060068054610408906123c2565b6001600160a01b0381166000908152600960205260408120548015610912576001600160a01b03831660009081526009602052604090206108e16001836124aa565b815481106108f1576108f16124bd565b600091825260209091200154600160201b90046001600160e01b0316610915565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156109aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104c9565b6104f78286868403610f2a565b60003361049981858561113d565b6060816001600160401b038111156109df576109df6120de565b604051908082528060200260200182016040528015610a1257816020015b60608152602001906001900390816109fd5790505b509050336000805b84811015610b21578115610a9957610a7730878784818110610a3e57610a3e6124bd565b9050602002810190610a5091906124d3565b86604051602001610a6393929190612520565b6040516020818303038152906040526116b6565b848281518110610a8957610a896124bd565b6020026020010181905250610b19565b610afb30878784818110610aaf57610aaf6124bd565b9050602002810190610ac191906124d3565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506116b692505050565b848281518110610b0d57610b0d6124bd565b60200260200101819052505b600101610a1a565b50505092915050565b83421115610b7a5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016104c9565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610c0e610bee610502565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610c1e828787876116db565b9050610c2981611705565b8814610c735760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b60448201526064016104c9565b610c7d818a6114f2565b505050505050505050565b83421115610cd85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104c9565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610d078c611705565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d64610bee610502565b90506000610d74828787876116db565b9050896001600160a01b0316816001600160a01b031614610dd75760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104c9565b610de28a8a8a610f2a565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054610e26906123c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e52906123c2565b8015610e9f5780601f10610e7457610100808354040283529160200191610e9f565b820191906000526020600020905b815481529060010190602001808311610e8257829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff8416908110610eeb57610eeb6124bd565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b038316610f8c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104c9565b6001600160a01b038216610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104c9565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611058610828565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006110cf8484610dee565b90506000198114611137578181101561112a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104c9565b6111378484848403610f2a565b50505050565b6001600160a01b0383166111a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104c9565b6001600160a01b0382166112035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104c9565b6001600160a01b0383166000908152600260205260409020548181101561127b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104c9565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906112b2908490612434565b92505081905550826001600160a01b0316846001600160a01b03166000805160206126fa833981519152846040516112ec91815260200190565b60405180910390a361113784848461172d565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61132a6103f9565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8154600090815b818110156113f85760006113af8284611748565b9050848682815481106113c4576113c46124bd565b60009182526020909120015463ffffffff1611156113e4578092506113f2565b6113ef816001612434565b91505b5061139b565b811561143b578461140a6001846124aa565b8154811061141a5761141a6124bd565b600091825260209091200154600160201b90046001600160e01b031661143e565b60005b6001600160e01b031695945050505050565b61145a8282611763565b611137600a6118a6836118b2565b6114728282611a29565b6004546001600160e01b0310156114e45760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016104c9565b611137600a611afe836118b2565b60006114fd836106f0565b9050600061150a8461073a565b6001600160a01b0385811660008181526008602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611137828483611b0a565b600063ffffffff8211156115d75760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016104c9565b5090565b60008080546115e9906123c2565b80601f0160208091040260200160405190810160405280929190818152602001828054611615906123c2565b80156116625780601f1061163757610100808354040283529160200191611662565b820191906000526020600020905b81548152906001019060200180831161164557829003601f168201915b5050505050905081600090816116789190612591565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516116aa929190612650565b60405180910390a15050565b606061061483836040518060600160405280602781526020016126d360279139611c47565b60008060006116ec87878787611cbf565b915091506116f981611d79565b5090505b949350505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b610805611739846106f0565b611742846106f0565b83611b0a565b6000611757600284841861267e565b61061490848416612434565b6001600160a01b0382166117c35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104c9565b6001600160a01b038216600090815260026020526040902054818110156118375760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104c9565b6001600160a01b03831660009081526002602052604081208383039055600480548492906118669084906124aa565b90915550506040518281526000906001600160a01b038516906000805160206126fa8339815191529060200160405180910390a36108058360008461172d565b600061061482846124aa565b8254600090819080156118fc57856118cb6001836124aa565b815481106118db576118db6124bd565b600091825260209091200154600160201b90046001600160e01b03166118ff565b60005b6001600160e01b0316925061191883858763ffffffff16565b9150600081118015611956575043866119326001846124aa565b81548110611942576119426124bd565b60009182526020909120015463ffffffff16145b156119b65761196482611ebe565b866119706001846124aa565b81548110611980576119806124bd565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611a20565b8560405180604001604052806119cb43611572565b63ffffffff1681526020016119df85611ebe565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6001600160a01b038216611a7f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104c9565b8060046000828254611a919190612434565b90915550506001600160a01b03821660009081526002602052604081208054839290611abe908490612434565b90915550506040518181526001600160a01b038316906000906000805160206126fa8339815191529060200160405180910390a36106ec6000838361172d565b60006106148284612434565b816001600160a01b0316836001600160a01b031614158015611b2c5750600081115b15610805576001600160a01b03831615611bba576001600160a01b03831660009081526009602052604081208190611b67906118a6856118b2565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611baf929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610805576001600160a01b03821660009081526009602052604081208190611bf090611afe856118b2565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c38929190918252602082015260400190565b60405180910390a25050505050565b6060600080856001600160a01b031685604051611c6491906126a0565b600060405180830381855af49150503d8060008114611c9f576040519150601f19603f3d011682016040523d82523d6000602084013e611ca4565b606091505b5091509150611cb586838387611f27565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611cec5750600090506003611d70565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d40573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d6957600060019250925050611d70565b9150600090505b94509492505050565b6000816004811115611d8d57611d8d6126bc565b03611d955750565b6001816004811115611da957611da96126bc565b03611df15760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016104c9565b6002816004811115611e0557611e056126bc565b03611e525760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104c9565b6003816004811115611e6657611e666126bc565b036104db5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104c9565b60006001600160e01b038211156115d75760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016104c9565b60608315611f96578251600003611f8f576001600160a01b0385163b611f8f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c9565b50816116fd565b6116fd8383815115611fab5781518083602001fd5b8060405162461bcd60e51b81526004016104c99190612015565b60005b83811015611fe0578181015183820152602001611fc8565b50506000910152565b60008151808452612001816020860160208601611fc5565b601f01601f19169290920160200192915050565b6020815260006106146020830184611fe9565b80356001600160a01b038116811461203f57600080fd5b919050565b6000806040838503121561205757600080fd5b61206083612028565b946020939093013593505050565b60006020828403121561208057600080fd5b61061482612028565b60008060006060848603121561209e57600080fd5b6120a784612028565b92506120b560208501612028565b9150604084013590509250925092565b6000602082840312156120d757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561210657600080fd5b81356001600160401b038082111561211d57600080fd5b818401915084601f83011261213157600080fd5b813581811115612143576121436120de565b604051601f8201601f19908116603f0116810190838211818310171561216b5761216b6120de565b8160405282815287602084870101111561218457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156121b757600080fd5b82356001600160401b03808211156121ce57600080fd5b818501915085601f8301126121e257600080fd5b8135818111156121f157600080fd5b8660208260051b850101111561220657600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561226f57603f1988860301845261225d858351611fe9565b94509285019290850190600101612241565b5092979650505050505050565b803560ff8116811461203f57600080fd5b60008060008060008060c087890312156122a657600080fd5b6122af87612028565b955060208701359450604087013593506122cb6060880161227c565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561230057600080fd5b61230988612028565b965061231760208901612028565b955060408801359450606088013593506123336080890161227c565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561236257600080fd5b61236b83612028565b915061237960208401612028565b90509250929050565b6000806040838503121561239557600080fd5b61239e83612028565b9150602083013563ffffffff811681146123b757600080fd5b809150509250929050565b600181811c908216806123d657607f821691505b60208210810361172757634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561049f5761049f61241e565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b8181038181111561049f5761049f61241e565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126124ea57600080fd5b8301803591506001600160401b0382111561250457600080fd5b60200191503681900382131561251957600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b601f821115610805576000816000526020600020601f850160051c8101602086101561256a5750805b601f850160051c820191505b8181101561258957828155600101612576565b505050505050565b81516001600160401b038111156125aa576125aa6120de565b6125be816125b884546123c2565b84612541565b602080601f8311600181146125f357600084156125db5750858301515b600019600386901b1c1916600185901b178555612589565b600085815260208120601f198616915b8281101561262257888601518255948401946001909101908401612603565b50858210156126405787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006126636040830185611fe9565b82810360208401526126758185611fe9565b95945050505050565b60008261269b57634e487b7160e01b600052601260045260246000fd5b500490565b600082516126b2818460208701611fc5565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f736e9780283d0e3572bb60c65dfc214b6dd0f98c13cc7378bb1c5cd25e32c2c64736f6c63430008170033",
    "sourceMap": "1013:3475:10:-:0;;;1443:95:226;1390:148;;1301:150:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1392:5;1399:7;1392:5;1399:7;2081:5:225;:13;1392:5:10;2081::225;:13;:::i;:::-;-1:-1:-1;2104:7:225;:17;2114:7;2104;:17;:::i;:::-;-1:-1:-1;;1877:13:226::1;1858:32;::::0;-1:-1:-1;1923:4:226::1;1900:28;::::0;1965:23:::1;:21;:23::i;:::-;1938:50;::::0;-1:-1:-1;1418:26:10::1;::::0;-1:-1:-1;1430:13:10;1418:11:::1;:26::i;:::-;1301:150:::0;;;1013:3475;;3296:438:226;3351:7;3448:95;3581:6;:4;:6::i;:::-;3565:24;;;;;;;3416:297;;;;;;4568:25:821;;;;4609:18;;;4602:34;;;;3611:14:226;4652:18:821;;;4645:34;3647:13:226;4695:18:821;;;4688:34;3690:4:226;4738:19:821;;;4731:61;4540:19;;3416:297:226;;;;;;;;;;;;3389:338;;;;;;3370:357;;3296:438;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2193:98:225:-;2247:13;2279:5;2272:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98;:::o;14:127:821:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:821;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:821;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:729::-;1103:6;1111;1119;1172:2;1160:9;1151:7;1147:23;1143:32;1140:52;;;1188:1;1185;1178:12;1140:52;1214:16;;-1:-1:-1;;;;;1259:31:821;;1249:42;;1239:70;;1305:1;1302;1295:12;1239:70;1377:2;1362:18;;1356:25;1328:5;;-1:-1:-1;;;;;;1430:14:821;;;1427:34;;;1457:1;1454;1447:12;1427:34;1480:61;1533:7;1524:6;1513:9;1509:22;1480:61;:::i;:::-;1470:71;;1587:2;1576:9;1572:18;1566:25;1550:41;;1616:2;1606:8;1603:16;1600:36;;;1632:1;1629;1622:12;1600:36;;1655:63;1710:7;1699:8;1688:9;1684:24;1655:63;:::i;:::-;1645:73;;;995:729;;;;;:::o;1729:380::-;1808:1;1804:12;;;;1851;;;1872:61;;1926:4;1918:6;1914:17;1904:27;;1872:61;1979:2;1971:6;1968:14;1948:18;1945:38;1942:161;;2025:10;2020:3;2016:20;2013:1;2006:31;2060:4;2057:1;2050:15;2088:4;2085:1;2078:15;1942:161;;1729:380;;;:::o;2240:543::-;2342:2;2337:3;2334:11;2331:446;;;2378:1;2402:5;2399:1;2392:16;2446:4;2443:1;2433:18;2516:2;2504:10;2500:19;2497:1;2493:27;2487:4;2483:38;2552:4;2540:10;2537:20;2534:47;;;-1:-1:-1;2575:4:821;2534:47;2630:2;2625:3;2621:12;2618:1;2614:20;2608:4;2604:31;2594:41;;2685:82;2703:2;2696:5;2693:13;2685:82;;;2748:17;;;2729:1;2718:13;2685:82;;;2689:3;;;2331:446;2240:543;;;:::o;2959:1345::-;3079:10;;-1:-1:-1;;;;;3101:30:821;;3098:56;;;3134:18;;:::i;:::-;3163:97;3253:6;3213:38;3245:4;3239:11;3213:38;:::i;:::-;3207:4;3163:97;:::i;:::-;3315:4;;3372:2;3361:14;;3389:1;3384:663;;;;4091:1;4108:6;4105:89;;;-1:-1:-1;4160:19:821;;;4154:26;4105:89;-1:-1:-1;;2916:1:821;2912:11;;;2908:24;2904:29;2894:40;2940:1;2936:11;;;2891:57;4207:81;;3354:944;;3384:663;2187:1;2180:14;;;2224:4;2211:18;;-1:-1:-1;;3420:20:821;;;3538:236;3552:7;3549:1;3546:14;3538:236;;;3641:19;;;3635:26;3620:42;;3733:27;;;;3701:1;3689:14;;;;3568:19;;3538:236;;;3542:3;3802:6;3793:7;3790:19;3787:201;;;3863:19;;;3857:26;-1:-1:-1;;3946:1:821;3942:14;;;3958:3;3938:24;3934:37;3930:42;3915:58;3900:74;;3787:201;-1:-1:-1;;;;;4034:1:821;4018:14;;;4014:22;4001:36;;-1:-1:-1;2959:1345:821:o;4309:489::-;1013:3475:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061016a5760003560e01c806306fdde031461016f578063095ea7b31461018d57806313af4035146101b057806318160ddd146101c557806323b872dd146101d7578063313ce567146101ea5780633644e515146101f957806339509351146102015780633a46b1a81461021457806342966c6814610227578063449a52f81461023a578063587cde1e1461024d5780635c19a95c146102785780636fcfff451461028b57806370a08231146102b357806379cc6790146102c65780637ecebe00146102d95780638da5cb5b146102ec5780638e539e8c146102f4578063938e3d7b1461030757806395d89b411461031a5780639ab24eb014610322578063a457c2d714610335578063a9059cbb14610348578063ac9650d81461035b578063c3cda5201461037b578063d505accf1461038e578063dd62ed3e146103a1578063e8a3d485146103b4578063f1127ed8146103bc575b600080fd5b6101776103f9565b6040516101849190612015565b60405180910390f35b6101a061019b366004612044565b61048b565b6040519015158152602001610184565b6101c36101be36600461206e565b6104a5565b005b6004545b604051908152602001610184565b6101a06101e5366004612089565b6104de565b60405160128152602001610184565b6101c9610502565b6101a061020f366004612044565b610592565b6101c9610222366004612044565b6105d1565b6101c36102353660046120c5565b61061b565b6101c3610248366004612044565b61064d565b61026061025b36600461206e565b6106f0565b6040516001600160a01b039091168152602001610184565b6101c361028636600461206e565b61070e565b61029e61029936600461206e565b610718565b60405163ffffffff9091168152602001610184565b6101c96102c136600461206e565b61073a565b6101c36102d4366004612044565b610755565b6101c96102e736600461206e565b61080a565b610260610828565b6101c96103023660046120c5565b610837565b6101c36103153660046120f4565b610863565b610177610890565b6101c961033036600461206e565b61089f565b6101a0610343366004612044565b610925565b6101a0610356366004612044565b6109b7565b61036e6103693660046121a4565b6109c5565b6040516101849190612218565b6101c361038936600461228d565b610b2a565b6101c361039c3660046122e5565b610c88565b6101c96103af36600461234f565b610dee565b610177610e19565b6103cf6103ca366004612382565b610ea7565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610184565b606060058054610408906123c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906123c2565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b600033610499818585610f2a565b60019150505b92915050565b6104ad61104e565b6104d25760405162461bcd60e51b81526004016104c9906123f6565b60405180910390fd5b6104db81611071565b50565b6000336104ec8582856110c3565b6104f785858561113d565b506001949350505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561055b57507f000000000000000000000000000000000000000000000000000000000000000046145b1561058557507f000000000000000000000000000000000000000000000000000000000000000090565b61058d6112ff565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061049990829086906105cc908790612434565b610f2a565b60004382106105f25760405162461bcd60e51b81526004016104c990612447565b6001600160a01b03831660009081526009602052604090206106149083611394565b9392505050565b806106253361073a565b10156106435760405162461bcd60e51b81526004016104c99061247e565b6104db3382611450565b61065561104e565b61069b5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064016104c9565b806000036106e25760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b60448201526064016104c9565b6106ec8282611468565b5050565b6001600160a01b039081166000908152600860205260409020541690565b6104db33826114f2565b6001600160a01b03811660009081526009602052604081205461049f90611572565b6001600160a01b031660009081526002602052604090205490565b61075d61104e565b6107a35760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b60448201526064016104c9565b806107ad8361073a565b10156107cb5760405162461bcd60e51b81526004016104c99061247e565b6000816107d88433610dee565b6107e291906124aa565b90506107f083336000610f2a565b6107fb833383610f2a565b6108058383611450565b505050565b6001600160a01b03811660009081526007602052604081205461049f565b6001546001600160a01b031690565b60004382106108585760405162461bcd60e51b81526004016104c990612447565b61049f600a83611394565b61086b61104e565b6108875760405162461bcd60e51b81526004016104c9906123f6565b6104db816115db565b606060068054610408906123c2565b6001600160a01b0381166000908152600960205260408120548015610912576001600160a01b03831660009081526009602052604090206108e16001836124aa565b815481106108f1576108f16124bd565b600091825260209091200154600160201b90046001600160e01b0316610915565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156109aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104c9565b6104f78286868403610f2a565b60003361049981858561113d565b6060816001600160401b038111156109df576109df6120de565b604051908082528060200260200182016040528015610a1257816020015b60608152602001906001900390816109fd5790505b509050336000805b84811015610b21578115610a9957610a7730878784818110610a3e57610a3e6124bd565b9050602002810190610a5091906124d3565b86604051602001610a6393929190612520565b6040516020818303038152906040526116b6565b848281518110610a8957610a896124bd565b6020026020010181905250610b19565b610afb30878784818110610aaf57610aaf6124bd565b9050602002810190610ac191906124d3565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506116b692505050565b848281518110610b0d57610b0d6124bd565b60200260200101819052505b600101610a1a565b50505092915050565b83421115610b7a5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016104c9565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610c0e610bee610502565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610c1e828787876116db565b9050610c2981611705565b8814610c735760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b60448201526064016104c9565b610c7d818a6114f2565b505050505050505050565b83421115610cd85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104c9565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610d078c611705565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d64610bee610502565b90506000610d74828787876116db565b9050896001600160a01b0316816001600160a01b031614610dd75760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104c9565b610de28a8a8a610f2a565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054610e26906123c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e52906123c2565b8015610e9f5780601f10610e7457610100808354040283529160200191610e9f565b820191906000526020600020905b815481529060010190602001808311610e8257829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff8416908110610eeb57610eeb6124bd565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b038316610f8c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104c9565b6001600160a01b038216610fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104c9565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611058610828565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006110cf8484610dee565b90506000198114611137578181101561112a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104c9565b6111378484848403610f2a565b50505050565b6001600160a01b0383166111a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104c9565b6001600160a01b0382166112035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104c9565b6001600160a01b0383166000908152600260205260409020548181101561127b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104c9565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906112b2908490612434565b92505081905550826001600160a01b0316846001600160a01b03166000805160206126fa833981519152846040516112ec91815260200190565b60405180910390a361113784848461172d565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61132a6103f9565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8154600090815b818110156113f85760006113af8284611748565b9050848682815481106113c4576113c46124bd565b60009182526020909120015463ffffffff1611156113e4578092506113f2565b6113ef816001612434565b91505b5061139b565b811561143b578461140a6001846124aa565b8154811061141a5761141a6124bd565b600091825260209091200154600160201b90046001600160e01b031661143e565b60005b6001600160e01b031695945050505050565b61145a8282611763565b611137600a6118a6836118b2565b6114728282611a29565b6004546001600160e01b0310156114e45760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016104c9565b611137600a611afe836118b2565b60006114fd836106f0565b9050600061150a8461073a565b6001600160a01b0385811660008181526008602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611137828483611b0a565b600063ffffffff8211156115d75760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016104c9565b5090565b60008080546115e9906123c2565b80601f0160208091040260200160405190810160405280929190818152602001828054611615906123c2565b80156116625780601f1061163757610100808354040283529160200191611662565b820191906000526020600020905b81548152906001019060200180831161164557829003601f168201915b5050505050905081600090816116789190612591565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516116aa929190612650565b60405180910390a15050565b606061061483836040518060600160405280602781526020016126d360279139611c47565b60008060006116ec87878787611cbf565b915091506116f981611d79565b5090505b949350505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b610805611739846106f0565b611742846106f0565b83611b0a565b6000611757600284841861267e565b61061490848416612434565b6001600160a01b0382166117c35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104c9565b6001600160a01b038216600090815260026020526040902054818110156118375760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104c9565b6001600160a01b03831660009081526002602052604081208383039055600480548492906118669084906124aa565b90915550506040518281526000906001600160a01b038516906000805160206126fa8339815191529060200160405180910390a36108058360008461172d565b600061061482846124aa565b8254600090819080156118fc57856118cb6001836124aa565b815481106118db576118db6124bd565b600091825260209091200154600160201b90046001600160e01b03166118ff565b60005b6001600160e01b0316925061191883858763ffffffff16565b9150600081118015611956575043866119326001846124aa565b81548110611942576119426124bd565b60009182526020909120015463ffffffff16145b156119b65761196482611ebe565b866119706001846124aa565b81548110611980576119806124bd565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611a20565b8560405180604001604052806119cb43611572565b63ffffffff1681526020016119df85611ebe565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6001600160a01b038216611a7f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104c9565b8060046000828254611a919190612434565b90915550506001600160a01b03821660009081526002602052604081208054839290611abe908490612434565b90915550506040518181526001600160a01b038316906000906000805160206126fa8339815191529060200160405180910390a36106ec6000838361172d565b60006106148284612434565b816001600160a01b0316836001600160a01b031614158015611b2c5750600081115b15610805576001600160a01b03831615611bba576001600160a01b03831660009081526009602052604081208190611b67906118a6856118b2565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611baf929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610805576001600160a01b03821660009081526009602052604081208190611bf090611afe856118b2565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c38929190918252602082015260400190565b60405180910390a25050505050565b6060600080856001600160a01b031685604051611c6491906126a0565b600060405180830381855af49150503d8060008114611c9f576040519150601f19603f3d011682016040523d82523d6000602084013e611ca4565b606091505b5091509150611cb586838387611f27565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611cec5750600090506003611d70565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d40573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d6957600060019250925050611d70565b9150600090505b94509492505050565b6000816004811115611d8d57611d8d6126bc565b03611d955750565b6001816004811115611da957611da96126bc565b03611df15760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016104c9565b6002816004811115611e0557611e056126bc565b03611e525760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104c9565b6003816004811115611e6657611e666126bc565b036104db5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104c9565b60006001600160e01b038211156115d75760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016104c9565b60608315611f96578251600003611f8f576001600160a01b0385163b611f8f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c9565b50816116fd565b6116fd8383815115611fab5781518083602001fd5b8060405162461bcd60e51b81526004016104c99190612015565b60005b83811015611fe0578181015183820152602001611fc8565b50506000910152565b60008151808452612001816020860160208601611fc5565b601f01601f19169290920160200192915050565b6020815260006106146020830184611fe9565b80356001600160a01b038116811461203f57600080fd5b919050565b6000806040838503121561205757600080fd5b61206083612028565b946020939093013593505050565b60006020828403121561208057600080fd5b61061482612028565b60008060006060848603121561209e57600080fd5b6120a784612028565b92506120b560208501612028565b9150604084013590509250925092565b6000602082840312156120d757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561210657600080fd5b81356001600160401b038082111561211d57600080fd5b818401915084601f83011261213157600080fd5b813581811115612143576121436120de565b604051601f8201601f19908116603f0116810190838211818310171561216b5761216b6120de565b8160405282815287602084870101111561218457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156121b757600080fd5b82356001600160401b03808211156121ce57600080fd5b818501915085601f8301126121e257600080fd5b8135818111156121f157600080fd5b8660208260051b850101111561220657600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561226f57603f1988860301845261225d858351611fe9565b94509285019290850190600101612241565b5092979650505050505050565b803560ff8116811461203f57600080fd5b60008060008060008060c087890312156122a657600080fd5b6122af87612028565b955060208701359450604087013593506122cb6060880161227c565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561230057600080fd5b61230988612028565b965061231760208901612028565b955060408801359450606088013593506123336080890161227c565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561236257600080fd5b61236b83612028565b915061237960208401612028565b90509250929050565b6000806040838503121561239557600080fd5b61239e83612028565b9150602083013563ffffffff811681146123b757600080fd5b809150509250929050565b600181811c908216806123d657607f821691505b60208210810361172757634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561049f5761049f61241e565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b8181038181111561049f5761049f61241e565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126124ea57600080fd5b8301803591506001600160401b0382111561250457600080fd5b60200191503681900382131561251957600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b601f821115610805576000816000526020600020601f850160051c8101602086101561256a5750805b601f850160051c820191505b8181101561258957828155600101612576565b505050505050565b81516001600160401b038111156125aa576125aa6120de565b6125be816125b884546123c2565b84612541565b602080601f8311600181146125f357600084156125db5750858301515b600019600386901b1c1916600185901b178555612589565b600085815260208120601f198616915b8281101561262257888601518255948401946001909101908401612603565b50858210156126405787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006126636040830185611fe9565b82810360208401526126758185611fe9565b95945050505050565b60008261269b57634e487b7160e01b600052601260045260246000fd5b500490565b600082516126b2818460208701611fc5565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f736e9780283d0e3572bb60c65dfc214b6dd0f98c13cc7378bb1c5cd25e32c2c64736f6c63430008170033",
    "sourceMap": "1013:3475:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98:225;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4470:197;;;;;;:::i;:::-;;:::i;:::-;;;1372:14:821;;1365:22;1347:41;;1335:2;1320:18;4470:197:225;1207:187:821;1133:173:70;;;;;;:::i;:::-;;:::i;:::-;;3281:106:225;3368:12;;3281:106;;;1736:25:821;;;1724:2;1709:18;3281:106:225;1590:177:821;5229:256:225;;;;;;:::i;:::-;;:::i;3130:91::-;;;3212:2;2247:36:821;;2235:2;2220:18;3130:91:225;2105:184:821;3018:272:226;;;:::i;5880:236:225:-;;;;;;:::i;:::-;;:::i;2684:265:227:-;;;;;;:::i;:::-;;:::i;2410:166:10:-;;;;;;:::i;:::-;;:::i;1978:209::-;;;;;;:::i;:::-;;:::i;2077:126:227:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2825:32:821;;;2807:51;;2795:2;2780:18;2077:126:227;2661:203:821;5107:167:227;;;;;;:::i;:::-;;:::i;1840:149::-;;;;;;:::i;:::-;;:::i;:::-;;;3043:10:821;3031:23;;;3013:42;;3001:2;2986:18;1840:149:227;2869:192:821;3445:125:225;;;;;;:::i;:::-;;:::i;2873:430:10:-;;;;;;:::i;:::-;;:::i;2768:126:226:-;;;;;;:::i;:::-;;:::i;871:86:70:-;;;:::i;3228:256:227:-;;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;:::i;:::-;;:::i;2404:102:225:-;;;:::i;2282:209:227:-;;;;;;:::i;:::-;;:::i;6603:429:225:-;;;;;;:::i;:::-;;:::i;3766:189::-;;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5543:613:227:-;;;;;;:::i;:::-;;:::i;2056:651:226:-;;;;;;:::i;:::-;;:::i;4013:149:225:-;;;;;;:::i;:::-;;:::i;565:34:56:-;;;:::i;1617:148:227:-;;;;;;:::i;:::-;;:::i;:::-;;;;7716:13:821;;7731:10;7712:30;7694:49;;7803:4;7791:17;;;7785:24;-1:-1:-1;;;;;7781:50:821;7759:20;;;7752:80;;;;7667:18;1617:148:227;7490:348:821;2193:98:225;2247:13;2279:5;2272:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:98;:::o;4470:197::-;4553:4;4469:10:10;4607:32:225;4469:10:10;4623:7:225;4632:6;4607:8;:32::i;:::-;4656:4;4649:11;;;4470:197;;;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;5229:256:225:-;5326:4;4469:10:10;5382:38:225;5398:4;4469:10:10;5413:6:225;5382:15;:38::i;:::-;5430:27;5440:4;5446:2;5450:6;5430:9;:27::i;:::-;-1:-1:-1;5474:4:225;;5229:256;-1:-1:-1;;;;5229:256:225:o;3018:272:226:-;3076:7;3107:4;-1:-1:-1;;;;;3116:12:226;3099:29;;:66;;;;;3149:16;3132:13;:33;3099:66;3095:189;;;-1:-1:-1;3188:24:226;;3018:272::o;3095:189::-;3250:23;:21;:23::i;:::-;3243:30;;3018:272;:::o;5880:236:225:-;4469:10:10;5968:4:225;6047:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6047:27:225;;;;;;;;;;5968:4;;4469:10:10;6022:66:225;;4469:10:10;;6047:27:225;;:40;;6077:10;;6047:40;:::i;:::-;6022:8;:66::i;2684:265:227:-;2782:7;2823:12;2809:11;:26;2801:70;;;;-1:-1:-1;;;2801:70:227;;;;;;;:::i;:::-;-1:-1:-1;;;;;2907:21:227;;;;;;:12;:21;;;;;2888:54;;2930:11;2888:18;:54::i;:::-;2881:61;2684:265;-1:-1:-1;;;2684:265:227:o;2410:166:10:-;2503:7;2476:23;4469:10;3445:125:225;:::i;2476:23:10:-;:34;;2468:65;;;;-1:-1:-1;;;2468:65:10;;;;;;;:::i;:::-;2543:26;2549:10;2561:7;2543:5;:26::i;1978:209::-;2057:10;:8;:10::i;:::-;2049:46;;;;-1:-1:-1;;;2049:46:10;;9742:2:821;2049:46:10;;;9724:21:821;9781:2;9761:18;;;9754:30;-1:-1:-1;;;9800:18:821;;;9793:53;9863:18;;2049:46:10;9540:347:821;2049:46:10;2113:7;2124:1;2113:12;2105:45;;;;-1:-1:-1;;;2105:45:10;;10094:2:821;2105:45:10;;;10076:21:821;10133:2;10113:18;;;10106:30;-1:-1:-1;;;10152:18:821;;;10145:50;10212:18;;2105:45:10;9892:344:821;2105:45:10;2161:19;2167:3;2172:7;2161:5;:19::i;:::-;1978:209;;:::o;2077:126:227:-;-1:-1:-1;;;;;2177:19:227;;;2151:7;2177:19;;;:10;:19;;;;;;;;2077:126::o;5107:167::-;5233:34;4469:10:10;5257:9:227;5233;:34::i;1840:149::-;-1:-1:-1;;;;;1953:21:227;;1910:6;1953:21;;;:12;:21;;;;;:28;1935:47;;:17;:47::i;3445:125:225:-;-1:-1:-1;;;;;3545:18:225;3519:7;3545:18;;;:9;:18;;;;;;;3445:125::o;2873:430:10:-;2970:10;:8;:10::i;:::-;2962:46;;;;-1:-1:-1;;;2962:46:10;;10443:2:821;2962:46:10;;;10425:21:821;10482:2;10462:18;;;10455:30;-1:-1:-1;;;10501:18:821;;;10494:53;10564:18;;2962:46:10;10241:347:821;2962:46:10;3049:7;3026:19;3036:8;3026:9;:19::i;:::-;:30;;3018:61;;;;-1:-1:-1;;;3018:61:10;;;;;;;:::i;:::-;3089:26;3152:7;3118:31;3128:8;3138:10;3118:9;:31::i;:::-;:41;;;;:::i;:::-;3089:70;;3169:33;3178:8;3188:10;3200:1;3169:8;:33::i;:::-;3212:50;3221:8;3231:10;3243:18;3212:8;:50::i;:::-;3272:24;3278:8;3288:7;3272:5;:24::i;:::-;2952:351;2873:430;;:::o;2768:126:226:-;-1:-1:-1;;;;;2863:14:226;;2837:7;2863:14;;;:7;:14;;;;;918::233;2863:24:226;827:112:233;871:86:70;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;3228:256:227:-;3315:7;3356:12;3342:11;:26;3334:70;;;;-1:-1:-1;;;3334:70:227;;;;;;;:::i;:::-;3421:56;3440:23;3465:11;3421:18;:56::i;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2404:102:225:-;2460:13;2492:7;2485:14;;;;;:::i;2282:209:227:-;-1:-1:-1;;;;;2388:21:227;;2355:7;2388:21;;;:12;:21;;;;;:28;2433:8;;:51;;-1:-1:-1;;;;;2448:21:227;;;;;;:12;:21;;;;;2470:7;2476:1;2470:3;:7;:::i;:::-;2448:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2448:36:227;;-1:-1:-1;;;;;2448:36:227;2433:51;;;2444:1;2433:51;-1:-1:-1;;;;;2426:58:227;;2282:209;-1:-1:-1;;;2282:209:227:o;6603:429:225:-;4469:10:10;6696:4:225;6777:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6777:27:225;;;;;;;;;;6696:4;;4469:10:10;6822:35:225;;;;6814:85;;;;-1:-1:-1;;;6814:85:225;;11060:2:821;6814:85:225;;;11042:21:821;11099:2;11079:18;;;11072:30;11138:34;11118:18;;;11111:62;-1:-1:-1;;;11189:18:821;;;11182:35;11234:19;;6814:85:225;10858:401:821;6814:85:225;6933:60;6942:5;6949:7;6977:15;6958:16;:34;6933:8;:60::i;3766:189::-;3845:4;4469:10:10;3899:28:225;4469:10:10;3916:2:225;3920:6;3899:9;:28::i;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;4469:10:10;834:14:65;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;5543:613:227:-;5762:6;5743:15;:25;;5735:67;;;;-1:-1:-1;;;5735:67:227;;12349:2:821;5735:67:227;;;12331:21:821;12388:2;12368:18;;;12361:30;12427:31;12407:18;;;12400:59;12476:18;;5735:67:227;12147:353:821;5735:67:227;5844:58;;;1306:71;5844:58;;;12736:25:821;-1:-1:-1;;;;;12797:32:821;;12777:18;;;12770:60;;;;12846:18;;;12839:34;;;12889:18;;;12882:34;;;5813:18:227;;12708:19:821;;5844:58:227;;;;;;;;;;;;5834:69;;;;;;5813:90;;5913:12;5928:53;5950:18;:16;:18::i;:::-;5970:10;8549:4:239;8543:11;-1:-1:-1;;;8567:23:239;;8619:4;8610:14;;8603:39;;;;8671:4;8662:14;;8655:34;8725:4;8710:20;;;8349:397;5928:53:227;5913:68;;5991:14;6008:28;6022:4;6028:1;6031;6034;6008:13;:28::i;:::-;5991:45;;6064:17;6074:6;6064:9;:17::i;:::-;6055:5;:26;6047:64;;;;-1:-1:-1;;;6047:64:227;;13129:2:821;6047:64:227;;;13111:21:821;13168:2;13148:18;;;13141:30;-1:-1:-1;;;13187:18:821;;;13180:55;13252:18;;6047:64:227;12927:349:821;6047:64:227;6121:28;6131:6;6139:9;6121;:28::i;:::-;5725:431;;;5543:613;;;;;;:::o;2056:651:226:-;2291:8;2272:15;:27;;2264:69;;;;-1:-1:-1;;;2264:69:226;;13483:2:821;2264:69:226;;;13465:21:821;13522:2;13502:18;;;13495:30;13561:31;13541:18;;;13534:59;13610:18;;2264:69:226;13281:353:821;2264:69:226;2344:18;2386:16;2404:5;2411:7;2420:5;2427:16;2437:5;2427:9;:16::i;:::-;2375:79;;;;;;13926:25:821;;;;-1:-1:-1;;;;;14025:15:821;;;14005:18;;;13998:43;14077:15;;;;14057:18;;;14050:43;14109:18;;;14102:34;14152:19;;;14145:35;14196:19;;;14189:35;;;13898:19;;2375:79:226;;;;;;;;;;;;2365:90;;;;;;2344:111;;2466:12;2481:53;2503:18;:16;:18::i;2481:53::-;2466:68;;2545:14;2562:28;2576:4;2582:1;2585;2588;2562:13;:28::i;:::-;2545:45;;2618:5;-1:-1:-1;;;;;2608:15:226;:6;-1:-1:-1;;;;;2608:15:226;;2600:58;;;;-1:-1:-1;;;2600:58:226;;14437:2:821;2600:58:226;;;14419:21:821;14476:2;14456:18;;;14449:30;14515:32;14495:18;;;14488:60;14565:18;;2600:58:226;14235:354:821;2600:58:226;2669:31;2678:5;2685:7;2694:5;2669:8;:31::i;:::-;2254:453;;;2056:651;;;;;;;:::o;4013:149:225:-;-1:-1:-1;;;;;4128:18:225;;;4102:7;4128:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4013:149::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1617:148:227:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1732:21:227;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1725:33;;;;;;;;;1732:26;;1725:33;;;;;;-1:-1:-1;;;1725:33:227;;-1:-1:-1;;;;;1725:33:227;;;;;;;;;1617:148;-1:-1:-1;;;1617:148:227:o;10100:340:225:-;-1:-1:-1;;;;;10201:19:225;;10193:68;;;;-1:-1:-1;;;10193:68:225;;14796:2:821;10193:68:225;;;14778:21:821;14835:2;14815:18;;;14808:30;14874:34;14854:18;;;14847:62;-1:-1:-1;;;14925:18:821;;;14918:34;14969:19;;10193:68:225;14594:400:821;10193:68:225;-1:-1:-1;;;;;10279:21:225;;10271:68;;;;-1:-1:-1;;;10271:68:225;;15201:2:821;10271:68:225;;;15183:21:821;15240:2;15220:18;;;15213:30;15279:34;15259:18;;;15252:62;-1:-1:-1;;;15330:18:821;;;15323:32;15372:19;;10271:68:225;14999:398:821;10271:68:225;-1:-1:-1;;;;;10350:18:225;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10401:32;;1736:25:821;;;10401:32:225;;1709:18:821;10401:32:225;;;;;;;10100:340;;;:::o;4181:115:10:-;4245:4;4282:7;:5;:7::i;:::-;-1:-1:-1;;;;;4268:21:10;:10;-1:-1:-1;;;;;4268:21:10;;4261:28;;4181:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10717:411:225:-;10817:24;10844:25;10854:5;10861:7;10844:9;:25::i;:::-;10817:52;;-1:-1:-1;;10883:16:225;:37;10879:243;;10964:6;10944:16;:26;;10936:68;;;;-1:-1:-1;;;10936:68:225;;15604:2:821;10936:68:225;;;15586:21:821;15643:2;15623:18;;;15616:30;15682:31;15662:18;;;15655:59;15731:18;;10936:68:225;15402:353:821;10936:68:225;11046:51;11055:5;11062:7;11090:6;11071:16;:25;11046:8;:51::i;:::-;10807:321;10717:411;;;:::o;7495:621::-;-1:-1:-1;;;;;7591:18:225;;7583:68;;;;-1:-1:-1;;;7583:68:225;;15962:2:821;7583:68:225;;;15944:21:821;16001:2;15981:18;;;15974:30;16040:34;16020:18;;;16013:62;-1:-1:-1;;;16091:18:821;;;16084:35;16136:19;;7583:68:225;15760:401:821;7583:68:225;-1:-1:-1;;;;;7669:16:225;;7661:64;;;;-1:-1:-1;;;7661:64:225;;16368:2:821;7661:64:225;;;16350:21:821;16407:2;16387:18;;;16380:30;16446:34;16426:18;;;16419:62;-1:-1:-1;;;16497:18:821;;;16490:33;16540:19;;7661:64:225;16166:399:821;7661:64:225;-1:-1:-1;;;;;7807:15:225;;7785:19;7807:15;;;:9;:15;;;;;;7840:21;;;;7832:72;;;;-1:-1:-1;;;7832:72:225;;16772:2:821;7832:72:225;;;16754:21:821;16811:2;16791:18;;;16784:30;16850:34;16830:18;;;16823:62;-1:-1:-1;;;16901:18:821;;;16894:36;16947:19;;7832:72:225;16570:402:821;7832:72:225;-1:-1:-1;;;;;7938:15:225;;;;;;;:9;:15;;;;;;7956:20;;;7938:38;;7996:13;;;;;;;;:23;;7970:6;;7938:15;7996:23;;7970:6;;7996:23;:::i;:::-;;;;;;;;8050:2;-1:-1:-1;;;;;8035:26:225;8044:4;-1:-1:-1;;;;;8035:26:225;-1:-1:-1;;;;;;;;;;;8054:6:225;8035:26;;;;1736:25:821;;1724:2;1709:18;;1590:177;8035:26:225;;;;;;;;8072:37;8092:4;8098:2;8102:6;8072:19;:37::i;3296:438:226:-;3351:7;3448:95;3581:6;:4;:6::i;:::-;3565:24;;;;;;;3416:297;;;;;;17236:25:821;;;;17277:18;;;17270:34;;;;3611:14:226;17320:18:821;;;17313:34;3647:13:226;17363:18:821;;;17356:34;3690:4:226;17406:19:821;;;17399:61;17208:19;;3416:297:226;;;;;;;;;;;;3389:338;;;;;;3370:357;;3296:438;:::o;3568:1458:227:-;4689:12;;3667:7;;;4736:229;4749:4;4743:3;:10;4736:229;;;4769:11;4783:23;4796:3;4801:4;4783:12;:23::i;:::-;4769:37;;4847:11;4824:5;4830:3;4824:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;4820:135;;;4885:3;4878:10;;4820:135;;;4933:7;:3;4939:1;4933:7;:::i;:::-;4927:13;;4820:135;4755:210;4736:229;;;4982:9;;:37;;4998:5;5004:8;5011:1;5004:4;:8;:::i;:::-;4998:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;4998:21:227;;-1:-1:-1;;;;;4998:21:227;4982:37;;;4994:1;4982:37;-1:-1:-1;;;;;4975:44:227;;3568:1458;-1:-1:-1;;;;;3568:1458:227:o;6824:190::-;6908:28;6920:7;6929:6;6908:11;:28::i;:::-;6947:60;6964:23;6989:9;7000:6;6947:16;:60::i;6450:285::-;6534:28;6546:7;6555:6;6534:11;:28::i;:::-;3368:12:225;;-1:-1:-1;;;;;;6580:29:227;6572:90;;;;-1:-1:-1;;;6572:90:227;;17673:2:821;6572:90:227;;;17655:21:821;17712:2;17692:18;;;17685:30;17751:34;17731:18;;;17724:62;-1:-1:-1;;;17802:18:821;;;17795:46;17858:19;;6572:90:227;17471:412:821;6572:90:227;6673:55;6690:23;6715:4;6721:6;6673:16;:55::i;7528:380::-;7612:23;7638:20;7648:9;7638;:20::i;:::-;7612:46;;7668:24;7695:20;7705:9;7695;:20::i;:::-;-1:-1:-1;;;;;7725:21:227;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7725:33:227;;;;;;;;;;7774:54;;7668:47;;-1:-1:-1;7725:33:227;7774:54;;;;;;7725:21;7774:54;7839:62;7856:15;7873:9;7884:16;7839;:62::i;3045:187:242:-;3101:6;3136:16;3127:25;;;3119:76;;;;-1:-1:-1;;;3119:76:242;;18090:2:821;3119:76:242;;;18072:21:821;18129:2;18109:18;;;18102:30;18168:34;18148:18;;;18141:62;-1:-1:-1;;;18219:18:821;;;18212:36;18265:19;;3119:76:242;17888:402:821;3119:76:242;-1:-1:-1;3219:5:242;3045:187::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;6611:232:239:-;6696:7;6716:17;6735:18;6757:25;6768:4;6774:1;6777;6780;6757:10;:25::i;:::-;6715:67;;;;6792:18;6804:5;6792:11;:18::i;:::-;-1:-1:-1;6827:9:239;-1:-1:-1;6611:232:239;;;;;;;:::o;3865:203:226:-;-1:-1:-1;;;;;3985:14:226;;3925:15;3985:14;;;:7;:14;;;;;918::233;;1050:1;1032:19;;;;918:14;4044:17:226;3942:126;3865:203;;;:::o;7147:224:227:-;7308:56;7325:15;7335:4;7325:9;:15::i;:::-;7342:13;7352:2;7342:9;:13::i;:::-;7357:6;7308:16;:56::i;678:153:241:-;740:7;813:11;823:1;814:5;;;813:11;:::i;:::-;803:21;;804:5;;;803:21;:::i;9101:576:225:-;-1:-1:-1;;;;;9184:21:225;;9176:67;;;;-1:-1:-1;;;9176:67:225;;21302:2:821;9176:67:225;;;21284:21:821;21341:2;21321:18;;;21314:30;21380:34;21360:18;;;21353:62;-1:-1:-1;;;21431:18:821;;;21424:31;21472:19;;9176:67:225;21100:397:821;9176:67:225;-1:-1:-1;;;;;9339:18:225;;9314:22;9339:18;;;:9;:18;;;;;;9375:24;;;;9367:71;;;;-1:-1:-1;;;9367:71:225;;21704:2:821;9367:71:225;;;21686:21:821;21743:2;21723:18;;;21716:30;21782:34;21762:18;;;21755:62;-1:-1:-1;;;21833:18:821;;;21826:32;21875:19;;9367:71:225;21502:398:821;9367:71:225;-1:-1:-1;;;;;9472:18:225;;;;;;:9;:18;;;;;9493:23;;;9472:44;;9536:12;:22;;9510:6;;9472:18;9536:22;;9510:6;;9536:22;:::i;:::-;;;;-1:-1:-1;;9574:37:225;;1736:25:821;;;9600:1:225;;-1:-1:-1;;;;;9574:37:225;;;-1:-1:-1;;;;;;;;;;;9574:37:225;1724:2:821;1709:18;9574:37:225;;;;;;;9622:48;9642:7;9659:1;9663:6;9622:19;:48::i;9288:101:227:-;9351:7;9377:5;9381:1;9377;:5;:::i;8517:663::-;8749:12;;8687:17;;;;8783:8;;:35;;8798:5;8804:7;8810:1;8804:3;:7;:::i;:::-;8798:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;8798:20:227;;-1:-1:-1;;;;;8798:20:227;8783:35;;;8794:1;8783:35;-1:-1:-1;;;;;8771:47:227;;;8840:20;8843:9;8854:5;8840:2;:20;;:::i;:::-;8828:32;;8881:1;8875:3;:7;:51;;;;-1:-1:-1;8914:12:227;8886:5;8892:7;8898:1;8892:3;:7;:::i;:::-;8886:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;8875:51;8871:303;;;8965:29;8984:9;8965:18;:29::i;:::-;8942:5;8948:7;8954:1;8948:3;:7;:::i;:::-;8942:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:52;;;;;-1:-1:-1;;;;;8942:52:227;;;;;-1:-1:-1;;;;;8942:52:227;;;;;;8871:303;;;9025:5;9053:96;;;;;;;;9077:31;9095:12;9077:17;:31::i;:::-;9053:96;;;;;;9117:29;9136:9;9117:18;:29::i;:::-;-1:-1:-1;;;;;9053:96:227;;;;;;9025:138;;;;;;;-1:-1:-1;9025:138:227;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9025:138:227;;;;;;;;;;;;8871:303;8725:455;8517:663;;;;;;:::o;8392:389:225:-;-1:-1:-1;;;;;8475:21:225;;8467:65;;;;-1:-1:-1;;;8467:65:225;;22107:2:821;8467:65:225;;;22089:21:821;22146:2;22126:18;;;22119:30;22185:33;22165:18;;;22158:61;22236:18;;8467:65:225;21905:355:821;8467:65:225;8619:6;8603:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8635:18:225;;;;;;:9;:18;;;;;:28;;8657:6;;8635:18;:28;;8657:6;;8635:28;:::i;:::-;;;;-1:-1:-1;;8678:37:225;;1736:25:821;;;-1:-1:-1;;;;;8678:37:225;;;8695:1;;-1:-1:-1;;;;;;;;;;;8678:37:225;1724:2:821;1709:18;8678:37:225;;;;;;;8726:48;8754:1;8758:7;8767:6;8726:19;:48::i;9186:96:227:-;9244:7;9270:5;9274:1;9270;:5;:::i;7914:597::-;8011:3;-1:-1:-1;;;;;8004:10:227;:3;-1:-1:-1;;;;;8004:10:227;;;:24;;;;;8027:1;8018:6;:10;8004:24;8000:505;;;-1:-1:-1;;;;;8048:17:227;;;8044:221;;-1:-1:-1;;;;;8143:17:227;;8086;8143;;;:12;:17;;;;;8086;;8126:54;;8162:9;8173:6;8126:16;:54::i;:::-;8085:95;;;;8224:3;-1:-1:-1;;;;;8203:47:227;;8229:9;8240;8203:47;;;;;;22439:25:821;;;22495:2;22480:18;;22473:34;22427:2;22412:18;;22265:248;8203:47:227;;;;;;;;8067:198;;8044:221;-1:-1:-1;;;;;8283:17:227;;;8279:216;;-1:-1:-1;;;;;8378:17:227;;8321;8378;;;:12;:17;;;;;8321;;8361:49;;8397:4;8403:6;8361:16;:49::i;:::-;8320:90;;;;8454:3;-1:-1:-1;;;;;8433:47:227;;8459:9;8470;8433:47;;;;;;22439:25:821;;;22495:2;22480:18;;22473:34;22427:2;22412:18;;22265:248;8433:47:227;;;;;;;;8302:193;;7914:597;;;:::o;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;5022:1456:239:-;5110:7;;-1:-1:-1;;;;;6021:79:239;;6017:161;;;-1:-1:-1;6132:1:239;;-1:-1:-1;6136:30:239;6116:51;;6017:161;6289:24;;;6272:14;6289:24;;;;;;;;;23037:25:821;;;23110:4;23098:17;;23078:18;;;23071:45;;;;23132:18;;;23125:34;;;23175:18;;;23168:34;;;6289:24:239;;23009:19:821;;6289:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6289:24:239;;-1:-1:-1;;6289:24:239;;;-1:-1:-1;;;;;;;6327:20:239;;6323:101;;6379:1;6383:29;6363:50;;;;;;;6323:101;6442:6;-1:-1:-1;6450:20:239;;-1:-1:-1;5022:1456:239;;;;;;;;:::o;583:511::-;660:20;651:5;:29;;;;;;;;:::i;:::-;;647:441;;583:511;:::o;647:441::-;756:29;747:5;:38;;;;;;;;:::i;:::-;;743:345;;801:34;;-1:-1:-1;;;801:34:239;;23547:2:821;801:34:239;;;23529:21:821;23586:2;23566:18;;;23559:30;-1:-1:-1;;;23605:18:821;;;23598:54;23669:18;;801:34:239;23345:348:821;743:345:239;865:35;856:5;:44;;;;;;;;:::i;:::-;;852:236;;916:41;;-1:-1:-1;;;916:41:239;;23900:2:821;916:41:239;;;23882:21:821;23939:2;23919:18;;;23912:30;23978:33;23958:18;;;23951:61;24029:18;;916:41:239;23698:355:821;852:236:239;987:30;978:5;:39;;;;;;;;:::i;:::-;;974:114;;1033:44;;-1:-1:-1;;;1033:44:239;;24260:2:821;1033:44:239;;;24242:21:821;24299:2;24279:18;;;24272:30;24338:34;24318:18;;;24311:62;-1:-1:-1;;;24389:18:821;;;24382:32;24431:19;;1033:44:239;24058:398:821;1135:192:242;1192:7;-1:-1:-1;;;;;1219:26:242;;;1211:78;;;;-1:-1:-1;;;1211:78:242;;24663:2:821;1211:78:242;;;24645:21:821;24702:2;24682:18;;;24675:30;24741:34;24721:18;;;24714:62;-1:-1:-1;;;24792:18:821;;;24785:37;24839:19;;1211:78:242;24461:403:821;7668:628:289;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;25071:2:821;8110:60:289;;;25053:21:821;25110:2;25090:18;;;25083:30;25149:31;25129:18;;;25122:59;25198:18;;8110:60:289;24869:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;14:250:821:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:821;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:821;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:821:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:173::-;838:20;;-1:-1:-1;;;;;887:31:821;;877:42;;867:70;;933:1;930;923:12;867:70;770:173;;;:::o;948:254::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1116:29;1135:9;1116:29;:::i;:::-;1106:39;1192:2;1177:18;;;;1164:32;;-1:-1:-1;;;948:254:821:o;1399:186::-;1458:6;1511:2;1499:9;1490:7;1486:23;1482:32;1479:52;;;1527:1;1524;1517:12;1479:52;1550:29;1569:9;1550:29;:::i;1772:328::-;1849:6;1857;1865;1918:2;1906:9;1897:7;1893:23;1889:32;1886:52;;;1934:1;1931;1924:12;1886:52;1957:29;1976:9;1957:29;:::i;:::-;1947:39;;2005:38;2039:2;2028:9;2024:18;2005:38;:::i;:::-;1995:48;;2090:2;2079:9;2075:18;2062:32;2052:42;;1772:328;;;;;:::o;2476:180::-;2535:6;2588:2;2576:9;2567:7;2563:23;2559:32;2556:52;;;2604:1;2601;2594:12;2556:52;-1:-1:-1;2627:23:821;;2476:180;-1:-1:-1;2476:180:821:o;3066:127::-;3127:10;3122:3;3118:20;3115:1;3108:31;3158:4;3155:1;3148:15;3182:4;3179:1;3172:15;3198:922;3267:6;3320:2;3308:9;3299:7;3295:23;3291:32;3288:52;;;3336:1;3333;3326:12;3288:52;3376:9;3363:23;-1:-1:-1;;;;;3446:2:821;3438:6;3435:14;3432:34;;;3462:1;3459;3452:12;3432:34;3500:6;3489:9;3485:22;3475:32;;3545:7;3538:4;3534:2;3530:13;3526:27;3516:55;;3567:1;3564;3557:12;3516:55;3603:2;3590:16;3625:2;3621;3618:10;3615:36;;;3631:18;;:::i;:::-;3706:2;3700:9;3674:2;3760:13;;-1:-1:-1;;3756:22:821;;;3780:2;3752:31;3748:40;3736:53;;;3804:18;;;3824:22;;;3801:46;3798:72;;;3850:18;;:::i;:::-;3890:10;3886:2;3879:22;3925:2;3917:6;3910:18;3965:7;3960:2;3955;3951;3947:11;3943:20;3940:33;3937:53;;;3986:1;3983;3976:12;3937:53;4042:2;4037;4033;4029:11;4024:2;4016:6;4012:15;3999:46;4087:1;4065:15;;;4082:2;4061:24;4054:35;;;;-1:-1:-1;4069:6:821;3198:922;-1:-1:-1;;;;;3198:922:821:o;4125:626::-;4222:6;4230;4283:2;4271:9;4262:7;4258:23;4254:32;4251:52;;;4299:1;4296;4289:12;4251:52;4339:9;4326:23;-1:-1:-1;;;;;4409:2:821;4401:6;4398:14;4395:34;;;4425:1;4422;4415:12;4395:34;4463:6;4452:9;4448:22;4438:32;;4508:7;4501:4;4497:2;4493:13;4489:27;4479:55;;4530:1;4527;4520:12;4479:55;4570:2;4557:16;4596:2;4588:6;4585:14;4582:34;;;4612:1;4609;4602:12;4582:34;4665:7;4660:2;4650:6;4647:1;4643:14;4639:2;4635:23;4631:32;4628:45;4625:65;;;4686:1;4683;4676:12;4625:65;4717:2;4709:11;;;;;4739:6;;-1:-1:-1;4125:626:821;;-1:-1:-1;;;;4125:626:821:o;4756:801::-;4916:4;4945:2;4985;4974:9;4970:18;5015:2;5004:9;4997:21;5038:6;5073;5067:13;5104:6;5096;5089:22;5142:2;5131:9;5127:18;5120:25;;5204:2;5194:6;5191:1;5187:14;5176:9;5172:30;5168:39;5154:53;;5242:2;5234:6;5230:15;5263:1;5273:255;5287:6;5284:1;5281:13;5273:255;;;5380:2;5376:7;5364:9;5356:6;5352:22;5348:36;5343:3;5336:49;5408:40;5441:6;5432;5426:13;5408:40;:::i;:::-;5398:50;-1:-1:-1;5506:12:821;;;;5471:15;;;;5309:1;5302:9;5273:255;;;-1:-1:-1;5545:6:821;;4756:801;-1:-1:-1;;;;;;;4756:801:821:o;5562:156::-;5628:20;;5688:4;5677:16;;5667:27;;5657:55;;5708:1;5705;5698:12;5723:531;5825:6;5833;5841;5849;5857;5865;5918:3;5906:9;5897:7;5893:23;5889:33;5886:53;;;5935:1;5932;5925:12;5886:53;5958:29;5977:9;5958:29;:::i;:::-;5948:39;;6034:2;6023:9;6019:18;6006:32;5996:42;;6085:2;6074:9;6070:18;6057:32;6047:42;;6108:36;6140:2;6129:9;6125:18;6108:36;:::i;:::-;6098:46;;6191:3;6180:9;6176:19;6163:33;6153:43;;6243:3;6232:9;6228:19;6215:33;6205:43;;5723:531;;;;;;;;:::o;6259:606::-;6370:6;6378;6386;6394;6402;6410;6418;6471:3;6459:9;6450:7;6446:23;6442:33;6439:53;;;6488:1;6485;6478:12;6439:53;6511:29;6530:9;6511:29;:::i;:::-;6501:39;;6559:38;6593:2;6582:9;6578:18;6559:38;:::i;:::-;6549:48;;6644:2;6633:9;6629:18;6616:32;6606:42;;6695:2;6684:9;6680:18;6667:32;6657:42;;6718:37;6750:3;6739:9;6735:19;6718:37;:::i;:::-;6708:47;;6802:3;6791:9;6787:19;6774:33;6764:43;;6854:3;6843:9;6839:19;6826:33;6816:43;;6259:606;;;;;;;;;;:::o;6870:260::-;6938:6;6946;6999:2;6987:9;6978:7;6974:23;6970:32;6967:52;;;7015:1;7012;7005:12;6967:52;7038:29;7057:9;7038:29;:::i;:::-;7028:39;;7086:38;7120:2;7109:9;7105:18;7086:38;:::i;:::-;7076:48;;6870:260;;;;;:::o;7135:350::-;7202:6;7210;7263:2;7251:9;7242:7;7238:23;7234:32;7231:52;;;7279:1;7276;7269:12;7231:52;7302:29;7321:9;7302:29;:::i;:::-;7292:39;;7381:2;7370:9;7366:18;7353:32;7425:10;7418:5;7414:22;7407:5;7404:33;7394:61;;7451:1;7448;7441:12;7394:61;7474:5;7464:15;;;7135:350;;;;;:::o;7843:380::-;7922:1;7918:12;;;;7965;;;7986:61;;8040:4;8032:6;8028:17;8018:27;;7986:61;8093:2;8085:6;8082:14;8062:18;8059:38;8056:161;;8139:10;8134:3;8130:20;8127:1;8120:31;8174:4;8171:1;8164:15;8202:4;8199:1;8192:15;8228:338;8430:2;8412:21;;;8469:2;8449:18;;;8442:30;-1:-1:-1;;;8503:2:821;8488:18;;8481:44;8557:2;8542:18;;8228:338::o;8571:127::-;8632:10;8627:3;8623:20;8620:1;8613:31;8663:4;8660:1;8653:15;8687:4;8684:1;8677:15;8703:125;8768:9;;;8789:10;;;8786:36;;;8802:18;;:::i;8833:355::-;9035:2;9017:21;;;9074:2;9054:18;;;9047:30;9113:33;9108:2;9093:18;;9086:61;9179:2;9164:18;;8833:355::o;9193:342::-;9395:2;9377:21;;;9434:2;9414:18;;;9407:30;-1:-1:-1;;;9468:2:821;9453:18;;9446:48;9526:2;9511:18;;9193:342::o;10593:128::-;10660:9;;;10681:11;;;10678:37;;;10695:18;;:::i;10726:127::-;10787:10;10782:3;10778:20;10775:1;10768:31;10818:4;10815:1;10808:15;10842:4;10839:1;10832:15;11264:521;11341:4;11347:6;11407:11;11394:25;11501:2;11497:7;11486:8;11470:14;11466:29;11462:43;11442:18;11438:68;11428:96;;11520:1;11517;11510:12;11428:96;11547:33;;11599:20;;;-1:-1:-1;;;;;;11631:30:821;;11628:50;;;11674:1;11671;11664:12;11628:50;11707:4;11695:17;;-1:-1:-1;11738:14:821;11734:27;;;11724:38;;11721:58;;;11775:1;11772;11765:12;11721:58;11264:521;;;;;:::o;11790:352::-;12001:6;11993;11988:3;11975:33;12096:2;12067:15;;;;-1:-1:-1;;;;;;12063:45:821;12027:16;;12052:57;;;12133:2;12125:11;;11790:352;-1:-1:-1;11790:352:821:o;18421:543::-;18523:2;18518:3;18515:11;18512:446;;;18559:1;18583:5;18580:1;18573:16;18627:4;18624:1;18614:18;18697:2;18685:10;18681:19;18678:1;18674:27;18668:4;18664:38;18733:4;18721:10;18718:20;18715:47;;;-1:-1:-1;18756:4:821;18715:47;18811:2;18806:3;18802:12;18799:1;18795:20;18789:4;18785:31;18775:41;;18866:82;18884:2;18877:5;18874:13;18866:82;;;18929:17;;;18910:1;18899:13;18866:82;;;18870:3;;;18421:543;;;:::o;19140:1345::-;19266:3;19260:10;-1:-1:-1;;;;;19285:6:821;19282:30;19279:56;;;19315:18;;:::i;:::-;19344:97;19434:6;19394:38;19426:4;19420:11;19394:38;:::i;:::-;19388:4;19344:97;:::i;:::-;19496:4;;19553:2;19542:14;;19570:1;19565:663;;;;20272:1;20289:6;20286:89;;;-1:-1:-1;20341:19:821;;;20335:26;20286:89;-1:-1:-1;;19097:1:821;19093:11;;;19089:24;19085:29;19075:40;19121:1;19117:11;;;19072:57;20388:81;;19535:944;;19565:663;18368:1;18361:14;;;18405:4;18392:18;;-1:-1:-1;;19601:20:821;;;19719:236;19733:7;19730:1;19727:14;19719:236;;;19822:19;;;19816:26;19801:42;;19914:27;;;;19882:1;19870:14;;;;19749:19;;19719:236;;;19723:3;19983:6;19974:7;19971:19;19968:201;;;20044:19;;;20038:26;-1:-1:-1;;20127:1:821;20123:14;;;20139:3;20119:24;20115:37;20111:42;20096:58;20081:74;;19968:201;-1:-1:-1;;;;;20215:1:821;20199:14;;;20195:22;20182:36;;-1:-1:-1;19140:1345:821:o;20490:383::-;20687:2;20676:9;20669:21;20650:4;20713:45;20754:2;20743:9;20739:18;20731:6;20713:45;:::i;:::-;20806:9;20798:6;20794:22;20789:2;20778:9;20774:18;20767:50;20834:33;20860:6;20852;20834:33;:::i;:::-;20826:41;20490:383;-1:-1:-1;;;;;20490:383:821:o;20878:217::-;20918:1;20944;20934:132;;20988:10;20983:3;20979:20;20976:1;20969:31;21023:4;21020:1;21013:15;21051:4;21048:1;21041:15;20934:132;-1:-1:-1;21080:9:821;;20878:217::o;22518:287::-;22647:3;22685:6;22679:13;22701:66;22760:6;22755:3;22748:4;22740:6;22736:17;22701:66;:::i;:::-;22783:16;;;;;22518:287;-1:-1:-1;;22518:287:821:o;23213:127::-;23274:10;23269:3;23265:20;23262:1;23255:31;23305:4;23302:1;23295:15;23329:4;23326:1;23319:15",
    "linkReferences": {},
    "immutableReferences": {
      "48074": [
        {
          "start": 1379,
          "length": 32
        }
      ],
      "48076": [
        {
          "start": 1337,
          "length": 32
        }
      ],
      "48078": [
        {
          "start": 1295,
          "length": 32
        }
      ],
      "48083": [
        {
          "start": 3292,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "mintTo(address,uint256)": "449a52f8",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"TokensMinted(address,uint256)\":{\"details\":\"Emitted when tokens are minted with `mintTo`\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Caller should own the `_amount` of tokens.\",\"params\":{\"_amount\":\"The number of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"`_account` should own the `_amount` of tokens.\",\"params\":{\"_account\":\"The account to burn tokens from.\",\"_amount\":\"The number of tokens to burn.\"}},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintTo(address,uint256)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\",\"params\":{\"_amount\":\"Quantity of tokens to mint.\",\"_to\":\"The recipient of the tokens to mint.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Lets an owner a given amount of their tokens.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Lets an owner burn a given amount of an account's tokens.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an authorized address mint tokens to a recipient.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"}},\"notice\":\"The `ERC20Vote` smart contract implements the ERC20 standard and ERC20Votes.  It includes the following additions to standard ERC20 logic:      - Ability to mint & burn tokens via the provided `mint` & `burn` functions.      - Ownership of the contract, with the ability to restrict certain functions to        only be called by the contract's owner.      - Multicall capability to perform multiple actions atomically      - Extension of ERC20 to support voting and delegation.      - EIP 2612 compliance: See {ERC20-permit} method, which can be used to change an account's ERC20 allowance by                             presenting a message signed by the account.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC20Vote.sol\":\"ERC20Vote\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC20Base.sol\":{\"keccak256\":\"0x1d15b80763249bb85880f4d5864d7ffb11759daf725e0274287e679cf8eef4d7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://089433bbc23d3d8a85b69b0ecce874beec6eee64507493b19f6eeac8dad8d049\",\"dweb:/ipfs/QmZ3oWyBopPKajzm6apJspj5UjRZtXaxBbM5atTmJk8kuL\"]},\"contracts/base/ERC20Vote.sol\":{\"keccak256\":\"0x82059388c52fad8bc8163c7a1daf5c5251ac228f02082f61ddea4d01658f40fa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ca7d81d5fe482d43e45f4871b4371960ad79fe216ce91b4faf356e23e57b2b7\",\"dweb:/ipfs/QmauqvhRaqAbytC3YyhYbHrHfq9breJHy4Bo9y5FDFj5ab\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/interface/IBurnableERC20.sol\":{\"keccak256\":\"0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe\",\"dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMintableERC20.sol\":{\"keccak256\":\"0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4\",\"dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/external-deps/openzeppelin/governance/utils/IVotes.sol\":{\"keccak256\":\"0x0e774440198e74443c22645f90a9cc505ae55a055c4527ca9eae5db1fc1ab110\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7431e8b27ceeb7d60e8d61e9a9dfb7f721d8ae9984dbd3fcd98186741009749a\",\"dweb:/ipfs/QmWUkeWPPb95qedSpHWxqUVaaH99e2wcesPbEvd6oBCQhB\"]},\"contracts/external-deps/openzeppelin/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x541806757302ea976b52d48ff7df59f50ec72c10684254e4f17c181f46fd381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b84a81fe700e99fc4741c535a84b008481160ec152da34d8ca49a99ea3a9396b\",\"dweb:/ipfs/Qmb3nCYyECbyFiobDHRNDop3qTYoGNt7FusxXpQNWj5dDn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x4bd6e2c824d3306bf73098f468366fc5ab8bc302065b8dbe40100115ac19579c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63c8e1da97d932e80e6916c068c7d275b0de0fd8ba42ddcf8949febd94a4455a\",\"dweb:/ipfs/QmSaKN8JXUiEwqTJZ7DhjocMwppXr6725ozguwdtHmw7Sn\"]},\"contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7c62135b4b377f5d5bbbceb1e850e2b6a99f334ea1005116eef207db2f3f9ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7bdb28a4dd8b3d8aeb0537c906c7ff60a5979dadd14103fa3662e3e511e257d\",\"dweb:/ipfs/QmNd6D8ohBbXNTqET38aAFxyQKkJUu5PQHfFQvN833N1fn\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/external-deps/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe\",\"dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/external-deps/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Caller should own the `_amount` of tokens.",
            "params": {
              "_amount": "The number of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "`_account` should own the `_amount` of tokens.",
            "params": {
              "_account": "The account to burn tokens from.",
              "_amount": "The number of tokens to burn."
            }
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mintTo(address,uint256)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.",
            "params": {
              "_amount": "Quantity of tokens to mint.",
              "_to": "The recipient of the tokens to mint."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Lets an owner a given amount of their tokens."
          },
          "burnFrom(address,uint256)": {
            "notice": "Lets an owner burn a given amount of an account's tokens."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an authorized address mint tokens to a recipient."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC20Vote.sol": "ERC20Vote"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC20Base.sol": {
        "keccak256": "0x1d15b80763249bb85880f4d5864d7ffb11759daf725e0274287e679cf8eef4d7",
        "urls": [
          "bzz-raw://089433bbc23d3d8a85b69b0ecce874beec6eee64507493b19f6eeac8dad8d049",
          "dweb:/ipfs/QmZ3oWyBopPKajzm6apJspj5UjRZtXaxBbM5atTmJk8kuL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20Vote.sol": {
        "keccak256": "0x82059388c52fad8bc8163c7a1daf5c5251ac228f02082f61ddea4d01658f40fa",
        "urls": [
          "bzz-raw://6ca7d81d5fe482d43e45f4871b4371960ad79fe216ce91b4faf356e23e57b2b7",
          "dweb:/ipfs/QmauqvhRaqAbytC3YyhYbHrHfq9breJHy4Bo9y5FDFj5ab"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IBurnableERC20.sol": {
        "keccak256": "0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272",
        "urls": [
          "bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe",
          "dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMintableERC20.sol": {
        "keccak256": "0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e",
        "urls": [
          "bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4",
          "dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/governance/utils/IVotes.sol": {
        "keccak256": "0x0e774440198e74443c22645f90a9cc505ae55a055c4527ca9eae5db1fc1ab110",
        "urls": [
          "bzz-raw://7431e8b27ceeb7d60e8d61e9a9dfb7f721d8ae9984dbd3fcd98186741009749a",
          "dweb:/ipfs/QmWUkeWPPb95qedSpHWxqUVaaH99e2wcesPbEvd6oBCQhB"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/ERC20.sol": {
        "keccak256": "0x541806757302ea976b52d48ff7df59f50ec72c10684254e4f17c181f46fd381f",
        "urls": [
          "bzz-raw://b84a81fe700e99fc4741c535a84b008481160ec152da34d8ca49a99ea3a9396b",
          "dweb:/ipfs/Qmb3nCYyECbyFiobDHRNDop3qTYoGNt7FusxXpQNWj5dDn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x4bd6e2c824d3306bf73098f468366fc5ab8bc302065b8dbe40100115ac19579c",
        "urls": [
          "bzz-raw://63c8e1da97d932e80e6916c068c7d275b0de0fd8ba42ddcf8949febd94a4455a",
          "dweb:/ipfs/QmSaKN8JXUiEwqTJZ7DhjocMwppXr6725ozguwdtHmw7Sn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x7c62135b4b377f5d5bbbceb1e850e2b6a99f334ea1005116eef207db2f3f9ec1",
        "urls": [
          "bzz-raw://f7bdb28a4dd8b3d8aeb0537c906c7ff60a5979dadd14103fa3662e3e511e257d",
          "dweb:/ipfs/QmNd6D8ohBbXNTqET38aAFxyQKkJUu5PQHfFQvN833N1fn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b",
        "urls": [
          "bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe",
          "dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/Math.sol": {
        "keccak256": "0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2",
        "urls": [
          "bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6",
          "dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeCast.sol": {
        "keccak256": "0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7",
        "urls": [
          "bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1",
          "dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E"
        ],
        "license": "MIT"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC20Vote.sol",
    "id": 3703,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "Context": [
        49279
      ],
      "ContractMetadata": [
        18093
      ],
      "Counters": [
        49353
      ],
      "ECDSA": [
        50541
      ],
      "EIP712": [
        50695
      ],
      "ERC20": [
        48051
      ],
      "ERC20Base": [
        2496
      ],
      "ERC20Permit": [
        48293
      ],
      "ERC20Vote": [
        3702
      ],
      "ERC20Votes": [
        48940
      ],
      "IBurnableERC20": [
        32899
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC20": [
        14015
      ],
      "IERC20Metadata": [
        14034
      ],
      "IERC20Permit": [
        14070
      ],
      "IMintableERC20": [
        33540
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IVotes": [
        46179
      ],
      "Math": [
        50783
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "SafeCast": [
        51176
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4450:10",
    "nodes": [
      {
        "id": 3495,
        "nodeType": "PragmaDirective",
        "src": "39:23:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3496,
        "nodeType": "ImportDirective",
        "src": "86:77:10",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/token/ERC20/extensions/ERC20Votes.sol",
        "file": "../external-deps/openzeppelin/token/ERC20/extensions/ERC20Votes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3703,
        "sourceUnit": 48941,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3497,
        "nodeType": "ImportDirective",
        "src": "165:25:10",
        "nodes": [],
        "absolutePath": "contracts/base/ERC20Base.sol",
        "file": "./ERC20Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3703,
        "sourceUnit": 2497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3498,
        "nodeType": "ImportDirective",
        "src": "191:51:10",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IMintableERC20.sol",
        "file": "../extension/interface/IMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3703,
        "sourceUnit": 33541,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3499,
        "nodeType": "ImportDirective",
        "src": "243:51:10",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IBurnableERC20.sol",
        "file": "../extension/interface/IBurnableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3703,
        "sourceUnit": 32900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3702,
        "nodeType": "ContractDefinition",
        "src": "1013:3475:10",
        "nodes": [
          {
            "id": 3530,
            "nodeType": "FunctionDefinition",
            "src": "1301:150:10",
            "nodes": [],
            "body": {
              "id": 3529,
              "nodeType": "Block",
              "src": "1408:43:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3526,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3514,
                        "src": "1430:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3525,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "1418:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3528,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:26:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3521,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3516,
                    "src": "1392:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3522,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3518,
                    "src": "1399:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3523,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3520,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "1380:11:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48293,
                  "src": "1380:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1380:27:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3514,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1321:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3530,
                  "src": "1313:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3516,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1350:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3530,
                  "src": "1336:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3518,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1371:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3530,
                  "src": "1357:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:67:10"
            },
            "returnParameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:10"
            },
            "scope": 3702,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3557,
            "nodeType": "FunctionDefinition",
            "src": "1978:209:10",
            "nodes": [],
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "2039:148:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3539,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3661,
                          "src": "2057:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2057:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2069:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 3538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2049:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3543,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3545,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3535,
                          "src": "2113:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2124:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2113:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 3548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2127:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 3544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2105:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2105:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3550,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3552,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "2167:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3553,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "2172:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3551,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48654
                      ],
                      "referencedDeclaration": 48654,
                      "src": "2161:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:19:10"
                }
              ]
            },
            "baseFunctions": [
              33539
            ],
            "documentation": {
              "id": 3531,
              "nodeType": "StructuredDocumentation",
              "src": "1638:335:10",
              "text": "  @notice          Lets an authorized address mint tokens to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\n  @param _to       The recipient of the tokens to mint.\n  @param _amount   Quantity of tokens to mint."
            },
            "functionSelector": "449a52f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "1987:6:10",
            "parameters": {
              "id": 3536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3533,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2002:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "1994:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3535,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2015:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "2007:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:30:10"
            },
            "returnParameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2039:0:10"
            },
            "scope": 3702,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3580,
            "nodeType": "FunctionDefinition",
            "src": "2410:166:10",
            "nodes": [],
            "body": {
              "id": 3579,
              "nodeType": "Block",
              "src": "2458:118:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3565,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  3701
                                ],
                                "referencedDeclaration": 3701,
                                "src": "2486:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2486:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3564,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47562,
                            "src": "2476:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 3567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2476:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3568,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3560,
                          "src": "2503:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2476:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e6365",
                        "id": 3570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        },
                        "value": "not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        }
                      ],
                      "id": 3563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2468:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3572,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3574,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2549:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2553:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2549:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3576,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3560,
                        "src": "2561:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3573,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48677
                      ],
                      "referencedDeclaration": 48677,
                      "src": "2543:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2543:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3578,
                  "nodeType": "ExpressionStatement",
                  "src": "2543:26:10"
                }
              ]
            },
            "baseFunctions": [
              32890
            ],
            "documentation": {
              "id": 3558,
              "nodeType": "StructuredDocumentation",
              "src": "2193:212:10",
              "text": "  @notice          Lets an owner a given amount of their tokens.\n  @dev             Caller should own the `_amount` of tokens.\n  @param _amount   The number of tokens to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2419:4:10",
            "parameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3560,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2432:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3580,
                  "src": "2424:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2424:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2423:17:10"
            },
            "returnParameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2458:0:10"
            },
            "scope": 3702,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3634,
            "nodeType": "FunctionDefinition",
            "src": "2873:430:10",
            "nodes": [],
            "body": {
              "id": 3633,
              "nodeType": "Block",
              "src": "2952:351:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3590,
                          "name": "_canBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3674,
                          "src": "2970:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2970:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206275726e2e",
                        "id": 3592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2982:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd83d10623a5529dfc6af3e2d36b3506e4ee9af9c8ff0477cf2b779ec460a88",
                          "typeString": "literal_string \"Not authorized to burn.\""
                        },
                        "value": "Not authorized to burn."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd83d10623a5529dfc6af3e2d36b3506e4ee9af9c8ff0477cf2b779ec460a88",
                          "typeString": "literal_string \"Not authorized to burn.\""
                        }
                      ],
                      "id": 3589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2962:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2962:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3594,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3597,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3583,
                              "src": "3036:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3596,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47562,
                            "src": "3026:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 3598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3026:19:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3599,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3585,
                          "src": "3049:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3026:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e6365",
                        "id": 3601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3058:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        },
                        "value": "not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        }
                      ],
                      "id": 3595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3018:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3603,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:61:10"
                },
                {
                  "assignments": [
                    3605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3605,
                      "mutability": "mutable",
                      "name": "decreasedAllowance",
                      "nameLocation": "3097:18:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 3633,
                      "src": "3089:26:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3089:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3613,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3607,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3583,
                          "src": "3128:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 3608,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3138:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3142:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3138:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3606,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47605,
                        "src": "3118:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view returns (uint256)"
                        }
                      },
                      "id": 3610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3118:31:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3611,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3585,
                      "src": "3152:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3118:41:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3089:70:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3615,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3583,
                        "src": "3178:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3616,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3188:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3192:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3188:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3200:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3614,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47985,
                      "src": "3169:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3169:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3620,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:33:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3622,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3583,
                        "src": "3221:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3623,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3231:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3235:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3231:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3625,
                        "name": "decreasedAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3605,
                        "src": "3243:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3621,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47985,
                      "src": "3212:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3212:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3627,
                  "nodeType": "ExpressionStatement",
                  "src": "3212:50:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3629,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3583,
                        "src": "3278:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3630,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "3288:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3628,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48677
                      ],
                      "referencedDeclaration": 48677,
                      "src": "3272:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3632,
                  "nodeType": "ExpressionStatement",
                  "src": "3272:24:10"
                }
              ]
            },
            "baseFunctions": [
              32898
            ],
            "documentation": {
              "id": 3581,
              "nodeType": "StructuredDocumentation",
              "src": "2582:286:10",
              "text": "  @notice          Lets an owner burn a given amount of an account's tokens.\n  @dev             `_account` should own the `_amount` of tokens.\n  @param _account  The account to burn tokens from.\n  @param _amount   The number of tokens to burn."
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "2882:8:10",
            "overrides": {
              "id": 3587,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2943:8:10"
            },
            "parameters": {
              "id": 3586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2899:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "2891:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3585,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2917:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "2909:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:35:10"
            },
            "returnParameters": {
              "id": 3588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2952:0:10"
            },
            "scope": 3702,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3648,
            "nodeType": "FunctionDefinition",
            "src": "3596:121:10",
            "nodes": [],
            "body": {
              "id": 3647,
              "nodeType": "Block",
              "src": "3672:45:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3641,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3689:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3693:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3689:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3643,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3703:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3703:7:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3689:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3640,
                  "id": 3646,
                  "nodeType": "Return",
                  "src": "3682:28:10"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 3635,
              "nodeType": "StructuredDocumentation",
              "src": "3506:85:10",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "3605:18:10",
            "overrides": {
              "id": 3637,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3648:8:10"
            },
            "parameters": {
              "id": 3636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:2:10"
            },
            "returnParameters": {
              "id": 3640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3648,
                  "src": "3666:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3665:6:10"
            },
            "scope": 3702,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3661,
            "nodeType": "FunctionDefinition",
            "src": "3805:102:10",
            "nodes": [],
            "body": {
              "id": 3660,
              "nodeType": "Block",
              "src": "3862:45:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3654,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3879:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3883:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3879:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3656,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3893:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3893:7:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3879:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3653,
                  "id": 3659,
                  "nodeType": "Return",
                  "src": "3872:28:10"
                }
              ]
            },
            "documentation": {
              "id": 3649,
              "nodeType": "StructuredDocumentation",
              "src": "3723:77:10",
              "text": "@dev Returns whether tokens can be minted in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMint",
            "nameLocation": "3814:8:10",
            "parameters": {
              "id": 3650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3822:2:10"
            },
            "returnParameters": {
              "id": 3653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3661,
                  "src": "3856:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3856:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3855:6:10"
            },
            "scope": 3702,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3674,
            "nodeType": "FunctionDefinition",
            "src": "3995:102:10",
            "nodes": [],
            "body": {
              "id": 3673,
              "nodeType": "Block",
              "src": "4052:45:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3667,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4069:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4073:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4069:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3669,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "4083:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4083:7:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4069:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3666,
                  "id": 3672,
                  "nodeType": "Return",
                  "src": "4062:28:10"
                }
              ]
            },
            "documentation": {
              "id": 3662,
              "nodeType": "StructuredDocumentation",
              "src": "3913:77:10",
              "text": "@dev Returns whether tokens can be burned in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canBurn",
            "nameLocation": "4004:8:10",
            "parameters": {
              "id": 3663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4012:2:10"
            },
            "returnParameters": {
              "id": 3666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "4046:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3664,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4046:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4045:6:10"
            },
            "scope": 3702,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3688,
            "nodeType": "FunctionDefinition",
            "src": "4181:115:10",
            "nodes": [],
            "body": {
              "id": 3687,
              "nodeType": "Block",
              "src": "4251:45:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3681,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4268:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4272:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4268:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3683,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "4282:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4282:7:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4268:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3680,
                  "id": 3686,
                  "nodeType": "Return",
                  "src": "4261:28:10"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 3675,
              "nodeType": "StructuredDocumentation",
              "src": "4103:73:10",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "4190:12:10",
            "overrides": {
              "id": 3677,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4227:8:10"
            },
            "parameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4202:2:10"
            },
            "returnParameters": {
              "id": 3680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3688,
                  "src": "4245:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3678,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4245:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4244:6:10"
            },
            "scope": 3702,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3701,
            "nodeType": "FunctionDefinition",
            "src": "4369:117:10",
            "nodes": [],
            "body": {
              "id": 3700,
              "nodeType": "Block",
              "src": "4452:34:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3697,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4469:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4473:6:10",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4469:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3696,
                  "id": 3699,
                  "nodeType": "Return",
                  "src": "4462:17:10"
                }
              ]
            },
            "baseFunctions": [
              21205,
              49269
            ],
            "documentation": {
              "id": 3689,
              "nodeType": "StructuredDocumentation",
              "src": "4302:62:10",
              "text": "@notice Returns the sender in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "4378:10:10",
            "overrides": {
              "id": 3693,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3691,
                  "name": "Multicall",
                  "nameLocations": [
                    "4414:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "4414:9:10"
                },
                {
                  "id": 3692,
                  "name": "Context",
                  "nameLocations": [
                    "4425:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49279,
                  "src": "4425:7:10"
                }
              ],
              "src": "4405:28:10"
            },
            "parameters": {
              "id": 3690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4388:2:10"
            },
            "returnParameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "4443:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4442:9:10"
            },
            "scope": 3702,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3501,
              "name": "ContractMetadata",
              "nameLocations": [
                "1035:16:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1035:16:10"
            },
            "id": 3502,
            "nodeType": "InheritanceSpecifier",
            "src": "1035:16:10"
          },
          {
            "baseName": {
              "id": 3503,
              "name": "Multicall",
              "nameLocations": [
                "1053:9:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1053:9:10"
            },
            "id": 3504,
            "nodeType": "InheritanceSpecifier",
            "src": "1053:9:10"
          },
          {
            "baseName": {
              "id": 3505,
              "name": "Ownable",
              "nameLocations": [
                "1064:7:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1064:7:10"
            },
            "id": 3506,
            "nodeType": "InheritanceSpecifier",
            "src": "1064:7:10"
          },
          {
            "baseName": {
              "id": 3507,
              "name": "ERC20Votes",
              "nameLocations": [
                "1073:10:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48940,
              "src": "1073:10:10"
            },
            "id": 3508,
            "nodeType": "InheritanceSpecifier",
            "src": "1073:10:10"
          },
          {
            "baseName": {
              "id": 3509,
              "name": "IMintableERC20",
              "nameLocations": [
                "1085:14:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33540,
              "src": "1085:14:10"
            },
            "id": 3510,
            "nodeType": "InheritanceSpecifier",
            "src": "1085:14:10"
          },
          {
            "baseName": {
              "id": 3511,
              "name": "IBurnableERC20",
              "nameLocations": [
                "1101:14:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32899,
              "src": "1101:14:10"
            },
            "id": 3512,
            "nodeType": "InheritanceSpecifier",
            "src": "1101:14:10"
          }
        ],
        "canonicalName": "ERC20Vote",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3500,
          "nodeType": "StructuredDocumentation",
          "src": "296:715:10",
          "text": "  The `ERC20Vote` smart contract implements the ERC20 standard and ERC20Votes.\n  It includes the following additions to standard ERC20 logic:\n      - Ability to mint & burn tokens via the provided `mint` & `burn` functions.\n      - Ownership of the contract, with the ability to restrict certain functions to\n        only be called by the contract's owner.\n      - Multicall capability to perform multiple actions atomically\n      - Extension of ERC20 to support voting and delegation.\n      - EIP 2612 compliance: See {ERC20-permit} method, which can be used to change an account's ERC20 allowance by\n                             presenting a message signed by the account."
        },
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "48925": 1,
          "48939": 2
        },
        "linearizedBaseContracts": [
          3702,
          32899,
          33540,
          48940,
          48293,
          14070,
          48051,
          14034,
          14015,
          49279,
          46179,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084
        ],
        "name": "ERC20Vote",
        "nameLocation": "1022:9:10",
        "scope": 3703,
        "usedErrors": [],
        "usedEvents": [
          14006,
          14014,
          33083,
          33531,
          33833,
          46113,
          46122
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 10
}