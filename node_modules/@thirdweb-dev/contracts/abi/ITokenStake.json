{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensDepositedByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensWithdrawnByAdmin",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "depositRewardTokens(uint256)": "16c621e0",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardTokensDepositedByAdmin(uint256)\":{\"details\":\"Emitted when contract admin deposits reward tokens.\"},\"RewardTokensWithdrawnByAdmin(uint256)\":{\"details\":\"Emitted when contract admin withdraws reward tokens.\"}},\"kind\":\"dev\",\"methods\":{\"depositRewardTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}},\"withdrawRewardTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositRewardTokens(uint256)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.          note: Tokens should be approved on the reward-token contract before depositing.\"},\"withdrawRewardTokens(uint256)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.          Useful for removing excess balance, thus preventing locking of tokens.\"}},\"notice\":\"Thirdweb's TokenStake smart contract allows users to stake their ERC-20 Tokens  and earn rewards in form of a different ERC-20 token.  note:  - Reward token and staking token can't be changed after deployment.    Reward token contract can't be same as the staking token contract.  - ERC20 tokens from only the specified contract can be staked.  - All token transfers require approval on their respective token-contracts.  - Admin must deposit reward tokens using the `depositRewardTokens` function only.    Any direct transfers may cause unintended consequences, such as locking of tokens.  - Users must stake tokens using the `stake` function only.    Any direct transfers may cause unintended consequences, such as locking of tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/staking/ITokenStake.sol\":\"ITokenStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/staking/ITokenStake.sol\":{\"keccak256\":\"0x5e57570a9b8db064bfca10c4843d82551e89d230116f582eba7c9d5850460ed1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417939013614af1de97cc4143f7e71b5468513cafc984c6a6e1e1a1d11bb1ea1\",\"dweb:/ipfs/QmcRBdvc7dM9F3yGq1YUYvz6Cs7N4iJw4LLDLdGokPrAqC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensDepositedByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensWithdrawnByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "depositRewardTokens(uint256)": {
            "params": {
              "_amount": "Amount of tokens to deposit."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "params": {
              "_amount": "Amount of tokens to deposit."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "depositRewardTokens(uint256)": {
            "notice": "Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.          note: Tokens should be approved on the reward-token contract before depositing."
          },
          "withdrawRewardTokens(uint256)": {
            "notice": "Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.          Useful for removing excess balance, thus preventing locking of tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/interface/staking/ITokenStake.sol": "ITokenStake"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/prebuilts/interface/staking/ITokenStake.sol": {
        "keccak256": "0x5e57570a9b8db064bfca10c4843d82551e89d230116f582eba7c9d5850460ed1",
        "urls": [
          "bzz-raw://417939013614af1de97cc4143f7e71b5468513cafc984c6a6e1e1a1d11bb1ea1",
          "dweb:/ipfs/QmcRBdvc7dM9F3yGq1YUYvz6Cs7N4iJw4LLDLdGokPrAqC"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/interface/staking/ITokenStake.sol",
    "id": 77825,
    "exportedSymbols": {
      "ITokenStake": [
        77824
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1766:355",
    "nodes": [
      {
        "id": 77800,
        "nodeType": "PragmaDirective",
        "src": "39:24:355",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 77824,
        "nodeType": "ContractDefinition",
        "src": "859:945:355",
        "nodes": [
          {
            "id": 77806,
            "nodeType": "EventDefinition",
            "src": "953:52:355",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 77802,
              "nodeType": "StructuredDocumentation",
              "src": "887:61:355",
              "text": "@dev Emitted when contract admin withdraws reward tokens."
            },
            "eventSelector": "37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd",
            "name": "RewardTokensWithdrawnByAdmin",
            "nameLocation": "959:28:355",
            "parameters": {
              "id": 77805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "996:7:355",
                  "nodeType": "VariableDeclaration",
                  "scope": 77806,
                  "src": "988:15:355",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:355",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:17:355"
            }
          },
          {
            "id": 77811,
            "nodeType": "EventDefinition",
            "src": "1076:52:355",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 77807,
              "nodeType": "StructuredDocumentation",
              "src": "1011:60:355",
              "text": "@dev Emitted when contract admin deposits reward tokens."
            },
            "eventSelector": "f9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b",
            "name": "RewardTokensDepositedByAdmin",
            "nameLocation": "1082:28:355",
            "parameters": {
              "id": 77810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1119:7:355",
                  "nodeType": "VariableDeclaration",
                  "scope": 77811,
                  "src": "1111:15:355",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:355",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:17:355"
            }
          },
          {
            "id": 77817,
            "nodeType": "FunctionDefinition",
            "src": "1413:63:355",
            "nodes": [],
            "documentation": {
              "id": 77812,
              "nodeType": "StructuredDocumentation",
              "src": "1134:274:355",
              "text": "  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.\n          note: Tokens should be approved on the reward-token contract before depositing.\n  @param _amount     Amount of tokens to deposit."
            },
            "functionSelector": "16c621e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositRewardTokens",
            "nameLocation": "1422:19:355",
            "parameters": {
              "id": 77815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77814,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1450:7:355",
                  "nodeType": "VariableDeclaration",
                  "scope": 77817,
                  "src": "1442:15:355",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:355",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1441:17:355"
            },
            "returnParameters": {
              "id": 77816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1475:0:355"
            },
            "scope": 77824,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77823,
            "nodeType": "FunctionDefinition",
            "src": "1746:56:355",
            "nodes": [],
            "documentation": {
              "id": 77818,
              "nodeType": "StructuredDocumentation",
              "src": "1482:259:355",
              "text": "  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.\n          Useful for removing excess balance, thus preventing locking of tokens.\n  @param _amount     Amount of tokens to deposit."
            },
            "functionSelector": "cb43b2dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawRewardTokens",
            "nameLocation": "1755:20:355",
            "parameters": {
              "id": 77821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77820,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1784:7:355",
                  "nodeType": "VariableDeclaration",
                  "scope": 77823,
                  "src": "1776:15:355",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:355",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1775:17:355"
            },
            "returnParameters": {
              "id": 77822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1801:0:355"
            },
            "scope": 77824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ITokenStake",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 77801,
          "nodeType": "StructuredDocumentation",
          "src": "65:792:355",
          "text": "  Thirdweb's TokenStake smart contract allows users to stake their ERC-20 Tokens\n  and earn rewards in form of a different ERC-20 token.\n  note:\n  - Reward token and staking token can't be changed after deployment.\n    Reward token contract can't be same as the staking token contract.\n  - ERC20 tokens from only the specified contract can be staked.\n  - All token transfers require approval on their respective token-contracts.\n  - Admin must deposit reward tokens using the `depositRewardTokens` function only.\n    Any direct transfers may cause unintended consequences, such as locking of tokens.\n  - Users must stake tokens using the `stake` function only.\n    Any direct transfers may cause unintended consequences, such as locking of tokens."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          77824
        ],
        "name": "ITokenStake",
        "nameLocation": "869:11:355",
        "scope": 77825,
        "usedErrors": [],
        "usedEvents": [
          77806,
          77811
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 355
}