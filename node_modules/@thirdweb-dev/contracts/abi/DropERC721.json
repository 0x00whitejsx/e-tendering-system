{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "freezeBatchBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "updateBatchBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b806200004f5750303b1580156200004f575060005460ff166001145b620000b75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000db576000805461ff0019166101001790555b801562000122576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50615e8380620001336000396000f3fe60806040526004361061033a5760003560e01c80639010d07c116101b3578063b6f10c79116100f3578063b6f10c79146109fd578063b88d4fde14610a1d578063c68907de14610a3d578063c87b56dd14610a52578063ca15c87314610a72578063cb2ef6f714610a92578063ce80564214610ab2578063d37c353b14610ad2578063d45573f614610af2578063d547741f14610b07578063d637ed5914610b27578063de903ddd14610b57578063e159163414610b77578063e57553da14610b97578063e715032214610bbb578063e8a3d48514610bdb578063e985e9c514610bf0578063f28083c314610c3957600080fd5b80639010d07c146107d357806391d14854146107f3578063938e3d7b1461081357806395d89b41146108335780639bcf7a15146108485780639fc4d68f14610868578063a05112fc14610888578063a07ced9e146108a8578063a0a8e460146108c8578063a217fddf146108e4578063a22cb465146108f9578063a2309ff814610919578063a32fa5b31461092e578063ac9650d81461094e578063acd083f81461097b578063ad1eefc514610990578063b24f2d39146109d257600080fd5b80633f3e4c111161027e5780633f3e4c111461058e57806342842e0e146105ae57806342966c68146105ce578063492e224b146105ee5780634cc157df1461060e578063572b6c0514610650578063600dd5ea146106705780636352211e1461069057806363b45e2d146106b05780636f4f2837146106c55780636f8934f4146106e557806370a082311461071257806374bc7db7146107325780637e54523c14610752578063830405321461077257806384bb1e42146107a25780638da5cb5b146107b557600080fd5b806301ffc9a71461033f57806306fdde0314610374578063079fe40e14610396578063081812fc146103c3578063095ea7b3146103e357806313af40351461040557806318160ddd146104255780631e7ac4881461044857806323a2902b1461046857806323b872dd146104885780632419f51b146104a8578063248a9ca3146104c85780632a55205a146104f55780632ab4d052146105235780632f2ff15d1461053957806336568abe146105595780633b1475a714610579575b600080fd5b34801561034b57600080fd5b5061035f61035a366004614b31565b610c60565b60405190151581526020015b60405180910390f35b34801561038057600080fd5b50610389610c8c565b60405161036b9190614b9e565b3480156103a257600080fd5b506103ab610d1e565b6040516001600160a01b03909116815260200161036b565b3480156103cf57600080fd5b506103ab6103de366004614bb1565b610d2d565b3480156103ef57600080fd5b506104036103fe366004614bef565b610d71565b005b34801561041157600080fd5b50610403610420366004614c1b565b610e09565b34801561043157600080fd5b5060ab5460aa54035b60405190815260200161036b565b34801561045457600080fd5b50610403610463366004614bef565b610e42565b34801561047457600080fd5b5061035f610483366004614c4a565b610e74565b34801561049457600080fd5b506104036104a3366004614cc7565b611237565b3480156104b457600080fd5b5061043a6104c3366004614bb1565b611242565b3480156104d457600080fd5b5061043a6104e3366004614bb1565b6000908152600e602052604090205490565b34801561050157600080fd5b50610515610510366004614d08565b6112b0565b60405161036b929190614d2a565b34801561052f57600080fd5b5061043a60df5481565b34801561054557600080fd5b50610403610554366004614d43565b6112ed565b34801561056557600080fd5b50610403610574366004614d43565b611383565b34801561058557600080fd5b50600c5461043a565b34801561059a57600080fd5b506104036105a9366004614bb1565b6113e2565b3480156105ba57600080fd5b506104036105c9366004614cc7565b61142b565b3480156105da57600080fd5b506104036105e9366004614bb1565b611446565b3480156105fa57600080fd5b5061035f610609366004614bb1565b611451565b34801561061a57600080fd5b5061062e610629366004614bb1565b611477565b604080516001600160a01b03909316835261ffff90911660208301520161036b565b34801561065c57600080fd5b5061035f61066b366004614c1b565b6114e2565b34801561067c57600080fd5b5061040361068b366004614bef565b611500565b34801561069c57600080fd5b506103ab6106ab366004614bb1565b61152e565b3480156106bc57600080fd5b5060095461043a565b3480156106d157600080fd5b506104036106e0366004614c1b565b611540565b3480156106f157600080fd5b50610705610700366004614bb1565b61156d565b60405161036b9190614d73565b34801561071e57600080fd5b5061043a61072d366004614c1b565b6116ca565b34801561073e57600080fd5b5061040361074d366004614e39565b611718565b34801561075e57600080fd5b5061040361076d366004614bef565b611a3b565b34801561077e57600080fd5b5061035f61078d366004614bb1565b600b6020526000908152604090205460ff1681565b6104036107b0366004614f52565b611a69565b3480156107c157600080fd5b506007546001600160a01b03166103ab565b3480156107df57600080fd5b506103ab6107ee366004614d08565b611b8f565b3480156107ff57600080fd5b5061035f61080e366004614d43565b611c7d565b34801561081f57600080fd5b5061040361082e366004614fdf565b611ca8565b34801561083f57600080fd5b50610389611cd5565b34801561085457600080fd5b50610403610863366004615013565b611ce4565b34801561087457600080fd5b5061038961088336600461507b565b611d13565b34801561089457600080fd5b506103896108a3366004614bb1565b611e93565b3480156108b457600080fd5b506104036108c3366004614bb1565b611f2d565b3480156108d457600080fd5b506040516004815260200161036b565b3480156108f057600080fd5b5061043a600081565b34801561090557600080fd5b506104036109143660046150c6565b611f79565b34801561092557600080fd5b5061043a61204b565b34801561093a57600080fd5b5061035f610949366004614d43565b61205b565b34801561095a57600080fd5b5061096e6109693660046150f4565b6120b1565b60405161036b9190615135565b34801561098757600080fd5b5060aa5461043a565b34801561099c57600080fd5b5061043a6109ab366004614d43565b60009182526013602090815260408084206001600160a01b03909316845291905290205490565b3480156109de57600080fd5b506004546001600160a01b03811690600160a01b900461ffff1661062e565b348015610a0957600080fd5b50610403610a18366004615199565b612224565b348015610a2957600080fd5b50610403610a383660046151ba565b612251565b348015610a4957600080fd5b5061043a6122a2565b348015610a5e57600080fd5b50610389610a6d366004614bb1565b612345565b348015610a7e57600080fd5b5061043a610a8d366004614bb1565b6123b4565b348015610a9e57600080fd5b506944726f7045524337323160b01b61043a565b348015610abe57600080fd5b50610389610acd36600461507b565b61243d565b348015610ade57600080fd5b5061043a610aed366004615225565b6124ca565b348015610afe57600080fd5b5061062e612562565b348015610b1357600080fd5b50610403610b22366004614d43565b61257f565b348015610b3357600080fd5b50601054601154610b42919082565b6040805192835260208301919091520161036b565b348015610b6357600080fd5b50610403610b7236600461507b565b612598565b348015610b8357600080fd5b50610403610b92366004615332565b612622565b348015610ba357600080fd5b506105156002546003546001600160a01b0390911691565b348015610bc757600080fd5b50610389610bd6366004615444565b61283d565b348015610be757600080fd5b506103896128b2565b348015610bfc57600080fd5b5061035f610c0b36600461549f565b6001600160a01b03918216600090815260b16020908152604080832093909416825291909152205460ff1690565b348015610c4557600080fd5b50600254600160b01b900460ff1660405161036b91906154e3565b6000610c6b826128bf565b80610c86575063152a902d60e11b6001600160e01b03198316145b92915050565b606060ac8054610c9b9061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc79061550b565b8015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610d388261290f565b610d55576040516333d1c03960e21b815260040160405180910390fd5b50600090815260b060205260409020546001600160a01b031690565b6000610d7c8261152e565b9050806001600160a01b0316836001600160a01b031603610db05760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610dc261293b565b6001600160a01b031614610df957610ddc81610c0b61293b565b610df9576040516367d9dca160e11b815260040160405180910390fd5b610e04838383612945565b505050565b610e116129a1565b610e365760405162461bcd60e51b8152600401610e2d9061553f565b60405180910390fd5b610e3f816129af565b50565b610e4a6129a1565b610e665760405162461bcd60e51b8152600401610e2d9061553f565b610e708282612a01565b5050565b6000868152601260209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610ef39061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1f9061550b565b8015610f6c5780601f10610f4157610100808354040283529160200191610f6c565b820191906000526020600020905b815481529060010190602001808311610f4f57829003601f168201915b50505091909252505050606081015160a082015160c0830151608084015193945091929091901561104c57611048610fa48780615567565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610ff9908d0160608e01614c1b565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120612ab5565b5094505b84156110d3578560200135600003611064578261106a565b85602001355b925060001986604001350361107f5781611085565b85604001355b91506000198660400135141580156110b6575060006110aa6080880160608901614c1b565b6001600160a01b031614155b6110c057806110d0565b6110d06080870160608801614c1b565b90505b60008b81526013602090815260408083206001600160a01b03808f1685529252909120549089811690831614158061110b5750828814155b1561114b5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610e2d565b89158061116057508361115e828c6155c6565b115b156111965760405162461bcd60e51b8152600401610e2d906020808252600490820152632151747960e01b604082015260600190565b84602001518a86604001516111ab91906155c6565b11156111e65760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610e2d565b84514210156112285760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610e2d565b50505050509695505050505050565b610e04838383612b79565b600061124d60095490565b821061128b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610e2d565b6009828154811061129e5761129e6155d9565b90600052602060002001549050919050565b6000806000806112bf86611477565b90945084925061ffff1690506127106112d882876155ef565b6112e29190615606565b925050509250929050565b6000828152600e60205260409020546113069033612d80565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff16156113795760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610e2d565b610e708282612e00565b336001600160a01b038216146113d85760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610e2d565b610e708282612e14565b60006113ee8133612d80565b60df8290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b610e0483838360405180602001604052806000815250612251565b610e3f816001612e6b565b6000818152600860205260408120805482919061146d9061550b565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156114be57805160208201516114d8565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526046602052604090205460ff1690565b6115086129a1565b6115245760405162461bcd60e51b8152600401610e2d9061553f565b610e70828261304b565b6000611539826130c8565b5192915050565b6115486129a1565b6115645760405162461bcd60e51b8152600401610e2d9061553f565b610e3f816131e2565b6115c160405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b600082815260126020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906116419061550b565b80601f016020809104026020016040519081016040528092919081815260200182805461166d9061550b565b80156116ba5780601f1061168f576101008083540402835291602001916116ba565b820191906000526020600020905b81548152906001019060200180831161169d57829003601f168201915b5050505050815250509050919050565b60006001600160a01b0382166116f3576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815260af60205260409020546001600160401b031690565b6117206129a1565b61173c5760405162461bcd60e51b8152600401610e2d9061553f565b6010546011548183156117565761175382846155c6565b90505b601185905560108190556000805b868110156118fe5780158061179c5750878782818110611786576117866155d9565b90506020028101906117989190615628565b3582105b6117cd5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610e2d565b60006012816117dc84876155c6565b8152602001908152602001600020600201549050888883818110611802576118026155d9565b90506020028101906118149190615628565b6020013581111561185c5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610e2d565b88888381811061186e5761186e6155d9565b90506020028101906118809190615628565b6012600061188e85886155c6565b815260200190815260200160002081816118a891906157a4565b50819050601260006118ba85886155c6565b81526020810191909152604001600020600201558888838181106118e0576118e06155d9565b90506020028101906118f29190615628565b35925050600101611764565b50841561197357835b8281101561196d57600081815260126020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119636007830182614acd565b5050600101611907565b506119f7565b858311156119f757855b838110156119f5576012600061199383866155c6565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119eb6007830182614acd565b505060010161197d565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611a2a93929190615890565b60405180910390a150505050505050565b611a436129a1565b611a5f5760405162461bcd60e51b8152600401610e2d9061553f565b610e708282613252565b611a778686868686866132a4565b6000611a816122a2565b9050611a9881611a8f613349565b88888888610e74565b5060008181526012602052604081206002018054889290611aba9084906155c6565b909155505060008181526013602052604081208791611ad7613349565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611b0691906155c6565b90915550611b1990506000878787613353565b6000611b258888613468565b9050876001600160a01b0316611b39613349565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611b7d929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600f602052604081205481805b82811015611c74576000868152600f602090815260408083208484526001019091529020546001600160a01b031615611c1d57848203611c0b576000868152600f602090815260408083209383526001909301905220546001600160a01b03169250610c86915050565b611c166001836155c6565b9150611c62565b611c28866000611c7d565b8015611c4f57506000868152600f6020908152604080832083805260020190915290205481145b15611c6257611c5f6001836155c6565b91505b611c6d6001826155c6565b9050611ba1565b50505092915050565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611cb06129a1565b611ccc5760405162461bcd60e51b8152600401610e2d9061553f565b610e3f81613475565b606060ad8054610c9b9061550b565b611cec6129a1565b611d085760405162461bcd60e51b8152600401610e2d9061553f565b610e04838383613545565b600083815260086020526040812080546060929190611d319061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054611d5d9061550b565b8015611daa5780601f10611d7f57610100808354040283529160200191611daa565b820191906000526020600020905b815481529060010190602001808311611d8d57829003601f168201915b505050505090508051600003611df65760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610e2d565b60008082806020019051810190611e0d9190615978565b91509150611e1c82878761283d565b93508084878746604051602001611e3694939291906159f8565b6040516020818303038152906040528051906020012014611e895760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610e2d565b5050509392505050565b60086020526000908152604090208054611eac9061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054611ed89061550b565b8015611f255780601f10611efa57610100808354040283529160200191611f25565b820191906000526020600020905b815481529060010190602001808311611f0857829003601f168201915b505050505081565b60de54611f3a8133612d80565b611f4661060983611242565b15611f635760405162461bcd60e51b8152600401610e2d90615a21565b6000611f6e83611242565b9050610e04816135ec565b611f8161293b565b6001600160a01b0316826001600160a01b031603611fb25760405163b06307db60e01b815260040160405180910390fd5b8060b16000611fbf61293b565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561200361293b565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161203f911515815260200190565b60405180910390a35050565b600061205660aa5490565b905090565b6000828152600d6020908152604080832083805290915281205460ff166120a857506000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610c86565b50600192915050565b6060816001600160401b038111156120cb576120cb614e8f565b6040519080825280602002602001820160405280156120fe57816020015b60608152602001906001900390816120e95790505b509050600061210b61293b565b9050336001600160a01b038216141560005b84811015611c7457811561219c5761217a30878784818110612141576121416155d9565b90506020028101906121539190615648565b8660405160200161216693929190615a4a565b604051602081830303815290604052613709565b84828151811061218c5761218c6155d9565b602002602001018190525061221c565b6121fe308787848181106121b2576121b26155d9565b90506020028101906121c49190615648565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061370992505050565b848281518110612210576122106155d9565b60200260200101819052505b60010161211d565b61222c6129a1565b6122485760405162461bcd60e51b8152600401610e2d9061553f565b610e3f81613735565b61225c848484612b79565b61226e836001600160a01b0316613799565b1561229c5761227f848484846137a8565b61229c576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60115460105460009182916122b791906155c6565b90505b60105481111561230e57601260006122d3600184615a6b565b81526020019081526020016000206000015442106122fc576122f6600182615a6b565b91505090565b8061230681615a7e565b9150506122ba565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610e2d565b606060006123528361389a565b50905060006123608461399f565b905061236b82611451565b1561239957806040516020016123819190615a95565b60405160208183030381529060405292505050919050565b806123a385613b00565b604051602001612381929190615aba565b6000818152600f6020526040812054815b81811015612418576000848152600f602090815260408083208484526001019091529020546001600160a01b031615612406576124036001846155c6565b92505b6124116001826155c6565b90506123c5565b50612424836000611c7d565b15612437576124346001836155c6565b91505b50919050565b606060de5461244c8133612d80565b600061245786611242565b9050612464818686611d13565b925061247f8160405180602001604052806000815250613b92565b6124898184613baa565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d846040516124b99190614b9e565b60405180910390a250509392505050565b6000811561254b576000806124e184860186615ae9565b9150915081516000141580156124f657508015155b156125485761254888600c5461250c91906155c6565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613b9292505050565b50505b6125588686868686613c4f565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600e60205260409020546113d89033612d80565b60de546125a58133612d80565b6125b161060985611242565b156125ce5760405162461bcd60e51b8152600401610e2d90615a21565b60006125d985611242565b905061261b8185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613baa92505050565b5050505050565b600054610100900460ff16158080156126425750600054600160ff909116105b80612663575061265130613799565b158015612663575060005460ff166001145b6126c65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e2d565b6000805460ff1916600117905580156126e9576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67f6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f806127558a613d5c565b61275f8d8d613d94565b6127688b613475565b6127718e6129af565b61277c60008f612e00565b612786828f612e00565b612790838f612e00565b61279b836000612e00565b6127a5818f612e00565b6127af8182613dc5565b6127c285876001600160801b0316612a01565b6127d588886001600160801b031661304b565b6127de896131e2565b60dc9290925560dd5560de558015612830576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b818110156128a957600085858360405160200161287293929190615b2d565b60408051601f198184030181529190528051602091820120888401820151188584018201526128a29150826155c6565b9050612853565b50509392505050565b60018054611eac9061550b565b60006001600160e01b031982166380ac58cd60e01b14806128f057506001600160e01b03198216635b5e139f60e01b145b80610c8657506301ffc9a760e01b6001600160e01b0319831614610c86565b600060aa5482108015610c86575050600090815260ae6020526040902054600160e01b900460ff161590565b6000612056613e0d565b600082815260b0602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006120568161080e61293b565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115612a235760405162461bcd60e51b8152600401610e2d90615b3f565b6001600160a01b038216612a495760405162461bcd60e51b8152600401610e2d90615b68565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000808281805b8751811015612b6d57612ad06002836155ef565b91506000888281518110612ae657612ae66155d9565b60200260200101519050808411612b28576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612b64565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612b6191906155c6565b92505b50600101612abc565b50941495939450505050565b6000612b84826130c8565b9050836001600160a01b031681600001516001600160a01b031614612bbb5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316612bcf61293b565b6001600160a01b03161480612beb5750612beb85610c0b61293b565b80612c165750612bf961293b565b6001600160a01b0316612c0b84610d2d565b6001600160a01b0316145b905080612c3657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416612c5d57604051633a954ecd60e21b815260040160405180910390fd5b612c6a8585856001613e2f565b612c7660008487612945565b6001600160a01b03858116600090815260af6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865260ae90945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116612d495760aa548214612d4957805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615e2e83398151915260405160405180910390a461261b565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610e7057612dbe816001600160a01b03166014613eca565b612dc9836020613eca565b604051602001612dda929190615b93565b60408051601f198184030181529082905262461bcd60e51b8252610e2d91600401614b9e565b612e0a8282614065565b610e7082826140c0565b612e1e828261412d565b6000828152600f602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612e76836130c8565b80519091508215612efe576000816001600160a01b0316612e9561293b565b6001600160a01b03161480612eb15750612eb182610c0b61293b565b80612edc5750612ebf61293b565b6001600160a01b0316612ed186610d2d565b6001600160a01b0316145b905080612efc57604051632ce44b5f60e11b815260040160405180910390fd5b505b612f0c816000866001613e2f565b612f1860008583612945565b6001600160a01b03808216600081815260af602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865260ae909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b1785559189018084529220805491949091166130125760aa54821461301257805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615e2e833981519152908390a4505060ab805460010190555050565b61271081111561306d5760405162461bcd60e51b8152600401610e2d90615b3f565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612aa9565b60408051606081018252600080825260208201819052918101919091528160aa548110156131c957600081815260ae6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906131c75780516001600160a01b03161561315e579392505050565b5060001901600081815260ae6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156131c2579392505050565b61315e565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166132085760405162461bcd60e51b8152600401610e2d90615b68565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb639061141f9084908490614d2a565b600c548560aa546132b591906155c6565b11156132ed5760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610e2d565b60df54158061330b575060df548560aa5461330891906155c6565b11155b6133415760405162461bcd60e51b815260206004820152600760248201526621537570706c7960c81b6044820152606401610e2d565b505050505050565b600061205661293b565b8060000361337e5734156133795760405162461bcd60e51b8152600401610e2d90615c00565b61229c565b600080613389612562565b909250905060006001600160a01b038716156133a557866133ad565b6133ad610d1e565b905060006133bb85886155ef565b905060006127106133d061ffff8616846155ef565b6133da9190615606565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0389160161340c5750348214613410565b5034155b8061342d5760405162461bcd60e51b8152600401610e2d90615c00565b6134408861343961293b565b888561418f565b61345c8861344c61293b565b866134578688615a6b565b61418f565b50505050505050505050565b60aa54610c8683836141d0565b6000600180546134849061550b565b80601f01602080910402602001604051908101604052809291908181526020018280546134b09061550b565b80156134fd5780601f106134d2576101008083540402835291602001916134fd565b820191906000526020600020905b8154815290600101906020018083116134e057829003601f168201915b5050505050905081600190816135139190615c1c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161141f929190615cd5565b6127108111156135675760405162461bcd60e51b8152600401610e2d90615b3f565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6000818152600a6020526040812080546136059061550b565b80601f01602080910402602001604051908101604052809291908181526020018280546136319061550b565b801561367e5780601f106136535761010080835404028352916020019161367e565b820191906000526020600020905b81548152906001019060200180831161366157829003601f168201915b5050505050905060008151116136c65760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152606401610e2d565b6000828152600b6020526040808220805460ff19166001179055517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d71649190a15050565b606061372e8383604051806060016040528060278152602001615e07602791396141ea565b9392505050565b6002805482919060ff60b01b1916600160b01b83600181111561375a5761375a6154cd565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161378e91906154e3565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026137c161293b565b8786866040518563ffffffff1660e01b81526004016137e39493929190615d03565b6020604051808303816000875af192505050801561381e575060408051601f3d908101601f1916820190925261381b91810190615d36565b60015b61387c573d80801561384c576040519150601f19603f3d011682016040523d82523d6000602084013e613851565b606091505b508051600003613874576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60008060006138a860095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156138f857602002820191906000526020600020905b8154815260200190600101908083116138e4575b5050505050905060005b828110156139645781818151811061391c5761391c6155d9565b602002602001015186101561395257809350818181518110613940576139406155d9565b60200260200101519450505050915091565b61395d6001826155c6565b9050613902565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610e2d565b606060006139ac60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156139fc57602002820191906000526020600020905b8154815260200190600101908083116139e8575b5050505050905060005b8281101561396457818181518110613a2057613a206155d9565b6020026020010151851015613aee57600a6000838381518110613a4557613a456155d9565b602002602001015181526020019081526020016000208054613a669061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054613a929061550b565b8015613adf5780601f10613ab457610100808354040283529160200191613adf565b820191906000526020600020905b815481529060010190602001808311613ac257829003601f168201915b50505050509350505050919050565b613af96001826155c6565b9050613a06565b60606000613b0d83614258565b60010190506000816001600160401b03811115613b2c57613b2c614e8f565b6040519080825280601f01601f191660200182016040528015613b56576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084613b6057509392505050565b6000828152600860205260409020610e048282615c1c565b6000828152600b602052604090205460ff1615613bf85760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610e2d565b6000828152600a60205260409020613c108282615c1c565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c613c3b8361432e565b60408051918252602082018590520161141f565b6000613c5961443e565b613c755760405162461bcd60e51b8152600401610e2d9061553f565b85600003613cad5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610e2d565b6000600c549050613cf5818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061444e92505050565b600c919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613d2b8a846155c6565b613d359190615a6b565b88888888604051613d4a959493929190615d53565b60405180910390a25095945050505050565b600054610100900460ff16613d835760405162461bcd60e51b8152600401610e2d90615d8c565b613d8b6144b2565b610e3f816144db565b600054610100900460ff16613dbb5760405162461bcd60e51b8152600401610e2d90615d8c565b610e708282614560565b6000828152600e6020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000613e18336114e2565b15613e2a575060131936013560601c90565b503390565b613e3c60dc546000611c7d565b158015613e5157506001600160a01b03841615155b8015613e6557506001600160a01b03831615155b1561229c57613e7660dc5485611c7d565b158015613e8c5750613e8a60dc5484611c7d565b155b1561229c5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610e2d565b60606000613ed98360026155ef565b613ee49060026155c6565b6001600160401b03811115613efb57613efb614e8f565b6040519080825280601f01601f191660200182016040528015613f25576020820181803683370190505b509050600360fc1b81600081518110613f4057613f406155d9565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f6f57613f6f6155d9565b60200101906001600160f81b031916908160001a9053506000613f938460026155ef565b613f9e9060016155c6565b90505b6001811115614016576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fd257613fd26155d9565b1a60f81b828281518110613fe857613fe86155d9565b60200101906001600160f81b031916908160001a90535060049490941c9361400f81615a7e565b9050613fa1565b50831561372e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610e2d565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600f60205260408120805491600191906140df83856155c6565b90915550506000928352600f6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6141378282612d80565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b801561229c5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016141c45761337982826145aa565b61229c8484848461464c565b610e7082826040518060200160405280600081525061469f565b6060600080856001600160a01b0316856040516142079190615dd7565b600060405180830381855af49150503d8060008114614242576040519150601f19603f3d011682016040523d82523d6000602084013e614247565b606091505b509150915061255886838387614847565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106142975772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106142c1576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106142df57662386f26fc10000830492506010015b6305f5e10083106142f7576305f5e100830492506008015b612710831061430b57612710830492506004015b6064831061431d576064830492506002015b600a8310610c865760010192915050565b60008061433a60095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561438a57602002820191906000526020600020905b815481526020019060010190808311614376575b5050505050905060005b82811015614403578181815181106143ae576143ae6155d9565b602002602001015185036143fb5780156143f057816143ce600183615a6b565b815181106143de576143de6155d9565b60200260200101519350505050919050565b506000949350505050565b600101614394565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610e2d565b600061205660dd5461080e61293b565b60008061445b84866155c6565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602052604090209092508291506144a98482615c1c565b50935093915050565b600054610100900460ff166144d95760405162461bcd60e51b8152600401610e2d90615d8c565b565b600054610100900460ff166145025760405162461bcd60e51b8152600401610e2d90615d8c565b60005b8151811015610e7057600160466000848481518110614526576145266155d9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101614505565b600054610100900460ff166145875760405162461bcd60e51b8152600401610e2d90615d8c565b60ac6145938382615c1c565b5060ad6145a08282615c1c565b50600060aa555050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146145f7576040519150601f19603f3d011682016040523d82523d6000602084013e6145fc565b606091505b5050905080610e045760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610e2d565b816001600160a01b0316836001600160a01b0316031561229c57306001600160a01b0384160361468a576133796001600160a01b03851683836148be565b61229c6001600160a01b038516848484614914565b60aa546001600160a01b0384166146c857604051622e076360e81b815260040160405180910390fd5b826000036146e95760405163b562e8dd60e01b815260040160405180910390fd5b6146f66000858386613e2f565b6001600160a01b038416600081815260af6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845260ae90925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061478f90613799565b15614805575b60405182906001600160a01b03881690600090600080516020615e2e833981519152908290a46147ce60008784806001019550876137a8565b6147eb576040516368d2bf6b60e11b815260040160405180910390fd5b808210614795578260aa541461480057600080fd5b614838565b5b6040516001830192906001600160a01b03881690600090600080516020615e2e833981519152908290a4808210614806575b5060aa5561229c600085838684565b606083156148b45782516000036148ad5761486185613799565b6148ad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e2d565b5081613892565b613892838361494c565b610e048363a9059cbb60e01b84846040516024016148dd929190614d2a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614976565b6040516001600160a01b038085166024830152831660448201526064810182905261229c9085906323b872dd60e01b906084016148dd565b81511561495c5781518083602001fd5b8060405162461bcd60e51b8152600401610e2d9190614b9e565b60006149cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614a489092919063ffffffff16565b805190915015610e0457808060200190518101906149e99190615de9565b610e045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e2d565b6060613892848460008585600080866001600160a01b03168587604051614a6f9190615dd7565b60006040518083038185875af1925050503d8060008114614aac576040519150601f19603f3d011682016040523d82523d6000602084013e614ab1565b606091505b5091509150614ac287838387614847565b979650505050505050565b508054614ad99061550b565b6000825580601f10614ae9575050565b601f016020900490600052602060002090810190610e3f91905b80821115614b175760008155600101614b03565b5090565b6001600160e01b031981168114610e3f57600080fd5b600060208284031215614b4357600080fd5b813561372e81614b1b565b60005b83811015614b69578181015183820152602001614b51565b50506000910152565b60008151808452614b8a816020860160208601614b4e565b601f01601f19169290920160200192915050565b60208152600061372e6020830184614b72565b600060208284031215614bc357600080fd5b5035919050565b6001600160a01b0381168114610e3f57600080fd5b8035614bea81614bca565b919050565b60008060408385031215614c0257600080fd5b8235614c0d81614bca565b946020939093013593505050565b600060208284031215614c2d57600080fd5b813561372e81614bca565b60006080828403121561243757600080fd5b60008060008060008060c08789031215614c6357600080fd5b863595506020870135614c7581614bca565b9450604087013593506060870135614c8c81614bca565b92506080870135915060a08701356001600160401b03811115614cae57600080fd5b614cba89828a01614c38565b9150509295509295509295565b600080600060608486031215614cdc57600080fd5b8335614ce781614bca565b92506020840135614cf781614bca565b929592945050506040919091013590565b60008060408385031215614d1b57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614d5657600080fd5b823591506020830135614d6881614bca565b809150509250929050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250613892610120840182614b72565b60008083601f840112614df257600080fd5b5081356001600160401b03811115614e0957600080fd5b6020830191508360208260051b8501011115614e2457600080fd5b9250929050565b8015158114610e3f57600080fd5b600080600060408486031215614e4e57600080fd5b83356001600160401b03811115614e6457600080fd5b614e7086828701614de0565b9094509250506020840135614e8481614e2b565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614ecd57614ecd614e8f565b604052919050565b60006001600160401b03821115614eee57614eee614e8f565b50601f01601f191660200190565b600082601f830112614f0d57600080fd5b8135614f20614f1b82614ed5565b614ea5565b818152846020838601011115614f3557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215614f6b57600080fd5b8635614f7681614bca565b9550602087013594506040870135614f8d81614bca565b93506060870135925060808701356001600160401b0380821115614fb057600080fd5b614fbc8a838b01614c38565b935060a0890135915080821115614fd257600080fd5b50614cba89828a01614efc565b600060208284031215614ff157600080fd5b81356001600160401b0381111561500757600080fd5b61389284828501614efc565b60008060006060848603121561502857600080fd5b833592506020840135614cf781614bca565b60008083601f84011261504c57600080fd5b5081356001600160401b0381111561506357600080fd5b602083019150836020828501011115614e2457600080fd5b60008060006040848603121561509057600080fd5b8335925060208401356001600160401b038111156150ad57600080fd5b6150b98682870161503a565b9497909650939450505050565b600080604083850312156150d957600080fd5b82356150e481614bca565b91506020830135614d6881614e2b565b6000806020838503121561510757600080fd5b82356001600160401b0381111561511d57600080fd5b61512985828601614de0565b90969095509350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561518c57603f1988860301845261517a858351614b72565b9450928501929085019060010161515e565b5092979650505050505050565b6000602082840312156151ab57600080fd5b81356002811061372e57600080fd5b600080600080608085870312156151d057600080fd5b84356151db81614bca565b935060208501356151eb81614bca565b92506040850135915060608501356001600160401b0381111561520d57600080fd5b61521987828801614efc565b91505092959194509250565b60008060008060006060868803121561523d57600080fd5b8535945060208601356001600160401b038082111561525b57600080fd5b61526789838a0161503a565b9096509450604088013591508082111561528057600080fd5b5061528d8882890161503a565b969995985093965092949392505050565b600082601f8301126152af57600080fd5b813560206001600160401b038211156152ca576152ca614e8f565b8160051b6152d9828201614ea5565b92835284810182019282810190878511156152f357600080fd5b83870192505b84831015614ac257823561530c81614bca565b825291830191908301906152f9565b80356001600160801b0381168114614bea57600080fd5b6000806000806000806000806000806101408b8d03121561535257600080fd5b61535b8b614bdf565b995060208b01356001600160401b038082111561537757600080fd5b6153838e838f01614efc565b9a5060408d013591508082111561539957600080fd5b6153a58e838f01614efc565b995060608d01359150808211156153bb57600080fd5b6153c78e838f01614efc565b985060808d01359150808211156153dd57600080fd5b506153ea8d828e0161529e565b9650506153f960a08c01614bdf565b945061540760c08c01614bdf565b935061541560e08c0161531b565b92506154246101008c0161531b565b91506154336101208c01614bdf565b90509295989b9194979a5092959850565b60008060006040848603121561545957600080fd5b83356001600160401b038082111561547057600080fd5b61547c87838801614efc565b9450602086013591508082111561549257600080fd5b506150b98682870161503a565b600080604083850312156154b257600080fd5b82356154bd81614bca565b91506020830135614d6881614bca565b634e487b7160e01b600052602160045260246000fd5b602081016002831061550557634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061551f57607f821691505b60208210810361243757634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e1984360301811261557e57600080fd5b8301803591506001600160401b0382111561559857600080fd5b6020019150600581901b3603821315614e2457600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c8657610c866155b0565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610c8657610c866155b0565b60008261562357634e487b7160e01b600052601260045260246000fd5b500490565b6000823560fe1983360301811261563e57600080fd5b9190910192915050565b6000808335601e1984360301811261565f57600080fd5b8301803591506001600160401b0382111561567957600080fd5b602001915036819003821315614e2457600080fd5b601f821115610e04576000816000526020600020601f850160051c810160208610156156b75750805b601f850160051c820191505b81811015613341578281556001016156c3565b600019600383901b1c191660019190911b1790565b6001600160401b0383111561570257615702614e8f565b61571683615710835461550b565b8361568e565b6000601f84116001811461574457600085156157325750838201355b61573c86826156d6565b84555061261b565b600083815260209020601f19861690835b828110156157755786850135825560209485019460019092019101615755565b50868210156157925760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356157ec81614bca565b81546001600160a01b0319166001600160a01b039190911617905561581460e0830183615648565b61229c8183600786016156eb565b6000808335601e1984360301811261583957600080fd5b83016020810192503590506001600160401b0381111561585857600080fd5b803603821315614e2457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561596257888403605f190185528235368d900360fe190181126158d5578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561591c81614bca565b6001600160a01b03169088015260e061593784820185615822565b945083828a015261594b848a018683615867565b9983019998505050949094019350506001016158b0565b5050508615156020870152935061389292505050565b6000806040838503121561598b57600080fd5b82516001600160401b038111156159a157600080fd5b8301601f810185136159b257600080fd5b80516159c0614f1b82614ed5565b8181528660208385010111156159d557600080fd5b6159e6826020830160208601614b4e565b60209590950151949694955050505050565b60008551615a0a818460208a01614b4e565b820184868237909301918252506020019392505050565b6020808252600f908201526e08adcc6e4f2e0e8cac840c4c2e8c6d608b1b604082015260600190565b8284823760609190911b6001600160601b0319169101908152601401919050565b81810381811115610c8657610c866155b0565b600081615a8d57615a8d6155b0565b506000190190565b60008251615aa7818460208701614b4e565b600360fc1b920191825250600101919050565b60008351615acc818460208801614b4e565b835190830190615ae0818360208801614b4e565b01949350505050565b60008060408385031215615afc57600080fd5b82356001600160401b03811115615b1257600080fd5b615b1e85828601614efc565b95602094909401359450505050565b82848237909101908152602001919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bc3816015850160208801614b4e565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bf4816026840160208801614b4e565b01602601949350505050565b60208082526002908201526110ab60f11b604082015260600190565b81516001600160401b03811115615c3557615c35614e8f565b615c4981615c43845461550b565b8461568e565b602080601f831160018114615c785760008415615c665750858301515b615c7085826156d6565b865550613341565b600085815260208120601f198616915b82811015615ca757888601518255948401946001909101908401615c88565b5085821015615cc55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000615ce86040830185614b72565b8281036020840152615cfa8185614b72565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061255890830184614b72565b600060208284031215615d4857600080fd5b815161372e81614b1b565b858152606060208201526000615d6d606083018688615867565b8281036040840152615d80818587615867565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161563e818460208701614b4e565b600060208284031215615dfb57600080fd5b815161372e81614e2b56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206a354f41e9c2ca482f3e08ce733489e206e0c322d6addb3b541b9aff767c031d64736f6c63430008170033",
    "sourceMap": "1621:13083:333:-:0;;;3039:28;;;;;;;;;-1:-1:-1;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:450;1713:19:476;:23;;;3387:66:450;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;216:2:821;3325:201:450;;;198:21:821;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:821;;;338:44;399:19;;3325:201:450;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3651:14;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;581:36:821;;3721:14:450;;569:2:821;554:18;3721:14:450;;;;;;;3647:99;3269:483;1621:13083:333;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061033a5760003560e01c80639010d07c116101b3578063b6f10c79116100f3578063b6f10c79146109fd578063b88d4fde14610a1d578063c68907de14610a3d578063c87b56dd14610a52578063ca15c87314610a72578063cb2ef6f714610a92578063ce80564214610ab2578063d37c353b14610ad2578063d45573f614610af2578063d547741f14610b07578063d637ed5914610b27578063de903ddd14610b57578063e159163414610b77578063e57553da14610b97578063e715032214610bbb578063e8a3d48514610bdb578063e985e9c514610bf0578063f28083c314610c3957600080fd5b80639010d07c146107d357806391d14854146107f3578063938e3d7b1461081357806395d89b41146108335780639bcf7a15146108485780639fc4d68f14610868578063a05112fc14610888578063a07ced9e146108a8578063a0a8e460146108c8578063a217fddf146108e4578063a22cb465146108f9578063a2309ff814610919578063a32fa5b31461092e578063ac9650d81461094e578063acd083f81461097b578063ad1eefc514610990578063b24f2d39146109d257600080fd5b80633f3e4c111161027e5780633f3e4c111461058e57806342842e0e146105ae57806342966c68146105ce578063492e224b146105ee5780634cc157df1461060e578063572b6c0514610650578063600dd5ea146106705780636352211e1461069057806363b45e2d146106b05780636f4f2837146106c55780636f8934f4146106e557806370a082311461071257806374bc7db7146107325780637e54523c14610752578063830405321461077257806384bb1e42146107a25780638da5cb5b146107b557600080fd5b806301ffc9a71461033f57806306fdde0314610374578063079fe40e14610396578063081812fc146103c3578063095ea7b3146103e357806313af40351461040557806318160ddd146104255780631e7ac4881461044857806323a2902b1461046857806323b872dd146104885780632419f51b146104a8578063248a9ca3146104c85780632a55205a146104f55780632ab4d052146105235780632f2ff15d1461053957806336568abe146105595780633b1475a714610579575b600080fd5b34801561034b57600080fd5b5061035f61035a366004614b31565b610c60565b60405190151581526020015b60405180910390f35b34801561038057600080fd5b50610389610c8c565b60405161036b9190614b9e565b3480156103a257600080fd5b506103ab610d1e565b6040516001600160a01b03909116815260200161036b565b3480156103cf57600080fd5b506103ab6103de366004614bb1565b610d2d565b3480156103ef57600080fd5b506104036103fe366004614bef565b610d71565b005b34801561041157600080fd5b50610403610420366004614c1b565b610e09565b34801561043157600080fd5b5060ab5460aa54035b60405190815260200161036b565b34801561045457600080fd5b50610403610463366004614bef565b610e42565b34801561047457600080fd5b5061035f610483366004614c4a565b610e74565b34801561049457600080fd5b506104036104a3366004614cc7565b611237565b3480156104b457600080fd5b5061043a6104c3366004614bb1565b611242565b3480156104d457600080fd5b5061043a6104e3366004614bb1565b6000908152600e602052604090205490565b34801561050157600080fd5b50610515610510366004614d08565b6112b0565b60405161036b929190614d2a565b34801561052f57600080fd5b5061043a60df5481565b34801561054557600080fd5b50610403610554366004614d43565b6112ed565b34801561056557600080fd5b50610403610574366004614d43565b611383565b34801561058557600080fd5b50600c5461043a565b34801561059a57600080fd5b506104036105a9366004614bb1565b6113e2565b3480156105ba57600080fd5b506104036105c9366004614cc7565b61142b565b3480156105da57600080fd5b506104036105e9366004614bb1565b611446565b3480156105fa57600080fd5b5061035f610609366004614bb1565b611451565b34801561061a57600080fd5b5061062e610629366004614bb1565b611477565b604080516001600160a01b03909316835261ffff90911660208301520161036b565b34801561065c57600080fd5b5061035f61066b366004614c1b565b6114e2565b34801561067c57600080fd5b5061040361068b366004614bef565b611500565b34801561069c57600080fd5b506103ab6106ab366004614bb1565b61152e565b3480156106bc57600080fd5b5060095461043a565b3480156106d157600080fd5b506104036106e0366004614c1b565b611540565b3480156106f157600080fd5b50610705610700366004614bb1565b61156d565b60405161036b9190614d73565b34801561071e57600080fd5b5061043a61072d366004614c1b565b6116ca565b34801561073e57600080fd5b5061040361074d366004614e39565b611718565b34801561075e57600080fd5b5061040361076d366004614bef565b611a3b565b34801561077e57600080fd5b5061035f61078d366004614bb1565b600b6020526000908152604090205460ff1681565b6104036107b0366004614f52565b611a69565b3480156107c157600080fd5b506007546001600160a01b03166103ab565b3480156107df57600080fd5b506103ab6107ee366004614d08565b611b8f565b3480156107ff57600080fd5b5061035f61080e366004614d43565b611c7d565b34801561081f57600080fd5b5061040361082e366004614fdf565b611ca8565b34801561083f57600080fd5b50610389611cd5565b34801561085457600080fd5b50610403610863366004615013565b611ce4565b34801561087457600080fd5b5061038961088336600461507b565b611d13565b34801561089457600080fd5b506103896108a3366004614bb1565b611e93565b3480156108b457600080fd5b506104036108c3366004614bb1565b611f2d565b3480156108d457600080fd5b506040516004815260200161036b565b3480156108f057600080fd5b5061043a600081565b34801561090557600080fd5b506104036109143660046150c6565b611f79565b34801561092557600080fd5b5061043a61204b565b34801561093a57600080fd5b5061035f610949366004614d43565b61205b565b34801561095a57600080fd5b5061096e6109693660046150f4565b6120b1565b60405161036b9190615135565b34801561098757600080fd5b5060aa5461043a565b34801561099c57600080fd5b5061043a6109ab366004614d43565b60009182526013602090815260408084206001600160a01b03909316845291905290205490565b3480156109de57600080fd5b506004546001600160a01b03811690600160a01b900461ffff1661062e565b348015610a0957600080fd5b50610403610a18366004615199565b612224565b348015610a2957600080fd5b50610403610a383660046151ba565b612251565b348015610a4957600080fd5b5061043a6122a2565b348015610a5e57600080fd5b50610389610a6d366004614bb1565b612345565b348015610a7e57600080fd5b5061043a610a8d366004614bb1565b6123b4565b348015610a9e57600080fd5b506944726f7045524337323160b01b61043a565b348015610abe57600080fd5b50610389610acd36600461507b565b61243d565b348015610ade57600080fd5b5061043a610aed366004615225565b6124ca565b348015610afe57600080fd5b5061062e612562565b348015610b1357600080fd5b50610403610b22366004614d43565b61257f565b348015610b3357600080fd5b50601054601154610b42919082565b6040805192835260208301919091520161036b565b348015610b6357600080fd5b50610403610b7236600461507b565b612598565b348015610b8357600080fd5b50610403610b92366004615332565b612622565b348015610ba357600080fd5b506105156002546003546001600160a01b0390911691565b348015610bc757600080fd5b50610389610bd6366004615444565b61283d565b348015610be757600080fd5b506103896128b2565b348015610bfc57600080fd5b5061035f610c0b36600461549f565b6001600160a01b03918216600090815260b16020908152604080832093909416825291909152205460ff1690565b348015610c4557600080fd5b50600254600160b01b900460ff1660405161036b91906154e3565b6000610c6b826128bf565b80610c86575063152a902d60e11b6001600160e01b03198316145b92915050565b606060ac8054610c9b9061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc79061550b565b8015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610d388261290f565b610d55576040516333d1c03960e21b815260040160405180910390fd5b50600090815260b060205260409020546001600160a01b031690565b6000610d7c8261152e565b9050806001600160a01b0316836001600160a01b031603610db05760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610dc261293b565b6001600160a01b031614610df957610ddc81610c0b61293b565b610df9576040516367d9dca160e11b815260040160405180910390fd5b610e04838383612945565b505050565b610e116129a1565b610e365760405162461bcd60e51b8152600401610e2d9061553f565b60405180910390fd5b610e3f816129af565b50565b610e4a6129a1565b610e665760405162461bcd60e51b8152600401610e2d9061553f565b610e708282612a01565b5050565b6000868152601260209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610ef39061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1f9061550b565b8015610f6c5780601f10610f4157610100808354040283529160200191610f6c565b820191906000526020600020905b815481529060010190602001808311610f4f57829003601f168201915b50505091909252505050606081015160a082015160c0830151608084015193945091929091901561104c57611048610fa48780615567565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610ff9908d0160608e01614c1b565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120612ab5565b5094505b84156110d3578560200135600003611064578261106a565b85602001355b925060001986604001350361107f5781611085565b85604001355b91506000198660400135141580156110b6575060006110aa6080880160608901614c1b565b6001600160a01b031614155b6110c057806110d0565b6110d06080870160608801614c1b565b90505b60008b81526013602090815260408083206001600160a01b03808f1685529252909120549089811690831614158061110b5750828814155b1561114b5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610e2d565b89158061116057508361115e828c6155c6565b115b156111965760405162461bcd60e51b8152600401610e2d906020808252600490820152632151747960e01b604082015260600190565b84602001518a86604001516111ab91906155c6565b11156111e65760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610e2d565b84514210156112285760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610e2d565b50505050509695505050505050565b610e04838383612b79565b600061124d60095490565b821061128b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610e2d565b6009828154811061129e5761129e6155d9565b90600052602060002001549050919050565b6000806000806112bf86611477565b90945084925061ffff1690506127106112d882876155ef565b6112e29190615606565b925050509250929050565b6000828152600e60205260409020546113069033612d80565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff16156113795760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610e2d565b610e708282612e00565b336001600160a01b038216146113d85760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610e2d565b610e708282612e14565b60006113ee8133612d80565b60df8290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b610e0483838360405180602001604052806000815250612251565b610e3f816001612e6b565b6000818152600860205260408120805482919061146d9061550b565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156114be57805160208201516114d8565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526046602052604090205460ff1690565b6115086129a1565b6115245760405162461bcd60e51b8152600401610e2d9061553f565b610e70828261304b565b6000611539826130c8565b5192915050565b6115486129a1565b6115645760405162461bcd60e51b8152600401610e2d9061553f565b610e3f816131e2565b6115c160405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b600082815260126020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906116419061550b565b80601f016020809104026020016040519081016040528092919081815260200182805461166d9061550b565b80156116ba5780601f1061168f576101008083540402835291602001916116ba565b820191906000526020600020905b81548152906001019060200180831161169d57829003601f168201915b5050505050815250509050919050565b60006001600160a01b0382166116f3576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815260af60205260409020546001600160401b031690565b6117206129a1565b61173c5760405162461bcd60e51b8152600401610e2d9061553f565b6010546011548183156117565761175382846155c6565b90505b601185905560108190556000805b868110156118fe5780158061179c5750878782818110611786576117866155d9565b90506020028101906117989190615628565b3582105b6117cd5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610e2d565b60006012816117dc84876155c6565b8152602001908152602001600020600201549050888883818110611802576118026155d9565b90506020028101906118149190615628565b6020013581111561185c5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610e2d565b88888381811061186e5761186e6155d9565b90506020028101906118809190615628565b6012600061188e85886155c6565b815260200190815260200160002081816118a891906157a4565b50819050601260006118ba85886155c6565b81526020810191909152604001600020600201558888838181106118e0576118e06155d9565b90506020028101906118f29190615628565b35925050600101611764565b50841561197357835b8281101561196d57600081815260126020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119636007830182614acd565b5050600101611907565b506119f7565b858311156119f757855b838110156119f5576012600061199383866155c6565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119eb6007830182614acd565b505060010161197d565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611a2a93929190615890565b60405180910390a150505050505050565b611a436129a1565b611a5f5760405162461bcd60e51b8152600401610e2d9061553f565b610e708282613252565b611a778686868686866132a4565b6000611a816122a2565b9050611a9881611a8f613349565b88888888610e74565b5060008181526012602052604081206002018054889290611aba9084906155c6565b909155505060008181526013602052604081208791611ad7613349565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611b0691906155c6565b90915550611b1990506000878787613353565b6000611b258888613468565b9050876001600160a01b0316611b39613349565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611b7d929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600f602052604081205481805b82811015611c74576000868152600f602090815260408083208484526001019091529020546001600160a01b031615611c1d57848203611c0b576000868152600f602090815260408083209383526001909301905220546001600160a01b03169250610c86915050565b611c166001836155c6565b9150611c62565b611c28866000611c7d565b8015611c4f57506000868152600f6020908152604080832083805260020190915290205481145b15611c6257611c5f6001836155c6565b91505b611c6d6001826155c6565b9050611ba1565b50505092915050565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611cb06129a1565b611ccc5760405162461bcd60e51b8152600401610e2d9061553f565b610e3f81613475565b606060ad8054610c9b9061550b565b611cec6129a1565b611d085760405162461bcd60e51b8152600401610e2d9061553f565b610e04838383613545565b600083815260086020526040812080546060929190611d319061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054611d5d9061550b565b8015611daa5780601f10611d7f57610100808354040283529160200191611daa565b820191906000526020600020905b815481529060010190602001808311611d8d57829003601f168201915b505050505090508051600003611df65760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610e2d565b60008082806020019051810190611e0d9190615978565b91509150611e1c82878761283d565b93508084878746604051602001611e3694939291906159f8565b6040516020818303038152906040528051906020012014611e895760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610e2d565b5050509392505050565b60086020526000908152604090208054611eac9061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054611ed89061550b565b8015611f255780601f10611efa57610100808354040283529160200191611f25565b820191906000526020600020905b815481529060010190602001808311611f0857829003601f168201915b505050505081565b60de54611f3a8133612d80565b611f4661060983611242565b15611f635760405162461bcd60e51b8152600401610e2d90615a21565b6000611f6e83611242565b9050610e04816135ec565b611f8161293b565b6001600160a01b0316826001600160a01b031603611fb25760405163b06307db60e01b815260040160405180910390fd5b8060b16000611fbf61293b565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561200361293b565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161203f911515815260200190565b60405180910390a35050565b600061205660aa5490565b905090565b6000828152600d6020908152604080832083805290915281205460ff166120a857506000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610c86565b50600192915050565b6060816001600160401b038111156120cb576120cb614e8f565b6040519080825280602002602001820160405280156120fe57816020015b60608152602001906001900390816120e95790505b509050600061210b61293b565b9050336001600160a01b038216141560005b84811015611c7457811561219c5761217a30878784818110612141576121416155d9565b90506020028101906121539190615648565b8660405160200161216693929190615a4a565b604051602081830303815290604052613709565b84828151811061218c5761218c6155d9565b602002602001018190525061221c565b6121fe308787848181106121b2576121b26155d9565b90506020028101906121c49190615648565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061370992505050565b848281518110612210576122106155d9565b60200260200101819052505b60010161211d565b61222c6129a1565b6122485760405162461bcd60e51b8152600401610e2d9061553f565b610e3f81613735565b61225c848484612b79565b61226e836001600160a01b0316613799565b1561229c5761227f848484846137a8565b61229c576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60115460105460009182916122b791906155c6565b90505b60105481111561230e57601260006122d3600184615a6b565b81526020019081526020016000206000015442106122fc576122f6600182615a6b565b91505090565b8061230681615a7e565b9150506122ba565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610e2d565b606060006123528361389a565b50905060006123608461399f565b905061236b82611451565b1561239957806040516020016123819190615a95565b60405160208183030381529060405292505050919050565b806123a385613b00565b604051602001612381929190615aba565b6000818152600f6020526040812054815b81811015612418576000848152600f602090815260408083208484526001019091529020546001600160a01b031615612406576124036001846155c6565b92505b6124116001826155c6565b90506123c5565b50612424836000611c7d565b15612437576124346001836155c6565b91505b50919050565b606060de5461244c8133612d80565b600061245786611242565b9050612464818686611d13565b925061247f8160405180602001604052806000815250613b92565b6124898184613baa565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d846040516124b99190614b9e565b60405180910390a250509392505050565b6000811561254b576000806124e184860186615ae9565b9150915081516000141580156124f657508015155b156125485761254888600c5461250c91906155c6565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613b9292505050565b50505b6125588686868686613c4f565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600e60205260409020546113d89033612d80565b60de546125a58133612d80565b6125b161060985611242565b156125ce5760405162461bcd60e51b8152600401610e2d90615a21565b60006125d985611242565b905061261b8185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613baa92505050565b5050505050565b600054610100900460ff16158080156126425750600054600160ff909116105b80612663575061265130613799565b158015612663575060005460ff166001145b6126c65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e2d565b6000805460ff1916600117905580156126e9576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67f6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f806127558a613d5c565b61275f8d8d613d94565b6127688b613475565b6127718e6129af565b61277c60008f612e00565b612786828f612e00565b612790838f612e00565b61279b836000612e00565b6127a5818f612e00565b6127af8182613dc5565b6127c285876001600160801b0316612a01565b6127d588886001600160801b031661304b565b6127de896131e2565b60dc9290925560dd5560de558015612830576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b818110156128a957600085858360405160200161287293929190615b2d565b60408051601f198184030181529190528051602091820120888401820151188584018201526128a29150826155c6565b9050612853565b50509392505050565b60018054611eac9061550b565b60006001600160e01b031982166380ac58cd60e01b14806128f057506001600160e01b03198216635b5e139f60e01b145b80610c8657506301ffc9a760e01b6001600160e01b0319831614610c86565b600060aa5482108015610c86575050600090815260ae6020526040902054600160e01b900460ff161590565b6000612056613e0d565b600082815260b0602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006120568161080e61293b565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115612a235760405162461bcd60e51b8152600401610e2d90615b3f565b6001600160a01b038216612a495760405162461bcd60e51b8152600401610e2d90615b68565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000808281805b8751811015612b6d57612ad06002836155ef565b91506000888281518110612ae657612ae66155d9565b60200260200101519050808411612b28576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612b64565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612b6191906155c6565b92505b50600101612abc565b50941495939450505050565b6000612b84826130c8565b9050836001600160a01b031681600001516001600160a01b031614612bbb5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316612bcf61293b565b6001600160a01b03161480612beb5750612beb85610c0b61293b565b80612c165750612bf961293b565b6001600160a01b0316612c0b84610d2d565b6001600160a01b0316145b905080612c3657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416612c5d57604051633a954ecd60e21b815260040160405180910390fd5b612c6a8585856001613e2f565b612c7660008487612945565b6001600160a01b03858116600090815260af6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865260ae90945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116612d495760aa548214612d4957805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615e2e83398151915260405160405180910390a461261b565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610e7057612dbe816001600160a01b03166014613eca565b612dc9836020613eca565b604051602001612dda929190615b93565b60408051601f198184030181529082905262461bcd60e51b8252610e2d91600401614b9e565b612e0a8282614065565b610e7082826140c0565b612e1e828261412d565b6000828152600f602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612e76836130c8565b80519091508215612efe576000816001600160a01b0316612e9561293b565b6001600160a01b03161480612eb15750612eb182610c0b61293b565b80612edc5750612ebf61293b565b6001600160a01b0316612ed186610d2d565b6001600160a01b0316145b905080612efc57604051632ce44b5f60e11b815260040160405180910390fd5b505b612f0c816000866001613e2f565b612f1860008583612945565b6001600160a01b03808216600081815260af602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865260ae909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b1785559189018084529220805491949091166130125760aa54821461301257805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615e2e833981519152908390a4505060ab805460010190555050565b61271081111561306d5760405162461bcd60e51b8152600401610e2d90615b3f565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612aa9565b60408051606081018252600080825260208201819052918101919091528160aa548110156131c957600081815260ae6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906131c75780516001600160a01b03161561315e579392505050565b5060001901600081815260ae6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156131c2579392505050565b61315e565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166132085760405162461bcd60e51b8152600401610e2d90615b68565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb639061141f9084908490614d2a565b600c548560aa546132b591906155c6565b11156132ed5760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610e2d565b60df54158061330b575060df548560aa5461330891906155c6565b11155b6133415760405162461bcd60e51b815260206004820152600760248201526621537570706c7960c81b6044820152606401610e2d565b505050505050565b600061205661293b565b8060000361337e5734156133795760405162461bcd60e51b8152600401610e2d90615c00565b61229c565b600080613389612562565b909250905060006001600160a01b038716156133a557866133ad565b6133ad610d1e565b905060006133bb85886155ef565b905060006127106133d061ffff8616846155ef565b6133da9190615606565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0389160161340c5750348214613410565b5034155b8061342d5760405162461bcd60e51b8152600401610e2d90615c00565b6134408861343961293b565b888561418f565b61345c8861344c61293b565b866134578688615a6b565b61418f565b50505050505050505050565b60aa54610c8683836141d0565b6000600180546134849061550b565b80601f01602080910402602001604051908101604052809291908181526020018280546134b09061550b565b80156134fd5780601f106134d2576101008083540402835291602001916134fd565b820191906000526020600020905b8154815290600101906020018083116134e057829003601f168201915b5050505050905081600190816135139190615c1c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161141f929190615cd5565b6127108111156135675760405162461bcd60e51b8152600401610e2d90615b3f565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6000818152600a6020526040812080546136059061550b565b80601f01602080910402602001604051908101604052809291908181526020018280546136319061550b565b801561367e5780601f106136535761010080835404028352916020019161367e565b820191906000526020600020905b81548152906001019060200180831161366157829003601f168201915b5050505050905060008151116136c65760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152606401610e2d565b6000828152600b6020526040808220805460ff19166001179055517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d71649190a15050565b606061372e8383604051806060016040528060278152602001615e07602791396141ea565b9392505050565b6002805482919060ff60b01b1916600160b01b83600181111561375a5761375a6154cd565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161378e91906154e3565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026137c161293b565b8786866040518563ffffffff1660e01b81526004016137e39493929190615d03565b6020604051808303816000875af192505050801561381e575060408051601f3d908101601f1916820190925261381b91810190615d36565b60015b61387c573d80801561384c576040519150601f19603f3d011682016040523d82523d6000602084013e613851565b606091505b508051600003613874576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60008060006138a860095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156138f857602002820191906000526020600020905b8154815260200190600101908083116138e4575b5050505050905060005b828110156139645781818151811061391c5761391c6155d9565b602002602001015186101561395257809350818181518110613940576139406155d9565b60200260200101519450505050915091565b61395d6001826155c6565b9050613902565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610e2d565b606060006139ac60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156139fc57602002820191906000526020600020905b8154815260200190600101908083116139e8575b5050505050905060005b8281101561396457818181518110613a2057613a206155d9565b6020026020010151851015613aee57600a6000838381518110613a4557613a456155d9565b602002602001015181526020019081526020016000208054613a669061550b565b80601f0160208091040260200160405190810160405280929190818152602001828054613a929061550b565b8015613adf5780601f10613ab457610100808354040283529160200191613adf565b820191906000526020600020905b815481529060010190602001808311613ac257829003601f168201915b50505050509350505050919050565b613af96001826155c6565b9050613a06565b60606000613b0d83614258565b60010190506000816001600160401b03811115613b2c57613b2c614e8f565b6040519080825280601f01601f191660200182016040528015613b56576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084613b6057509392505050565b6000828152600860205260409020610e048282615c1c565b6000828152600b602052604090205460ff1615613bf85760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610e2d565b6000828152600a60205260409020613c108282615c1c565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c613c3b8361432e565b60408051918252602082018590520161141f565b6000613c5961443e565b613c755760405162461bcd60e51b8152600401610e2d9061553f565b85600003613cad5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610e2d565b6000600c549050613cf5818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061444e92505050565b600c919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613d2b8a846155c6565b613d359190615a6b565b88888888604051613d4a959493929190615d53565b60405180910390a25095945050505050565b600054610100900460ff16613d835760405162461bcd60e51b8152600401610e2d90615d8c565b613d8b6144b2565b610e3f816144db565b600054610100900460ff16613dbb5760405162461bcd60e51b8152600401610e2d90615d8c565b610e708282614560565b6000828152600e6020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000613e18336114e2565b15613e2a575060131936013560601c90565b503390565b613e3c60dc546000611c7d565b158015613e5157506001600160a01b03841615155b8015613e6557506001600160a01b03831615155b1561229c57613e7660dc5485611c7d565b158015613e8c5750613e8a60dc5484611c7d565b155b1561229c5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610e2d565b60606000613ed98360026155ef565b613ee49060026155c6565b6001600160401b03811115613efb57613efb614e8f565b6040519080825280601f01601f191660200182016040528015613f25576020820181803683370190505b509050600360fc1b81600081518110613f4057613f406155d9565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f6f57613f6f6155d9565b60200101906001600160f81b031916908160001a9053506000613f938460026155ef565b613f9e9060016155c6565b90505b6001811115614016576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fd257613fd26155d9565b1a60f81b828281518110613fe857613fe86155d9565b60200101906001600160f81b031916908160001a90535060049490941c9361400f81615a7e565b9050613fa1565b50831561372e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610e2d565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600f60205260408120805491600191906140df83856155c6565b90915550506000928352600f6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6141378282612d80565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b801561229c5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016141c45761337982826145aa565b61229c8484848461464c565b610e7082826040518060200160405280600081525061469f565b6060600080856001600160a01b0316856040516142079190615dd7565b600060405180830381855af49150503d8060008114614242576040519150601f19603f3d011682016040523d82523d6000602084013e614247565b606091505b509150915061255886838387614847565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106142975772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106142c1576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106142df57662386f26fc10000830492506010015b6305f5e10083106142f7576305f5e100830492506008015b612710831061430b57612710830492506004015b6064831061431d576064830492506002015b600a8310610c865760010192915050565b60008061433a60095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561438a57602002820191906000526020600020905b815481526020019060010190808311614376575b5050505050905060005b82811015614403578181815181106143ae576143ae6155d9565b602002602001015185036143fb5780156143f057816143ce600183615a6b565b815181106143de576143de6155d9565b60200260200101519350505050919050565b506000949350505050565b600101614394565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610e2d565b600061205660dd5461080e61293b565b60008061445b84866155c6565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602052604090209092508291506144a98482615c1c565b50935093915050565b600054610100900460ff166144d95760405162461bcd60e51b8152600401610e2d90615d8c565b565b600054610100900460ff166145025760405162461bcd60e51b8152600401610e2d90615d8c565b60005b8151811015610e7057600160466000848481518110614526576145266155d9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101614505565b600054610100900460ff166145875760405162461bcd60e51b8152600401610e2d90615d8c565b60ac6145938382615c1c565b5060ad6145a08282615c1c565b50600060aa555050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146145f7576040519150601f19603f3d011682016040523d82523d6000602084013e6145fc565b606091505b5050905080610e045760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610e2d565b816001600160a01b0316836001600160a01b0316031561229c57306001600160a01b0384160361468a576133796001600160a01b03851683836148be565b61229c6001600160a01b038516848484614914565b60aa546001600160a01b0384166146c857604051622e076360e81b815260040160405180910390fd5b826000036146e95760405163b562e8dd60e01b815260040160405180910390fd5b6146f66000858386613e2f565b6001600160a01b038416600081815260af6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845260ae90925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061478f90613799565b15614805575b60405182906001600160a01b03881690600090600080516020615e2e833981519152908290a46147ce60008784806001019550876137a8565b6147eb576040516368d2bf6b60e11b815260040160405180910390fd5b808210614795578260aa541461480057600080fd5b614838565b5b6040516001830192906001600160a01b03881690600090600080516020615e2e833981519152908290a4808210614806575b5060aa5561229c600085838684565b606083156148b45782516000036148ad5761486185613799565b6148ad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e2d565b5081613892565b613892838361494c565b610e048363a9059cbb60e01b84846040516024016148dd929190614d2a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614976565b6040516001600160a01b038085166024830152831660448201526064810182905261229c9085906323b872dd60e01b906084016148dd565b81511561495c5781518083602001fd5b8060405162461bcd60e51b8152600401610e2d9190614b9e565b60006149cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614a489092919063ffffffff16565b805190915015610e0457808060200190518101906149e99190615de9565b610e045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e2d565b6060613892848460008585600080866001600160a01b03168587604051614a6f9190615dd7565b60006040518083038185875af1925050503d8060008114614aac576040519150601f19603f3d011682016040523d82523d6000602084013e614ab1565b606091505b5091509150614ac287838387614847565b979650505050505050565b508054614ad99061550b565b6000825580601f10614ae9575050565b601f016020900490600052602060002090810190610e3f91905b80821115614b175760008155600101614b03565b5090565b6001600160e01b031981168114610e3f57600080fd5b600060208284031215614b4357600080fd5b813561372e81614b1b565b60005b83811015614b69578181015183820152602001614b51565b50506000910152565b60008151808452614b8a816020860160208601614b4e565b601f01601f19169290920160200192915050565b60208152600061372e6020830184614b72565b600060208284031215614bc357600080fd5b5035919050565b6001600160a01b0381168114610e3f57600080fd5b8035614bea81614bca565b919050565b60008060408385031215614c0257600080fd5b8235614c0d81614bca565b946020939093013593505050565b600060208284031215614c2d57600080fd5b813561372e81614bca565b60006080828403121561243757600080fd5b60008060008060008060c08789031215614c6357600080fd5b863595506020870135614c7581614bca565b9450604087013593506060870135614c8c81614bca565b92506080870135915060a08701356001600160401b03811115614cae57600080fd5b614cba89828a01614c38565b9150509295509295509295565b600080600060608486031215614cdc57600080fd5b8335614ce781614bca565b92506020840135614cf781614bca565b929592945050506040919091013590565b60008060408385031215614d1b57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614d5657600080fd5b823591506020830135614d6881614bca565b809150509250929050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250613892610120840182614b72565b60008083601f840112614df257600080fd5b5081356001600160401b03811115614e0957600080fd5b6020830191508360208260051b8501011115614e2457600080fd5b9250929050565b8015158114610e3f57600080fd5b600080600060408486031215614e4e57600080fd5b83356001600160401b03811115614e6457600080fd5b614e7086828701614de0565b9094509250506020840135614e8481614e2b565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614ecd57614ecd614e8f565b604052919050565b60006001600160401b03821115614eee57614eee614e8f565b50601f01601f191660200190565b600082601f830112614f0d57600080fd5b8135614f20614f1b82614ed5565b614ea5565b818152846020838601011115614f3557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215614f6b57600080fd5b8635614f7681614bca565b9550602087013594506040870135614f8d81614bca565b93506060870135925060808701356001600160401b0380821115614fb057600080fd5b614fbc8a838b01614c38565b935060a0890135915080821115614fd257600080fd5b50614cba89828a01614efc565b600060208284031215614ff157600080fd5b81356001600160401b0381111561500757600080fd5b61389284828501614efc565b60008060006060848603121561502857600080fd5b833592506020840135614cf781614bca565b60008083601f84011261504c57600080fd5b5081356001600160401b0381111561506357600080fd5b602083019150836020828501011115614e2457600080fd5b60008060006040848603121561509057600080fd5b8335925060208401356001600160401b038111156150ad57600080fd5b6150b98682870161503a565b9497909650939450505050565b600080604083850312156150d957600080fd5b82356150e481614bca565b91506020830135614d6881614e2b565b6000806020838503121561510757600080fd5b82356001600160401b0381111561511d57600080fd5b61512985828601614de0565b90969095509350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561518c57603f1988860301845261517a858351614b72565b9450928501929085019060010161515e565b5092979650505050505050565b6000602082840312156151ab57600080fd5b81356002811061372e57600080fd5b600080600080608085870312156151d057600080fd5b84356151db81614bca565b935060208501356151eb81614bca565b92506040850135915060608501356001600160401b0381111561520d57600080fd5b61521987828801614efc565b91505092959194509250565b60008060008060006060868803121561523d57600080fd5b8535945060208601356001600160401b038082111561525b57600080fd5b61526789838a0161503a565b9096509450604088013591508082111561528057600080fd5b5061528d8882890161503a565b969995985093965092949392505050565b600082601f8301126152af57600080fd5b813560206001600160401b038211156152ca576152ca614e8f565b8160051b6152d9828201614ea5565b92835284810182019282810190878511156152f357600080fd5b83870192505b84831015614ac257823561530c81614bca565b825291830191908301906152f9565b80356001600160801b0381168114614bea57600080fd5b6000806000806000806000806000806101408b8d03121561535257600080fd5b61535b8b614bdf565b995060208b01356001600160401b038082111561537757600080fd5b6153838e838f01614efc565b9a5060408d013591508082111561539957600080fd5b6153a58e838f01614efc565b995060608d01359150808211156153bb57600080fd5b6153c78e838f01614efc565b985060808d01359150808211156153dd57600080fd5b506153ea8d828e0161529e565b9650506153f960a08c01614bdf565b945061540760c08c01614bdf565b935061541560e08c0161531b565b92506154246101008c0161531b565b91506154336101208c01614bdf565b90509295989b9194979a5092959850565b60008060006040848603121561545957600080fd5b83356001600160401b038082111561547057600080fd5b61547c87838801614efc565b9450602086013591508082111561549257600080fd5b506150b98682870161503a565b600080604083850312156154b257600080fd5b82356154bd81614bca565b91506020830135614d6881614bca565b634e487b7160e01b600052602160045260246000fd5b602081016002831061550557634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061551f57607f821691505b60208210810361243757634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e1984360301811261557e57600080fd5b8301803591506001600160401b0382111561559857600080fd5b6020019150600581901b3603821315614e2457600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c8657610c866155b0565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610c8657610c866155b0565b60008261562357634e487b7160e01b600052601260045260246000fd5b500490565b6000823560fe1983360301811261563e57600080fd5b9190910192915050565b6000808335601e1984360301811261565f57600080fd5b8301803591506001600160401b0382111561567957600080fd5b602001915036819003821315614e2457600080fd5b601f821115610e04576000816000526020600020601f850160051c810160208610156156b75750805b601f850160051c820191505b81811015613341578281556001016156c3565b600019600383901b1c191660019190911b1790565b6001600160401b0383111561570257615702614e8f565b61571683615710835461550b565b8361568e565b6000601f84116001811461574457600085156157325750838201355b61573c86826156d6565b84555061261b565b600083815260209020601f19861690835b828110156157755786850135825560209485019460019092019101615755565b50868210156157925760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356157ec81614bca565b81546001600160a01b0319166001600160a01b039190911617905561581460e0830183615648565b61229c8183600786016156eb565b6000808335601e1984360301811261583957600080fd5b83016020810192503590506001600160401b0381111561585857600080fd5b803603821315614e2457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561596257888403605f190185528235368d900360fe190181126158d5578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561591c81614bca565b6001600160a01b03169088015260e061593784820185615822565b945083828a015261594b848a018683615867565b9983019998505050949094019350506001016158b0565b5050508615156020870152935061389292505050565b6000806040838503121561598b57600080fd5b82516001600160401b038111156159a157600080fd5b8301601f810185136159b257600080fd5b80516159c0614f1b82614ed5565b8181528660208385010111156159d557600080fd5b6159e6826020830160208601614b4e565b60209590950151949694955050505050565b60008551615a0a818460208a01614b4e565b820184868237909301918252506020019392505050565b6020808252600f908201526e08adcc6e4f2e0e8cac840c4c2e8c6d608b1b604082015260600190565b8284823760609190911b6001600160601b0319169101908152601401919050565b81810381811115610c8657610c866155b0565b600081615a8d57615a8d6155b0565b506000190190565b60008251615aa7818460208701614b4e565b600360fc1b920191825250600101919050565b60008351615acc818460208801614b4e565b835190830190615ae0818360208801614b4e565b01949350505050565b60008060408385031215615afc57600080fd5b82356001600160401b03811115615b1257600080fd5b615b1e85828601614efc565b95602094909401359450505050565b82848237909101908152602001919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bc3816015850160208801614b4e565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bf4816026840160208801614b4e565b01602601949350505050565b60208082526002908201526110ab60f11b604082015260600190565b81516001600160401b03811115615c3557615c35614e8f565b615c4981615c43845461550b565b8461568e565b602080601f831160018114615c785760008415615c665750858301515b615c7085826156d6565b865550613341565b600085815260208120601f198616915b82811015615ca757888601518255948401946001909101908401615c88565b5085821015615cc55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000615ce86040830185614b72565b8281036020840152615cfa8185614b72565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061255890830184614b72565b600060208284031215615d4857600080fd5b815161372e81614b1b565b858152606060208201526000615d6d606083018688615867565b8281036040840152615d80818587615867565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161563e818460208701614b4e565b600060208284031215615dfb57600080fd5b815161372e81614e2b56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206a354f41e9c2ca482f3e08ce733489e206e0c322d6addb3b541b9aff767c031d64736f6c63430008170033",
    "sourceMap": "1621:13083:333:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5232:250;;;;;;;;;;-1:-1:-1;5232:250:333;;;;;:::i;:::-;;:::i;:::-;;;661:14:821;;654:22;636:41;;624:2;609:18;5232:250:333;;;;;;;;6809:98:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1608:32:821;;;1590:51;;1578:2;1563:18;676:104:74;1444:203:821;8306:200:26;;;;;;;;;;-1:-1:-1;8306:200:26;;;;;:::i;:::-;;:::i;7842:403::-;;;;;;;;;;-1:-1:-1;7842:403:26;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;2895:306:26:-;;;;;;;;;;-1:-1:-1;3154:12:26;;3138:13;;:28;2895:306;;;2830:25:821;;;2818:2;2803:18;2895:306:26;2684:177:821;2030:269:73;;;;;;;;;;-1:-1:-1;2030:269:73;;;;;:::i;:::-;;:::i;4800:2425:58:-;;;;;;;;;;-1:-1:-1;4800:2425:58;;;;;:::i;:::-;;:::i;9145:134:26:-;;;;;;;;;;-1:-1:-1;9145:134:26;;;;;:::i;:::-;;:::i;2029:203:54:-;;;;;;;;;;-1:-1:-1;2029:203:54;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;1421:325:77;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2683:29:333:-;;;;;;;;;;;;;;;;3253:271:71;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;12963:106:333:-;;;;;;;;;;-1:-1:-1;13041:21:333;;12963:106;;8635:192;;;;;;;;;;-1:-1:-1;8635:192:333;;;;;:::i;:::-;;:::i;9345:149:26:-;;;;;;;;;;-1:-1:-1;9345:149:26;;;;;:::i;:::-;;:::i;13293:184:333:-;;;;;;;;;;-1:-1:-1;13293:184:333;;;;;:::i;:::-;;:::i;3937:129:57:-;;;;;;;;;;-1:-1:-1;3937:129:57;;;;;:::i;:::-;;:::i;1986:381:77:-;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5763:32:821;;;5745:51;;5844:6;5832:19;;;5827:2;5812:18;;5805:47;5718:18;1986:381:77;5573:285:821;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;6624:123:26:-;;;;;;;;;;-1:-1:-1;6624:123:26;;;;;:::i;:::-;;:::i;1711:96:54:-;;;;;;;;;;-1:-1:-1;1785:8:54;:15;1711:96;;1189:228:74;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;7745:177:58:-;;;;;;;;;;-1:-1:-1;7745:177:58;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4050:203:26:-;;;;;;;;;;-1:-1:-1;4050:203:26;;;;;:::i;:::-;;:::i;1949:2754:58:-;;;;;;;;;;-1:-1:-1;1949:2754:58;;;;;:::i;:::-;;:::i;2910:255:73:-;;;;;;;;;;-1:-1:-1;2910:255:73;;;;;:::i;:::-;;:::i;954:43:54:-;;;;;;;;;;-1:-1:-1;954:43:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;699:1187:58;;;;;;:::i;:::-;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;6971:102:26:-;;;;;;;;;;;;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;1383:534:57:-;;;;;;;;;;-1:-1:-1;1383:534:57;;;;;:::i;:::-;;:::i;568:46::-;;;;;;;;;;-1:-1:-1;568:46:57;;;;;:::i;:::-;;:::i;8109:251:333:-;;;;;;;;;;-1:-1:-1;8109:251:333;;;;;:::i;:::-;;:::i;5780:89::-;;;;;;;;;;-1:-1:-1;5780:89:333;;5860:1;12087:36:821;;12075:2;12060:18;5780:89:333;11945:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;8573:282:26;;;;;;;;;;-1:-1:-1;8573:282:26;;;;;:::i;:::-;;:::i;12788:93:333:-;;;;;;;;;;;;;:::i;2204:211:71:-;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13138:99:333:-;;;;;;;;;;-1:-1:-1;13217:13:333;;13138:99;;8004:249:58;;;;;;;;;;-1:-1:-1;8004:249:58;;;;;:::i;:::-;8121:29;8186:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;8186:60:58;;;;;;;;;;;;8004:249;2477:144:77;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;3544:200:73;;;;;;;;;;-1:-1:-1;3544:200:73;;;;;:::i;:::-;;:::i;9560:343:26:-;;;;;;;;;;-1:-1:-1;9560:343:26;;;;;:::i;:::-;;:::i;7313:367:58:-;;;;;;;;;;;;;:::i;4799:402:333:-;;;;;;;;;;-1:-1:-1;4799:402:333;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;5673:101:333:-;;;;;;;;;;-1:-1:-1;;;;5673:101:333;;7012:391;;;;;;;;;;-1:-1:-1;7012:391:333;;;;;:::i;:::-;;:::i;6243:540::-;;;;;;;;;;-1:-1:-1;6243:540:333;;;;;:::i;:::-;;:::i;1058:147:73:-;;;;;;;;;;;;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;430:40:58:-;;;;;;;;;;-1:-1:-1;430:40:58;;;;;;;;;;;;;16040:25:821;;;16096:2;16081:18;;16074:34;;;;16013:18;430:40:58;15866:248:821;7678:276:333;;;;;;;;;;-1:-1:-1;7678:276:333;;;;;:::i;:::-;;:::i;3132:1420::-;;;;;;;;;;-1:-1:-1;3132:1420:333;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136;2409:1283:57;;;;;;;;;;-1:-1:-1;2409:1283:57;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;8921:162:26:-;;;;;;;;;;-1:-1:-1;8921:162:26;;;;;:::i;:::-;-1:-1:-1;;;;;9041:25:26;;;9018:4;9041:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8921:162;1454:107:73;;;;;;;;;;-1:-1:-1;1539:15:73;;-1:-1:-1;;;1539:15:73;;;;1454:107;;;;;;:::i;5232:250:333:-;5360:4;5383:36;5407:11;5383:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;5423:52:333;;;5383:92;5376:99;5232:250;-1:-1:-1;;5232:250:333:o;6809:98:26:-;6863:13;6895:5;6888:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6809:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;8306:200:26:-;8374:7;8398:16;8406:7;8398;:16::i;:::-;8393:64;;8423:34;;-1:-1:-1;;;8423:34:26;;;;;;;;;;;8393:64;-1:-1:-1;8475:24:26;;;;:15;:24;;;;;;-1:-1:-1;;;;;8475:24:26;;8306:200::o;7842:403::-;7922:13;7938:35;7965:7;7938:26;:35::i;:::-;7922:51;;7993:5;-1:-1:-1;;;;;7987:11:26;:2;-1:-1:-1;;;;;7987:11:26;;7983:48;;8007:24;;-1:-1:-1;;;8007:24:26;;;;;;;;;;;7983:48;8062:5;-1:-1:-1;;;;;8046:21:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8046:21:26;;8042:158;;8086:37;8103:5;8110:12;:10;:12::i;8086:37::-;8081:119;;8150:35;;-1:-1:-1;;;8150:35:26;;;;;;;;;;;8081:119;8210:28;8219:2;8223:7;8232:5;8210:8;:28::i;:::-;7912:333;7842:403;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2030:269:73:-;2147:24;:22;:24::i;:::-;2142:80;;2187:24;;-1:-1:-1;;;2187:24:73;;;;;;;:::i;2142:80::-;2231:61;2253:21;2276:15;2231:21;:61::i;:::-;2030:269;;:::o;4800:2425:58:-;5047:15;5116:39;;;:25;:39;;;;;;;;5074:81;;;;;;;;;;;;;;;;;;;;;;5116:25;5074:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5074:81:58;;;;;;;;;;5047:15;;5074:81;5116:39;5074:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5074:81:58;;;;-1:-1:-1;;;5186:40:58;;;;5257:31;;;;5322:26;;;;5558:28;;;;5074:81;;-1:-1:-1;5186:40:58;;5257:31;;5322:26;5558:42;5554:515;;5633:425;5669:21;:15;;:21;:::i;:::-;5633:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5708:28:58;;;;;;-1:-1:-1;5827:8:58;;5861:38;;;;;5925:29;;;;;5980:24;;;;;;;;:::i;:::-;5785:241;;-1:-1:-1;;;;;;22019:2:821;22055:15;;;22051:24;;5785:241:58;;;22039:37:821;22092:12;;;22085:28;;;;22129:12;;;22122:28;;;;22184:15;;;22180:24;22166:12;;;22159:46;22221:13;;5785:241:58;;;;;;;;;;;;5754:290;;;;;;5633:18;:425::i;:::-;-1:-1:-1;5616:442:58;-1:-1:-1;5554:515:58;6083:10;6079:534;;;6122:15;:38;;;6164:1;6122:43;:129;;6241:10;6122:129;;;6184:15;:38;;;6122:129;6109:142;;-1:-1:-1;;6278:15:58;:29;;;:50;:127;;6395:10;6278:127;;;6347:15;:29;;;6278:127;6265:140;;-1:-1:-1;;6435:15:58;:29;;;:50;;:92;;;;-1:-1:-1;6525:1:58;6489:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6489:38:58;;;6435:92;:167;;6589:13;6435:167;;;6546:24;;;;;;;;:::i;:::-;6419:183;;6079:534;6623:29;6655:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6655:60:58;;;;;;;;;;;;6730:26;;;;;;;;;:58;;;6778:10;6760:14;:28;;6730:58;6726:115;;;6804:26;;-1:-1:-1;;;6804:26:58;;22447:2:821;6804:26:58;;;22429:21:821;22486:2;22466:18;;;22459:30;-1:-1:-1;;;22505:18:821;;;22498:46;22561:18;;6804:26:58;22245:340:821;6726:115:58;6855:14;;;:66;;-1:-1:-1;6910:10:58;6874:33;6886:21;6874:9;:33;:::i;:::-;:46;6855:66;6851:111;;;6937:14;;-1:-1:-1;;;6937:14:58;;;;;;23054:2:821;23036:21;;;23093:1;23073:18;;;23066:29;-1:-1:-1;;;23126:2:821;23111:18;;23104:34;23170:2;23155:18;;22852:327;6851:111:58;7021:17;:36;;;7009:9;6975:17;:31;;;:43;;;;:::i;:::-;:82;6971:133;;;7073:20;;-1:-1:-1;;;7073:20:58;;23386:2:821;7073:20:58;;;23368:21:821;23425:2;23405:18;;;23398:30;-1:-1:-1;;;23444:18:821;;;23437:40;23494:18;;7073:20:58;23184:334:821;6971:133:58;7118:32;;7153:15;-1:-1:-1;7114:105:58;;;7184:24;;-1:-1:-1;;;7184:24:58;;23725:2:821;7184:24:58;;;23707:21:821;23764:2;23744:18;;;23737:30;-1:-1:-1;;;23783:18:821;;;23776:44;23837:18;;7184:24:58;23523:338:821;7114:105:58;5064:2161;;;;;4800:2425;;;;;;;;:::o;9145:134:26:-;9244:28;9254:4;9260:2;9264:7;9244:9;:28::i;2029:203:54:-;2093:7;2126:17;1785:8;:15;;1711:96;2126:17;2116:6;:27;2112:81;;2159:23;;-1:-1:-1;;;2159:23:54;;24068:2:821;2159:23:54;;;24050:21:821;24107:2;24087:18;;;24080:30;-1:-1:-1;;;24126:18:821;;;24119:43;24179:18;;2159:23:54;23866:337:821;2112:81:54;2209:8;2218:6;2209:16;;;;;;;;:::i;:::-;;;;;;;;;2202:23;;2029:203;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;25069:2:821;3433:39:71;;;25051:21:821;25108:2;25088:18;;;25081:30;25147:31;25127:18;;;25120:59;25196:18;;3433:39:71;24867:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;25427:2:821;4592:36:71;;;25409:21:821;25466:2;25446:18;;;25439:30;-1:-1:-1;;;25485:18:821;;;25478:56;25551:18;;4592:36:71;25225:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;8635:192:333:-;785:4:71;929:28;785:4;946:10;929;:28::i;:::-;8735:14:333::1;:32:::0;;;8782:38:::1;::::0;2830:25:821;;;8782:38:333::1;::::0;2818:2:821;2803:18;8782:38:333::1;;;;;;;;8635:192:::0;;:::o;9345:149:26:-;9448:39;9465:4;9471:2;9475:7;9448:39;;;;;;;;;;;;:16;:39::i;13293:184:333:-;13450:20;13456:7;13465:4;13450:5;:20::i;3937:129:57:-;4002:4;4025:23;;;:13;:23;;;;;:30;;4002:4;;4025:23;:30;;;:::i;:::-;;;:34;4018:41;;3937:129;;;:::o;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3065:256:77:-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;6624:123:26:-;6688:7;6714:21;6727:7;6714:12;:21::i;:::-;:26;;6624:123;-1:-1:-1;;6624:123:26:o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7745:177:58:-;7821:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7821:31:58;7876:39;;;;:25;:39;;;;;;;;;7864:51;;;;;;;;;;;;;;;;;;;;;;7876:25;7864:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7864:51:58;;;;;;;;;;;;7876:39;7864:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7745:177;;;:::o;4050:203:26:-;4114:7;-1:-1:-1;;;;;4137:19:26;;4133:60;;4165:28;;-1:-1:-1;;;4165:28:26;;;;;;;;;;;4133:60;-1:-1:-1;;;;;;4218:19:26;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4218:27:26;;4050:203::o;1949:2754:58:-;2108:24;:22;:24::i;:::-;2103:80;;2148:24;;-1:-1:-1;;;2148:24:58;;;;;;;:::i;2103:80::-;2222:14;:29;2290:20;;2222:29;2727:108;;;;2785:39;2806:18;2785;:39;:::i;:::-;2769:55;;2727:108;2845:20;:41;;;:14;2896:45;;;:29;;2997:643;3017:22;;;2997:643;;;3068:6;;;:69;;;3108:11;;3120:1;3108:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3078:59;;3068:69;3060:84;;;;-1:-1:-1;;;3060:84:58;;26120:2:821;3060:84:58;;;26102:21:821;26159:1;26139:18;;;26132:29;-1:-1:-1;;;26177:18:821;;;26170:32;26219:18;;3060:84:58;25918:325:821;3060:84:58;3159:28;3190:25;3159:28;3216:17;3232:1;3216:13;:17;:::i;:::-;3190:44;;;;;;;;;;;:58;;;3159:89;;3289:11;;3301:1;3289:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3266:20;:56;3262:123;;;3342:28;;-1:-1:-1;;;3342:28:58;;26450:2:821;3342:28:58;;;26432:21:821;26489:2;26469:18;;;26462:30;-1:-1:-1;;;26508:18:821;;;26501:48;26566:18;;3342:28:58;26248:342:821;3262:123:58;3446:11;;3458:1;3446:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3399:25;:44;3425:17;3441:1;3425:13;:17;:::i;:::-;3399:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3535:20:58;;-1:-1:-1;3474:25:58;:44;3500:17;3516:1;3500:13;:17;:::i;:::-;3474:44;;;;;;;;;;;-1:-1:-1;3474:44:58;:58;;:81;3600:11;;3612:1;3600:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;;3041:3:58;;2997:643;;;;4180:22;4176:446;;;4235:18;4218:129;4259:13;4255:1;:17;4218:129;;;4304:28;;;;:25;:28;;;;;4297:35;;;;;;;;;4304:25;4297:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4297:35:58;;;4304:28;4297:35;;;;4304:28;4297:35;:::i;:::-;-1:-1:-1;;4274:3:58;;4218:129;;;;4176:446;;;4381:39;;;4377:235;;;4457:11;4440:158;4481:18;4477:1;:22;4440:158;;;4535:25;:44;4561:17;4577:1;4561:13;:17;:::i;:::-;4535:44;;;;;;;;;;;-1:-1:-1;4535:44:58;;;4528:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4528:51:58;;;4535:44;4528:51;;;;-1:-1:-1;4528:51:58;:::i;:::-;-1:-1:-1;;4501:3:58;;4440:158;;;;4377:235;4637:59;4660:11;;4673:22;4637:59;;;;;;;;:::i;:::-;;;;;;;;2093:2610;;;;1949:2754;;;:::o;2910:255:73:-;3015:24;:22;:24::i;:::-;3010:80;;3055:24;;-1:-1:-1;;;3055:24:73;;;;;;;:::i;3010:80::-;3100:58;3126:21;3149:8;3100:25;:58::i;699:1187:58:-;952:85;965:9;976;987;998:14;1014:15;1031:5;952:12;:85::i;:::-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:58;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:58;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:58;-1:-1:-1;;;;;1343:73:58;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:58;;-1:-1:-1;1515:1:58;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:58;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:58;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;16040:25:821;;;16096:2;16081:18;;16074:34;16028:2;16013:18;;15866:248;1698:86:58;;;;;;;;942:944;;699:1187;;;;;;:::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6971:102:26:-;7027:13;7059:7;7052:14;;;;;:::i;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;1383:534:57:-;1502:17;1522:23;;;:13;:23;;;;;1502:43;;1465:25;;1502:17;1522:23;1502:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:4;:11;1574:1;1559:16;1555:74;;1591:27;;-1:-1:-1;;;1591:27:57;;33147:2:821;1591:27:57;;;33129:21:821;33186:2;33166:18;;;33159:30;-1:-1:-1;;;33205:18:821;;;33198:47;33262:18;;1591:27:57;32945:341:821;1555:74:57;1640:25;1667:22;1704:4;1693:34;;;;;;;;;;;;:::i;:::-;1639:88;;;;1759:34;1774:12;1788:4;;1759:14;:34::i;:::-;1738:56;;1878:14;1840:11;1853:4;;1859:13;1823:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1813:61;;;;;;:79;1805:105;;;;-1:-1:-1;;;1805:105:57;;34735:2:821;1805:105:57;;;34717:21:821;34774:2;34754:18;;;34747:30;-1:-1:-1;;;34793:18:821;;;34786:43;34846:18;;1805:105:57;34533:337:821;1805:105:57;1492:425;;;1383:534;;;;;:::o;568:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8109:251:333:-;8171:12;;929:28:71;940:4;946:10;929;:28::i;:::-;8204:43:333::1;8221:25;8239:6;8221:17;:25::i;8204:43::-;8203:44;8195:72;;;;-1:-1:-1::0;;;8195:72:333::1;;;;;;;:::i;:::-;8277:15;8295:25;8313:6;8295:17;:25::i;:::-;8277:43;;8330:23;8345:7;8330:14;:23::i;8573:282:26:-:0;8683:12;:10;:12::i;:::-;-1:-1:-1;;;;;8671:24:26;:8;-1:-1:-1;;;;;8671:24:26;;8667:54;;8704:17;;-1:-1:-1;;;8704:17:26;;;;;;;;;;;8667:54;8777:8;8732:18;:32;8751:12;:10;:12::i;:::-;-1:-1:-1;;;;;8732:32:26;;;;;;;;;;;;;;;;;-1:-1:-1;8732:32:26;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8732:53:26;;;;;;;;;;;8815:12;:10;:12::i;:::-;-1:-1:-1;;;;;8800:48:26;;8839:8;8800:48;;;;661:14:821;654:22;636:41;;624:2;609:18;;496:187;8800:48:26;;;;;;;;8573:282;;:::o;12788:93:333:-;12834:7;12860:14;3518:13:26;;;3289:277;12860:14:333;12853:21;;12788:93;:::o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;3544:200:73;3622:24;:22;:24::i;:::-;3617:80;;3662:24;;-1:-1:-1;;;3662:24:73;;;;;;;:::i;3617:80::-;3706:31;3728:8;3706:21;:31::i;9560:343:26:-;9683:28;9693:4;9699:2;9703:7;9683:9;:28::i;:::-;9725:15;:2;-1:-1:-1;;;;;9725:13:26;;:15::i;:::-;9721:176;;;9759:56;9790:4;9796:2;9800:7;9809:5;9759:30;:56::i;:::-;9754:143;;9842:40;;-1:-1:-1;;;9842:40:26;;;;;;;;;;;9754:143;9560:343;;;;:::o;7313:367:58:-;7439:20;;:14;7407:29;7371:7;;;;7407:52;;7439:20;7407:52;:::i;:::-;7395:64;;7390:252;7465:14;:29;7461:33;;7390:252;;;7538:25;:32;7564:5;7568:1;7564;:5;:::i;:::-;7538:32;;;;;;;;;;;:47;;;7519:15;:66;7515:117;;7612:5;7616:1;7612;:5;:::i;:::-;7605:12;;;7313:367;:::o;7515:117::-;7496:3;;;;:::i;:::-;;;;7390:252;;;-1:-1:-1;7652:21:58;;-1:-1:-1;;;7652:21:58;;36578:2:821;7652:21:58;;;36560::821;36617:2;36597:18;;;36590:30;-1:-1:-1;;;36636:18:821;;;36629:41;36687:18;;7652:21:58;36376:335:821;4799:402:333;4865:13;4891:15;4912:21;4924:8;4912:11;:21::i;:::-;4890:43;;;4943:22;4968:21;4980:8;4968:11;:21::i;:::-;4943:46;;5004:25;5021:7;5004:16;:25::i;:::-;5000:195;;;5076:8;5059:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;5045:46;;;;4799:402;;;:::o;5000:195::-;5153:8;5163:19;:8;:17;:19::i;:::-;5136:47;;;;;;;;;:::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;7012:391:333:-;7128:25;7105:12;;929:28:71;940:4;946:10;929;:28::i;:::-;7165:15:333::1;7183:25;7201:6;7183:17;:25::i;:::-;7165:43;;7232:27;7245:7;7254:4;;7232:12;:27::i;:::-;7218:41;;7270:30;7288:7;7270:30;;;;;;;;;;;::::0;:17:::1;:30::i;:::-;7310:33;7322:7;7331:11;7310;:33::i;:::-;7376:6;7359:37;7384:11;7359:37;;;;;;:::i;:::-;;;;;;;;7155:248;7012:391:::0;;;;;;:::o;6243:540::-;6390:15;6421:16;;6417:293;;6454:25;;6507:35;;;;6518:5;6507:35;:::i;:::-;6453:89;;;;6560:12;:19;6583:1;6560:24;;:48;;;;-1:-1:-1;6588:20:333;;;6560:48;6556:144;;;6628:57;6670:7;6646:21;;:31;;;;:::i;:::-;6679:5;;6628:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6628:17:333;;-1:-1:-1;;;6628:57:333:i;:::-;6439:271;;6417:293;6727:49;6742:7;6751:17;;6770:5;;6727:14;:49::i;:::-;6720:56;6243:540;-1:-1:-1;;;;;;6243:540:333:o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;7678:276:333:-;7762:12;;929:28:71;940:4;946:10;929;:28::i;:::-;7795:43:333::1;7812:25;7830:6;7812:17;:25::i;7795:43::-;7794:44;7786:72;;;;-1:-1:-1::0;;;7786:72:333::1;;;;;;;:::i;:::-;7868:15;7886:25;7904:6;7886:17;:25::i;:::-;7868:43;;7921:26;7933:7;7942:4;;7921:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7921:11:333::1;::::0;-1:-1:-1;;;7921:26:333:i:1;:::-;7776:178;7678:276:::0;;;;:::o;3132:1420::-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;38269:2:821;3325:201:450;;;38251:21:821;38308:2;38288:18;;;38281:30;38347:34;38327:18;;;38320:62;-1:-1:-1;;;38398:18:821;;;38391:44;38452:19;;3325:201:450;38067:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;3553:26:333::1;3611:24;3669:26;3781:41;3803:18:::0;3781:21:::1;:41::i;:::-;3832:30;3847:5;3854:7;3832:14;:30::i;:::-;3873:31;3891:12;3873:17;:31::i;:::-;3914:26;3926:13;3914:11;:26::i;:::-;3951:45;785:4:71;3982:13:333::0;3951:10:::1;:45::i;:::-;4006:38;4017:11;4030:13;4006:10;:38::i;:::-;4054:40;4065:13;4080;4054:10;:40::i;:::-;4104:37;4115:13;4138:1;4104:10;:37::i;:::-;4151:40;4162:13;4177;4151:10;:40::i;:::-;4201:43;4215:13;4230;4201;:43::i;:::-;4255:61;4277:21;4300:15;-1:-1:-1::0;;;;;4255:61:333::1;:21;:61::i;:::-;4326:56;4351:17;4370:11;-1:-1:-1::0;;;;;4326:56:333::1;:24;:56::i;:::-;4392:42;4419:14;4392:26;:42::i;:::-;4445:12;:28:::0;;;;4483:10:::1;:24:::0;4517:12:::1;:28:::0;3647:99:450;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;12087:36:821;;3721:14:450;;12075:2:821;12060:18;3721:14:450;;;;;;;3647:99;3269:483;3132:1420:333;;;;;;;;;;:::o;2409:1283:57:-;2602:11;;2768:4;2762:11;;2862:19;;;2883:2;2858:28;2845:42;;;2933:22;;;2762:11;2585:14;3029:657;3053:6;3049:1;:10;3029:657;;;3135:12;3177:3;;3182:1;3160:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3160:24:57;;;;;;;;;3150:35;;3160:24;3150:35;;;;3373:21;;;;;3367:28;3461:13;3631:23;;;;;3624:38;3061:7;;-1:-1:-1;3387:1:57;3061:7;:::i;:::-;;;3029:657;;;;2523:1169;2409:1283;;;;;:::o;565:34:56:-;;;;;;;:::i;3633:358:26:-;3771:4;-1:-1:-1;;;;;;3806:51:26;;-1:-1:-1;;;3806:51:26;;:126;;-1:-1:-1;;;;;;;3873:59:26;;-1:-1:-1;;;3873:59:26;3806:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:484;;;3948:36:26;1060:166:484;10149:172:26;10206:4;10269:13;;10259:7;:23;10229:85;;;;-1:-1:-1;;10287:20:26;;;;:11;:20;;;;;:27;-1:-1:-1;;;10287:27:26;;;;10286:28;;10149:172::o;14227:242:333:-;14387:14;14424:38;:36;:38::i;19070:159:26:-;19150:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19150:29:26;-1:-1:-1;;;;;19150:29:26;;;;;;;;;19194:28;;19150:24;;19194:28;;;;;;;19070:159;;;:::o;11493:127:333:-;11549:4;11572:41;11549:4;11600:12;:10;:12::i;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2358:477:73:-;2486:6;2468:15;:24;2464:80;;;2508:25;;-1:-1:-1;;;2508:25:73;;;;;;;:::i;2464:80::-;-1:-1:-1;;;;;2557:35:73;;2553:93;;2608:27;;-1:-1:-1;;;2608:27:73;;;;;;;:::i;2553:93::-;2656:14;:40;;-1:-1:-1;;;;;;2706:44:73;-1:-1:-1;;;2656:40:73;;;;-1:-1:-1;;;;;;2706:44:73;;-1:-1:-1;;;;;2706:44:73;;;;;;;;2766:62;;2830:25:821;;;2766:62:73;;2818:2:821;2803:18;2766:62:73;;;;;;;;2358:477;;:::o;112:876:294:-;203:4;;251;203;;293:567;317:5;:12;313:1;:16;293:567;;;350:10;359:1;350:10;;:::i;:::-;;;374:20;397:5;403:1;397:8;;;;;;;;:::i;:::-;;;;;;;374:31;;440:12;424;:28;420:430;;575:44;;;;;;39846:19:821;;;39881:12;;;39874:28;;;39918:12;;575:44:294;;;;;;;;;;;;565:55;;;;;;550:70;;420:430;;;762:44;;;;;;39846:19:821;;;39881:12;;;39874:28;;;39918:12;;762:44:294;;;;;;;;;;;;752:55;;;;;;737:70;;834:1;825:10;;;;;:::i;:::-;;;420:430;-1:-1:-1;331:3:294;;293:567;;;-1:-1:-1;953:20:294;;;;;-1:-1:-1;;;;112:876:294:o;14175:2052:26:-;14255:35;14293:21;14306:7;14293:12;:21::i;:::-;14255:59;;14351:4;-1:-1:-1;;;;;14329:26:26;:13;:18;;;-1:-1:-1;;;;;14329:26:26;;14325:67;;14364:28;;-1:-1:-1;;;14364:28:26;;;;;;;;;;;14325:67;14403:22;14445:4;-1:-1:-1;;;;;14429:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14429:20:26;;:72;;;;14465:36;14482:4;14488:12;:10;:12::i;14465:36::-;14429:124;;;;14541:12;:10;:12::i;:::-;-1:-1:-1;;;;;14517:36:26;:20;14529:7;14517:11;:20::i;:::-;-1:-1:-1;;;;;14517:36:26;;14429:124;14403:151;;14570:17;14565:66;;14596:35;;-1:-1:-1;;;14596:35:26;;;;;;;;;;;14565:66;-1:-1:-1;;;;;14645:16:26;;14641:52;;14670:23;;-1:-1:-1;;;14670:23:26;;;;;;;;;;;14641:52;14704:43;14726:4;14732:2;14736:7;14745:1;14704:21;:43::i;:::-;14809:35;14826:1;14830:7;14839:4;14809:8;:35::i;:::-;-1:-1:-1;;;;;15134:18:26;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15134:31:26;;;-1:-1:-1;;;;;15134:31:26;;;-1:-1:-1;;15134:31:26;;;;;;;15179:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15179:29:26;;;;;;;;;;;15257:20;;;:11;:20;;;;;;15291:18;;-1:-1:-1;;;;;;15323:49:26;;;;-1:-1:-1;;;15356:15:26;15323:49;;;;;;;;;;15642:11;;15701:24;;;;;15743:13;;15257:20;;15701:24;;15743:13;15739:377;;15950:13;;15935:11;:28;15931:171;;15987:20;;16055:28;;;;-1:-1:-1;;;;;16029:54:26;-1:-1:-1;;;16029:54:26;-1:-1:-1;;;;;;16029:54:26;;;-1:-1:-1;;;;;15987:20:26;;16029:54;;;;15931:171;15110:1016;;;16160:7;16156:2;-1:-1:-1;;;;;16141:27:26;16150:4;-1:-1:-1;;;;;16141:27:26;-1:-1:-1;;;;;;;;;;;16141:27:26;;;;;;;;;16178:42;9560:343;5555:491:71;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2030:269:73;;:::o;16604:2355:26:-;16683:35;16721:21;16734:7;16721:12;:21::i;:::-;16768:18;;16683:59;;-1:-1:-1;16797:284:26;;;;16830:22;16872:4;-1:-1:-1;;;;;16856:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16856:20:26;;:76;;;;16896:36;16913:4;16919:12;:10;:12::i;16896:36::-;16856:132;;;;16976:12;:10;:12::i;:::-;-1:-1:-1;;;;;16952:36:26;:20;16964:7;16952:11;:20::i;:::-;-1:-1:-1;;;;;16952:36:26;;16856:132;16830:159;;17009:17;17004:66;;17035:35;;-1:-1:-1;;;17035:35:26;;;;;;;;;;;17004:66;16816:265;16797:284;17091:51;17113:4;17127:1;17131:7;17140:1;17091:21;:51::i;:::-;17204:35;17221:1;17225:7;17234:4;17204:8;:35::i;:::-;-1:-1:-1;;;;;17563:18:26;;;17529:31;17563:18;;;:12;:18;;;;;;;;17595:24;;-1:-1:-1;;;;;;;;;;17595:24:26;;;;;;;;;-1:-1:-1;;;;;;17595:24:26;;;;17633:29;;;;;17618:1;17633:29;;;;;;;;-1:-1:-1;;;;;;17633:29:26;;;;;;;;;;17792:20;;;:11;:20;;;;;;17826;;-1:-1:-1;;;;17893:15:26;17860:49;;;-1:-1:-1;;;17860:49:26;-1:-1:-1;;;;;;17860:49:26;;;;;;;;;;17923:22;-1:-1:-1;;;17923:22:26;;;18211:11;;;18270:24;;;;;18312:13;;17563:18;;18270:24;;18312:13;18308:377;;18519:13;;18504:11;:28;18500:171;;18556:20;;18624:28;;;;-1:-1:-1;;;;;18598:54:26;-1:-1:-1;;;18598:54:26;-1:-1:-1;;;;;;18598:54:26;;;-1:-1:-1;;;;;18556:20:26;;18598:54;;;;18500:171;-1:-1:-1;;18710:35:26;;18737:7;;-1:-1:-1;18733:1:26;;-1:-1:-1;;;;;;18710:35:26;;;-1:-1:-1;;;;;;;;;;;18710:35:26;18733:1;;18710:35;-1:-1:-1;;18928:12:26;:14;;;;;;-1:-1:-1;;16604:2355:26:o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;2830:25:821;;;3689:46:77;;2818:2:821;2803:18;3689:46:77;2684:177:821;5393:1174:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5503:7:26;5601:13;;5594:4;:20;5590:913;;;5638:31;5672:17;;;:11;:17;;;;;;;;;5638:51;;;;;;;;;-1:-1:-1;;;;;5638:51:26;;;;-1:-1:-1;;;5638:51:26;;-1:-1:-1;;;;;5638:51:26;;;;;;;;-1:-1:-1;;;5638:51:26;;;;;;;;;;;;;;5711:774;;5764:14;;-1:-1:-1;;;;;5764:28:26;;5760:107;;5831:9;5393:1174;-1:-1:-1;;;5393:1174:26:o;5760:107::-;-1:-1:-1;;;6227:6:26;6275:17;;;;:11;:17;;;;;;;;;6263:29;;;;;;;;;-1:-1:-1;;;;;6263:29:26;;;;;-1:-1:-1;;;6263:29:26;;-1:-1:-1;;;;;6263:29:26;;;;;;;;-1:-1:-1;;;6263:29:26;;;;;;;;;;;;;6326:28;6322:115;;6397:9;5393:1174;-1:-1:-1;;;5393:1174:26:o;6322:115::-;6184:279;;;5616:887;5590:913;6529:31;;-1:-1:-1;;;6529:31:26;;;;;;;;;;;1499:265:74;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;;;;;;:::i;1578:86::-;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;3218:261:73:-;3321:15;:26;;;3357:20;:44;;-1:-1:-1;;;;;;3357:44:73;-1:-1:-1;;;;;3357:44:73;;;;;3417:55;;;;;;3357:44;;3321:26;;3417:55;:::i;9070:367:333:-;9301:21;;9288:9;9272:13;;:25;;;;:::i;:::-;:50;;9264:70;;;;-1:-1:-1;;;9264:70:333;;40958:2:821;9264:70:333;;;40940:21:821;40997:1;40977:18;;;40970:29;-1:-1:-1;;;41015:18:821;;;41008:37;41062:18;;9264:70:333;40756:330:821;9264:70:333;9352:14;;:19;;:66;;;9404:14;;9391:9;9375:13;;:25;;;;:::i;:::-;:43;;9352:66;9344:86;;;;-1:-1:-1;;;9344:86:333;;41293:2:821;9344:86:333;;;41275:21:821;41332:1;41312:18;;;41305:29;-1:-1:-1;;;41350:18:821;;;41343:37;41397:18;;9344:86:333;41091:330:821;9344:86:333;9070:367;;;;;;:::o;14110:111::-;14176:7;14202:12;:10;:12::i;9527:1117::-;9727:14;9745:1;9727:19;9723:99;;9770:9;:14;9762:29;;;;-1:-1:-1;;;9762:29:333;;;;;;;:::i;:::-;9805:7;;9723:99;9833:28;9863:21;9888:20;:18;:20::i;:::-;9832:76;;-1:-1:-1;9832:76:333;-1:-1:-1;9919:21:333;-1:-1:-1;;;;;9943:35:333;;;:84;;10006:21;9943:84;;;9981:22;:20;:22::i;:::-;9919:108;-1:-1:-1;10038:18:333;10059:33;10078:14;10059:16;:33;:::i;:::-;10038:54;-1:-1:-1;10102:20:333;2624:6;10126:27;;;;10038:54;10126:27;:::i;:::-;10125:39;;;;:::i;:::-;10102:62;-1:-1:-1;10175:18:333;-1:-1:-1;;;;;;;10207:45:333;;;10203:176;;-1:-1:-1;10284:9:333;:23;;10203:176;;;-1:-1:-1;10354:9:333;:14;10203:176;10396:13;10388:28;;;;-1:-1:-1;;;10388:28:333;;;;;;;:::i;:::-;10427:97;10464:9;10475:12;:10;:12::i;:::-;10489:20;10511:12;10427:36;:97::i;:::-;10534:103;10571:9;10582:12;:10;:12::i;:::-;10596:13;10611:25;10624:12;10611:10;:25;:::i;:::-;10534:36;:103::i;:::-;9713:931;;;;;;9527:1117;;;;:::o;10697:239::-;10869:13;;10892:37;10902:3;10907:21;10892:9;:37::i;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;2830:25:821;;;4836:49:77;;4804:29;;4901:43;;2803:18:821;4901:43:77;;;;;;;4619:332;;;:::o;4241:255:54:-;4302:29;4334:17;;;:7;:17;;;;;4302:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:1;4375:15;4369:29;:33;4361:59;;;;-1:-1:-1;;;4361:59:54;;43696:2:821;4361:59:54;;;43678:21:821;43735:2;43715:18;;;43708:30;-1:-1:-1;;;43754:18:821;;;43747:43;43807:18;;4361:59:54;43494:337:821;4361:59:54;4430:21;;;;:11;:21;;;;;;:28;;-1:-1:-1;;4430:28:54;4454:4;4430:28;;;4473:16;;;4430:21;4473:16;4292:204;4241:255;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;3787:157:73:-;3863:15;:26;;3881:8;;3863:15;-1:-1:-1;;;;3863:26:73;-1:-1:-1;;;3881:8:73;3863:26;;;;;;;;:::i;:::-;;;;;;3905:32;3928:8;3905:32;;;;;;:::i;:::-;;;;;;;;3787:157;:::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;19710:694:26:-;19868:4;19915:2;-1:-1:-1;;;;;19888:47:26;;19936:12;:10;:12::i;:::-;19950:4;19956:7;19965:5;19888:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19888:83:26;;;;;;;;-1:-1:-1;;19888:83:26;;;;;;;;;;;;:::i;:::-;;;19884:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20163:6;:13;20180:1;20163:18;20159:229;;20208:40;;-1:-1:-1;;;20208:40:26;;;;;;;;;;;20159:229;20348:6;20342:13;20333:6;20329:2;20325:15;20318:38;19884:514;-1:-1:-1;;;;;;20039:66:26;-1:-1:-1;;;20039:66:26;;-1:-1:-1;19884:514:26;19710:694;;;;;;:::o;2320:471:54:-;2382:15;2399:13;2424:25;2452:17;1785:8;:15;;1711:96;2452:17;2424:45;;2479:24;2506:8;2479:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2530:9;2525:224;2549:17;2545:1;:21;2525:224;;;2605:7;2613:1;2605:10;;;;;;;;:::i;:::-;;;;;;;2594:8;:21;2590:149;;;2643:1;2635:9;;2672:7;2680:1;2672:10;;;;;;;;:::i;:::-;;;;;;;2662:20;;2701:23;;;2320:471;;;:::o;2590:149::-;2568:6;2573:1;2568:6;;:::i;:::-;;;2525:224;;;-1:-1:-1;2759:25:54;;-1:-1:-1;;;2759:25:54;;44786:2:821;2759:25:54;;;44768:21:821;44825:2;44805:18;;;44798:30;-1:-1:-1;;;44844:18:821;;;44837:45;44899:18;;2759:25:54;44584:339:821;2905:390:54;2967:13;2992:25;3020:17;1785:8;:15;;1711:96;3020:17;2992:45;;3047:24;3074:8;3047:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:9;3093:161;3117:17;3113:1;:21;3093:161;;;3173:7;3181:1;3173:10;;;;;;;;:::i;:::-;;;;;;;3162:8;:21;3158:86;;;3210:7;:19;3218:7;3226:1;3218:10;;;;;;;;:::i;:::-;;;;;;;3210:19;;;;;;;;;;;3203:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:390;;;:::o;3158:86::-;3136:6;3141:1;3136:6;;:::i;:::-;;;3093:161;;480:707:480;536:13;585:14;602:28;624:5;602:21;:28::i;:::-;633:1;602:32;585:49;;648:20;682:6;-1:-1:-1;;;;;671:18:480;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;671:18:480;-1:-1:-1;648:41:480;-1:-1:-1;809:28:480;;;825:2;809:28;864:280;-1:-1:-1;;895:5:480;-1:-1:-1;;;1029:2:480;1018:14;;1013:30;895:5;1000:44;1088:2;1079:11;;;-1:-1:-1;1108:21:480;864:280;1108:21;-1:-1:-1;1164:6:480;480:707;-1:-1:-1;;;480:707:480:o;678:140:57:-;771:23;;;;:13;:23;;;;;:40;797:14;771:23;:40;:::i;3907:246:54:-;3998:21;;;;:11;:21;;;;;;;;3997:22;3989:47;;;;-1:-1:-1;;;3989:47:54;;46478:2:821;3989:47:54;;;46460:21:821;46517:2;46497:18;;;46490:30;-1:-1:-1;;;46536:18:821;;;46529:42;46588:18;;3989:47:54;46276:336:821;3989:47:54;4046:17;;;;:7;:17;;;;;:28;4066:8;4046:17;:28;:::i;:::-;;4089:57;4109:26;4126:8;4109:16;:26::i;:::-;4089:57;;;16040:25:821;;;16096:2;16081:18;;16074:34;;;16013:18;4089:57:54;15866:248:821;1254:592:63;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:63;;;;;;;:::i;1436:70::-;1520:7;1531:1;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:63;;46819:2:821;1548:15:63;;;46801:21:821;46858:1;46838:18;;;46831:29;-1:-1:-1;;;46876:18:821;;;46869:35;46921:18;;1548:15:63;46617:328:821;1516:58:63;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:63;;-1:-1:-1;;;1669:55:63:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:63;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2225:151:26:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2329:40:26::1;2354:5;2361:7;2329:24;:40::i;4741:245:71:-:0;4824:25;4852:19;;;:13;:19;;;;;;;;4881:31;;;;4927:52;;4852:19;;4903:9;;4852:19;;4866:4;;4927:52;;4824:25;4927:52;4814:172;4741:245;;:::o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;12788:93:333:o;13531:573::-;13876:33;13884:12;;13906:1;13876:7;:33::i;:::-;13875:34;:56;;;;-1:-1:-1;;;;;;13913:18:333;;;;13875:56;:76;;;;-1:-1:-1;;;;;;13935:16:333;;;;13875:76;13871:227;;;13972:27;13980:12;;13994:4;13972:7;:27::i;:::-;13971:28;:58;;;;;14004:25;14012:12;;14026:2;14004:7;:25::i;:::-;14003:26;13971:58;13967:121;;;14049:24;;-1:-1:-1;;;14049:24:333;;48075:2:821;14049:24:333;;;48057:21:821;48114:2;48094:18;;;48087:30;-1:-1:-1;;;48133:18:821;;;48126:44;48187:18;;14049:24:333;47873:338:821;1563:441:298;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;48418:2:821;1911:55:298;;;48400:21:821;;;48437:18;;;48430:30;48496:34;48476:18;;;48469:62;48548:18;;1911:55:298;48216:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;702:173::-;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;10400:102:26:-;10468:27;10478:2;10482:8;10468:27;;;;;;;;;;;;:9;:27::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;10150:916:486:-;10203:7;;-1:-1:-1;;;10278:17:486;;10274:103;;-1:-1:-1;;;10315:17:486;;;-1:-1:-1;10360:2:486;10350:12;10274:103;-1:-1:-1;;;10394:5:486;:17;10390:103;;-1:-1:-1;;;10431:17:486;;;-1:-1:-1;10476:2:486;10466:12;10390:103;10519:8;10510:5;:17;10506:103;;10556:8;10547:17;;;-1:-1:-1;10592:2:486;10582:12;10506:103;10635:7;10626:5;:16;10622:100;;10671:7;10662:16;;;-1:-1:-1;10706:1:486;10696:11;10622:100;10748:7;10739:5;:16;10735:100;;10784:7;10775:16;;;-1:-1:-1;10819:1:486;10809:11;10735:100;10861:7;10852:5;:16;10848:100;;10897:7;10888:16;;;-1:-1:-1;10932:1:486;10922:11;10848:100;10974:7;10965:5;:16;10961:66;;11011:1;11001:11;11053:6;10150:916;-1:-1:-1;;10150:916:486:o;3363:459:54:-;3430:7;3449:25;3477:17;1785:8;:15;;1711:96;3477:17;3449:45;;3504:24;3531:8;3504:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3555:9;3550:231;3574:17;3570:1;:21;3550:231;;;3628:7;3636:1;3628:10;;;;;;;;:::i;:::-;;;;;;;3616:8;:22;3612:159;;3662:5;;3658:73;;3698:7;3706:5;3710:1;3706;:5;:::i;:::-;3698:14;;;;;;;;:::i;:::-;;;;;;;3691:21;;;;;3363:459;;;:::o;3658:73::-;-1:-1:-1;3755:1:54;;3363:459;-1:-1:-1;;;;3363:459:54:o;3612:159::-;3593:3;;3550:231;;;-1:-1:-1;3790:25:54;;-1:-1:-1;;;3790:25:54;;49071:2:821;3790:25:54;;;49053:21:821;49110:2;49090:18;;;49083:30;-1:-1:-1;;;49129:18:821;;;49122:45;49184:18;;3790:25:54;48869:339:821;12395:127:333;12459:4;12482:33;12490:10;;12502:12;:10;:12::i;4591:362:54:-;4741:25;;4805:24;4816:13;4805:8;:24;:::i;:::-;4877:8;:22;;;;;;;;;;;;;-1:-1:-1;4910:16:54;;;:7;4877:22;4910:16;;;;4795:34;;-1:-1:-1;4795:34:54;;-1:-1:-1;4910:36:54;4929:17;4910:16;:36;:::i;:::-;;4591:362;;;;;;:::o;776:69:478:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;776::478:o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;2382:202:26::0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2496:5:26::1;:13;2504:5:::0;2496;:13:::1;:::i;:::-;-1:-1:-1::0;2519:7:26::1;:17;2529:7:::0;2519;:17:::1;:::i;:::-;-1:-1:-1::0;2732:7:26;2546:13:::1;:31:::0;-1:-1:-1;;2382:202:26:o;2482:292:292:-;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;49625:2:821;2719:48:292;;;49607:21:821;49664:2;49644:18;;;49637:30;-1:-1:-1;;;49683:18:821;;;49676:58;49751:18;;2719:48:292;49423:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;10862:1678:26:-;10973:13;;-1:-1:-1;;;;;11000:16:26;;10996:48;;11025:19;;-1:-1:-1;;;11025:19:26;;;;;;;;;;;10996:48;11058:8;11070:1;11058:13;11054:44;;11080:18;;-1:-1:-1;;;11080:18:26;;;;;;;;;;;11054:44;11109:61;11139:1;11143:2;11147:12;11161:8;11109:21;:61::i;:::-;-1:-1:-1;;;;;11441:16:26;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11499:49:26;;-1:-1:-1;;;;;11441:44:26;;;;;;;11499:49;;;-1:-1:-1;;;;;;;;;11441:44:26;;;;;;11499:49;;;;;;;;;;;;;;;;11563:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11612:66:26;;;-1:-1:-1;;;11662:15:26;11612:66;;;;;;;;;;;;;11563:25;;11756:23;;;;11798:15;;:13;:15::i;:::-;11794:618;;;11833:308;11863:38;;11888:12;;-1:-1:-1;;;;;11863:38:26;;;11880:1;;-1:-1:-1;;;;;;;;;;;11863:38:26;11880:1;;11863:38;11928:69;11967:1;11971:2;11975:14;;;;;;11991:5;11928:30;:69::i;:::-;11923:172;;12032:40;;-1:-1:-1;;;12032:40:26;;;;;;;;;;;11923:172;12136:3;12121:12;:18;11833:308;;12220:12;12203:13;;:29;12199:43;;12234:8;;;12199:43;11794:618;;;12281:117;12311:40;;12336:14;;;;;-1:-1:-1;;;;;12311:40:26;;;12328:1;;-1:-1:-1;;;;;;;;;;;12311:40:26;12328:1;;12311:40;12393:3;12378:12;:18;12281:117;;11794:618;-1:-1:-1;12425:13:26;:28;12473:60;12502:1;12506:2;12510:12;12524:8;12473:60;:::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;49982:2:821;8110:60:289;;;49964:21:821;50021:2;50001:18;;;49994:30;50060:31;50040:18;;;50033:59;50109:18;;8110:60:289;49780:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;50396:15:821;;;1067:68:228;;;50378:34:821;50448:15;;50428:18;;;50421:43;50480:18;;;50473:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;50313:18:821;;1067:68:228;50138:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;50970:2:821;3711:85:228;;;50952:21:821;51009:2;50989:18;;;50982:30;51048:34;51028:18;;;51021:62;-1:-1:-1;;;51099:18:821;;;51092:40;51149:19;;3711:85:228;50768:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:821:-;-1:-1:-1;;;;;;88:32:821;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:250::-;773:1;783:113;797:6;794:1;791:13;783:113;;;873:11;;;867:18;854:11;;;847:39;819:2;812:10;783:113;;;-1:-1:-1;;930:1:821;912:16;;905:27;688:250::o;943:271::-;985:3;1023:5;1017:12;1050:6;1045:3;1038:19;1066:76;1135:6;1128:4;1123:3;1119:14;1112:4;1105:5;1101:16;1066:76;:::i;:::-;1196:2;1175:15;-1:-1:-1;;1171:29:821;1162:39;;;;1203:4;1158:50;;943:271;-1:-1:-1;;943:271:821:o;1219:220::-;1368:2;1357:9;1350:21;1331:4;1388:45;1429:2;1418:9;1414:18;1406:6;1388:45;:::i;1652:180::-;1711:6;1764:2;1752:9;1743:7;1739:23;1735:32;1732:52;;;1780:1;1777;1770:12;1732:52;-1:-1:-1;1803:23:821;;1652:180;-1:-1:-1;1652:180:821:o;1837:131::-;-1:-1:-1;;;;;1912:31:821;;1902:42;;1892:70;;1958:1;1955;1948:12;1973:134;2041:20;;2070:31;2041:20;2070:31;:::i;:::-;1973:134;;;:::o;2112:315::-;2180:6;2188;2241:2;2229:9;2220:7;2216:23;2212:32;2209:52;;;2257:1;2254;2247:12;2209:52;2296:9;2283:23;2315:31;2340:5;2315:31;:::i;:::-;2365:5;2417:2;2402:18;;;;2389:32;;-1:-1:-1;;;2112:315:821:o;2432:247::-;2491:6;2544:2;2532:9;2523:7;2519:23;2515:32;2512:52;;;2560:1;2557;2550:12;2512:52;2599:9;2586:23;2618:31;2643:5;2618:31;:::i;2866:163::-;2933:5;2978:3;2969:6;2964:3;2960:16;2956:26;2953:46;;;2995:1;2992;2985:12;3034:854;3173:6;3181;3189;3197;3205;3213;3266:3;3254:9;3245:7;3241:23;3237:33;3234:53;;;3283:1;3280;3273:12;3234:53;3319:9;3306:23;3296:33;;3379:2;3368:9;3364:18;3351:32;3392:31;3417:5;3392:31;:::i;:::-;3442:5;-1:-1:-1;3494:2:821;3479:18;;3466:32;;-1:-1:-1;3550:2:821;3535:18;;3522:32;3563:33;3522:32;3563:33;:::i;:::-;3615:7;-1:-1:-1;3669:3:821;3654:19;;3641:33;;-1:-1:-1;3725:3:821;3710:19;;3697:33;-1:-1:-1;;;;;3742:30:821;;3739:50;;;3785:1;3782;3775:12;3739:50;3808:74;3874:7;3865:6;3854:9;3850:22;3808:74;:::i;:::-;3798:84;;;3034:854;;;;;;;;:::o;3893:456::-;3970:6;3978;3986;4039:2;4027:9;4018:7;4014:23;4010:32;4007:52;;;4055:1;4052;4045:12;4007:52;4094:9;4081:23;4113:31;4138:5;4113:31;:::i;:::-;4163:5;-1:-1:-1;4220:2:821;4205:18;;4192:32;4233:33;4192:32;4233:33;:::i;:::-;3893:456;;4285:7;;-1:-1:-1;;;4339:2:821;4324:18;;;;4311:32;;3893:456::o;4721:248::-;4789:6;4797;4850:2;4838:9;4829:7;4825:23;4821:32;4818:52;;;4866:1;4863;4856:12;4818:52;-1:-1:-1;;4889:23:821;;;4959:2;4944:18;;;4931:32;;-1:-1:-1;4721:248:821:o;4974:274::-;-1:-1:-1;;;;;5166:32:821;;;;5148:51;;5230:2;5215:18;;5208:34;5136:2;5121:18;;4974:274::o;5253:315::-;5321:6;5329;5382:2;5370:9;5361:7;5357:23;5353:32;5350:52;;;5398:1;5395;5388:12;5350:52;5434:9;5421:23;5411:33;;5494:2;5483:9;5479:18;5466:32;5507:31;5532:5;5507:31;:::i;:::-;5557:5;5547:15;;;5253:315;;;;;:::o;5863:826::-;6058:2;6047:9;6040:21;6103:6;6097:13;6092:2;6081:9;6077:18;6070:41;6165:2;6157:6;6153:15;6147:22;6142:2;6131:9;6127:18;6120:50;6224:2;6216:6;6212:15;6206:22;6201:2;6190:9;6186:18;6179:50;6284:2;6276:6;6272:15;6266:22;6260:3;6249:9;6245:19;6238:51;6344:3;6336:6;6332:16;6326:23;6320:3;6309:9;6305:19;6298:52;6405:3;6397:6;6393:16;6387:23;6381:3;6370:9;6366:19;6359:52;6494:1;6490;6485:3;6481:11;6477:19;6470:3;6462:6;6458:16;6452:23;6448:49;6442:3;6431:9;6427:19;6420:78;6021:4;6545:3;6537:6;6533:16;6527:23;6569:6;6611:2;6606;6595:9;6591:18;6584:30;;6631:52;6678:3;6667:9;6663:19;6649:12;6631:52;:::i;6694:390::-;6780:8;6790:6;6844:3;6837:4;6829:6;6825:17;6821:27;6811:55;;6862:1;6859;6852:12;6811:55;-1:-1:-1;6885:20:821;;-1:-1:-1;;;;;6917:30:821;;6914:50;;;6960:1;6957;6950:12;6914:50;6997:4;6989:6;6985:17;6973:29;;7057:3;7050:4;7040:6;7037:1;7033:14;7025:6;7021:27;7017:38;7014:47;7011:67;;;7074:1;7071;7064:12;7011:67;6694:390;;;;;:::o;7089:118::-;7175:5;7168:13;7161:21;7154:5;7151:32;7141:60;;7197:1;7194;7187:12;7212:624;7339:6;7347;7355;7408:2;7396:9;7387:7;7383:23;7379:32;7376:52;;;7424:1;7421;7414:12;7376:52;7464:9;7451:23;-1:-1:-1;;;;;7489:6:821;7486:30;7483:50;;;7529:1;7526;7519:12;7483:50;7568:93;7653:7;7644:6;7633:9;7629:22;7568:93;:::i;:::-;7680:8;;-1:-1:-1;7542:119:821;-1:-1:-1;;7765:2:821;7750:18;;7737:32;7778:28;7737:32;7778:28;:::i;:::-;7825:5;7815:15;;;7212:624;;;;;:::o;7841:127::-;7902:10;7897:3;7893:20;7890:1;7883:31;7933:4;7930:1;7923:15;7957:4;7954:1;7947:15;7973:275;8044:2;8038:9;8109:2;8090:13;;-1:-1:-1;;8086:27:821;8074:40;;-1:-1:-1;;;;;8129:34:821;;8165:22;;;8126:62;8123:88;;;8191:18;;:::i;:::-;8227:2;8220:22;7973:275;;-1:-1:-1;7973:275:821:o;8253:186::-;8301:4;-1:-1:-1;;;;;8326:6:821;8323:30;8320:56;;;8356:18;;:::i;:::-;-1:-1:-1;8422:2:821;8401:15;-1:-1:-1;;8397:29:821;8428:4;8393:40;;8253:186::o;8444:462::-;8486:5;8539:3;8532:4;8524:6;8520:17;8516:27;8506:55;;8557:1;8554;8547:12;8506:55;8593:6;8580:20;8624:48;8640:31;8668:2;8640:31;:::i;:::-;8624:48;:::i;:::-;8697:2;8688:7;8681:19;8743:3;8736:4;8731:2;8723:6;8719:15;8715:26;8712:35;8709:55;;;8760:1;8757;8750:12;8709:55;8825:2;8818:4;8810:6;8806:17;8799:4;8790:7;8786:18;8773:55;8873:1;8848:16;;;8866:4;8844:27;8837:38;;;;8852:7;8444:462;-1:-1:-1;;;8444:462:821:o;8911:1005::-;9059:6;9067;9075;9083;9091;9099;9152:3;9140:9;9131:7;9127:23;9123:33;9120:53;;;9169:1;9166;9159:12;9120:53;9208:9;9195:23;9227:31;9252:5;9227:31;:::i;:::-;9277:5;-1:-1:-1;9329:2:821;9314:18;;9301:32;;-1:-1:-1;9385:2:821;9370:18;;9357:32;9398:33;9357:32;9398:33;:::i;:::-;9450:7;-1:-1:-1;9504:2:821;9489:18;;9476:32;;-1:-1:-1;9559:3:821;9544:19;;9531:33;-1:-1:-1;;;;;9613:14:821;;;9610:34;;;9640:1;9637;9630:12;9610:34;9663:74;9729:7;9720:6;9709:9;9705:22;9663:74;:::i;:::-;9653:84;;9790:3;9779:9;9775:19;9762:33;9746:49;;9820:2;9810:8;9807:16;9804:36;;;9836:1;9833;9826:12;9804:36;;9859:51;9902:7;9891:8;9880:9;9876:24;9859:51;:::i;10174:321::-;10243:6;10296:2;10284:9;10275:7;10271:23;10267:32;10264:52;;;10312:1;10309;10302:12;10264:52;10352:9;10339:23;-1:-1:-1;;;;;10377:6:821;10374:30;10371:50;;;10417:1;10414;10407:12;10371:50;10440:49;10481:7;10472:6;10461:9;10457:22;10440:49;:::i;10500:383::-;10577:6;10585;10593;10646:2;10634:9;10625:7;10621:23;10617:32;10614:52;;;10662:1;10659;10652:12;10614:52;10698:9;10685:23;10675:33;;10758:2;10747:9;10743:18;10730:32;10771:31;10796:5;10771:31;:::i;10888:347::-;10939:8;10949:6;11003:3;10996:4;10988:6;10984:17;10980:27;10970:55;;11021:1;11018;11011:12;10970:55;-1:-1:-1;11044:20:821;;-1:-1:-1;;;;;11076:30:821;;11073:50;;;11119:1;11116;11109:12;11073:50;11156:4;11148:6;11144:17;11132:29;;11208:3;11201:4;11192:6;11184;11180:19;11176:30;11173:39;11170:59;;;11225:1;11222;11215:12;11240:477;11319:6;11327;11335;11388:2;11376:9;11367:7;11363:23;11359:32;11356:52;;;11404:1;11401;11394:12;11356:52;11440:9;11427:23;11417:33;;11501:2;11490:9;11486:18;11473:32;-1:-1:-1;;;;;11520:6:821;11517:30;11514:50;;;11560:1;11557;11550:12;11514:50;11599:58;11649:7;11640:6;11629:9;11625:22;11599:58;:::i;:::-;11240:477;;11676:8;;-1:-1:-1;11573:84:821;;-1:-1:-1;;;;11240:477:821:o;12134:382::-;12199:6;12207;12260:2;12248:9;12239:7;12235:23;12231:32;12228:52;;;12276:1;12273;12266:12;12228:52;12315:9;12302:23;12334:31;12359:5;12334:31;:::i;:::-;12384:5;-1:-1:-1;12441:2:821;12426:18;;12413:32;12454:30;12413:32;12454:30;:::i;12521:471::-;12618:6;12626;12679:2;12667:9;12658:7;12654:23;12650:32;12647:52;;;12695:1;12692;12685:12;12647:52;12735:9;12722:23;-1:-1:-1;;;;;12760:6:821;12757:30;12754:50;;;12800:1;12797;12790:12;12754:50;12839:93;12924:7;12915:6;12904:9;12900:22;12839:93;:::i;:::-;12951:8;;12813:119;;-1:-1:-1;12521:471:821;-1:-1:-1;;;;12521:471:821:o;12997:801::-;13157:4;13186:2;13226;13215:9;13211:18;13256:2;13245:9;13238:21;13279:6;13314;13308:13;13345:6;13337;13330:22;13383:2;13372:9;13368:18;13361:25;;13445:2;13435:6;13432:1;13428:14;13417:9;13413:30;13409:39;13395:53;;13483:2;13475:6;13471:15;13504:1;13514:255;13528:6;13525:1;13522:13;13514:255;;;13621:2;13617:7;13605:9;13597:6;13593:22;13589:36;13584:3;13577:49;13649:40;13682:6;13673;13667:13;13649:40;:::i;:::-;13639:50;-1:-1:-1;13747:12:821;;;;13712:15;;;;13550:1;13543:9;13514:255;;;-1:-1:-1;13786:6:821;;12997:801;-1:-1:-1;;;;;;;12997:801:821:o;14123:277::-;14203:6;14256:2;14244:9;14235:7;14231:23;14227:32;14224:52;;;14272:1;14269;14262:12;14224:52;14311:9;14298:23;14350:1;14343:5;14340:12;14330:40;;14366:1;14363;14356:12;14405:665;14500:6;14508;14516;14524;14577:3;14565:9;14556:7;14552:23;14548:33;14545:53;;;14594:1;14591;14584:12;14545:53;14633:9;14620:23;14652:31;14677:5;14652:31;:::i;:::-;14702:5;-1:-1:-1;14759:2:821;14744:18;;14731:32;14772:33;14731:32;14772:33;:::i;:::-;14824:7;-1:-1:-1;14878:2:821;14863:18;;14850:32;;-1:-1:-1;14933:2:821;14918:18;;14905:32;-1:-1:-1;;;;;14949:30:821;;14946:50;;;14992:1;14989;14982:12;14946:50;15015:49;15056:7;15047:6;15036:9;15032:22;15015:49;:::i;:::-;15005:59;;;14405:665;;;;;;;:::o;15075:786::-;15175:6;15183;15191;15199;15207;15260:2;15248:9;15239:7;15235:23;15231:32;15228:52;;;15276:1;15273;15266:12;15228:52;15312:9;15299:23;15289:33;;15373:2;15362:9;15358:18;15345:32;-1:-1:-1;;;;;15437:2:821;15429:6;15426:14;15423:34;;;15453:1;15450;15443:12;15423:34;15492:58;15542:7;15533:6;15522:9;15518:22;15492:58;:::i;:::-;15569:8;;-1:-1:-1;15466:84:821;-1:-1:-1;15657:2:821;15642:18;;15629:32;;-1:-1:-1;15673:16:821;;;15670:36;;;15702:1;15699;15692:12;15670:36;;15741:60;15793:7;15782:8;15771:9;15767:24;15741:60;:::i;:::-;15075:786;;;;-1:-1:-1;15075:786:821;;-1:-1:-1;15820:8:821;;15715:86;15075:786;-1:-1:-1;;;15075:786:821:o;16602:787::-;16656:5;16709:3;16702:4;16694:6;16690:17;16686:27;16676:55;;16727:1;16724;16717:12;16676:55;16763:6;16750:20;16789:4;-1:-1:-1;;;;;16808:2:821;16805:26;16802:52;;;16834:18;;:::i;:::-;16880:2;16877:1;16873:10;16903:28;16927:2;16923;16919:11;16903:28;:::i;:::-;16965:15;;;17035;;;17031:24;;;16996:12;;;;17067:15;;;17064:35;;;17095:1;17092;17085:12;17064:35;17131:2;17123:6;17119:15;17108:26;;17143:217;17159:6;17154:3;17151:15;17143:217;;;17239:3;17226:17;17256:31;17281:5;17256:31;:::i;:::-;17300:18;;17176:12;;;;17338;;;;17143:217;;17394:173;17462:20;;-1:-1:-1;;;;;17511:31:821;;17501:42;;17491:70;;17557:1;17554;17547:12;17572:1417;17767:6;17775;17783;17791;17799;17807;17815;17823;17831;17839;17892:3;17880:9;17871:7;17867:23;17863:33;17860:53;;;17909:1;17906;17899:12;17860:53;17932:29;17951:9;17932:29;:::i;:::-;17922:39;;18012:2;18001:9;17997:18;17984:32;-1:-1:-1;;;;;18076:2:821;18068:6;18065:14;18062:34;;;18092:1;18089;18082:12;18062:34;18115:49;18156:7;18147:6;18136:9;18132:22;18115:49;:::i;:::-;18105:59;;18217:2;18206:9;18202:18;18189:32;18173:48;;18246:2;18236:8;18233:16;18230:36;;;18262:1;18259;18252:12;18230:36;18285:51;18328:7;18317:8;18306:9;18302:24;18285:51;:::i;:::-;18275:61;;18389:2;18378:9;18374:18;18361:32;18345:48;;18418:2;18408:8;18405:16;18402:36;;;18434:1;18431;18424:12;18402:36;18457:51;18500:7;18489:8;18478:9;18474:24;18457:51;:::i;:::-;18447:61;;18561:3;18550:9;18546:19;18533:33;18517:49;;18591:2;18581:8;18578:16;18575:36;;;18607:1;18604;18597:12;18575:36;;18630:63;18685:7;18674:8;18663:9;18659:24;18630:63;:::i;:::-;18620:73;;;18712:39;18746:3;18735:9;18731:19;18712:39;:::i;:::-;18702:49;;18770:39;18804:3;18793:9;18789:19;18770:39;:::i;:::-;18760:49;;18828:39;18862:3;18851:9;18847:19;18828:39;:::i;:::-;18818:49;;18886:39;18920:3;18909:9;18905:19;18886:39;:::i;:::-;18876:49;;18944:39;18978:3;18967:9;18963:19;18944:39;:::i;:::-;18934:49;;17572:1417;;;;;;;;;;;;;:::o;18994:628::-;19082:6;19090;19098;19151:2;19139:9;19130:7;19126:23;19122:32;19119:52;;;19167:1;19164;19157:12;19119:52;19207:9;19194:23;-1:-1:-1;;;;;19277:2:821;19269:6;19266:14;19263:34;;;19293:1;19290;19283:12;19263:34;19316:49;19357:7;19348:6;19337:9;19333:22;19316:49;:::i;:::-;19306:59;;19418:2;19407:9;19403:18;19390:32;19374:48;;19447:2;19437:8;19434:16;19431:36;;;19463:1;19460;19453:12;19431:36;;19502:60;19554:7;19543:8;19532:9;19528:24;19502:60;:::i;19627:388::-;19695:6;19703;19756:2;19744:9;19735:7;19731:23;19727:32;19724:52;;;19772:1;19769;19762:12;19724:52;19811:9;19798:23;19830:31;19855:5;19830:31;:::i;:::-;19880:5;-1:-1:-1;19937:2:821;19922:18;;19909:32;19950:33;19909:32;19950:33;:::i;20020:127::-;20081:10;20076:3;20072:20;20069:1;20062:31;20112:4;20109:1;20102:15;20136:4;20133:1;20126:15;20152:349;20305:2;20290:18;;20338:1;20327:13;;20317:144;;20383:10;20378:3;20374:20;20371:1;20364:31;20418:4;20415:1;20408:15;20446:4;20443:1;20436:15;20317:144;20470:25;;;20152:349;:::o;20506:380::-;20585:1;20581:12;;;;20628;;;20649:61;;20703:4;20695:6;20691:17;20681:27;;20649:61;20756:2;20748:6;20745:14;20725:18;20722:38;20719:161;;20802:10;20797:3;20793:20;20790:1;20783:31;20837:4;20834:1;20827:15;20865:4;20862:1;20855:15;20891:338;21093:2;21075:21;;;21132:2;21112:18;;;21105:30;-1:-1:-1;;;21166:2:821;21151:18;;21144:44;21220:2;21205:18;;20891:338::o;21234:545::-;21327:4;21333:6;21393:11;21380:25;21487:2;21483:7;21472:8;21456:14;21452:29;21448:43;21428:18;21424:68;21414:96;;21506:1;21503;21496:12;21414:96;21533:33;;21585:20;;;-1:-1:-1;;;;;;21617:30:821;;21614:50;;;21660:1;21657;21650:12;21614:50;21693:4;21681:17;;-1:-1:-1;21744:1:821;21740:14;;;21724;21720:35;21710:46;;21707:66;;;21769:1;21766;21759:12;22590:127;22651:10;22646:3;22642:20;22639:1;22632:31;22682:4;22679:1;22672:15;22706:4;22703:1;22696:15;22722:125;22787:9;;;22808:10;;;22805:36;;;22821:18;;:::i;24208:127::-;24269:10;24264:3;24260:20;24257:1;24250:31;24300:4;24297:1;24290:15;24324:4;24321:1;24314:15;24340:168;24413:9;;;24444;;24461:15;;;24455:22;;24441:37;24431:71;;24482:18;;:::i;24645:217::-;24685:1;24711;24701:132;;24755:10;24750:3;24746:20;24743:1;24736:31;24790:4;24787:1;24780:15;24818:4;24815:1;24808:15;24701:132;-1:-1:-1;24847:9:821;;24645:217::o;25580:333::-;25681:4;25739:11;25726:25;25833:3;25829:8;25818;25802:14;25798:29;25794:44;25774:18;25770:69;25760:97;;25853:1;25850;25843:12;25760:97;25874:33;;;;;25580:333;-1:-1:-1;;25580:333:821:o;26595:516::-;26667:4;26673:6;26733:11;26720:25;26827:2;26823:7;26812:8;26796:14;26792:29;26788:43;26768:18;26764:68;26754:96;;26846:1;26843;26836:12;26754:96;26873:33;;26925:20;;;-1:-1:-1;;;;;;26957:30:821;;26954:50;;;27000:1;26997;26990:12;26954:50;27033:4;27021:17;;-1:-1:-1;27064:14:821;27060:27;;;27050:38;;27047:58;;;27101:1;27098;27091:12;27242:543;27344:2;27339:3;27336:11;27333:446;;;27380:1;27404:5;27401:1;27394:16;27448:4;27445:1;27435:18;27518:2;27506:10;27502:19;27499:1;27495:27;27489:4;27485:38;27554:4;27542:10;27539:20;27536:47;;;-1:-1:-1;27577:4:821;27536:47;27632:2;27627:3;27623:12;27620:1;27616:20;27610:4;27606:31;27596:41;;27687:82;27705:2;27698:5;27695:13;27687:82;;;27750:17;;;27731:1;27720:13;27687:82;;27790:166;-1:-1:-1;;27918:1:821;27914:11;;;27910:24;27906:29;27896:40;27942:1;27938:11;;;;27893:57;;27790:166::o;27961:1190::-;-1:-1:-1;;;;;28064:3:821;28061:27;28058:53;;;28091:18;;:::i;:::-;28120:94;28210:3;28170:38;28202:4;28196:11;28170:38;:::i;:::-;28164:4;28120:94;:::i;:::-;28240:1;28265:2;28260:3;28257:11;28282:1;28277:616;;;;28937:1;28954:3;28951:93;;;-1:-1:-1;29010:19:821;;;28997:33;28951:93;29070:64;29130:3;29123:5;29070:64;:::i;:::-;29064:4;29057:78;;28250:895;;28277:616;27189:1;27182:14;;;27226:4;27213:18;;-1:-1:-1;;28313:17:821;;;28414:9;28436:229;28450:7;28447:1;28444:14;28436:229;;;28539:19;;;28526:33;28511:49;;28646:4;28631:20;;;;28599:1;28587:14;;;;28466:12;28436:229;;;28440:3;28693;28684:7;28681:16;28678:159;;;28817:1;28813:6;28807:3;28801;28798:1;28794:11;28790:21;28786:34;28782:39;28769:9;28764:3;28760:19;28747:33;28743:79;28735:6;28728:95;28678:159;;;28880:1;28874:3;28871:1;28867:11;28863:19;28857:4;28850:33;28250:895;;27961:1190;;;:::o;29156:950::-;29335:5;29322:19;29316:4;29309:33;29396:2;29389:5;29385:14;29372:28;29368:1;29362:4;29358:12;29351:50;29455:2;29448:5;29444:14;29431:28;29427:1;29421:4;29417:12;29410:50;29514:2;29507:5;29503:14;29490:28;29486:1;29480:4;29476:12;29469:50;29573:3;29566:5;29562:15;29549:29;29545:1;29539:4;29535:12;29528:51;29633:3;29626:5;29622:15;29609:29;29605:1;29599:4;29595:12;29588:51;29676:1;29670:4;29666:12;29726:3;29719:5;29715:15;29702:29;29740:33;29765:7;29740:33;:::i;:::-;29808:17;;-1:-1:-1;;;;;;29804:48:821;-1:-1:-1;;;;;29854:33:821;;;;29801:87;29782:107;;29932:60;29987:3;29976:15;;29980:5;29932:60;:::i;:::-;30001:99;30086:13;30073:11;30069:1;30063:4;30059:12;30001:99;:::i;30111:501::-;30170:5;30177:6;30237:3;30224:17;30323:2;30319:7;30308:8;30292:14;30288:29;30284:43;30264:18;30260:68;30250:96;;30342:1;30339;30332:12;30250:96;30370:33;;30474:4;30461:18;;;-1:-1:-1;30422:21:821;;-1:-1:-1;;;;;;30491:30:821;;30488:50;;;30534:1;30531;30524:12;30488:50;30581:6;30565:14;30561:27;30554:5;30550:39;30547:59;;;30602:1;30599;30592:12;30617:267;30706:6;30701:3;30694:19;30758:6;30751:5;30744:4;30739:3;30735:14;30722:43;-1:-1:-1;30810:1:821;30785:16;;;30803:4;30781:27;;;30774:38;;;;30866:2;30845:15;;;-1:-1:-1;;30841:29:821;30832:39;;;30828:50;;30617:267::o;30889:2051::-;31160:2;31212:21;;;31185:18;;;31268:22;;;31131:4;;31309:2;31327:18;;;31391:1;31387:14;;;31372:30;;31368:39;;31430:6;31131:4;;31485:1372;31501:6;31496:3;31493:15;31485:1372;;;31570:22;;;-1:-1:-1;;31566:36:821;31554:49;;31642:20;;31717:14;31713:27;;;-1:-1:-1;;31709:42:821;31685:67;;31675:95;;31766:1;31763;31756:12;31675:95;31796:31;;31884:19;;31869:35;;31927:4;31981:14;;;31968:28;31951:15;;;31944:53;32047:14;;;32034:28;32017:15;;;32010:53;32113:14;;;32100:28;32083:15;;;32076:53;32152:4;32206:14;;;32193:28;32176:15;;;32169:53;32245:4;32299:14;;;32286:28;32269:15;;;32262:53;31850:6;;32338:4;32383:14;;;32370:28;32411:33;32370:28;32411:33;:::i;:::-;-1:-1:-1;;;;;32481:33:821;32464:15;;;32457:58;32538:4;32589:54;32628:14;;;32632:5;32589:54;:::i;:::-;32555:88;;32680:2;32675;32667:6;32663:15;32656:27;32706:71;32773:2;32765:6;32761:15;32747:12;32733;32706:71;:::i;:::-;32835:12;;;;32696:81;-1:-1:-1;;;32800:15:821;;;;;-1:-1:-1;;31527:1:821;31518:11;31485:1372;;;-1:-1:-1;;;470:13:821;;463:21;32928:4;32913:20;;451:34;32874:6;-1:-1:-1;32889:45:821;;-1:-1:-1;;;400:91:821;33291:716;33379:6;33387;33440:2;33428:9;33419:7;33415:23;33411:32;33408:52;;;33456:1;33453;33446:12;33408:52;33489:9;33483:16;-1:-1:-1;;;;;33514:6:821;33511:30;33508:50;;;33554:1;33551;33544:12;33508:50;33577:22;;33630:4;33622:13;;33618:27;-1:-1:-1;33608:55:821;;33659:1;33656;33649:12;33608:55;33688:2;33682:9;33713:48;33729:31;33757:2;33729:31;:::i;33713:48::-;33784:2;33777:5;33770:17;33826:7;33819:4;33814:2;33810;33806:11;33802:22;33799:35;33796:55;;;33847:1;33844;33837:12;33796:55;33860:71;33928:2;33921:4;33914:5;33910:16;33903:4;33899:2;33895:13;33860:71;:::i;:::-;33995:4;33980:20;;;;33974:27;33950:5;;33974:27;;-1:-1:-1;;;;;33291:716:821:o;34012:516::-;34227:3;34265:6;34259:13;34281:66;34340:6;34335:3;34328:4;34320:6;34316:17;34281:66;:::i;:::-;34369:16;;34422:6;34414;34369:16;34394:35;34448:18;;;34475;;;-1:-1:-1;34517:4:821;34509:13;;34012:516;-1:-1:-1;;;34012:516:821:o;34875:339::-;35077:2;35059:21;;;35116:2;35096:18;;;35089:30;-1:-1:-1;;;35150:2:821;35135:18;;35128:45;35205:2;35190:18;;34875:339::o;35745:352::-;35956:6;35948;35943:3;35930:33;36051:2;36022:15;;;;-1:-1:-1;;;;;;36018:45:821;35982:16;;36007:57;;;36088:2;36080:11;;35745:352;-1:-1:-1;35745:352:821:o;36102:128::-;36169:9;;;36190:11;;;36187:37;;;36204:18;;:::i;36235:136::-;36274:3;36302:5;36292:39;;36311:18;;:::i;:::-;-1:-1:-1;;;36347:18:821;;36235:136::o;36716:452::-;36948:3;36986:6;36980:13;37002:66;37061:6;37056:3;37049:4;37041:6;37037:17;37002:66;:::i;:::-;-1:-1:-1;;;37090:16:821;;37115:18;;;-1:-1:-1;37160:1:821;37149:13;;36716:452;-1:-1:-1;36716:452:821:o;37173:496::-;37352:3;37390:6;37384:13;37406:66;37465:6;37460:3;37453:4;37445:6;37441:17;37406:66;:::i;:::-;37535:13;;37494:16;;;;37557:70;37535:13;37494:16;37604:4;37592:17;;37557:70;:::i;:::-;37643:20;;37173:496;-1:-1:-1;;;;37173:496:821:o;37674:388::-;37751:6;37759;37812:2;37800:9;37791:7;37787:23;37783:32;37780:52;;;37828:1;37825;37818:12;37780:52;37868:9;37855:23;-1:-1:-1;;;;;37893:6:821;37890:30;37887:50;;;37933:1;37930;37923:12;37887:50;37956:49;37997:7;37988:6;37977:9;37973:22;37956:49;:::i;:::-;37946:59;38052:2;38037:18;;;;38024:32;;-1:-1:-1;;;;37674:388:821:o;38681:313::-;38892:6;38884;38879:3;38866:33;38918:16;;;38943:18;;;38985:2;38977:11;;38681:313;-1:-1:-1;38681:313:821:o;38999:339::-;39201:2;39183:21;;;39240:2;39220:18;;;39213:30;-1:-1:-1;;;39274:2:821;39259:18;;39252:45;39329:2;39314:18;;38999:339::o;39343:341::-;39545:2;39527:21;;;39584:2;39564:18;;;39557:30;-1:-1:-1;;;39618:2:821;39603:18;;39596:47;39675:2;39660:18;;39343:341::o;39941:810::-;-1:-1:-1;;;40347:3:821;40340:36;40322:3;40405:6;40399:13;40421:75;40489:6;40484:2;40479:3;40475:12;40468:4;40460:6;40456:17;40421:75;:::i;:::-;-1:-1:-1;;;40555:2:821;40515:16;;;40547:11;;;40540:40;40605:13;;40627:76;40605:13;40689:2;40681:11;;40674:4;40662:17;;40627:76;:::i;:::-;40723:17;40742:2;40719:26;;39941:810;-1:-1:-1;;;;39941:810:821:o;41426:325::-;41628:2;41610:21;;;41667:1;41647:18;;;41640:29;-1:-1:-1;;;41700:2:821;41685:18;;41678:32;41742:2;41727:18;;41426:325::o;41756:1345::-;41882:3;41876:10;-1:-1:-1;;;;;41901:6:821;41898:30;41895:56;;;41931:18;;:::i;:::-;41960:97;42050:6;42010:38;42042:4;42036:11;42010:38;:::i;:::-;42004:4;41960:97;:::i;:::-;42112:4;;42169:2;42158:14;;42186:1;42181:663;;;;42888:1;42905:6;42902:89;;;-1:-1:-1;42957:19:821;;;42951:26;42902:89;43017:67;43077:6;43070:5;43017:67;:::i;:::-;43011:4;43004:81;;42151:944;;42181:663;27189:1;27182:14;;;27226:4;27213:18;;-1:-1:-1;;42217:20:821;;;42335:236;42349:7;42346:1;42343:14;42335:236;;;42438:19;;;42432:26;42417:42;;42530:27;;;;42498:1;42486:14;;;;42365:19;;42335:236;;;42339:3;42599:6;42590:7;42587:19;42584:201;;;42660:19;;;42654:26;-1:-1:-1;;42743:1:821;42739:14;;;42755:3;42735:24;42731:37;42727:42;42712:58;42697:74;;42584:201;-1:-1:-1;;;;;42831:1:821;42815:14;;;42811:22;42798:36;;-1:-1:-1;41756:1345:821:o;43106:383::-;43303:2;43292:9;43285:21;43266:4;43329:45;43370:2;43359:9;43355:18;43347:6;43329:45;:::i;:::-;43422:9;43414:6;43410:22;43405:2;43394:9;43390:18;43383:50;43450:33;43476:6;43468;43450:33;:::i;:::-;43442:41;43106:383;-1:-1:-1;;;;;43106:383:821:o;43836:489::-;-1:-1:-1;;;;;44105:15:821;;;44087:34;;44157:15;;44152:2;44137:18;;44130:43;44204:2;44189:18;;44182:34;;;44252:3;44247:2;44232:18;;44225:31;;;44030:4;;44273:46;;44299:19;;44291:6;44273:46;:::i;44330:249::-;44399:6;44452:2;44440:9;44431:7;44427:23;44423:32;44420:52;;;44468:1;44465;44458:12;44420:52;44500:9;44494:16;44519:30;44543:5;44519:30;:::i;46950:506::-;47193:6;47182:9;47175:25;47236:2;47231;47220:9;47216:18;47209:30;47156:4;47262:62;47320:2;47309:9;47305:18;47297:6;47289;47262:62;:::i;:::-;47372:9;47364:6;47360:22;47355:2;47344:9;47340:18;47333:50;47400;47443:6;47435;47427;47400:50;:::i;:::-;47392:58;46950:506;-1:-1:-1;;;;;;;;46950:506:821:o;47461:407::-;47663:2;47645:21;;;47702:2;47682:18;;;47675:30;47741:34;47736:2;47721:18;;47714:62;-1:-1:-1;;;47807:2:821;47792:18;;47785:41;47858:3;47843:19;;47461:407::o;48577:287::-;48706:3;48744:6;48738:13;48760:66;48819:6;48814:3;48807:4;48799:6;48795:17;48760:66;:::i;50518:245::-;50585:6;50638:2;50626:9;50617:7;50613:23;50609:32;50606:52;;;50654:1;50651;50644:12;50606:52;50686:9;50680:16;50705:28;50727:5;50705:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchFrozen(uint256)": "83040532",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "freezeBatchBaseURI(uint256)": "a07ced9e",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply()": "2ab4d052",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "reveal(uint256,bytes)": "ce805642",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updateBatchBaseURI(uint256,string)": "de903ddd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"freezeBatchBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"updateBatchBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"FlatPlatformFeeUpdated(address,uint256)\":{\"details\":\"Emitted when the flat platform fee is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"},\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PlatformFeeInfoUpdated(address,uint256)\":{\"details\":\"Emitted when fee on primary sales is updated.\"},\"PlatformFeeTypeUpdated(uint8)\":{\"details\":\"Emitted when the platform fee type is updated.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokenURIRevealed(uint256,string)\":{\"details\":\"Emitted when tokens are revealed.\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"freezeBatchBaseURI(uint256)\":{\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee type.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `METADATA_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\",\"params\":{\"_index\":\"the ID of a token with the desired batch.\",\"_key\":\"the key to decrypt the batch's URI.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"updateBatchBaseURI(uint256,string)\":{\"params\":{\"_index\":\"Index of the desired batch in batchIds array\",\"_uri\":\"the new base URI for the batch.\"}},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Global max total supply of NFTs.\"},\"metadataRole\":{\"details\":\"Only METADATA_ROLE holders can reveal the URI for a batch of delayed reveal NFTs, and update or freeze batch metadata.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"freezeBatchBaseURI(uint256)\":{\"notice\":\"Freezes the base URI for a batch of tokens.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"},\"updateBatchBaseURI(uint256,string)\":{\"notice\":\"Updates the base URI for a batch of tokens. Can only be called if the batch has been revealed/is not encrypted.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/drop/DropERC721.sol\":\"DropERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/ERC721AVirtualApproveUpgradeable.sol\":{\"keccak256\":\"0x9e23d1c1d4005c9d22dcbc4c8ad7cf30220c2833ff8d499508a65e4004d2e4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01e8bf35eb1fd87f214e2f51d22a2b307944bc32f26526300e78177c3d6497c3\",\"dweb:/ipfs/QmT7d7tTd6X3gFCaCmCWcVinz5x6FjFZtuw8NXMmKSXXTC\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365\",\"dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3\",\"dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0xac9e5863e0f7832c812832d0733f1caa55f974164f9fc55478e88a2294689a7e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6913508ea60948ca7441e4c008b4450b013b8b409eb74037c6b4dad70702686c\",\"dweb:/ipfs/QmdCgrdkR8cTLBkGawxbBwQLRNQfSdAxQ1YSJDwzctU3Wj\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e\",\"dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732\",\"dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/drop/DropERC721.sol\":{\"keccak256\":\"0x6de5636cea65eef8d798e5bac37c004f2db48109cd949d189a1388a4ca915629\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ca085c4522eac023c773ae509ab73ff32d1f2fbc1a3eca70acacf01bebecf8d\",\"dweb:/ipfs/QmTMFbbQPcAsyDQPZhv7TgrH8KkHSPb6HxDPXB1k1138yu\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b\",\"dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeBatchBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBatchBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "freezeBatchBaseURI(uint256)": {
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee type."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `METADATA_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.",
            "params": {
              "_index": "the ID of a token with the desired batch.",
              "_key": "the key to decrypt the batch's URI."
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "updateBatchBaseURI(uint256,string)": {
            "params": {
              "_index": "Index of the desired batch in batchIds array",
              "_uri": "the new base URI for the batch."
            }
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "freezeBatchBaseURI(uint256)": {
            "notice": "Freezes the base URI for a batch of tokens."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          },
          "updateBatchBaseURI(uint256,string)": {
            "notice": "Updates the base URI for a batch of tokens. Can only be called if the batch has been revealed/is not encrypted."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/drop/DropERC721.sol": "DropERC721"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC721AVirtualApproveUpgradeable.sol": {
        "keccak256": "0x9e23d1c1d4005c9d22dcbc4c8ad7cf30220c2833ff8d499508a65e4004d2e4a4",
        "urls": [
          "bzz-raw://01e8bf35eb1fd87f214e2f51d22a2b307944bc32f26526300e78177c3d6497c3",
          "dweb:/ipfs/QmT7d7tTd6X3gFCaCmCWcVinz5x6FjFZtuw8NXMmKSXXTC"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345",
        "urls": [
          "bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365",
          "dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242",
        "urls": [
          "bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3",
          "dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0xac9e5863e0f7832c812832d0733f1caa55f974164f9fc55478e88a2294689a7e",
        "urls": [
          "bzz-raw://6913508ea60948ca7441e4c008b4450b013b8b409eb74037c6b4dad70702686c",
          "dweb:/ipfs/QmdCgrdkR8cTLBkGawxbBwQLRNQfSdAxQ1YSJDwzctU3Wj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb",
        "urls": [
          "bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e",
          "dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad",
        "urls": [
          "bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732",
          "dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/drop/DropERC721.sol": {
        "keccak256": "0x6de5636cea65eef8d798e5bac37c004f2db48109cd949d189a1388a4ca915629",
        "urls": [
          "bzz-raw://5ca085c4522eac023c773ae509ab73ff32d1f2fbc1a3eca70acacf01bebecf8d",
          "dweb:/ipfs/QmTMFbbQPcAsyDQPZhv7TgrH8KkHSPb6HxDPXB1k1138yu"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf",
        "urls": [
          "bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b",
          "dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/drop/DropERC721.sol",
    "id": 75804,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "BatchMintMetadata": [
        17840
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "DelayedReveal": [
        18252
      ],
      "Drop": [
        18899
      ],
      "DropERC721": [
        75803
      ],
      "ERC165Upgradeable": [
        162692
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "ERC721AUpgradeable": [
        13739
      ],
      "IClaimCondition": [
        32931
      ],
      "IClaimConditionMultiPhase": [
        32955
      ],
      "IContractMetadata": [
        33084
      ],
      "IDelayedReveal": [
        33115
      ],
      "IDrop": [
        33221
      ],
      "IERC165": [
        13945
      ],
      "IERC165Upgradeable": [
        162704
      ],
      "IERC20": [
        14015
      ],
      "IERC2981": [
        14089
      ],
      "IERC2981Upgradeable": [
        153941
      ],
      "IERC721AUpgradeable": [
        103547
      ],
      "IERC721MetadataUpgradeable": [
        159732
      ],
      "IERC721ReceiverUpgradeable": [
        159184
      ],
      "IERC721Upgradeable": [
        159300
      ],
      "ILazyMint": [
        33463
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IPlatformFee": [
        33976
      ],
      "IPrimarySale": [
        33997
      ],
      "IRoyalty": [
        34061
      ],
      "IWETH": [
        55358
      ],
      "Initializable": [
        154159
      ],
      "LazyMint": [
        20828
      ],
      "MathUpgradeable": [
        163570
      ],
      "MerkleProof": [
        65274
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "PlatformFee": [
        22629
      ],
      "PrimarySale": [
        22703
      ],
      "Royalty": [
        23031
      ],
      "SafeERC20": [
        49165
      ],
      "SignedMathUpgradeable": [
        165216
      ],
      "Strings": [
        66084
      ],
      "StringsUpgradeable": [
        161995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14666:333",
    "nodes": [
      {
        "id": 74919,
        "nodeType": "PragmaDirective",
        "src": "39:24:333",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 74920,
        "nodeType": "ImportDirective",
        "src": "775:39:333",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74921,
        "nodeType": "ImportDirective",
        "src": "815:74:333",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 161996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74922,
        "nodeType": "ImportDirective",
        "src": "890:80:333",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 153942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74923,
        "nodeType": "ImportDirective",
        "src": "972:56:333",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApproveUpgradeable.sol",
        "file": "../../eip/ERC721AVirtualApproveUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 13740,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74924,
        "nodeType": "ImportDirective",
        "src": "1078:79:333",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74925,
        "nodeType": "ImportDirective",
        "src": "1158:43:333",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 65176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74926,
        "nodeType": "ImportDirective",
        "src": "1243:46:333",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74927,
        "nodeType": "ImportDirective",
        "src": "1290:41:333",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 22630,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74928,
        "nodeType": "ImportDirective",
        "src": "1332:37:333",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 23032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74929,
        "nodeType": "ImportDirective",
        "src": "1370:41:333",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74930,
        "nodeType": "ImportDirective",
        "src": "1412:37:333",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74931,
        "nodeType": "ImportDirective",
        "src": "1450:43:333",
        "nodes": [],
        "absolutePath": "contracts/extension/DelayedReveal.sol",
        "file": "../../extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 18253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74932,
        "nodeType": "ImportDirective",
        "src": "1494:38:333",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 20829,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74933,
        "nodeType": "ImportDirective",
        "src": "1533:51:333",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74934,
        "nodeType": "ImportDirective",
        "src": "1585:34:333",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75804,
        "sourceUnit": 18900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75803,
        "nodeType": "ContractDefinition",
        "src": "1621:13083:333",
        "nodes": [
          {
            "id": 74963,
            "nodeType": "UsingForDirective",
            "src": "1890:37:333",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 74961,
              "name": "StringsUpgradeable",
              "nameLocations": [
                "1896:18:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161995,
              "src": "1896:18:333"
            },
            "typeName": {
              "id": 74962,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1919:7:333",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 74966,
            "nodeType": "VariableDeclaration",
            "src": "2220:28:333",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74964,
              "nodeType": "StructuredDocumentation",
              "src": "2117:98:333",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2236:12:333",
            "scope": 75803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74965,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2220:7:333",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74969,
            "nodeType": "VariableDeclaration",
            "src": "2345:26:333",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74967,
              "nodeType": "StructuredDocumentation",
              "src": "2254:86:333",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2361:10:333",
            "scope": 75803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74968,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2345:7:333",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74972,
            "nodeType": "VariableDeclaration",
            "src": "2509:28:333",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74970,
              "nodeType": "StructuredDocumentation",
              "src": "2377:127:333",
              "text": "@dev Only METADATA_ROLE holders can reveal the URI for a batch of delayed reveal NFTs, and update or freeze batch metadata."
            },
            "mutability": "mutable",
            "name": "metadataRole",
            "nameLocation": "2525:12:333",
            "scope": 75803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74971,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2509:7:333",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74976,
            "nodeType": "VariableDeclaration",
            "src": "2589:41:333",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 74973,
              "nodeType": "StructuredDocumentation",
              "src": "2544:40:333",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2614:7:333",
            "scope": 75803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74974,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2589:7:333",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 74975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2624:6:333",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 74979,
            "nodeType": "VariableDeclaration",
            "src": "2683:29:333",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 74977,
              "nodeType": "StructuredDocumentation",
              "src": "2637:41:333",
              "text": "@dev Global max total supply of NFTs."
            },
            "functionSelector": "2ab4d052",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "2698:14:333",
            "scope": 75803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2683:7:333",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 74984,
            "nodeType": "EventDefinition",
            "src": "2789:52:333",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 74980,
              "nodeType": "StructuredDocumentation",
              "src": "2719:65:333",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "eventSelector": "f2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af",
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "2795:21:333",
            "parameters": {
              "id": 74983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74982,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "2825:14:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 74984,
                  "src": "2817:22:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:24:333"
            }
          },
          {
            "id": 74990,
            "nodeType": "FunctionDefinition",
            "src": "3039:28:333",
            "nodes": [],
            "body": {
              "id": 74989,
              "nodeType": "Block",
              "src": "3065:2:333",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 74987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74986,
                  "name": "initializer",
                  "nameLocations": [
                    "3053:11:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "3053:11:333"
                },
                "nodeType": "ModifierInvocation",
                "src": "3053:11:333"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 74985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3050:2:333"
            },
            "returnParameters": {
              "id": 74988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3065:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75112,
            "nodeType": "FunctionDefinition",
            "src": "3132:1420:333",
            "nodes": [],
            "body": {
              "id": 75111,
              "nodeType": "Block",
              "src": "3519:1033:333",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75018,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3537:13:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75111,
                      "src": "3529:21:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 75017,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3529:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75022,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 75020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3563:15:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 75019,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3553:9:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 75021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3553:26:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3529:50:333"
                },
                {
                  "assignments": [
                    75024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75024,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3597:11:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75111,
                      "src": "3589:19:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 75023,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3589:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75028,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 75026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3621:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 75025,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3611:9:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 75027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:24:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3589:46:333"
                },
                {
                  "assignments": [
                    75030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75030,
                      "mutability": "mutable",
                      "name": "_metadataRole",
                      "nameLocation": "3653:13:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75111,
                      "src": "3645:21:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 75029,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3645:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75034,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d455441444154415f524f4c45",
                        "id": 75032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3679:15:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                          "typeString": "literal_string \"METADATA_ROLE\""
                        },
                        "value": "METADATA_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                          "typeString": "literal_string \"METADATA_ROLE\""
                        }
                      ],
                      "id": 75031,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3669:9:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 75033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3669:26:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3645:50:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75036,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75002,
                        "src": "3803:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 75035,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "3781:21:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 75037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3781:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75038,
                  "nodeType": "ExpressionStatement",
                  "src": "3781:41:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75040,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74995,
                        "src": "3847:5:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 75041,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74997,
                        "src": "3854:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 75039,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12407,
                      "src": "3832:14:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 75042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3832:30:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75043,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:30:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75045,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74999,
                        "src": "3891:12:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 75044,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "3873:17:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 75046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:31:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75047,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:31:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75049,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74993,
                        "src": "3926:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75048,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "3914:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 75050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3914:26:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75051,
                  "nodeType": "ExpressionStatement",
                  "src": "3914:26:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75053,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3962:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 75054,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74993,
                        "src": "3982:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75052,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3951:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 75055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3951:45:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75056,
                  "nodeType": "ExpressionStatement",
                  "src": "3951:45:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75058,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75024,
                        "src": "4017:11:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 75059,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74993,
                        "src": "4030:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75057,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4006:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 75060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4006:38:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75061,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:38:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75063,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75018,
                        "src": "4065:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 75064,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74993,
                        "src": "4080:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75062,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4054:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 75065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4054:40:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75066,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:40:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75068,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75018,
                        "src": "4115:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 75071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4138:1:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 75070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4130:7:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4130:7:333",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4130:10:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75067,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4104:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 75073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:37:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75074,
                  "nodeType": "ExpressionStatement",
                  "src": "4104:37:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75076,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75030,
                        "src": "4162:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 75077,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74993,
                        "src": "4177:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75075,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "4151:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 75078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4151:40:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75079,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:40:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75081,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75030,
                        "src": "4215:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 75082,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75030,
                        "src": "4230:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 75080,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21971,
                      "src": "4201:13:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 75083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:43:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75084,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:43:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75086,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75012,
                        "src": "4277:21:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75087,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75010,
                        "src": "4300:15:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 75085,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22540,
                      "src": "4255:21:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4255:61:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75089,
                  "nodeType": "ExpressionStatement",
                  "src": "4255:61:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75091,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75006,
                        "src": "4351:17:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75092,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75008,
                        "src": "4370:11:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 75090,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "4326:24:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:56:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75094,
                  "nodeType": "ExpressionStatement",
                  "src": "4326:56:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75096,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75004,
                        "src": "4419:14:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75095,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "4392:26:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 75097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:42:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75098,
                  "nodeType": "ExpressionStatement",
                  "src": "4392:42:333"
                },
                {
                  "expression": {
                    "id": 75101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75099,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74966,
                      "src": "4445:12:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75100,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75018,
                      "src": "4460:13:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4445:28:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 75102,
                  "nodeType": "ExpressionStatement",
                  "src": "4445:28:333"
                },
                {
                  "expression": {
                    "id": 75105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75103,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74969,
                      "src": "4483:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75104,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75024,
                      "src": "4496:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4483:24:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 75106,
                  "nodeType": "ExpressionStatement",
                  "src": "4483:24:333"
                },
                {
                  "expression": {
                    "id": 75109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75107,
                      "name": "metadataRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74972,
                      "src": "4517:12:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75108,
                      "name": "_metadataRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75030,
                      "src": "4532:13:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4517:28:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 75110,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:28:333"
                }
              ]
            },
            "documentation": {
              "id": 74991,
              "nodeType": "StructuredDocumentation",
              "src": "3073:54:333",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 75015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75014,
                  "name": "initializer",
                  "nameLocations": [
                    "3507:11:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "3507:11:333"
                },
                "nodeType": "ModifierInvocation",
                "src": "3507:11:333"
              }
            ],
            "name": "initialize",
            "nameLocation": "3141:10:333",
            "parameters": {
              "id": 75013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74993,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3169:13:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3161:21:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3161:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74995,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3206:5:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3192:19:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74994,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74997,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3235:7:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3221:21:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74996,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74999,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3266:12:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3252:26:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74998,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75002,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3305:18:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3288:35:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 75000,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3288:7:333",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 75001,
                    "nodeType": "ArrayTypeName",
                    "src": "3288:9:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75004,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3341:14:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3333:22:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75006,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3373:17:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3365:25:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3365:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75008,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3408:11:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3400:19:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 75007,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75010,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3437:15:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3429:23:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 75009,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75012,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3470:21:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75112,
                  "src": "3462:29:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3151:346:333"
            },
            "returnParameters": {
              "id": 75016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3519:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75160,
            "nodeType": "FunctionDefinition",
            "src": "4799:402:333",
            "nodes": [],
            "body": {
              "id": 75159,
              "nodeType": "Block",
              "src": "4880:321:333",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75122,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75122,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4899:7:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75159,
                      "src": "4891:15:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4891:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 75126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75124,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75115,
                        "src": "4924:8:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75123,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17631,
                      "src": "4912:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 75125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4912:21:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4890:43:333"
                },
                {
                  "assignments": [
                    75128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75128,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4957:8:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75159,
                      "src": "4943:22:333",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 75127,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4943:6:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75130,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75115,
                        "src": "4980:8:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75129,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17682,
                      "src": "4968:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 75131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4968:21:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4943:46:333"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 75134,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75122,
                        "src": "5021:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75133,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18251,
                      "src": "5004:16:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 75135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5004:25:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 75157,
                    "nodeType": "Block",
                    "src": "5108:87:333",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 75150,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75128,
                                  "src": "5153:8:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 75151,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 75115,
                                      "src": "5163:8:333",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 75152,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5172:8:333",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 161825,
                                    "src": "5163:17:333",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 75153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5163:19:333",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 75148,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5136:3:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 75149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5140:12:333",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5136:16:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 75154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5136:47:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 75147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5129:6:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 75146,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5129:6:333",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5129:55:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 75120,
                        "id": 75156,
                        "nodeType": "Return",
                        "src": "5122:62:333"
                      }
                    ]
                  },
                  "id": 75158,
                  "nodeType": "IfStatement",
                  "src": "5000:195:333",
                  "trueBody": {
                    "id": 75145,
                    "nodeType": "Block",
                    "src": "5031:71:333",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 75140,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75128,
                                  "src": "5076:8:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 75141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5086:3:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 75138,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5059:3:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 75139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5063:12:333",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5059:16:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 75142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5059:31:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 75137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5052:6:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 75136,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5052:6:333",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5052:39:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 75120,
                        "id": 75144,
                        "nodeType": "Return",
                        "src": "5045:46:333"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              12743
            ],
            "documentation": {
              "id": 75113,
              "nodeType": "StructuredDocumentation",
              "src": "4749:45:333",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4808:8:333",
            "overrides": {
              "id": 75117,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4847:8:333"
            },
            "parameters": {
              "id": 75116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75115,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4825:8:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75160,
                  "src": "4817:16:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4817:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4816:18:333"
            },
            "returnParameters": {
              "id": 75120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75160,
                  "src": "4865:13:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4864:15:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75184,
            "nodeType": "FunctionDefinition",
            "src": "5232:250:333",
            "nodes": [],
            "body": {
              "id": 75183,
              "nodeType": "Block",
              "src": "5366:116:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 75181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 75173,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75163,
                          "src": "5407:11:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 75171,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5383:5:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_DropERC721_$75803_$",
                            "typeString": "type(contract super DropERC721)"
                          }
                        },
                        "id": 75172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5389:17:333",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12499,
                        "src": "5383:23:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 75174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5383:36:333",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 75180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75176,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153941,
                              "src": "5428:19:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 75175,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5423:4:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5423:25:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$153941",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 75178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5449:11:333",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5423:37:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 75179,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75163,
                        "src": "5464:11:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5423:52:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5383:92:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75170,
                  "id": 75182,
                  "nodeType": "Return",
                  "src": "5376:99:333"
                }
              ]
            },
            "baseFunctions": [
              12499,
              13944
            ],
            "documentation": {
              "id": 75161,
              "nodeType": "StructuredDocumentation",
              "src": "5207:20:333",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5241:17:333",
            "overrides": {
              "id": 75167,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75165,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": [
                    "5322:18:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13739,
                  "src": "5322:18:333"
                },
                {
                  "id": 75166,
                  "name": "IERC165",
                  "nameLocations": [
                    "5342:7:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "5342:7:333"
                }
              ],
              "src": "5313:37:333"
            },
            "parameters": {
              "id": 75164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75163,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5275:11:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75184,
                  "src": "5268:18:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 75162,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5268:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5258:34:333"
            },
            "returnParameters": {
              "id": 75170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75184,
                  "src": "5360:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5360:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5359:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 75195,
            "nodeType": "FunctionDefinition",
            "src": "5673:101:333",
            "nodes": [],
            "body": {
              "id": 75194,
              "nodeType": "Block",
              "src": "5729:45:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f70455243373231",
                        "id": 75191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5754:12:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5365a898e19426afde2526aaa3fe87e1e366d6f6affe6ec2652fb30715593966",
                          "typeString": "literal_string \"DropERC721\""
                        },
                        "value": "DropERC721"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5365a898e19426afde2526aaa3fe87e1e366d6f6affe6ec2652fb30715593966",
                          "typeString": "literal_string \"DropERC721\""
                        }
                      ],
                      "id": 75190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5746:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 75189,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5746:7:333",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 75192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:21:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 75188,
                  "id": 75193,
                  "nodeType": "Return",
                  "src": "5739:28:333"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "5682:12:333",
            "parameters": {
              "id": 75185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5694:2:333"
            },
            "returnParameters": {
              "id": 75188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75195,
                  "src": "5720:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 75186,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5720:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5719:9:333"
            },
            "scope": 75803,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75206,
            "nodeType": "FunctionDefinition",
            "src": "5780:89:333",
            "nodes": [],
            "body": {
              "id": 75205,
              "nodeType": "Block",
              "src": "5837:32:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 75202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5860:1:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 75201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5854:5:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 75200,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5854:5:333",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 75203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5854:8:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 75199,
                  "id": 75204,
                  "nodeType": "Return",
                  "src": "5847:15:333"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "5789:15:333",
            "parameters": {
              "id": 75196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5804:2:333"
            },
            "returnParameters": {
              "id": 75199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75206,
                  "src": "5830:5:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 75197,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:5:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5829:7:333"
            },
            "scope": 75803,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75264,
            "nodeType": "FunctionDefinition",
            "src": "6243:540:333",
            "nodes": [],
            "body": {
              "id": 75263,
              "nodeType": "Block",
              "src": "6407:376:333",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 75222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 75219,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75213,
                        "src": "6421:5:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 75220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6427:6:333",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6421:12:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 75221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6436:1:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6421:16:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75255,
                  "nodeType": "IfStatement",
                  "src": "6417:293:333",
                  "trueBody": {
                    "id": 75254,
                    "nodeType": "Block",
                    "src": "6439:271:333",
                    "statements": [
                      {
                        "assignments": [
                          75224,
                          75226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 75224,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "6467:12:333",
                            "nodeType": "VariableDeclaration",
                            "scope": 75254,
                            "src": "6454:25:333",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 75223,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6454:5:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 75226,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "6489:14:333",
                            "nodeType": "VariableDeclaration",
                            "scope": 75254,
                            "src": "6481:22:333",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 75225,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6481:7:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 75236,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 75229,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75213,
                              "src": "6518:5:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 75231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6526:5:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 75230,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6526:5:333",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 75233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6533:7:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 75232,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6533:7:333",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 75234,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6525:16:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 75227,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6507:3:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 75228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6511:6:333",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6507:10:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6507:35:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6453:89:333"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 75244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 75240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 75237,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75224,
                                "src": "6560:12:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 75238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6573:6:333",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6560:19:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 75239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6583:1:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6560:24:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 75243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 75241,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75226,
                              "src": "6588:14:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 75242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6606:2:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "6588:20:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6560:48:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75253,
                        "nodeType": "IfStatement",
                        "src": "6556:144:333",
                        "trueBody": {
                          "id": 75252,
                          "nodeType": "Block",
                          "src": "6610:90:333",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 75248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 75246,
                                      "name": "nextTokenIdToLazyMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20762,
                                      "src": "6646:21:333",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 75247,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 75209,
                                      "src": "6670:7:333",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6646:31:333",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 75249,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 75213,
                                    "src": "6679:5:333",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 75245,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18119,
                                  "src": "6628:17:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 75250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6628:57:333",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 75251,
                              "nodeType": "ExpressionStatement",
                              "src": "6628:57:333"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75258,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75209,
                        "src": "6742:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75259,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75211,
                        "src": "6751:17:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 75260,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75213,
                        "src": "6770:5:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 75256,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6727:5:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75803_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6733:8:333",
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20821,
                      "src": "6727:14:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 75261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:49:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75218,
                  "id": 75262,
                  "nodeType": "Return",
                  "src": "6720:56:333"
                }
              ]
            },
            "baseFunctions": [
              20821
            ],
            "documentation": {
              "id": 75207,
              "nodeType": "StructuredDocumentation",
              "src": "6071:167:333",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "6252:8:333",
            "overrides": {
              "id": 75215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6372:8:333"
            },
            "parameters": {
              "id": 75214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75209,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6278:7:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75264,
                  "src": "6270:15:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6270:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75211,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "6311:17:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75264,
                  "src": "6295:33:333",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6295:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75213,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6353:5:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75264,
                  "src": "6338:20:333",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75212,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6338:5:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6260:104:333"
            },
            "returnParameters": {
              "id": 75218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75217,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "6398:7:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75264,
                  "src": "6390:15:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6390:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6389:17:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75306,
            "nodeType": "FunctionDefinition",
            "src": "7012:391:333",
            "nodes": [],
            "body": {
              "id": 75305,
              "nodeType": "Block",
              "src": "7155:248:333",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75278,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "7173:7:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75305,
                      "src": "7165:15:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7165:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75280,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75267,
                        "src": "7201:6:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75279,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17570,
                      "src": "7183:17:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 75281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7183:25:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7165:43:333"
                },
                {
                  "expression": {
                    "id": 75288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75283,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75275,
                      "src": "7218:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 75285,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75278,
                          "src": "7245:7:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 75286,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75269,
                          "src": "7254:4:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 75284,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18185,
                        "src": "7232:12:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 75287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7232:27:333",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7218:41:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 75289,
                  "nodeType": "ExpressionStatement",
                  "src": "7218:41:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75291,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75278,
                        "src": "7288:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 75292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7297:2:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 75290,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18119,
                      "src": "7270:17:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 75293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7270:30:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75294,
                  "nodeType": "ExpressionStatement",
                  "src": "7270:30:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75296,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75278,
                        "src": "7322:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75297,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75275,
                        "src": "7331:11:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 75295,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17769,
                      "src": "7310:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 75298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7310:33:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75299,
                  "nodeType": "ExpressionStatement",
                  "src": "7310:33:333"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 75301,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75267,
                        "src": "7376:6:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75302,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75275,
                        "src": "7384:11:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 75300,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33094,
                      "src": "7359:16:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 75303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7359:37:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75304,
                  "nodeType": "EmitStatement",
                  "src": "7354:42:333"
                }
              ]
            },
            "baseFunctions": [
              33104
            ],
            "documentation": {
              "id": 75265,
              "nodeType": "StructuredDocumentation",
              "src": "6789:218:333",
              "text": "@dev Lets an account with `METADATA_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\n @param _index the ID of a token with the desired batch.\n @param _key the key to decrypt the batch's URI."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75272,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74972,
                    "src": "7105:12:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 75273,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75271,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7096:8:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "7096:8:333"
                },
                "nodeType": "ModifierInvocation",
                "src": "7096:22:333"
              }
            ],
            "name": "reveal",
            "nameLocation": "7021:6:333",
            "parameters": {
              "id": 75270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75267,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "7045:6:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75306,
                  "src": "7037:14:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7037:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75269,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "7076:4:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75306,
                  "src": "7061:19:333",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75268,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7061:5:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7027:59:333"
            },
            "returnParameters": {
              "id": 75276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75275,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "7142:11:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75306,
                  "src": "7128:25:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7128:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7127:27:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75339,
            "nodeType": "FunctionDefinition",
            "src": "7678:276:333",
            "nodes": [],
            "body": {
              "id": 75338,
              "nodeType": "Block",
              "src": "7776:178:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7794:44:333",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 75320,
                                  "name": "_index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75309,
                                  "src": "7830:6:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 75319,
                                "name": "getBatchIdAtIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17570,
                                "src": "7812:17:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 75321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7812:25:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 75318,
                            "name": "isEncryptedBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18251,
                            "src": "7795:16:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 75322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7795:43:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456e63727970746564206261746368",
                        "id": 75324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7840:17:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38b85060d449d648d4ab9f0e9ede6b9af81a01660c8e2cdc2925213fa880c877",
                          "typeString": "literal_string \"Encrypted batch\""
                        },
                        "value": "Encrypted batch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38b85060d449d648d4ab9f0e9ede6b9af81a01660c8e2cdc2925213fa880c877",
                          "typeString": "literal_string \"Encrypted batch\""
                        }
                      ],
                      "id": 75317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7786:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7786:72:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75326,
                  "nodeType": "ExpressionStatement",
                  "src": "7786:72:333"
                },
                {
                  "assignments": [
                    75328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75328,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "7876:7:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75338,
                      "src": "7868:15:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75327,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7868:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75332,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75330,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75309,
                        "src": "7904:6:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75329,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17570,
                      "src": "7886:17:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 75331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7886:25:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7868:43:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75334,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75328,
                        "src": "7933:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75335,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75311,
                        "src": "7942:4:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 75333,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17769,
                      "src": "7921:11:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 75336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7921:26:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75337,
                  "nodeType": "ExpressionStatement",
                  "src": "7921:26:333"
                }
              ]
            },
            "documentation": {
              "id": 75307,
              "nodeType": "StructuredDocumentation",
              "src": "7409:264:333",
              "text": " @notice Updates the base URI for a batch of tokens. Can only be called if the batch has been revealed/is not encrypted.\n @param _index Index of the desired batch in batchIds array\n @param _uri   the new base URI for the batch."
            },
            "functionSelector": "de903ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75314,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74972,
                    "src": "7762:12:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 75315,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75313,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7753:8:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "7753:8:333"
                },
                "nodeType": "ModifierInvocation",
                "src": "7753:22:333"
              }
            ],
            "name": "updateBatchBaseURI",
            "nameLocation": "7687:18:333",
            "parameters": {
              "id": 75312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75309,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "7714:6:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75339,
                  "src": "7706:14:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7706:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75311,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "7738:4:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75339,
                  "src": "7722:20:333",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7722:6:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7705:38:333"
            },
            "returnParameters": {
              "id": 75316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7776:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75369,
            "nodeType": "FunctionDefinition",
            "src": "8109:251:333",
            "nodes": [],
            "body": {
              "id": 75368,
              "nodeType": "Block",
              "src": "8185:175:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8203:44:333",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 75351,
                                  "name": "_index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75342,
                                  "src": "8239:6:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 75350,
                                "name": "getBatchIdAtIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17570,
                                "src": "8221:17:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 75352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8221:25:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 75349,
                            "name": "isEncryptedBatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18251,
                            "src": "8204:16:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 75353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8204:43:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456e63727970746564206261746368",
                        "id": 75355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8249:17:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38b85060d449d648d4ab9f0e9ede6b9af81a01660c8e2cdc2925213fa880c877",
                          "typeString": "literal_string \"Encrypted batch\""
                        },
                        "value": "Encrypted batch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38b85060d449d648d4ab9f0e9ede6b9af81a01660c8e2cdc2925213fa880c877",
                          "typeString": "literal_string \"Encrypted batch\""
                        }
                      ],
                      "id": 75348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8195:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8195:72:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75357,
                  "nodeType": "ExpressionStatement",
                  "src": "8195:72:333"
                },
                {
                  "assignments": [
                    75359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75359,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "8285:7:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75368,
                      "src": "8277:15:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8277:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75363,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75361,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75342,
                        "src": "8313:6:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75360,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17570,
                      "src": "8295:17:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 75362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8295:25:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8277:43:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75365,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75359,
                        "src": "8345:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75364,
                      "name": "_freezeBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17802,
                      "src": "8330:14:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 75366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8330:23:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75367,
                  "nodeType": "ExpressionStatement",
                  "src": "8330:23:333"
                }
              ]
            },
            "documentation": {
              "id": 75340,
              "nodeType": "StructuredDocumentation",
              "src": "7960:144:333",
              "text": " @notice Freezes the base URI for a batch of tokens.\n @param _index Index of the desired batch in batchIds array."
            },
            "functionSelector": "a07ced9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75345,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74972,
                    "src": "8171:12:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 75346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75344,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8162:8:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "8162:8:333"
                },
                "nodeType": "ModifierInvocation",
                "src": "8162:22:333"
              }
            ],
            "name": "freezeBatchBaseURI",
            "nameLocation": "8118:18:333",
            "parameters": {
              "id": 75343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75342,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "8145:6:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75369,
                  "src": "8137:14:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8137:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8136:16:333"
            },
            "returnParameters": {
              "id": 75347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8185:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75387,
            "nodeType": "FunctionDefinition",
            "src": "8635:192:333",
            "nodes": [],
            "body": {
              "id": 75386,
              "nodeType": "Block",
              "src": "8725:102:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75378,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74979,
                      "src": "8735:14:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75379,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75372,
                      "src": "8752:15:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8735:32:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75381,
                  "nodeType": "ExpressionStatement",
                  "src": "8735:32:333"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 75383,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75372,
                        "src": "8804:15:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75382,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74984,
                      "src": "8782:21:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 75384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8782:38:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75385,
                  "nodeType": "EmitStatement",
                  "src": "8777:43:333"
                }
              ]
            },
            "documentation": {
              "id": 75370,
              "nodeType": "StructuredDocumentation",
              "src": "8547:83:333",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75375,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21787,
                    "src": "8705:18:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 75376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75374,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8696:8:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "8696:8:333"
                },
                "nodeType": "ModifierInvocation",
                "src": "8696:28:333"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "8644:17:333",
            "parameters": {
              "id": 75373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75372,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "8670:15:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75387,
                  "src": "8662:23:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8662:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8661:25:333"
            },
            "returnParameters": {
              "id": 75377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8725:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75428,
            "nodeType": "FunctionDefinition",
            "src": "9070:367:333",
            "nodes": [],
            "body": {
              "id": 75427,
              "nodeType": "Block",
              "src": "9254:183:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 75408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75406,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12366,
                            "src": "9272:13:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 75407,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75392,
                            "src": "9288:9:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9272:25:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 75409,
                          "name": "nextTokenIdToLazyMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20762,
                          "src": "9301:21:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9272:50:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 75411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9324:9:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 75405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9264:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9264:70:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75413,
                  "nodeType": "ExpressionStatement",
                  "src": "9264:70:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 75423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 75417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75415,
                            "name": "maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74979,
                            "src": "9352:14:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 75416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9370:1:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9352:19:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 75422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 75420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 75418,
                              "name": "_currentIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12366,
                              "src": "9375:13:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 75419,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75392,
                              "src": "9391:9:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9375:25:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 75421,
                            "name": "maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74979,
                            "src": "9404:14:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9375:43:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9352:66:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21537570706c79",
                        "id": 75424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9420:9:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621a3b1b99a8bff49ecb98db11468fdefb9a831f2bd730c68ae7cf98e8357223",
                          "typeString": "literal_string \"!Supply\""
                        },
                        "value": "!Supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_621a3b1b99a8bff49ecb98db11468fdefb9a831f2bd730c68ae7cf98e8357223",
                          "typeString": "literal_string \"!Supply\""
                        }
                      ],
                      "id": 75414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9344:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9344:86:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75426,
                  "nodeType": "ExpressionStatement",
                  "src": "9344:86:333"
                }
              ]
            },
            "baseFunctions": [
              18852
            ],
            "documentation": {
              "id": 75388,
              "nodeType": "StructuredDocumentation",
              "src": "9016:49:333",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "9079:12:333",
            "overrides": {
              "id": 75403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9245:8:333"
            },
            "parameters": {
              "id": 75402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75428,
                  "src": "9101:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9101:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75392,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "9126:9:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75428,
                  "src": "9118:17:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9118:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75428,
                  "src": "9145:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9145:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75428,
                  "src": "9162:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9162:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75428,
                  "src": "9179:23:333",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$33171_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 75398,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 75397,
                      "name": "AllowlistProof",
                      "nameLocations": [
                        "9179:14:333"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33171,
                      "src": "9179:14:333"
                    },
                    "referencedDeclaration": 33171,
                    "src": "9179:14:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$33171_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75428,
                  "src": "9212:12:333",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75400,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9212:5:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9091:139:333"
            },
            "returnParameters": {
              "id": 75404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9254:0:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75542,
            "nodeType": "FunctionDefinition",
            "src": "9527:1117:333",
            "nodes": [],
            "body": {
              "id": 75541,
              "nodeType": "Block",
              "src": "9713:931:333",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 75443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75441,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75437,
                      "src": "9727:14:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 75442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9745:1:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9727:19:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75454,
                  "nodeType": "IfStatement",
                  "src": "9723:99:333",
                  "trueBody": {
                    "id": 75453,
                    "nodeType": "Block",
                    "src": "9748:74:333",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 75448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 75445,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9770:3:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 75446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9774:5:333",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9770:9:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 75447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9783:1:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9770:14:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156",
                              "id": 75449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9786:4:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              },
                              "value": "!V"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              }
                            ],
                            "id": 75444,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9762:7:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 75450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9762:29:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 75451,
                        "nodeType": "ExpressionStatement",
                        "src": "9762:29:333"
                      },
                      {
                        "functionReturnParameters": 75440,
                        "id": 75452,
                        "nodeType": "Return",
                        "src": "9805:7:333"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    75456,
                    75458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75456,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9841:20:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75541,
                      "src": "9833:28:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75455,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9833:7:333",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75458,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9870:14:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75541,
                      "src": "9863:21:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 75457,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9863:6:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75461,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75459,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22447,
                      "src": "9888:18:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 75460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9888:20:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9832:76:333"
                },
                {
                  "assignments": [
                    75463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75463,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "9927:13:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75541,
                      "src": "9919:21:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75462,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9919:7:333",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75474,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 75469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75464,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75431,
                        "src": "9943:21:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 75467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9976:1:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 75466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9968:7:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75465,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9968:7:333",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9968:10:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9943:35:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 75472,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75431,
                      "src": "10006:21:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 75473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9943:84:333",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 75470,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "9981:20:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 75471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9981:22:333",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9919:108:333"
                },
                {
                  "assignments": [
                    75476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75476,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "10046:10:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75541,
                      "src": "10038:18:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75475,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10038:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75480,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 75479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75477,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75433,
                      "src": "10059:16:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 75478,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75437,
                      "src": "10078:14:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10059:33:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10038:54:333"
                },
                {
                  "assignments": [
                    75482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75482,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "10110:12:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75541,
                      "src": "10102:20:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75481,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10102:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75489,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 75488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 75485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75483,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75476,
                            "src": "10126:10:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 75484,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75458,
                            "src": "10139:14:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "10126:27:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 75486,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10125:29:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 75487,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74976,
                      "src": "10157:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10125:39:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10102:62:333"
                },
                {
                  "assignments": [
                    75491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75491,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "10180:13:333",
                      "nodeType": "VariableDeclaration",
                      "scope": 75541,
                      "src": "10175:18:333",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 75490,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10175:4:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75492,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10175:18:333"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 75496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75493,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75435,
                      "src": "10207:9:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 75494,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "10220:19:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 75495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "10240:12:333",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "10220:32:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10207:45:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 75512,
                    "nodeType": "Block",
                    "src": "10324:55:333",
                    "statements": [
                      {
                        "expression": {
                          "id": 75510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75505,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75491,
                            "src": "10338:13:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 75509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 75506,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10354:3:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 75507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10358:5:333",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10354:9:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 75508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10367:1:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10354:14:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10338:30:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75511,
                        "nodeType": "ExpressionStatement",
                        "src": "10338:30:333"
                      }
                    ]
                  },
                  "id": 75513,
                  "nodeType": "IfStatement",
                  "src": "10203:176:333",
                  "trueBody": {
                    "id": 75504,
                    "nodeType": "Block",
                    "src": "10254:64:333",
                    "statements": [
                      {
                        "expression": {
                          "id": 75502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75497,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75491,
                            "src": "10268:13:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 75501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 75498,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10284:3:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 75499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10288:5:333",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10284:9:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 75500,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75476,
                              "src": "10297:10:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10284:23:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10268:39:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75503,
                        "nodeType": "ExpressionStatement",
                        "src": "10268:39:333"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75515,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75491,
                        "src": "10396:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 75516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10411:4:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 75514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10388:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10388:28:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75518,
                  "nodeType": "ExpressionStatement",
                  "src": "10388:28:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75522,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75435,
                        "src": "10464:9:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75523,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "10475:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10475:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75525,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75456,
                        "src": "10489:20:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75526,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75482,
                        "src": "10511:12:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75519,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "10427:19:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 75521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10447:16:333",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "10427:36:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 75527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10427:97:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75528,
                  "nodeType": "ExpressionStatement",
                  "src": "10427:97:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75532,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75435,
                        "src": "10571:9:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75533,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "10582:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10582:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75535,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75463,
                        "src": "10596:13:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75536,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75476,
                          "src": "10611:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 75537,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75482,
                          "src": "10624:12:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10611:25:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75529,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "10534:19:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 75531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10554:16:333",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "10534:36:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 75539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10534:103:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75540,
                  "nodeType": "ExpressionStatement",
                  "src": "10534:103:333"
                }
              ]
            },
            "baseFunctions": [
              18882
            ],
            "documentation": {
              "id": 75429,
              "nodeType": "StructuredDocumentation",
              "src": "9443:79:333",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "9536:20:333",
            "overrides": {
              "id": 75439,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9704:8:333"
            },
            "parameters": {
              "id": 75438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75431,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9574:21:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75542,
                  "src": "9566:29:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9566:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75433,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9613:16:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75542,
                  "src": "9605:24:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9605:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75435,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9647:9:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75542,
                  "src": "9639:17:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9639:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75437,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9674:14:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75542,
                  "src": "9666:22:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9666:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9556:138:333"
            },
            "returnParameters": {
              "id": 75440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9713:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75563,
            "nodeType": "FunctionDefinition",
            "src": "10697:239:333",
            "nodes": [],
            "body": {
              "id": 75562,
              "nodeType": "Block",
              "src": "10844:92:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75553,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75551,
                      "src": "10854:12:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75554,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12366,
                      "src": "10869:13:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10854:28:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75556,
                  "nodeType": "ExpressionStatement",
                  "src": "10854:28:333"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75558,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75545,
                        "src": "10902:3:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75559,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75547,
                        "src": "10907:21:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75557,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12984,
                        13147
                      ],
                      "referencedDeclaration": 12984,
                      "src": "10892:9:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10892:37:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75561,
                  "nodeType": "ExpressionStatement",
                  "src": "10892:37:333"
                }
              ]
            },
            "baseFunctions": [
              18892
            ],
            "documentation": {
              "id": 75543,
              "nodeType": "StructuredDocumentation",
              "src": "10650:42:333",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10706:22:333",
            "overrides": {
              "id": 75549,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10804:8:333"
            },
            "parameters": {
              "id": 75548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75545,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10746:3:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75563,
                  "src": "10738:11:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10738:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75547,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10767:21:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75563,
                  "src": "10759:29:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10759:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10728:66:333"
            },
            "returnParameters": {
              "id": 75552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75551,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "10830:12:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75563,
                  "src": "10822:20:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10822:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10821:22:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75577,
            "nodeType": "FunctionDefinition",
            "src": "11031:137:333",
            "nodes": [],
            "body": {
              "id": 75576,
              "nodeType": "Block",
              "src": "11103:65:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75571,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11128:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75572,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "11148:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11148:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75570,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11120:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11120:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75569,
                  "id": 75575,
                  "nodeType": "Return",
                  "src": "11113:48:333"
                }
              ]
            },
            "baseFunctions": [
              22628
            ],
            "documentation": {
              "id": 75564,
              "nodeType": "StructuredDocumentation",
              "src": "10942:84:333",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "11040:22:333",
            "overrides": {
              "id": 75566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11079:8:333"
            },
            "parameters": {
              "id": 75565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11062:2:333"
            },
            "returnParameters": {
              "id": 75569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75577,
                  "src": "11097:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11097:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11096:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75591,
            "nodeType": "FunctionDefinition",
            "src": "11268:142:333",
            "nodes": [],
            "body": {
              "id": 75590,
              "nodeType": "Block",
              "src": "11345:65:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75585,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11370:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75586,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "11390:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11390:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75584,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11362:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11362:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75583,
                  "id": 75589,
                  "nodeType": "Return",
                  "src": "11355:48:333"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 75578,
              "nodeType": "StructuredDocumentation",
              "src": "11174:89:333",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "11277:27:333",
            "overrides": {
              "id": 75580,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11321:8:333"
            },
            "parameters": {
              "id": 75579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11304:2:333"
            },
            "returnParameters": {
              "id": 75583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75591,
                  "src": "11339:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11339:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11338:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75605,
            "nodeType": "FunctionDefinition",
            "src": "11493:127:333",
            "nodes": [],
            "body": {
              "id": 75604,
              "nodeType": "Block",
              "src": "11555:65:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75599,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11580:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75600,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "11600:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11600:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75598,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11572:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11572:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75597,
                  "id": 75603,
                  "nodeType": "Return",
                  "src": "11565:48:333"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 75592,
              "nodeType": "StructuredDocumentation",
              "src": "11416:72:333",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "11502:12:333",
            "overrides": {
              "id": 75594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11531:8:333"
            },
            "parameters": {
              "id": 75593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11514:2:333"
            },
            "returnParameters": {
              "id": 75597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75605,
                  "src": "11549:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11549:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11548:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75619,
            "nodeType": "FunctionDefinition",
            "src": "11710:133:333",
            "nodes": [],
            "body": {
              "id": 75618,
              "nodeType": "Block",
              "src": "11778:65:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75613,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "11803:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75614,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "11823:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11823:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75612,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "11795:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11795:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75611,
                  "id": 75617,
                  "nodeType": "Return",
                  "src": "11788:48:333"
                }
              ]
            },
            "baseFunctions": [
              23030
            ],
            "documentation": {
              "id": 75606,
              "nodeType": "StructuredDocumentation",
              "src": "11626:79:333",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11719:18:333",
            "overrides": {
              "id": 75608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11754:8:333"
            },
            "parameters": {
              "id": 75607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11737:2:333"
            },
            "returnParameters": {
              "id": 75611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75619,
                  "src": "11772:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11772:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11771:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75633,
            "nodeType": "FunctionDefinition",
            "src": "11938:133:333",
            "nodes": [],
            "body": {
              "id": 75632,
              "nodeType": "Block",
              "src": "12006:65:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75627,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "12031:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75628,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "12051:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12051:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75626,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "12023:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12023:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75625,
                  "id": 75631,
                  "nodeType": "Return",
                  "src": "12016:48:333"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 75620,
              "nodeType": "StructuredDocumentation",
              "src": "11849:84:333",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11947:18:333",
            "overrides": {
              "id": 75622,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11982:8:333"
            },
            "parameters": {
              "id": 75621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11965:2:333"
            },
            "returnParameters": {
              "id": 75625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75633,
                  "src": "12000:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12000:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11999:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75647,
            "nodeType": "FunctionDefinition",
            "src": "12166:137:333",
            "nodes": [],
            "body": {
              "id": 75646,
              "nodeType": "Block",
              "src": "12238:65:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75641,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "12263:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75642,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "12283:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12283:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75640,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "12255:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12255:41:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75639,
                  "id": 75645,
                  "nodeType": "Return",
                  "src": "12248:48:333"
                }
              ]
            },
            "baseFunctions": [
              18898
            ],
            "documentation": {
              "id": 75634,
              "nodeType": "StructuredDocumentation",
              "src": "12077:84:333",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "12175:22:333",
            "overrides": {
              "id": 75636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12214:8:333"
            },
            "parameters": {
              "id": 75635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12197:2:333"
            },
            "returnParameters": {
              "id": 75639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75647,
                  "src": "12232:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75637,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12232:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12231:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 75661,
            "nodeType": "FunctionDefinition",
            "src": "12395:127:333",
            "nodes": [],
            "body": {
              "id": 75660,
              "nodeType": "Block",
              "src": "12465:57:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75655,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74969,
                        "src": "12490:10:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 75656,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75789
                          ],
                          "referencedDeclaration": 75789,
                          "src": "12502:10:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12502:12:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75654,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "12482:7:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12482:33:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75653,
                  "id": 75659,
                  "nodeType": "Return",
                  "src": "12475:40:333"
                }
              ]
            },
            "baseFunctions": [
              20827
            ],
            "documentation": {
              "id": 75648,
              "nodeType": "StructuredDocumentation",
              "src": "12309:81:333",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "12404:12:333",
            "overrides": {
              "id": 75650,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12441:8:333"
            },
            "parameters": {
              "id": 75649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12416:2:333"
            },
            "returnParameters": {
              "id": 75653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75661,
                  "src": "12459:4:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12459:4:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12458:6:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75671,
            "nodeType": "FunctionDefinition",
            "src": "12788:93:333",
            "nodes": [],
            "body": {
              "id": 75670,
              "nodeType": "Block",
              "src": "12843:38:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75667,
                      "name": "_totalMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12468,
                      "src": "12860:12:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 75668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12860:14:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75666,
                  "id": 75669,
                  "nodeType": "Return",
                  "src": "12853:21:333"
                }
              ]
            },
            "documentation": {
              "id": 75662,
              "nodeType": "StructuredDocumentation",
              "src": "12706:77:333",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "12797:11:333",
            "parameters": {
              "id": 75663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12808:2:333"
            },
            "returnParameters": {
              "id": 75666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75671,
                  "src": "12834:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12834:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12833:9:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75680,
            "nodeType": "FunctionDefinition",
            "src": "12963:106:333",
            "nodes": [],
            "body": {
              "id": 75679,
              "nodeType": "Block",
              "src": "13024:45:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75677,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20762,
                    "src": "13041:21:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75676,
                  "id": 75678,
                  "nodeType": "Return",
                  "src": "13034:28:333"
                }
              ]
            },
            "documentation": {
              "id": 75672,
              "nodeType": "StructuredDocumentation",
              "src": "12887:71:333",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12972:17:333",
            "parameters": {
              "id": 75673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12989:2:333"
            },
            "returnParameters": {
              "id": 75676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75680,
                  "src": "13015:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13015:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13014:9:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75689,
            "nodeType": "FunctionDefinition",
            "src": "13138:99:333",
            "nodes": [],
            "body": {
              "id": 75688,
              "nodeType": "Block",
              "src": "13200:37:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75686,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12366,
                    "src": "13217:13:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75685,
                  "id": 75687,
                  "nodeType": "Return",
                  "src": "13210:20:333"
                }
              ]
            },
            "documentation": {
              "id": 75681,
              "nodeType": "StructuredDocumentation",
              "src": "13075:58:333",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "13147:18:333",
            "parameters": {
              "id": 75682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13165:2:333"
            },
            "returnParameters": {
              "id": 75685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75689,
                  "src": "13191:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13191:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13190:9:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75701,
            "nodeType": "FunctionDefinition",
            "src": "13293:184:333",
            "nodes": [],
            "body": {
              "id": 75700,
              "nodeType": "Block",
              "src": "13341:136:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75696,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75692,
                        "src": "13456:7:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13465:4:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75695,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13447,
                        13629
                      ],
                      "referencedDeclaration": 13629,
                      "src": "13450:5:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 75698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13450:20:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75699,
                  "nodeType": "ExpressionStatement",
                  "src": "13450:20:333"
                }
              ]
            },
            "documentation": {
              "id": 75690,
              "nodeType": "StructuredDocumentation",
              "src": "13243:45:333",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "13302:4:333",
            "parameters": {
              "id": 75693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75692,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13315:7:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75701,
                  "src": "13307:15:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13307:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13306:17:333"
            },
            "returnParameters": {
              "id": 75694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13341:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 75765,
            "nodeType": "FunctionDefinition",
            "src": "13531:573:333",
            "nodes": [],
            "body": {
              "id": 75764,
              "nodeType": "Block",
              "src": "13692:412:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75717,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75704,
                        "src": "13730:4:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75718,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75706,
                        "src": "13736:2:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75719,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75708,
                        "src": "13740:12:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75720,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75710,
                        "src": "13754:8:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75714,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13702:5:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC721_$75803_$",
                          "typeString": "type(contract super DropERC721)"
                        }
                      },
                      "id": 75716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13708:21:333",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13720,
                      "src": "13702:27:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 75721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13702:61:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75722,
                  "nodeType": "ExpressionStatement",
                  "src": "13702:61:333"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 75744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 75737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13875:34:333",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 75724,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74966,
                              "src": "13884:12:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 75727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13906:1:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 75726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13898:7:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 75725,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13898:7:333",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 75728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13898:10:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 75723,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21818,
                            "src": "13876:7:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 75729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13876:33:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75731,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75704,
                          "src": "13913:4:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 75734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13929:1:333",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 75733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13921:7:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13921:7:333",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13921:10:333",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13913:18:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "13875:56:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 75743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75738,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75706,
                        "src": "13935:2:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 75741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13949:1:333",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 75740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13941:7:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13941:7:333",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13941:10:333",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13935:16:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13875:76:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75763,
                  "nodeType": "IfStatement",
                  "src": "13871:227:333",
                  "trueBody": {
                    "id": 75762,
                    "nodeType": "Block",
                    "src": "13953:145:333",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 75755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "13971:28:333",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 75746,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74966,
                                  "src": "13980:12:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75747,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75704,
                                  "src": "13994:4:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 75745,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21818,
                                "src": "13972:7:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 75748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13972:27:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 75754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14003:26:333",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 75751,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74966,
                                  "src": "14012:12:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75752,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75706,
                                  "src": "14026:2:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 75750,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21818,
                                "src": "14004:7:333",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 75753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14004:25:333",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13971:58:333",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75761,
                        "nodeType": "IfStatement",
                        "src": "13967:121:333",
                        "trueBody": {
                          "id": 75760,
                          "nodeType": "Block",
                          "src": "14031:57:333",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 75757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14056:16:333",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 75756,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14049:6:333",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 75758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14049:24:333",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 75759,
                              "nodeType": "ExpressionStatement",
                              "src": "14049:24:333"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              13720
            ],
            "documentation": {
              "id": 75702,
              "nodeType": "StructuredDocumentation",
              "src": "13483:43:333",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "13540:21:333",
            "overrides": {
              "id": 75712,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13683:8:333"
            },
            "parameters": {
              "id": 75711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75704,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13579:4:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75765,
                  "src": "13571:12:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13571:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75706,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13601:2:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75765,
                  "src": "13593:10:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13593:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75708,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "13621:12:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75765,
                  "src": "13613:20:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13613:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75710,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "13651:8:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75765,
                  "src": "13643:16:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13643:7:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13561:104:333"
            },
            "returnParameters": {
              "id": 75713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13692:0:333"
            },
            "scope": 75803,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75775,
            "nodeType": "FunctionDefinition",
            "src": "14110:111:333",
            "nodes": [],
            "body": {
              "id": 75774,
              "nodeType": "Block",
              "src": "14185:36:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75771,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        75789
                      ],
                      "referencedDeclaration": 75789,
                      "src": "14202:10:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 75772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14202:12:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 75770,
                  "id": 75773,
                  "nodeType": "Return",
                  "src": "14195:19:333"
                }
              ]
            },
            "baseFunctions": [
              18834
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "14119:14:333",
            "overrides": {
              "id": 75767,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14158:8:333"
            },
            "parameters": {
              "id": 75766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14133:2:333"
            },
            "returnParameters": {
              "id": 75770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75775,
                  "src": "14176:7:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14176:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14175:9:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75789,
            "nodeType": "FunctionDefinition",
            "src": "14227:242:333",
            "nodes": [],
            "body": {
              "id": 75788,
              "nodeType": "Block",
              "src": "14407:62:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75784,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "14424:25:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 75785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14450:10:333",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "14424:36:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 75786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14424:38:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 75783,
                  "id": 75787,
                  "nodeType": "Return",
                  "src": "14417:45:333"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370,
              161677
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "14236:10:333",
            "overrides": {
              "id": 75780,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75777,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "14312:18:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "14312:18:333"
                },
                {
                  "id": 75778,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "14332:25:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "14332:25:333"
                },
                {
                  "id": 75779,
                  "name": "Multicall",
                  "nameLocations": [
                    "14359:9:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "14359:9:333"
                }
              ],
              "src": "14303:66:333"
            },
            "parameters": {
              "id": 75776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14246:2:333"
            },
            "returnParameters": {
              "id": 75783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75782,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14395:6:333",
                  "nodeType": "VariableDeclaration",
                  "scope": 75789,
                  "src": "14387:14:333",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14387:7:333",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14386:16:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75802,
            "nodeType": "FunctionDefinition",
            "src": "14475:227:333",
            "nodes": [],
            "body": {
              "id": 75801,
              "nodeType": "Block",
              "src": "14642:60:333",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75797,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "14659:25:333",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 75798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14685:8:333",
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46397,
                      "src": "14659:34:333",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 75799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14659:36:333",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 75796,
                  "id": 75800,
                  "nodeType": "Return",
                  "src": "14652:43:333"
                }
              ]
            },
            "baseFunctions": [
              46397,
              161686
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14484:8:333",
            "overrides": {
              "id": 75793,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 75791,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "14558:18:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "14558:18:333"
                },
                {
                  "id": 75792,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "14578:25:333"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "14578:25:333"
                }
              ],
              "src": "14549:55:333"
            },
            "parameters": {
              "id": 75790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14492:2:333"
            },
            "returnParameters": {
              "id": 75796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75802,
                  "src": "14622:14:333",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75794,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14622:5:333",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14621:16:333"
            },
            "scope": 75803,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74935,
              "name": "Initializable",
              "nameLocations": [
                "1648:13:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1648:13:333"
            },
            "id": 74936,
            "nodeType": "InheritanceSpecifier",
            "src": "1648:13:333"
          },
          {
            "baseName": {
              "id": 74937,
              "name": "ContractMetadata",
              "nameLocations": [
                "1667:16:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1667:16:333"
            },
            "id": 74938,
            "nodeType": "InheritanceSpecifier",
            "src": "1667:16:333"
          },
          {
            "baseName": {
              "id": 74939,
              "name": "PlatformFee",
              "nameLocations": [
                "1689:11:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22629,
              "src": "1689:11:333"
            },
            "id": 74940,
            "nodeType": "InheritanceSpecifier",
            "src": "1689:11:333"
          },
          {
            "baseName": {
              "id": 74941,
              "name": "Royalty",
              "nameLocations": [
                "1706:7:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23031,
              "src": "1706:7:333"
            },
            "id": 74942,
            "nodeType": "InheritanceSpecifier",
            "src": "1706:7:333"
          },
          {
            "baseName": {
              "id": 74943,
              "name": "PrimarySale",
              "nameLocations": [
                "1719:11:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "1719:11:333"
            },
            "id": 74944,
            "nodeType": "InheritanceSpecifier",
            "src": "1719:11:333"
          },
          {
            "baseName": {
              "id": 74945,
              "name": "Ownable",
              "nameLocations": [
                "1736:7:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1736:7:333"
            },
            "id": 74946,
            "nodeType": "InheritanceSpecifier",
            "src": "1736:7:333"
          },
          {
            "baseName": {
              "id": 74947,
              "name": "DelayedReveal",
              "nameLocations": [
                "1749:13:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18252,
              "src": "1749:13:333"
            },
            "id": 74948,
            "nodeType": "InheritanceSpecifier",
            "src": "1749:13:333"
          },
          {
            "baseName": {
              "id": 74949,
              "name": "LazyMint",
              "nameLocations": [
                "1768:8:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20828,
              "src": "1768:8:333"
            },
            "id": 74950,
            "nodeType": "InheritanceSpecifier",
            "src": "1768:8:333"
          },
          {
            "baseName": {
              "id": 74951,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1782:21:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1782:21:333"
            },
            "id": 74952,
            "nodeType": "InheritanceSpecifier",
            "src": "1782:21:333"
          },
          {
            "baseName": {
              "id": 74953,
              "name": "Drop",
              "nameLocations": [
                "1809:4:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18899,
              "src": "1809:4:333"
            },
            "id": 74954,
            "nodeType": "InheritanceSpecifier",
            "src": "1809:4:333"
          },
          {
            "baseName": {
              "id": 74955,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1819:25:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1819:25:333"
            },
            "id": 74956,
            "nodeType": "InheritanceSpecifier",
            "src": "1819:25:333"
          },
          {
            "baseName": {
              "id": 74957,
              "name": "Multicall",
              "nameLocations": [
                "1850:9:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1850:9:333"
            },
            "id": 74958,
            "nodeType": "InheritanceSpecifier",
            "src": "1850:9:333"
          },
          {
            "baseName": {
              "id": 74959,
              "name": "ERC721AUpgradeable",
              "nameLocations": [
                "1865:18:333"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13739,
              "src": "1865:18:333"
            },
            "id": 74960,
            "nodeType": "InheritanceSpecifier",
            "src": "1865:18:333"
          }
        ],
        "canonicalName": "DropERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75803,
          13739,
          103547,
          159732,
          159300,
          162692,
          162704,
          21206,
          33577,
          46402,
          161692,
          18899,
          33221,
          32955,
          32931,
          22411,
          22111,
          33932,
          33907,
          20828,
          17840,
          33463,
          18252,
          33115,
          21764,
          33834,
          22703,
          33997,
          23031,
          34061,
          14089,
          13945,
          22629,
          33976,
          18093,
          154159,
          33084
        ],
        "name": "DropERC721",
        "nameLocation": "1630:10:333",
        "scope": 75804,
        "usedErrors": [
          103488,
          103491,
          103494,
          103497,
          103500,
          103503,
          103506,
          103509,
          103512,
          103515,
          103518,
          103521,
          103524
        ],
        "usedEvents": [
          17530,
          17537,
          33083,
          33094,
          33184,
          33193,
          33450,
          33833,
          33846,
          33855,
          33864,
          33962,
          33969,
          33975,
          33996,
          34051,
          34060,
          74984,
          154005,
          159199,
          159208,
          159217
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 333
}