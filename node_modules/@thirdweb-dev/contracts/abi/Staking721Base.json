{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensStaked",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isIndexed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeTokenWrapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "amountStaked",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526003805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200312e3803806200312e83398101604081905262000047916200029e565b6001600255826001600160a01b038116620000a95760405162461bcd60e51b815260206004820152601460248201527f636f6c6c656374696f6e2061646472657373203000000000000000000000000060448201526064015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055620000d48662000117565b620000e0858562000169565b600a80546001600160a01b039384166001600160a01b031991821617909155600b8054929093169116179055506200036992505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b81600003620001bb5760405162461bcd60e51b815260206004820152601460248201527f74696d652d756e69742063616e277420626520300000000000000000000000006044820152606401620000a0565b60038054600160a81b90046001600160401b0316906001906015620001e1838562000323565b82546001600160401b039182166101009390930a928302919092021990911617905550604080516080810182528481526020808201858152428385019081526000606085018181528782526009909452949094209251835551600183015591516002820155905160039091015580156200027c574260096000620002676001856200034d565b81526020810191909152604001600020600301555b505050565b80516001600160a01b03811681146200029957600080fd5b919050565b60008060008060008060c08789031215620002b857600080fd5b620002c38762000281565b95506020870151945060408701519350620002e16060880162000281565b9250620002f16080880162000281565b91506200030160a0880162000281565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038181168382160190808211156200034657620003466200030d565b5092915050565b818103818111156200036357620003636200030d565b92915050565b612db580620003796000396000f3fe6080604052600436106101355760003560e01c806301ffc9a7146101a05780630e8b229b146101d55780630fbf0a93146101f857806313af403514610218578063150b7a021461023857806316c621e01461027157806323ef258014610284578063372500ab146102a45780635357e916146102b95780636360106f146102e657806372f702f3146103065780638da5cb5b146103265780639168ae721461033b578063938e3d7b146103d157806393ce5343146103f15780639406704514610406578063961004d31461043c578063983d95ce1461045c578063ac9650d81461047c578063c3453153146104a9578063cb43b2dd146104d7578063d68124c7146104f7578063e8a3d4851461050c578063f7c618c11461052e578063f9ea29cb1461054e578063fd48ba171461056e57600080fd5b3661019b57600b546001600160a01b031633146101995760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101ac57600080fd5b506101c06101bb3660046125f7565b61059e565b60405190151581526020015b60405180910390f35b3480156101e157600080fd5b506101ea6105d5565b6040519081526020016101cc565b34801561020457600080fd5b50610199610213366004612665565b61061d565b34801561022457600080fd5b506101996102333660046126bd565b610655565b34801561024457600080fd5b506102586102533660046126d8565b610685565b6040516001600160e01b031990911681526020016101cc565b61019961027f366004612772565b6106e8565b34801561029057600080fd5b5061019961029f366004612772565b61071e565b3480156102b057600080fd5b50610199610845565b3480156102c557600080fd5b506102d96102d4366004612772565b610879565b6040516101cc919061278b565b3480156102f257600080fd5b50610199610301366004612772565b6108a3565b34801561031257600080fd5b506003546102d9906001600160a01b031681565b34801561033257600080fd5b506102d96109cb565b34801561034757600080fd5b506103986103563660046126bd565b600760205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b039091169183019190915260608201526080016101cc565b3480156103dd57600080fd5b506101996103ec3660046127b5565b6109da565b3480156103fd57600080fd5b50600c546101ea565b34801561041257600080fd5b506102d9610421366004612772565b6008602052600090815260409020546001600160a01b031681565b34801561044857600080fd5b506101ea610457366004612772565b610a07565b34801561046857600080fd5b50610199610477366004612665565b610a28565b34801561048857600080fd5b5061049c610497366004612665565b610a57565b6040516101cc91906128b5565b3480156104b557600080fd5b506104c96104c43660046126bd565b610bbc565b6040516101cc929190612919565b3480156104e357600080fd5b506101996104f2366004612772565b610dea565b34801561050357600080fd5b506101ea610e18565b34801561051857600080fd5b50610521610e60565b6040516101cc9190612966565b34801561053a57600080fd5b50600a546102d9906001600160a01b031681565b34801561055a57600080fd5b50600b546102d9906001600160a01b031681565b34801561057a57600080fd5b506101c0610589366004612772565b60066020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806105cf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000600960006001600360159054906101000a90046001600160401b03166105fd919061298f565b6001600160401b0316815260200190815260200160002060010154905090565b600280540361063e5760405162461bcd60e51b8152600401610190906129b6565b6002805561064c8282610eee565b50506001600255565b61065d6112a2565b6106795760405162461bcd60e51b8152600401610190906129ed565b610682816112c5565b50565b600354600090600160a01b900460ff166002146106d65760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b6044820152606401610190565b50630a85bd0160e11b95945050505050565b60028054036107095760405162461bcd60e51b8152600401610190906129b6565b6002805561071681611317565b506001600255565b6107266112a2565b6107425760405162461bcd60e51b8152600401610190906129ed565b6000600960006001600360159054906101000a90046001600160401b031661076a919061298f565b6001600160401b0316815260208082019290925260409081016000208151608081018352815481526001820154938101849052600282015492810192909252600301546060820152915082036107f65760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b6044820152606401610190565b805161080290836114c5565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b60028054036108665760405162461bcd60e51b8152600401610190906129b6565b600280556108726115cd565b6001600255565b6005818154811061088957600080fd5b6000918252602090912001546001600160a01b0316905081565b6108ab6112a2565b6108c75760405162461bcd60e51b8152600401610190906129ed565b6000600960006001600360159054906101000a90046001600160401b03166108ef919061298f565b6001600160401b031681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015182036109855760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610190565b6109938282602001516114c5565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de09101610839565b6001546001600160a01b031690565b6109e26112a2565b6109fe5760405162461bcd60e51b8152600401610190906129ed565b610682816116fd565b60048181548110610a1757600080fd5b600091825260209091200154905081565b6002805403610a495760405162461bcd60e51b8152600401610190906129b6565b6002805561064c82826117cc565b6060816001600160401b03811115610a7157610a7161279f565b604051908082528060200260200182016040528015610aa457816020015b6060815260200190600190039081610a8f5790505b509050336000805b84811015610bb3578115610b2b57610b0930878784818110610ad057610ad0612a15565b9050602002810190610ae29190612a2b565b86604051602001610af593929190612a71565b604051602081830303815290604052611bee565b848281518110610b1b57610b1b612a15565b6020026020010181905250610bab565b610b8d30878784818110610b4157610b41612a15565b9050602002810190610b539190612a2b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bee92505050565b848281518110610b9f57610b9f612a15565b60200260200101819052505b600101610aac565b50505092915050565b60606000806004805480602002602001604051908101604052809291908181526020018280548015610c0d57602002820191906000526020600020905b815481526020019060010190808311610bf9575b50505050509050600081516001600160401b03811115610c2f57610c2f61279f565b604051908082528060200260200182016040528015610c58578160200160208202803683370190505b5082519091506000805b82811015610d1757876001600160a01b031660086000878481518110610c8a57610c8a612a15565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b031614848281518110610cd057610cd0612a15565b602002602001019015159081151581525050838181518110610cf457610cf4612a15565b602002602001015115610d0f57610d0c600183612a92565b91505b600101610c62565b50806001600160401b03811115610d3057610d3061279f565b604051908082528060200260200182016040528015610d59578160200160208202803683370190505b5095506000805b83811015610dd457848181518110610d7a57610d7a612a15565b602002602001015115610dcc57858181518110610d9957610d99612a15565b6020026020010151888381518110610db357610db3612a15565b6020908102919091010152610dc9600183612a92565b91505b600101610d60565b50610dde88611c1a565b95505050505050915091565b6002805403610e0b5760405162461bcd60e51b8152600401610190906129b6565b6002805561071681611c95565b6000600960006001600360159054906101000a90046001600160401b0316610e40919061298f565b6001600160401b0316815260200190815260200160002060000154905090565b60008054610e6d90612aa5565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9990612aa5565b8015610ee65780601f10610ebb57610100808354040283529160200191610ee6565b820191906000526020600020905b815481529060010190602001808311610ec957829003601f168201915b505050505081565b806001600160401b038116600003610f3b5760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610190565b600354336000908152600760205260409020546001600160a01b03909116906001600160401b031615610f7657610f7133611d11565b611036565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054336001600160a01b0319909116811790915560009081526007602052604090208054426001600160801b03908116600160801b029116179055600354610ffd91906001600160401b03600160a81b9091041661298f565b33600090815260076020526040902080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b03168110156111fb576003805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e333088888681811061108057611080612a15565b905060200201356040518463ffffffff1660e01b81526004016110a593929190612adf565b600060405180830381600087803b1580156110bf57600080fd5b505af11580156110d3573d6000803e3d6000fd5b50506003805460ff60a01b1916600160a01b179055506110f290503390565b6008600087878581811061110857611108612a15565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006600086868481811061115757611157612a15565b602090810292909201358352508101919091526040016000205460ff166111f35760016006600087878581811061119057611190612a15565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555060048585838181106111d0576111d0612a15565b835460018101855560009485526020948590209190940292909201359190920155505b600101611039565b5033600090815260076020526040812080548492906112249084906001600160401b0316612b03565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611258929190612b23565b60405180910390206112673390565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b60006112ac6109cb565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61131f6109cb565b6001600160a01b0316336001600160a01b03161461134f5760405162461bcd60e51b8152600401610190906129ed565b600a546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461138957600a546001600160a01b0316611396565b600b546001600160a01b03165b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016113c6919061278b565b602060405180830381865afa1580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114079190612b4c565b600a54600b5491925061142c916001600160a01b039182169133913091889116611de7565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161145b919061278b565b602060405180830381865afa158015611478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149c9190612b4c565b6114a69190612b65565b905080600c60008282546114ba9190612a92565b909155505050505050565b8160000361150c5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610190565b60038054600160a81b90046001600160401b03169060019060156115308385612b03565b82546001600160401b039182166101009390930a928302919092021990911617905550604080516080810182528481526020808201858152428385019081526000606085018181528782526009909452949094209251835551600183015591516002820155905160039091015580156115c85742600960006115b3600185612b65565b81526020810191909152604001600020600301555b505050565b60006115d833611f58565b336000908152600760205260409020600101546115f59190612a92565b9050806000036116345760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610190565b3360009081526007602052604081208054426001600160801b03908116600160801b0291161781556001908101919091556003546116829190600160a81b90046001600160401b031661298f565b33600081815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b0319909316929092179091556116c590826120e6565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b600080805461170b90612aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461173790612aa5565b80156117845780601f1061175957610100808354040283529160200191611784565b820191906000526020600020905b81548152906001019060200180831161176757829003601f168201915b50505050509050816000908161179a9190612bc8565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610839929190612c87565b336000908152600760205260408120546001600160401b03908116918391821690036118315760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610190565b806001600160401b03168210156118895760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610190565b6003546001600160a01b031661189e33611d11565b816001600160401b031683036119f6576000600580548060200260200160405190810160405280929190818152602001828054801561190657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118e8575b5050505050905060005b81518110156119f357336001600160a01b031682828151811061193557611935612a15565b60200260200101516001600160a01b0316036119eb57816001835161195a9190612b65565b8151811061196a5761196a612a15565b60200260200101516005828154811061198557611985612a15565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806119c4576119c4612cb5565b600082815260209020810160001990810180546001600160a01b03191690550190556119f3565b600101611910565b50505b3360009081526007602052604081208054849290611a1e9084906001600160401b031661298f565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b0316811015611b92573360086000888885818110611a6d57611a6d612a15565b60209081029290920135835250810191909152604001600020546001600160a01b031614611aca5760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b6044820152606401610190565b600060086000888885818110611ae257611ae2612a15565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e3033898986818110611b3057611b30612a15565b905060200201356040518463ffffffff1660e01b8152600401611b5593929190612adf565b600060405180830381600087803b158015611b6f57600080fd5b505af1158015611b83573d6000803e3d6000fd5b50505050806001019050611a45565b508484604051611ba3929190612b23565b6040518091039020611bb23390565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b6060611c138383604051806060016040528060278152602001612d5960279139612170565b9392505050565b6001600160a01b0381166000908152600760205260408120546001600160401b03168103611c6157506001600160a01b031660009081526007602052604090206001015490565b611c6a82611f58565b6001600160a01b0383166000908152600760205260409020600101546105cf9190612a92565b919050565b611c9d6109cb565b6001600160a01b0316336001600160a01b031614611ccd5760405162461bcd60e51b8152600401610190906129ed565b600c548111611ce95780600c54611ce49190612b65565b611cec565b60005b600c55600a54600b54610682916001600160a01b039081169130913391869116611de7565b6000611d1c82611f58565b6001600160a01b038316600090815260076020526040812060010180549293508392909190611d4c908490612a92565b90915550506001600160a01b038216600090815260076020526040902080546001600160801b03428116600160801b029116179055600354611da1906001906001600160401b03600160a81b9091041661298f565b6001600160a01b03909216600090815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b8115611f515773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611f4557306001600160a01b03851603611e8c57604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611e6457600080fd5b505af1158015611e78573d6000803e3d6000fd5b50505050611e878383836121e8565b611f51565b306001600160a01b03841603611f3a57348214611ee15760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610190565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611f1c57600080fd5b505af1158015611f30573d6000803e3d6000fd5b5050505050611f51565b611e878383836121e8565b611f51858585856122b3565b5050505050565b6001600160a01b0381166000908152600760209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b0316938201939093526001909101546060820152600354909291600160a81b90910416815b818110156120dd5760008181526009602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460608201529084830361202e5785604001516001600160801b0316612034565b81604001515b90506000826060015160000361204a5742612050565b82606001515b905060008061208689600001516001600160401b031685856120729190612b65565b61207c9190612ccb565b866020015161230b565b915091506000806120a68c8860000151856120a19190612cf8565b612356565b915091508380156120b45750815b6120be578b6120c0565b805b9b50505050505050506001816120d69190612a92565b9050611fcd565b50505050919050565b600c548111156121335760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610190565b80600c60008282546121459190612b65565b9091555050600a54600b5461216c916001600160a01b039081169130918691869116611de7565b5050565b6060600080856001600160a01b03168560405161218d9190612d1a565b600060405180830381855af49150503d80600081146121c8576040519150601f19603f3d011682016040523d82523d6000602084013e6121cd565b606091505b50915091506121de86838387612371565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612235576040519150601f19603f3d011682016040523d82523d6000602084013e61223a565b606091505b50509050806122ad57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561227e57600080fd5b505af1158015612292573d6000803e3d6000fd5b506122ad935050506001600160a01b038416905085856123f2565b50505050565b816001600160a01b0316836001600160a01b031603156122ad57306001600160a01b038416036122f6576122f16001600160a01b03851683836123f2565b6122ad565b6122ad6001600160a01b038516848484612455565b60008083600003612322575060019050600061234f565b8383028385828161233557612335612ce2565b041461234857600080925092505061234f565b6001925090505b9250929050565b6000808383018481101561234857600080925092505061234f565b606083156123e05782516000036123d9576001600160a01b0385163b6123d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610190565b50816123ea565b6123ea8383612476565b949350505050565b6040516001600160a01b0383166024820152604481018290526115c890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526124a0565b6122ad846323b872dd60e01b85858560405160240161241e93929190612adf565b8151156124865781518083602001fd5b8060405162461bcd60e51b81526004016101909190612966565b60006124f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125729092919063ffffffff16565b8051909150156115c857808060200190518101906125139190612d36565b6115c85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610190565b60606123ea848460008585600080866001600160a01b031685876040516125999190612d1a565b60006040518083038185875af1925050503d80600081146125d6576040519150601f19603f3d011682016040523d82523d6000602084013e6125db565b606091505b50915091506125ec87838387612371565b979650505050505050565b60006020828403121561260957600080fd5b81356001600160e01b031981168114611c1357600080fd5b60008083601f84011261263357600080fd5b5081356001600160401b0381111561264a57600080fd5b6020830191508360208260051b850101111561234f57600080fd5b6000806020838503121561267857600080fd5b82356001600160401b0381111561268e57600080fd5b61269a85828601612621565b90969095509350505050565b80356001600160a01b0381168114611c9057600080fd5b6000602082840312156126cf57600080fd5b611c13826126a6565b6000806000806000608086880312156126f057600080fd5b6126f9866126a6565b9450612707602087016126a6565b93506040860135925060608601356001600160401b038082111561272a57600080fd5b818801915088601f83011261273e57600080fd5b81358181111561274d57600080fd5b89602082850101111561275f57600080fd5b9699959850939650602001949392505050565b60006020828403121561278457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156127c757600080fd5b81356001600160401b03808211156127de57600080fd5b818401915084601f8301126127f257600080fd5b8135818111156128045761280461279f565b604051601f8201601f19908116603f0116810190838211818310171561282c5761282c61279f565b8160405282815287602084870101111561284557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b83811015612880578181015183820152602001612868565b50506000910152565b600081518084526128a1816020860160208601612865565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561290c57603f198886030184526128fa858351612889565b945092850192908501906001016128de565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561295257815184529284019290840190600101612936565b505050602093909301939093525092915050565b602081526000611c136020830184612889565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038281168282160390808211156129af576129af612979565b5092915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612a4257600080fd5b8301803591506001600160401b03821115612a5c57600080fd5b60200191503681900382131561234f57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b808201808211156105cf576105cf612979565b600181811c90821680612ab957607f821691505b602082108103612ad957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160401b038181168382160190808211156129af576129af612979565b60006001600160fb1b03831115612b3957600080fd5b8260051b80858437919091019392505050565b600060208284031215612b5e57600080fd5b5051919050565b818103818111156105cf576105cf612979565b601f8211156115c8576000816000526020600020601f850160051c81016020861015612ba15750805b601f850160051c820191505b81811015612bc057828155600101612bad565b505050505050565b81516001600160401b03811115612be157612be161279f565b612bf581612bef8454612aa5565b84612b78565b602080601f831160018114612c2a5760008415612c125750858301515b600019600386901b1c1916600185901b178555612bc0565b600085815260208120601f198616915b82811015612c5957888601518255948401946001909101908401612c3a565b5085821015612c775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612c9a6040830185612889565b8281036020840152612cac8185612889565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176105cf576105cf612979565b634e487b7160e01b600052601260045260246000fd5b600082612d1557634e487b7160e01b600052601260045260246000fd5b500490565b60008251612d2c818460208701612865565b9190910192915050565b600060208284031215612d4857600080fd5b81518015158114611c1357600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206156c8b802a969f6e1a651e99760b522536af3b5008b82ec57dc8d1de59763f264736f6c63430008170033",
    "sourceMap": "1637:5300:19:-:0;;;743:28:92;;;-1:-1:-1;;;;743:28:92;-1:-1:-1;;;743:28:92;;;2048:429:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:220;307:7;:22;2270:13:19;-1:-1:-1;;;;;1683:36:92;::::1;1675:69;;;::::0;-1:-1:-1;;;1675:69:92;;991:2:821;1675:69:92::1;::::0;::::1;973:21:821::0;1030:2;1010:18;;;1003:30;1069:22;1049:18;;;1042:50;1109:18;;1675:69:92::1;;;;;;;;;1754:12;:28:::0;;-1:-1:-1;;;;;;1754:28:92::1;-1:-1:-1::0;;;;;1754:28:92;;;::::1;::::0;;;::::1;::::0;;2295:26:19::1;2307:13:::0;2295:11:::1;:26::i;:::-;2331:52;2352:9:::0;2363:19;2331:20:::1;:52::i;:::-;2394:11;:26:::0;;-1:-1:-1;;;;;2394:26:19;;::::1;-1:-1:-1::0;;;;;;2394:26:19;;::::1;;::::0;;;2430:18:::1;:40:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;1637:5300:19;;-1:-1:-1;;;1637:5300:19;1421:172:70;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10118:589:92:-;10231:9;10244:1;10231:14;10223:47;;;;-1:-1:-1;;;10223:47:92;;1340:2:821;10223:47:92;;;1322:21:821;1379:2;1359:18;;;1352:30;1418:22;1398:18;;;1391:50;1458:18;;10223:47:92;1138:344:821;10223:47:92;10302:15;;;-1:-1:-1;;;10302:15:92;;-1:-1:-1;;;;;10302:15:92;;10346:1;;10302:15;10327:20;10346:1;10302:15;10327:20;:::i;:::-;;;-1:-1:-1;;;;;10327:20:92;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10391:188:92;;;;;;;;;;;;;;;;;;10524:15;10391:188;;;;;;-1:-1:-1;10391:188:92;;;;;;10358:30;;;:17;:30;;;;;;;:221;;;;;-1:-1:-1;10358:221:92;;;;;;;;;;;;;;;;10594:15;;10590:111;;10675:15;10625:17;:34;10643:15;10657:1;10643:11;:15;:::i;:::-;10625:34;;;;;;;;;;;-1:-1:-1;10625:34:92;:47;;:65;10590:111;10213:494;10118:589;;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:588::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;524:2;513:9;509:18;503:25;493:35;;568:2;557:9;553:18;547:25;537:35;;591:49;636:2;625:9;621:18;591:49;:::i;:::-;581:59;;659:50;704:3;693:9;689:19;659:50;:::i;:::-;649:60;;728:50;773:3;762:9;758:19;728:50;:::i;:::-;718:60;;196:588;;;;;;;;:::o;1487:127::-;1548:10;1543:3;1539:20;1536:1;1529:31;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:180;-1:-1:-1;;;;;1724:10:821;;;1736;;;1720:27;;1759:11;;;1756:37;;;1773:18;;:::i;:::-;1756:37;1619:180;;;;:::o;1804:128::-;1871:9;;;1892:11;;;1889:37;;;1906:18;;:::i;:::-;1804:128;;;;:::o;:::-;1637:5300:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101355760003560e01c806301ffc9a7146101a05780630e8b229b146101d55780630fbf0a93146101f857806313af403514610218578063150b7a021461023857806316c621e01461027157806323ef258014610284578063372500ab146102a45780635357e916146102b95780636360106f146102e657806372f702f3146103065780638da5cb5b146103265780639168ae721461033b578063938e3d7b146103d157806393ce5343146103f15780639406704514610406578063961004d31461043c578063983d95ce1461045c578063ac9650d81461047c578063c3453153146104a9578063cb43b2dd146104d7578063d68124c7146104f7578063e8a3d4851461050c578063f7c618c11461052e578063f9ea29cb1461054e578063fd48ba171461056e57600080fd5b3661019b57600b546001600160a01b031633146101995760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101ac57600080fd5b506101c06101bb3660046125f7565b61059e565b60405190151581526020015b60405180910390f35b3480156101e157600080fd5b506101ea6105d5565b6040519081526020016101cc565b34801561020457600080fd5b50610199610213366004612665565b61061d565b34801561022457600080fd5b506101996102333660046126bd565b610655565b34801561024457600080fd5b506102586102533660046126d8565b610685565b6040516001600160e01b031990911681526020016101cc565b61019961027f366004612772565b6106e8565b34801561029057600080fd5b5061019961029f366004612772565b61071e565b3480156102b057600080fd5b50610199610845565b3480156102c557600080fd5b506102d96102d4366004612772565b610879565b6040516101cc919061278b565b3480156102f257600080fd5b50610199610301366004612772565b6108a3565b34801561031257600080fd5b506003546102d9906001600160a01b031681565b34801561033257600080fd5b506102d96109cb565b34801561034757600080fd5b506103986103563660046126bd565b600760205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b039091169183019190915260608201526080016101cc565b3480156103dd57600080fd5b506101996103ec3660046127b5565b6109da565b3480156103fd57600080fd5b50600c546101ea565b34801561041257600080fd5b506102d9610421366004612772565b6008602052600090815260409020546001600160a01b031681565b34801561044857600080fd5b506101ea610457366004612772565b610a07565b34801561046857600080fd5b50610199610477366004612665565b610a28565b34801561048857600080fd5b5061049c610497366004612665565b610a57565b6040516101cc91906128b5565b3480156104b557600080fd5b506104c96104c43660046126bd565b610bbc565b6040516101cc929190612919565b3480156104e357600080fd5b506101996104f2366004612772565b610dea565b34801561050357600080fd5b506101ea610e18565b34801561051857600080fd5b50610521610e60565b6040516101cc9190612966565b34801561053a57600080fd5b50600a546102d9906001600160a01b031681565b34801561055a57600080fd5b50600b546102d9906001600160a01b031681565b34801561057a57600080fd5b506101c0610589366004612772565b60066020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806105cf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000600960006001600360159054906101000a90046001600160401b03166105fd919061298f565b6001600160401b0316815260200190815260200160002060010154905090565b600280540361063e5760405162461bcd60e51b8152600401610190906129b6565b6002805561064c8282610eee565b50506001600255565b61065d6112a2565b6106795760405162461bcd60e51b8152600401610190906129ed565b610682816112c5565b50565b600354600090600160a01b900460ff166002146106d65760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b6044820152606401610190565b50630a85bd0160e11b95945050505050565b60028054036107095760405162461bcd60e51b8152600401610190906129b6565b6002805561071681611317565b506001600255565b6107266112a2565b6107425760405162461bcd60e51b8152600401610190906129ed565b6000600960006001600360159054906101000a90046001600160401b031661076a919061298f565b6001600160401b0316815260208082019290925260409081016000208151608081018352815481526001820154938101849052600282015492810192909252600301546060820152915082036107f65760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b6044820152606401610190565b805161080290836114c5565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b60028054036108665760405162461bcd60e51b8152600401610190906129b6565b600280556108726115cd565b6001600255565b6005818154811061088957600080fd5b6000918252602090912001546001600160a01b0316905081565b6108ab6112a2565b6108c75760405162461bcd60e51b8152600401610190906129ed565b6000600960006001600360159054906101000a90046001600160401b03166108ef919061298f565b6001600160401b031681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015182036109855760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610190565b6109938282602001516114c5565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de09101610839565b6001546001600160a01b031690565b6109e26112a2565b6109fe5760405162461bcd60e51b8152600401610190906129ed565b610682816116fd565b60048181548110610a1757600080fd5b600091825260209091200154905081565b6002805403610a495760405162461bcd60e51b8152600401610190906129b6565b6002805561064c82826117cc565b6060816001600160401b03811115610a7157610a7161279f565b604051908082528060200260200182016040528015610aa457816020015b6060815260200190600190039081610a8f5790505b509050336000805b84811015610bb3578115610b2b57610b0930878784818110610ad057610ad0612a15565b9050602002810190610ae29190612a2b565b86604051602001610af593929190612a71565b604051602081830303815290604052611bee565b848281518110610b1b57610b1b612a15565b6020026020010181905250610bab565b610b8d30878784818110610b4157610b41612a15565b9050602002810190610b539190612a2b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bee92505050565b848281518110610b9f57610b9f612a15565b60200260200101819052505b600101610aac565b50505092915050565b60606000806004805480602002602001604051908101604052809291908181526020018280548015610c0d57602002820191906000526020600020905b815481526020019060010190808311610bf9575b50505050509050600081516001600160401b03811115610c2f57610c2f61279f565b604051908082528060200260200182016040528015610c58578160200160208202803683370190505b5082519091506000805b82811015610d1757876001600160a01b031660086000878481518110610c8a57610c8a612a15565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b031614848281518110610cd057610cd0612a15565b602002602001019015159081151581525050838181518110610cf457610cf4612a15565b602002602001015115610d0f57610d0c600183612a92565b91505b600101610c62565b50806001600160401b03811115610d3057610d3061279f565b604051908082528060200260200182016040528015610d59578160200160208202803683370190505b5095506000805b83811015610dd457848181518110610d7a57610d7a612a15565b602002602001015115610dcc57858181518110610d9957610d99612a15565b6020026020010151888381518110610db357610db3612a15565b6020908102919091010152610dc9600183612a92565b91505b600101610d60565b50610dde88611c1a565b95505050505050915091565b6002805403610e0b5760405162461bcd60e51b8152600401610190906129b6565b6002805561071681611c95565b6000600960006001600360159054906101000a90046001600160401b0316610e40919061298f565b6001600160401b0316815260200190815260200160002060000154905090565b60008054610e6d90612aa5565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9990612aa5565b8015610ee65780601f10610ebb57610100808354040283529160200191610ee6565b820191906000526020600020905b815481529060010190602001808311610ec957829003601f168201915b505050505081565b806001600160401b038116600003610f3b5760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610190565b600354336000908152600760205260409020546001600160a01b03909116906001600160401b031615610f7657610f7133611d11565b611036565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054336001600160a01b0319909116811790915560009081526007602052604090208054426001600160801b03908116600160801b029116179055600354610ffd91906001600160401b03600160a81b9091041661298f565b33600090815260076020526040902080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b03168110156111fb576003805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e333088888681811061108057611080612a15565b905060200201356040518463ffffffff1660e01b81526004016110a593929190612adf565b600060405180830381600087803b1580156110bf57600080fd5b505af11580156110d3573d6000803e3d6000fd5b50506003805460ff60a01b1916600160a01b179055506110f290503390565b6008600087878581811061110857611108612a15565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006600086868481811061115757611157612a15565b602090810292909201358352508101919091526040016000205460ff166111f35760016006600087878581811061119057611190612a15565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555060048585838181106111d0576111d0612a15565b835460018101855560009485526020948590209190940292909201359190920155505b600101611039565b5033600090815260076020526040812080548492906112249084906001600160401b0316612b03565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611258929190612b23565b60405180910390206112673390565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b60006112ac6109cb565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61131f6109cb565b6001600160a01b0316336001600160a01b03161461134f5760405162461bcd60e51b8152600401610190906129ed565b600a546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461138957600a546001600160a01b0316611396565b600b546001600160a01b03165b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016113c6919061278b565b602060405180830381865afa1580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114079190612b4c565b600a54600b5491925061142c916001600160a01b039182169133913091889116611de7565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161145b919061278b565b602060405180830381865afa158015611478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149c9190612b4c565b6114a69190612b65565b905080600c60008282546114ba9190612a92565b909155505050505050565b8160000361150c5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610190565b60038054600160a81b90046001600160401b03169060019060156115308385612b03565b82546001600160401b039182166101009390930a928302919092021990911617905550604080516080810182528481526020808201858152428385019081526000606085018181528782526009909452949094209251835551600183015591516002820155905160039091015580156115c85742600960006115b3600185612b65565b81526020810191909152604001600020600301555b505050565b60006115d833611f58565b336000908152600760205260409020600101546115f59190612a92565b9050806000036116345760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610190565b3360009081526007602052604081208054426001600160801b03908116600160801b0291161781556001908101919091556003546116829190600160a81b90046001600160401b031661298f565b33600081815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b0319909316929092179091556116c590826120e6565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b600080805461170b90612aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461173790612aa5565b80156117845780601f1061175957610100808354040283529160200191611784565b820191906000526020600020905b81548152906001019060200180831161176757829003601f168201915b50505050509050816000908161179a9190612bc8565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610839929190612c87565b336000908152600760205260408120546001600160401b03908116918391821690036118315760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610190565b806001600160401b03168210156118895760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610190565b6003546001600160a01b031661189e33611d11565b816001600160401b031683036119f6576000600580548060200260200160405190810160405280929190818152602001828054801561190657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118e8575b5050505050905060005b81518110156119f357336001600160a01b031682828151811061193557611935612a15565b60200260200101516001600160a01b0316036119eb57816001835161195a9190612b65565b8151811061196a5761196a612a15565b60200260200101516005828154811061198557611985612a15565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806119c4576119c4612cb5565b600082815260209020810160001990810180546001600160a01b03191690550190556119f3565b600101611910565b50505b3360009081526007602052604081208054849290611a1e9084906001600160401b031661298f565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b0316811015611b92573360086000888885818110611a6d57611a6d612a15565b60209081029290920135835250810191909152604001600020546001600160a01b031614611aca5760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b6044820152606401610190565b600060086000888885818110611ae257611ae2612a15565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e3033898986818110611b3057611b30612a15565b905060200201356040518463ffffffff1660e01b8152600401611b5593929190612adf565b600060405180830381600087803b158015611b6f57600080fd5b505af1158015611b83573d6000803e3d6000fd5b50505050806001019050611a45565b508484604051611ba3929190612b23565b6040518091039020611bb23390565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b6060611c138383604051806060016040528060278152602001612d5960279139612170565b9392505050565b6001600160a01b0381166000908152600760205260408120546001600160401b03168103611c6157506001600160a01b031660009081526007602052604090206001015490565b611c6a82611f58565b6001600160a01b0383166000908152600760205260409020600101546105cf9190612a92565b919050565b611c9d6109cb565b6001600160a01b0316336001600160a01b031614611ccd5760405162461bcd60e51b8152600401610190906129ed565b600c548111611ce95780600c54611ce49190612b65565b611cec565b60005b600c55600a54600b54610682916001600160a01b039081169130913391869116611de7565b6000611d1c82611f58565b6001600160a01b038316600090815260076020526040812060010180549293508392909190611d4c908490612a92565b90915550506001600160a01b038216600090815260076020526040902080546001600160801b03428116600160801b029116179055600354611da1906001906001600160401b03600160a81b9091041661298f565b6001600160a01b03909216600090815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b8115611f515773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611f4557306001600160a01b03851603611e8c57604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611e6457600080fd5b505af1158015611e78573d6000803e3d6000fd5b50505050611e878383836121e8565b611f51565b306001600160a01b03841603611f3a57348214611ee15760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610190565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611f1c57600080fd5b505af1158015611f30573d6000803e3d6000fd5b5050505050611f51565b611e878383836121e8565b611f51858585856122b3565b5050505050565b6001600160a01b0381166000908152600760209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b0316938201939093526001909101546060820152600354909291600160a81b90910416815b818110156120dd5760008181526009602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460608201529084830361202e5785604001516001600160801b0316612034565b81604001515b90506000826060015160000361204a5742612050565b82606001515b905060008061208689600001516001600160401b031685856120729190612b65565b61207c9190612ccb565b866020015161230b565b915091506000806120a68c8860000151856120a19190612cf8565b612356565b915091508380156120b45750815b6120be578b6120c0565b805b9b50505050505050506001816120d69190612a92565b9050611fcd565b50505050919050565b600c548111156121335760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610190565b80600c60008282546121459190612b65565b9091555050600a54600b5461216c916001600160a01b039081169130918691869116611de7565b5050565b6060600080856001600160a01b03168560405161218d9190612d1a565b600060405180830381855af49150503d80600081146121c8576040519150601f19603f3d011682016040523d82523d6000602084013e6121cd565b606091505b50915091506121de86838387612371565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612235576040519150601f19603f3d011682016040523d82523d6000602084013e61223a565b606091505b50509050806122ad57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561227e57600080fd5b505af1158015612292573d6000803e3d6000fd5b506122ad935050506001600160a01b038416905085856123f2565b50505050565b816001600160a01b0316836001600160a01b031603156122ad57306001600160a01b038416036122f6576122f16001600160a01b03851683836123f2565b6122ad565b6122ad6001600160a01b038516848484612455565b60008083600003612322575060019050600061234f565b8383028385828161233557612335612ce2565b041461234857600080925092505061234f565b6001925090505b9250929050565b6000808383018481101561234857600080925092505061234f565b606083156123e05782516000036123d9576001600160a01b0385163b6123d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610190565b50816123ea565b6123ea8383612476565b949350505050565b6040516001600160a01b0383166024820152604481018290526115c890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526124a0565b6122ad846323b872dd60e01b85858560405160240161241e93929190612adf565b8151156124865781518083602001fd5b8060405162461bcd60e51b81526004016101909190612966565b60006124f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125729092919063ffffffff16565b8051909150156115c857808060200190518101906125139190612d36565b6115c85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610190565b60606123ea848460008585600080866001600160a01b031685876040516125999190612d1a565b60006040518083038185875af1925050503d80600081146125d6576040519150601f19603f3d011682016040523d82523d6000602084013e6125db565b606091505b50915091506125ec87838387612371565b979650505050505050565b60006020828403121561260957600080fd5b81356001600160e01b031981168114611c1357600080fd5b60008083601f84011261263357600080fd5b5081356001600160401b0381111561264a57600080fd5b6020830191508360208260051b850101111561234f57600080fd5b6000806020838503121561267857600080fd5b82356001600160401b0381111561268e57600080fd5b61269a85828601612621565b90969095509350505050565b80356001600160a01b0381168114611c9057600080fd5b6000602082840312156126cf57600080fd5b611c13826126a6565b6000806000806000608086880312156126f057600080fd5b6126f9866126a6565b9450612707602087016126a6565b93506040860135925060608601356001600160401b038082111561272a57600080fd5b818801915088601f83011261273e57600080fd5b81358181111561274d57600080fd5b89602082850101111561275f57600080fd5b9699959850939650602001949392505050565b60006020828403121561278457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156127c757600080fd5b81356001600160401b03808211156127de57600080fd5b818401915084601f8301126127f257600080fd5b8135818111156128045761280461279f565b604051601f8201601f19908116603f0116810190838211818310171561282c5761282c61279f565b8160405282815287602084870101111561284557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b83811015612880578181015183820152602001612868565b50506000910152565b600081518084526128a1816020860160208601612865565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561290c57603f198886030184526128fa858351612889565b945092850192908501906001016128de565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561295257815184529284019290840190600101612936565b505050602093909301939093525092915050565b602081526000611c136020830184612889565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038281168282160390808211156129af576129af612979565b5092915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612a4257600080fd5b8301803591506001600160401b03821115612a5c57600080fd5b60200191503681900382131561234f57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b808201808211156105cf576105cf612979565b600181811c90821680612ab957607f821691505b602082108103612ad957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160401b038181168382160190808211156129af576129af612979565b60006001600160fb1b03831115612b3957600080fd5b8260051b80858437919091019392505050565b600060208284031215612b5e57600080fd5b5051919050565b818103818111156105cf576105cf612979565b601f8211156115c8576000816000526020600020601f850160051c81016020861015612ba15750805b601f850160051c820191505b81811015612bc057828155600101612bad565b505050505050565b81516001600160401b03811115612be157612be161279f565b612bf581612bef8454612aa5565b84612b78565b602080601f831160018114612c2a5760008415612c125750858301515b600019600386901b1c1916600185901b178555612bc0565b600085815260208120601f198616915b82811015612c5957888601518255948401946001909101908401612c3a565b5085821015612c775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612c9a6040830185612889565b8281036020840152612cac8185612889565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176105cf576105cf612979565b634e487b7160e01b600052601260045260246000fd5b600082612d1557634e487b7160e01b600052601260045260246000fd5b500490565b60008251612d2c818460208701612865565b9190910192915050565b600060208284031215612d4857600080fd5b81518015158114611c1357600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206156c8b802a969f6e1a651e99760b522536af3b5008b82ec57dc8d1de59763f264736f6c63430008170033",
    "sourceMap": "1637:5300:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:18;;-1:-1:-1;;;;;2620:18:19;2606:10;:32;2598:77;;;;-1:-1:-1;;;2598:77:19;;216:2:821;2598:77:19;;;198:21:821;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2598:77:19;;;;;;;;;1637:5300;;;;;3772:203;;;;;;;;;;-1:-1:-1;3772:203:19;;;;;:::i;:::-;;:::i;:::-;;;831:14:821;;824:22;806:41;;794:2;779:18;3772:203:19;;;;;;;;5800:179:92;;;;;;;;;;;;;:::i;:::-;;;1004:25:821;;;992:2;977:18;5800:179:92;858:177:821;2182:101:92;;;;;;;;;;-1:-1:-1;2182:101:92;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;3505:261:19:-;;;;;;;;;;-1:-1:-1;3505:261:19;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3198:33:821;;;3180:52;;3168:2;3153:18;3505:261:19;3036:202:821;2731:165:19;;;;;;:::i;:::-;;:::i;3933:513:92:-;;;;;;;;;;-1:-1:-1;3933:513:92;;;;;:::i;:::-;;:::i;2831:78::-;;;;;;;;;;;;;:::i;1035:29::-;;;;;;;;;;-1:-1:-1;1035:29:92;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3187:446::-;;;;;;;;;;-1:-1:-1;3187:446:92;;;;;:::i;:::-;;:::i;646:27::-;;;;;;;;;;-1:-1:-1;646:27:92;;;;-1:-1:-1;;;;;646:27:92;;;871:86:70;;;;;;;;;;;;;:::i;1277:41:92:-;;;;;;;;;;-1:-1:-1;1277:41:92;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1277:41:92;;;;-1:-1:-1;;;1277:41:92;;;;;;-1:-1:-1;;;1277:41:92;;;-1:-1:-1;;;;;1277:41:92;;;;;;;;-1:-1:-1;;;;;3918:15:821;;;3900:34;;3970:15;;;;3965:2;3950:18;;3943:43;-1:-1:-1;;;;;4022:32:821;;;4002:18;;;3995:60;;;;4086:2;4071:18;;4064:34;3850:3;3835:19;1277:41:92;3636:468:821;1003:188:56;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;3191:124:19:-;;;;;;;;;;-1:-1:-1;3290:18:19;;3191:124;;1386:48:92;;;;;;;;;;-1:-1:-1;1386:48:92;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1386:48:92;;;939:30;;;;;;;;;;-1:-1:-1;939:30:92;;;;;:::i;:::-;;:::i;2495:107::-;;;;;;;;;;-1:-1:-1;2495:107:92;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4738:911:92:-;;;;;;;;;;-1:-1:-1;4738:911:92;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2956:159:19:-;;;;;;;;;;-1:-1:-1;2956:159:19;;;;;:::i;:::-;;:::i;5655:139:92:-;;;;;;;;;;;;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1811:26:19:-;;;;;;;;;;-1:-1:-1;1811:26:19;;;;-1:-1:-1;;;;;1811:26:19;;;1907:33;;;;;;;;;;-1:-1:-1;1907:33:19;;;;-1:-1:-1;;;;;1907:33:19;;;1138:41:92;;;;;;;;;;-1:-1:-1;1138:41:92;;;;;:::i;:::-;;;;;;;;;;;;;;;;3772:203:19;3857:4;-1:-1:-1;;;;;;3880:48:19;;-1:-1:-1;;;3880:48:19;;:88;;-1:-1:-1;;;;;;;;;;947:40:22;;;3932:36:19;3873:95;3772:203;-1:-1:-1;;3772:203:19:o;5800:179:92:-;5854:27;5915:17;:38;5951:1;5933:15;;;;;;;;;-1:-1:-1;;;;;5933:15:92;:19;;;;:::i;:::-;-1:-1:-1;;;;;5915:38:92;;;;;;;;;;;;:57;;;5893:79;;5800:179;:::o;2182:101::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2259:17:92::1;2266:9:::0;;2259:6:::1;:17::i;:::-;-1:-1:-1::0;;202:1:220;851:7;:22;2182:101:92:o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;3505:261:19:-;3678:9;;3652:6;;-1:-1:-1;;;3678:9:19;;;;3691:1;3678:14;3670:42;;;;-1:-1:-1;;;3670:42:19;;9119:2:821;3670:42:19;;;9101:21:821;9158:2;9138:18;;;9131:30;-1:-1:-1;;;9177:18:821;;;9170:45;9232:18;;3670:42:19;8917:339:821;3670:42:19;-1:-1:-1;;;;3505:261:19;;;;;;;:::o;2731:165::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2825:29:19::1;2846:7:::0;2825:20:::1;:29::i;:::-;-1:-1:-1::0;202:1:220;851:7;:22;2731:165:19:o;3933:513:92:-;4025:24;:22;:24::i;:::-;4020:80;;4065:24;;-1:-1:-1;;;4065:24:92;;;;;;;:::i;4020:80::-;4110:33;4146:17;:38;4182:1;4164:15;;;;;;;;;-1:-1:-1;;;;;4164:15:92;:19;;;;:::i;:::-;-1:-1:-1;;;;;4146:38:92;;;;;;;;;;;;;;;-1:-1:-1;4146:38:92;4110:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4202:51:92;;4194:81;;;;-1:-1:-1;;;4194:81:92;;9463:2:821;4194:81:92;;;9445:21:821;9502:2;9482:18;;;9475:30;-1:-1:-1;;;9521:18:821;;;9514:47;9578:18;;4194:81:92;9261:341:821;4194:81:92;4307:18;;4286:61;;4327:19;4286:20;:61::i;:::-;4389:28;;;;;4363:76;;;9781:25:821;;;9822:18;;;9815:34;;;4363:76:92;;9754:18:821;4363:76:92;;;;;;;;4010:436;3933:513;:::o;2831:78::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2887:15:92::1;:13;:15::i;:::-;202:1:220::0;851:7;:22;2831:78:92:o;1035:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1035:29:92;;-1:-1:-1;1035:29:92;:::o;3187:446::-;3259:24;:22;:24::i;:::-;3254:80;;3299:24;;-1:-1:-1;;;3299:24:92;;;;;;;:::i;3254:80::-;3344:33;3380:17;:38;3416:1;3398:15;;;;;;;;;-1:-1:-1;;;;;3398:15:92;:19;;;;:::i;:::-;-1:-1:-1;;;;;3380:38:92;;;;;;;;;;;;3344:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3449:9;:18;;;3436:9;:31;3428:64;;;;-1:-1:-1;;;3428:64:92;;10062:2:821;3428:64:92;;;10044:21:821;10101:2;10081:18;;;10074:30;-1:-1:-1;;;10120:18:821;;;10113:50;10180:18;;3428:64:92;9860:344:821;3428:64:92;3503:61;3524:9;3535;:28;;;3503:20;:61::i;:::-;3596:18;;3580:46;;;9781:25:821;;;9837:2;9822:18;;9815:34;;;3580:46:92;;9754:18:821;3580:46:92;9607:248:821;871:86:70;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;939:30:92:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;939:30:92;:::o;2495:107::-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;2575:20:92::1;2585:9:::0;;2575::::1;:20::i;696:567:65:-:0;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;1415:10:65;834:14;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;4738:911:92:-;4822:30;4854:16;4882:31;4916:13;4882:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4939:28;4981:14;:21;-1:-1:-1;;;;;4970:33:92;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4970:33:92;-1:-1:-1;5041:21:92;;4939:64;;-1:-1:-1;5013:25:92;;5111:194;5135:17;5131:1;:21;5111:194;;;5229:7;-1:-1:-1;;;;;5193:43:92;:13;:32;5207:14;5222:1;5207:17;;;;;;;;:::i;:::-;;;;;;;5193:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5193:32:92;-1:-1:-1;;;;;5193:43:92;;5173:14;5188:1;5173:17;;;;;;;;:::i;:::-;;;;;;:63;;;;;;;;;;;5254:14;5269:1;5254:17;;;;;;;;:::i;:::-;;;;;;;5250:44;;;5273:21;5293:1;5273:21;;:::i;:::-;;;5250:44;5154:3;;5111:194;;;;5345:16;-1:-1:-1;;;;;5331:31:92;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5331:31:92;;5315:47;;5372:13;5404:9;5399:196;5423:17;5419:1;:21;5399:196;;;5465:14;5480:1;5465:17;;;;;;;;:::i;:::-;;;;;;;5461:124;;;5525:14;5540:1;5525:17;;;;;;;;:::i;:::-;;;;;;;5502:13;5516:5;5502:20;;;;;;;;:::i;:::-;;;;;;;;;;:40;5560:10;5569:1;5560:10;;:::i;:::-;;;5461:124;5442:3;;5399:196;;;;5616:26;5634:7;5616:17;:26::i;:::-;5605:37;;4872:777;;;;;4738:911;;;:::o;2956:159:19:-;245:1:220;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:220;;;;;;;:::i;:::-;245:1;678:18;;3043:30:19::1;3065:7:::0;3043:21:::1;:30::i;5655:139:92:-:0;5699:17;5740;:38;5776:1;5758:15;;;;;;;;;-1:-1:-1;;;;;5758:15:92;:19;;;;:::i;:::-;-1:-1:-1;;;;;5740:38:92;;;;;;;;;;;;:47;;;5728:59;;5655:139;:::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6230:1125:92:-;6323:9;-1:-1:-1;;;;;6358:8:92;;6303:10;6358:8;6350:37;;;;-1:-1:-1;;;6350:37:92;;11941:2:821;6350:37:92;;;11923:21:821;11980:2;11960:18;;;11953:30;-1:-1:-1;;;11999:18:821;;;11992:46;12055:18;;6350:37:92;11739:340:821;6350:37:92;6422:12;;1415:10:65;6398:21:92;6449:26;;;:7;:26;;;;;:39;-1:-1:-1;;;;;6422:12:92;;;;-1:-1:-1;;;;;6449:39:92;:43;6445:362;;6508:51;1415:10:65;6508:32:92;:51::i;:::-;6445:362;;;6590:12;:36;;;;;;;;;;;;;1415:10:65;-1:-1:-1;;;;;;6590:36:92;;;;;;;;-1:-1:-1;6640:26:92;;;:7;6590:36;6640:26;;;;:70;;6694:15;-1:-1:-1;;;;;6640:70:92;;;-1:-1:-1;;;6640:70:92;;;;;;6777:15;;:19;;6590:36;-1:-1:-1;;;;;;;;6777:15:92;;;;:19;:::i;:::-;1415:10:65;6724:26:92;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;6724:72:92;;;;-1:-1:-1;;;6724:72:92;-1:-1:-1;;;;;;;;6724:72:92;;;;;;;;;6445:362;6821:9;6816:419;6840:3;-1:-1:-1;;;;;6836:7:92;:1;:7;6816:419;;;6864:9;:13;;-1:-1:-1;;;;6864:13:92;-1:-1:-1;;;6864:13:92;;;-1:-1:-1;;;;;6891:39:92;;;1415:10:65;6958:4:92;6965:9;;6975:1;6965:12;;;;;;;:::i;:::-;;;;;;;6891:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6992:9:92;:13;;-1:-1:-1;;;;6992:13:92;-1:-1:-1;;;6992:13:92;;;-1:-1:-1;7050:17:92;;-1:-1:-1;1415:10:65;;1336:96;7050:17:92;7020:13;:27;7034:9;;7044:1;7034:12;;;;;;;:::i;:::-;;;;;;;7020:27;;;;;;;;;;;;:47;;;;;-1:-1:-1;;;;;7020:47:92;;;;;-1:-1:-1;;;;;7020:47:92;;;;;;7087:9;:23;7097:9;;7107:1;7097:12;;;;;;;:::i;:::-;;;;;;;;;;7087:23;;-1:-1:-1;7087:23:92;;;;;;;;-1:-1:-1;7087:23:92;;;;7082:143;;7156:4;7130:9;:23;7140:9;;7150:1;7140:12;;;;;;;:::i;:::-;;;;;;;7130:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;7178:13;7197:9;;7207:1;7197:12;;;;;;;:::i;:::-;7178:32;;;;;;;-1:-1:-1;7178:32:92;;;7197:12;7178:32;;;;7197:12;;;;;;;;;7178:32;;;;;-1:-1:-1;7082:143:92;6845:3;;6816:419;;;-1:-1:-1;1415:10:65;7244:26:92;;;;:7;:26;;;;;:46;;7287:3;;7244:26;:46;;7287:3;;-1:-1:-1;;;;;7244:46:92;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7244:46:92;;;;;-1:-1:-1;;;;;7244:46:92;;;;;;7338:9;;7306:42;;;;;;;:::i;:::-;;;;;;;;7319:17;1415:10:65;;1336:96;7319:17:92;-1:-1:-1;;;;;7306:42:92;;;;;;;;;;;6293:1062;;6230:1125;;:::o;6820:115:19:-;6884:4;6921:7;:5;:7::i;:::-;-1:-1:-1;;;;;6907:21:19;:10;-1:-1:-1;;;;;6907:21:19;;6900:28;;6820:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;5069:660:19:-;5165:7;:5;:7::i;:::-;-1:-1:-1;;;;;5151:21:19;:10;-1:-1:-1;;;;;5151:21:19;;5143:48;;;;-1:-1:-1;;;5143:48:19;;;;;;;:::i;:::-;5225:11;;5202:20;;-1:-1:-1;;;;;5225:11:19;434:42:292;5225:47:19;:82;;5296:11;;-1:-1:-1;;;;;5296:11:19;5225:82;;;5275:18;;-1:-1:-1;;;;;5275:18:19;5225:82;5202:105;;5318:21;5349:12;-1:-1:-1;;;;;5342:30:19;;5381:4;5342:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5458:11;;5555:18;;5318:69;;-1:-1:-1;5397:186:19;;-1:-1:-1;;;;;5458:11:19;;;;5483:10;;5515:4;;5534:7;;5555:18;5397:47;:186::i;:::-;5593:20;5664:13;5623:12;-1:-1:-1;;;;;5616:30:19;;5655:4;5616:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5593:84;;5710:12;5688:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;5069:660:19:o;10118:589:92:-;10231:9;10244:1;10231:14;10223:47;;;;-1:-1:-1;;;10223:47:92;;13535:2:821;10223:47:92;;;13517:21:821;13574:2;13554:18;;;13547:30;-1:-1:-1;;;13593:18:821;;;13586:50;13653:18;;10223:47:92;13333:344:821;10223:47:92;10302:15;;;-1:-1:-1;;;10302:15:92;;-1:-1:-1;;;;;10302:15:92;;10346:1;;10302:15;10327:20;10346:1;10302:15;10327:20;:::i;:::-;;;-1:-1:-1;;;;;10327:20:92;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10391:188:92;;;;;;;;;;;;;;;;;;10524:15;10391:188;;;;;;-1:-1:-1;10391:188:92;;;;;;10358:30;;;:17;:30;;;;;;;:221;;;;;-1:-1:-1;10358:221:92;;;;;;;;;;;;;;;;10594:15;;10590:111;;10675:15;10625:17;:34;10643:15;10657:1;10643:11;:15;:::i;:::-;10625:34;;;;;;;;;;;-1:-1:-1;10625:34:92;:47;;:65;10590:111;10213:494;10118:589;;:::o;8743:534::-;8795:15;8859:36;1415:10:65;8859:17:92;:36::i;:::-;1415:10:65;8813:26:92;;;;:7;:26;;;;;:43;;;:82;;;;:::i;:::-;8795:100;;8914:7;8925:1;8914:12;8906:35;;;;-1:-1:-1;;;8906:35:92;;13884:2:821;8906:35:92;;;13866:21:821;13923:2;13903:18;;;13896:30;-1:-1:-1;;;13942:18:821;;;13935:40;13992:18;;8906:35:92;13682:334:821;8906:35:92;1415:10:65;8952:26:92;;;;:7;:26;;;;;:70;;9006:15;-1:-1:-1;;;;;8952:70:92;;;-1:-1:-1;;;8952:70:92;;;;;;-1:-1:-1;9032:43:92;;;:47;;;;9142:15;;:19;;-1:-1:-1;;;;9142:15:92;;-1:-1:-1;;;;;9142:15:92;:19;:::i;:::-;1415:10:65;9089:26:92;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;9089:72:92;;;;-1:-1:-1;;;9089:72:92;-1:-1:-1;;;;;;;;9089:72:92;;;;;;;;;;9172:40;;9204:7;9172:12;:40::i;:::-;9228:42;;1004:25:821;;;1415:10:65;;9228:42:92;;992:2:821;977:18;9228:42:92;;;;;;;8785:492;8743:534::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;7420:1246:92:-;1415:10:65;7496:21:92;7520:26;;;:7;:26;;;;;:39;-1:-1:-1;;;;;7520:39:92;;;;7589:9;;7624:8;;;;7616:41;;;;-1:-1:-1;;;7616:41:92;;16804:2:821;7616:41:92;;;16786:21:821;16843:2;16823:18;;;16816:30;-1:-1:-1;;;16862:18:821;;;16855:50;16922:18;;7616:41:92;16602:344:821;7616:41:92;7692:3;-1:-1:-1;;;;;7675:20:92;:13;:20;;7667:61;;;;-1:-1:-1;;;7667:61:92;;17153:2:821;7667:61:92;;;17135:21:821;17192:2;17172:18;;;17165:30;-1:-1:-1;;;17211:18:821;;;17204:58;17279:18;;7667:61:92;16951:352:821;7667:61:92;7763:12;;-1:-1:-1;;;;;7763:12:92;7786:51;1415:10:65;6508:32:92;:51::i;7786:::-;7869:3;-1:-1:-1;;;;;7852:20:92;:13;:20;7848:400;;7888:30;7921:12;7888:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7888:45:92;;;;;;;;;;;;;;;;;;;;;;;7952:9;7947:291;7971:13;:20;7967:1;:24;7947:291;;;1415:10:65;-1:-1:-1;;;;;8020:37:92;:13;8034:1;8020:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8020:37:92;;8016:208;;8099:13;8136:1;8113:13;:20;:24;;;;:::i;:::-;8099:39;;;;;;;;:::i;:::-;;;;;;;8081:12;8094:1;8081:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8081:57:92;;;;;-1:-1:-1;;;;;8081:57:92;;;;;;8160:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8160:18:92;;;;;-1:-1:-1;;;;;;8160:18:92;;;;;;8200:5;;8016:208;7993:3;;7947:291;;;;7874:374;7848:400;1415:10:65;8257:26:92;;;;:7;:26;;;;;:46;;8300:3;;8257:26;:46;;8300:3;;-1:-1:-1;;;;;8257:46:92;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8257:46:92;;;;;-1:-1:-1;;;;;8257:46:92;;;;;;8319:9;8314:285;8338:3;-1:-1:-1;;;;;8334:7:92;:1;:7;8314:285;;;1415:10:65;8370:13:92;:27;8384:9;;8394:1;8384:12;;;;;;;:::i;:::-;;;;;;;;;;8370:27;;-1:-1:-1;8370:27:92;;;;;;;;-1:-1:-1;8370:27:92;;-1:-1:-1;;;;;8370:27:92;:48;8362:71;;;;-1:-1:-1;;;8362:71:92;;17642:2:821;8362:71:92;;;17624:21:821;17681:2;17661:18;;;17654:30;-1:-1:-1;;;17700:18:821;;;17693:40;17750:18;;8362:71:92;17440:334:821;8362:71:92;8485:1;8447:13;:27;8461:9;;8471:1;8461:12;;;;;;;:::i;:::-;;;;;;;;;;8447:27;;-1:-1:-1;8447:27:92;;;;;;;;-1:-1:-1;8447:27:92;:40;;-1:-1:-1;;;;;;8447:40:92;-1:-1:-1;;;;;8447:40:92;;;;;;8501:39;;;8549:4;1415:10:65;8575:9:92;;8585:1;8575:12;;;;;;;:::i;:::-;;;;;;;8501:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8343:3;;;;;8314:285;;;;8649:9;;8614:45;;;;;;;:::i;:::-;;;;;;;;8630:17;1415:10:65;;1336:96;8630:17:92;-1:-1:-1;;;;;8614:45:92;;;;;;;;;;;7486:1180;;;7420:1246;;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;9331:312:92:-;-1:-1:-1;;;;;9436:14:92;;9404:16;9436:14;;;:7;:14;;;;;:27;-1:-1:-1;;;;;9436:27:92;:32;;9432:205;;-1:-1:-1;;;;;;9495:14:92;;;;;:7;:14;;;;;:31;;;;9331:312::o;9432:205::-;9602:24;9620:5;9602:17;:24::i;:::-;-1:-1:-1;;;;;9568:14:92;;;;;;:7;:14;;;;;:31;;;:58;;;;:::i;9432:205::-;9331:312;;;:::o;5818:481:19:-;5915:7;:5;:7::i;:::-;-1:-1:-1;;;;;5901:21:19;:10;-1:-1:-1;;;;;5901:21:19;;5893:48;;;;-1:-1:-1;;;5893:48:19;;;;;;;:::i;:::-;6042:18;;6032:7;:28;:63;;6088:7;6067:18;;:28;;;;:::i;:::-;6032:63;;;6063:1;6032:63;6011:18;:84;6167:11;;6264:18;;6106:186;;-1:-1:-1;;;;;6167:11:19;;;;6200:4;;6219:10;;6243:7;;6264:18;6106:47;:186::i;9742:333:92:-;9828:15;9846:26;9864:7;9846:17;:26::i;:::-;-1:-1:-1;;;;;9882:16:92;;;;;;:7;:16;;;;;:33;;:44;;9828;;-1:-1:-1;9828:44:92;;9882:33;;:16;:44;;9828;;9882;:::i;:::-;;;;-1:-1:-1;;;;;;;9936:16:92;;;;;;:7;:16;;;;;:60;;-1:-1:-1;;;;;9980:15:92;9936:60;;-1:-1:-1;;;9936:60:92;;;;;;10049:15;;:19;;-1:-1:-1;;;;;;;;;;10049:15:92;;;;:19;:::i;:::-;-1:-1:-1;;;;;10006:16:92;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10006:62:92;;;;-1:-1:-1;;;10006:62:92;-1:-1:-1;;;;;;;;10006:62:92;;;;;;;;;;-1:-1:-1;9742:333:92:o;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;1004:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;977:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;:::-;1221:761;;1266:626;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;17981:2:821;1645:52:292;;;17963:21:821;18020:2;18000:18;;;17993:30;-1:-1:-1;;;18039:18:821;;;18032:49;18098:18;;1645:52:292;17779:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:761;;1552:340;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;:::-;967:1021;;;;;:::o;10758:1047:92:-;-1:-1:-1;;;;;10884:16:92;;10833;10884;;;:7;:16;;;;;;;;10861:39;;;;;;;;;-1:-1:-1;;;;;10861:39:92;;;;;-1:-1:-1;;;10861:39:92;;;;;;;;;;-1:-1:-1;;;10861:39:92;;;-1:-1:-1;;;;;10861:39:92;;;;;;;;;;;;;;;;;11007:15;;10861:39;;;-1:-1:-1;;;11007:15:92;;;;10861:39;11033:766;11074:16;11070:1;:20;11033:766;;;11114:33;11150:20;;;:17;:20;;;;;;;;11114:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11205:23;;;:76;;11258:6;:23;;;-1:-1:-1;;;;;11205:76:92;;;;11231:9;:24;;;11205:76;11185:96;;11295:15;11313:9;:22;;;11339:1;11313:27;:70;;11368:15;11313:70;;;11343:9;:22;;;11313:70;11295:88;;11399:22;11423;11449:136;11506:6;:19;;;-1:-1:-1;;;;;11482:43:92;11493:9;11483:7;:19;;;;:::i;:::-;11482:43;;;;:::i;:::-;11543:9;:28;;;11449:15;:136::i;:::-;11398:187;;;;11600:18;11620;11642:62;11658:8;11685:9;:18;;;11668:14;:35;;;;:::i;:::-;11642:15;:62::i;:::-;11599:105;;;;11730:17;:34;;;;;11751:13;11730:34;:58;;11780:8;11730:58;;;11767:10;11730:58;11719:69;;11100:699;;;;;;;11097:1;11092:6;;;;;:::i;:::-;;;11033:766;;;;10851:954;;;10758:1047;;;:::o;4402:401:19:-;4515:18;;4503:8;:30;;4495:67;;;;-1:-1:-1;;;4495:67:19;;18856:2:821;4495:67:19;;;18838:21:821;18895:2;18875:18;;;18868:30;-1:-1:-1;;;18914:18:821;;;18907:54;18978:18;;4495:67:19;18654:348:821;4495:67:19;4594:8;4572:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4673:11:19;;4768:18;;4612:184;;-1:-1:-1;;;;;4673:11:19;;;;4706:4;;4725:7;;4746:8;;4768:18;4612:47;:184::i;:::-;4402:401;;:::o;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;2866:439:292:-;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;:::-;2975:330;2866:439;;;:::o;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;1339:493:243:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:243;;-1:-1:-1;1705:1:243;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:243;-1:-1:-1;1339:493:243;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;7668:628:289;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;19711:2:821;8110:60:289;;;19693:21:821;19750:2;19730:18;;;19723:30;19789:31;19769:18;;;19762:59;19838:18;;8110:60:289;19509:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;759:175:228:-;868:58;;-1:-1:-1;;;;;20059:32:821;;868:58:228;;;20041:51:821;20108:18;;;20101:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;20014:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1040:96;1060:5;1090:27;;;1119:4;1125:2;1129:5;1067:68;;;;;;;;;;:::i;8818:540:289:-;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;20630:2:821;3711:85:228;;;20612:21:821;20669:2;20649:18;;;20642:30;20708:34;20688:18;;;20681:62;-1:-1:-1;;;20759:18:821;;;20752:40;20809:19;;3711:85:228;20428:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;375:286:821:-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:23;;-1:-1:-1;;;;;;580:32:821;;570:43;;560:71;;627:1;624;617:12;1040:367;1103:8;1113:6;1167:3;1160:4;1152:6;1148:17;1144:27;1134:55;;1185:1;1182;1175:12;1134:55;-1:-1:-1;1208:20:821;;-1:-1:-1;;;;;1240:30:821;;1237:50;;;1283:1;1280;1273:12;1237:50;1320:4;1312:6;1308:17;1296:29;;1380:3;1373:4;1363:6;1360:1;1356:14;1348:6;1344:27;1340:38;1337:47;1334:67;;;1397:1;1394;1387:12;1412:437;1498:6;1506;1559:2;1547:9;1538:7;1534:23;1530:32;1527:52;;;1575:1;1572;1565:12;1527:52;1615:9;1602:23;-1:-1:-1;;;;;1640:6:821;1637:30;1634:50;;;1680:1;1677;1670:12;1634:50;1719:70;1781:7;1772:6;1761:9;1757:22;1719:70;:::i;:::-;1808:8;;1693:96;;-1:-1:-1;1412:437:821;-1:-1:-1;;;;1412:437:821:o;1854:173::-;1922:20;;-1:-1:-1;;;;;1971:31:821;;1961:42;;1951:70;;2017:1;2014;2007:12;2032:186;2091:6;2144:2;2132:9;2123:7;2119:23;2115:32;2112:52;;;2160:1;2157;2150:12;2112:52;2183:29;2202:9;2183:29;:::i;2223:808::-;2320:6;2328;2336;2344;2352;2405:3;2393:9;2384:7;2380:23;2376:33;2373:53;;;2422:1;2419;2412:12;2373:53;2445:29;2464:9;2445:29;:::i;:::-;2435:39;;2493:38;2527:2;2516:9;2512:18;2493:38;:::i;:::-;2483:48;;2578:2;2567:9;2563:18;2550:32;2540:42;;2633:2;2622:9;2618:18;2605:32;-1:-1:-1;;;;;2697:2:821;2689:6;2686:14;2683:34;;;2713:1;2710;2703:12;2683:34;2751:6;2740:9;2736:22;2726:32;;2796:7;2789:4;2785:2;2781:13;2777:27;2767:55;;2818:1;2815;2808:12;2767:55;2858:2;2845:16;2884:2;2876:6;2873:14;2870:34;;;2900:1;2897;2890:12;2870:34;2945:7;2940:2;2931:6;2927:2;2923:15;2919:24;2916:37;2913:57;;;2966:1;2963;2956:12;2913:57;2223:808;;;;-1:-1:-1;2223:808:821;;-1:-1:-1;2997:2:821;2989:11;;3019:6;2223:808;-1:-1:-1;;;2223:808:821:o;3243:180::-;3302:6;3355:2;3343:9;3334:7;3330:23;3326:32;3323:52;;;3371:1;3368;3361:12;3323:52;-1:-1:-1;3394:23:821;;3243:180;-1:-1:-1;3243:180:821:o;3428:203::-;-1:-1:-1;;;;;3592:32:821;;;;3574:51;;3562:2;3547:18;;3428:203::o;4109:127::-;4170:10;4165:3;4161:20;4158:1;4151:31;4201:4;4198:1;4191:15;4225:4;4222:1;4215:15;4241:922;4310:6;4363:2;4351:9;4342:7;4338:23;4334:32;4331:52;;;4379:1;4376;4369:12;4331:52;4419:9;4406:23;-1:-1:-1;;;;;4489:2:821;4481:6;4478:14;4475:34;;;4505:1;4502;4495:12;4475:34;4543:6;4532:9;4528:22;4518:32;;4588:7;4581:4;4577:2;4573:13;4569:27;4559:55;;4610:1;4607;4600:12;4559:55;4646:2;4633:16;4668:2;4664;4661:10;4658:36;;;4674:18;;:::i;:::-;4749:2;4743:9;4717:2;4803:13;;-1:-1:-1;;4799:22:821;;;4823:2;4795:31;4791:40;4779:53;;;4847:18;;;4867:22;;;4844:46;4841:72;;;4893:18;;:::i;:::-;4933:10;4929:2;4922:22;4968:2;4960:6;4953:18;5008:7;5003:2;4998;4994;4990:11;4986:20;4983:33;4980:53;;;5029:1;5026;5019:12;4980:53;5085:2;5080;5076;5072:11;5067:2;5059:6;5055:15;5042:46;5130:1;5108:15;;;5125:2;5104:24;5097:35;;;;-1:-1:-1;5112:6:821;4241:922;-1:-1:-1;;;;;4241:922:821:o;5621:250::-;5706:1;5716:113;5730:6;5727:1;5724:13;5716:113;;;5806:11;;;5800:18;5787:11;;;5780:39;5752:2;5745:10;5716:113;;;-1:-1:-1;;5863:1:821;5845:16;;5838:27;5621:250::o;5876:270::-;5917:3;5955:5;5949:12;5982:6;5977:3;5970:19;5998:76;6067:6;6060:4;6055:3;6051:14;6044:4;6037:5;6033:16;5998:76;:::i;:::-;6128:2;6107:15;-1:-1:-1;;6103:29:821;6094:39;;;;6135:4;6090:50;;5876:270;-1:-1:-1;;5876:270:821:o;6151:800::-;6311:4;6340:2;6380;6369:9;6365:18;6410:2;6399:9;6392:21;6433:6;6468;6462:13;6499:6;6491;6484:22;6537:2;6526:9;6522:18;6515:25;;6599:2;6589:6;6586:1;6582:14;6571:9;6567:30;6563:39;6549:53;;6637:2;6629:6;6625:15;6658:1;6668:254;6682:6;6679:1;6676:13;6668:254;;;6775:2;6771:7;6759:9;6751:6;6747:22;6743:36;6738:3;6731:49;6803:39;6835:6;6826;6820:13;6803:39;:::i;:::-;6793:49;-1:-1:-1;6900:12:821;;;;6865:15;;;;6704:1;6697:9;6668:254;;;-1:-1:-1;6939:6:821;;6151:800;-1:-1:-1;;;;;;;6151:800:821:o;6956:709::-;7174:2;7186:21;;;7256:13;;7159:18;;;7278:22;;;7126:4;;7353;;7331:2;7316:18;;;7380:17;;;7126:4;7425:169;7439:6;7436:1;7433:13;7425:169;;;7500:13;;7488:26;;7534:12;;;;7569:15;;;;7461:1;7454:9;7425:169;;;-1:-1:-1;;;7645:4:821;7630:20;;;;7623:36;;;;-1:-1:-1;7611:3:821;6956:709;-1:-1:-1;;6956:709:821:o;7670:219::-;7819:2;7808:9;7801:21;7782:4;7839:44;7879:2;7868:9;7864:18;7856:6;7839:44;:::i;7894:127::-;7955:10;7950:3;7946:20;7943:1;7936:31;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8026:183;-1:-1:-1;;;;;8145:10:821;;;8133;;;8129:27;;8168:12;;;8165:38;;;8183:18;;:::i;:::-;8165:38;8026:183;;;;:::o;8214:355::-;8416:2;8398:21;;;8455:2;8435:18;;;8428:30;8494:33;8489:2;8474:18;;8467:61;8560:2;8545:18;;8214:355::o;8574:338::-;8776:2;8758:21;;;8815:2;8795:18;;;8788:30;-1:-1:-1;;;8849:2:821;8834:18;;8827:44;8903:2;8888:18;;8574:338::o;10209:127::-;10270:10;10265:3;10261:20;10258:1;10251:31;10301:4;10298:1;10291:15;10325:4;10322:1;10315:15;10341:521;10418:4;10424:6;10484:11;10471:25;10578:2;10574:7;10563:8;10547:14;10543:29;10539:43;10519:18;10515:68;10505:96;;10597:1;10594;10587:12;10505:96;10624:33;;10676:20;;;-1:-1:-1;;;;;;10708:30:821;;10705:50;;;10751:1;10748;10741:12;10705:50;10784:4;10772:17;;-1:-1:-1;10815:14:821;10811:27;;;10801:38;;10798:58;;;10852:1;10849;10842:12;10867:352;11078:6;11070;11065:3;11052:33;11173:2;11144:15;;;;-1:-1:-1;;;;;;11140:45:821;11104:16;;11129:57;;;11210:2;11202:11;;10867:352;-1:-1:-1;10867:352:821:o;11224:125::-;11289:9;;;11310:10;;;11307:36;;;11323:18;;:::i;11354:380::-;11433:1;11429:12;;;;11476;;;11497:61;;11551:4;11543:6;11539:17;11529:27;;11497:61;11604:2;11596:6;11593:14;11573:18;11570:38;11567:161;;11650:10;11645:3;11641:20;11638:1;11631:31;11685:4;11682:1;11675:15;11713:4;11710:1;11703:15;11567:161;;11354:380;;;:::o;12084:375::-;-1:-1:-1;;;;;12342:15:821;;;12324:34;;12394:15;;;;12389:2;12374:18;;12367:43;12441:2;12426:18;;12419:34;;;;12274:2;12259:18;;12084:375::o;12464:180::-;-1:-1:-1;;;;;12569:10:821;;;12581;;;12565:27;;12604:11;;;12601:37;;;12618:18;;:::i;12649:357::-;12820:3;-1:-1:-1;;;;;12841:31:821;;12838:51;;;12885:1;12882;12875:12;12838:51;12919:6;12916:1;12912:14;12961:6;12953;12948:3;12935:33;12984:16;;;;;12649:357;-1:-1:-1;;;12649:357:821:o;13011:184::-;13081:6;13134:2;13122:9;13113:7;13109:23;13105:32;13102:52;;;13150:1;13147;13140:12;13102:52;-1:-1:-1;13173:16:821;;13011:184;-1:-1:-1;13011:184:821:o;13200:128::-;13267:9;;;13288:11;;;13285:37;;;13302:18;;:::i;14147:543::-;14249:2;14244:3;14241:11;14238:446;;;14285:1;14309:5;14306:1;14299:16;14353:4;14350:1;14340:18;14423:2;14411:10;14407:19;14404:1;14400:27;14394:4;14390:38;14459:4;14447:10;14444:20;14441:47;;;-1:-1:-1;14482:4:821;14441:47;14537:2;14532:3;14528:12;14525:1;14521:20;14515:4;14511:31;14501:41;;14592:82;14610:2;14603:5;14600:13;14592:82;;;14655:17;;;14636:1;14625:13;14592:82;;;14596:3;;;14147:543;;;:::o;14866:1345::-;14992:3;14986:10;-1:-1:-1;;;;;15011:6:821;15008:30;15005:56;;;15041:18;;:::i;:::-;15070:97;15160:6;15120:38;15152:4;15146:11;15120:38;:::i;:::-;15114:4;15070:97;:::i;:::-;15222:4;;15279:2;15268:14;;15296:1;15291:663;;;;15998:1;16015:6;16012:89;;;-1:-1:-1;16067:19:821;;;16061:26;16012:89;-1:-1:-1;;14823:1:821;14819:11;;;14815:24;14811:29;14801:40;14847:1;14843:11;;;14798:57;16114:81;;15261:944;;15291:663;14094:1;14087:14;;;14131:4;14118:18;;-1:-1:-1;;15327:20:821;;;15445:236;15459:7;15456:1;15453:14;15445:236;;;15548:19;;;15542:26;15527:42;;15640:27;;;;15608:1;15596:14;;;;15475:19;;15445:236;;;15449:3;15709:6;15700:7;15697:19;15694:201;;;15770:19;;;15764:26;-1:-1:-1;;15853:1:821;15849:14;;;15865:3;15845:24;15841:37;15837:42;15822:58;15807:74;;15694:201;-1:-1:-1;;;;;15941:1:821;15925:14;;;15921:22;15908:36;;-1:-1:-1;14866:1345:821:o;16216:381::-;16413:2;16402:9;16395:21;16376:4;16439:44;16479:2;16468:9;16464:18;16456:6;16439:44;:::i;:::-;16531:9;16523:6;16519:22;16514:2;16503:9;16499:18;16492:50;16559:32;16584:6;16576;16559:32;:::i;:::-;16551:40;16216:381;-1:-1:-1;;;;;16216:381:821:o;17308:127::-;17369:10;17364:3;17360:20;17357:1;17350:31;17400:4;17397:1;17390:15;17424:4;17421:1;17414:15;18127:168;18200:9;;;18231;;18248:15;;;18242:22;;18228:37;18218:71;;18269:18;;:::i;18300:127::-;18361:10;18356:3;18352:20;18349:1;18342:31;18392:4;18389:1;18382:15;18416:4;18413:1;18406:15;18432:217;18472:1;18498;18488:132;;18542:10;18537:3;18533:20;18530:1;18523:31;18577:4;18574:1;18567:15;18605:4;18602:1;18595:15;18488:132;-1:-1:-1;18634:9:821;;18432:217::o;19007:287::-;19136:3;19174:6;19168:13;19190:66;19249:6;19244:3;19237:4;19229:6;19225:17;19190:66;:::i;:::-;19272:16;;;;;19007:287;-1:-1:-1;;19007:287:821:o;20146:277::-;20213:6;20266:2;20254:9;20245:7;20241:23;20237:32;20234:52;;;20282:1;20279;20272:12;20234:52;20314:9;20308:16;20367:5;20360:13;20353:21;20346:5;20343:32;20333:60;;20389:1;20386;20379:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claimRewards()": "372500ab",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardTokenBalance()": "93ce5343",
    "getRewardsPerUnitTime()": "0e8b229b",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "indexedTokens(uint256)": "961004d3",
    "isIndexed(uint256)": "fd48ba17",
    "multicall(bytes[])": "ac9650d8",
    "nativeTokenWrapper()": "f9ea29cb",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setRewardsPerUnitTime(uint256)": "23ef2580",
    "setTimeUnit(uint256)": "6360106f",
    "stake(uint256[])": "0fbf0a93",
    "stakerAddress(uint256)": "94067045",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdraw(uint256[])": "983d95ce",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensStaked\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isIndexed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeTokenWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"amountStaked\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RewardsClaimed(address,uint256)\":{\"details\":\"Emitted when a staker claims staking rewards.\"},\"TokensStaked(address,uint256[])\":{\"details\":\"Emitted when a set of token-ids are staked.\"},\"TokensWithdrawn(address,uint256[])\":{\"details\":\"Emitted when a set of staked token-ids are withdrawn.\"},\"UpdatedRewardsPerUnitTime(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates rewardsPerUnitTime.\"},\"UpdatedTimeUnit(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates timeUnit.\"}},\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  List of token-ids staked by staker.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardsPerUnitTime(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_rewardsPerUnitTime\":\"New rewards per unit time.\"}},\"setTimeUnit(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256[])\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to stake.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdraw(uint256[])\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"nativeTokenWrapper\":{\"details\":\"The address of the native token wrapper contract.\"},\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and total rewards for a user.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardsPerUnitTime(uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setTimeUnit(uint256)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256[])\":{\"notice\":\"Stake ERC721 Tokens.\"},\"withdraw(uint256[])\":{\"notice\":\"Withdraw staked tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking721Base.sol\":\"Staking721Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/Staking721Base.sol\":{\"keccak256\":\"0xe37e7d836b6bef5c503e43788e05af1e4383b05678c7d2165d19e4e339939f23\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fac8d795f1b7180b4a043a48a9ac005521ac30d1467a2f4bdc1b12e845e94ff1\",\"dweb:/ipfs/Qmdd9s882UvKDd91dwDY8w5Dn2MFnPrWNoy8uJCj3oGJBS\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf\",\"dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking721.sol\":{\"keccak256\":\"0x82cbe393815bedf877e1437336aab66db0cd0cf8ea4aac5d840e00a854694121\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://35a209d5d384f32331e847f32ba2fc2c8e356b17f6148e1cc976de5e00a54205\",\"dweb:/ipfs/QmY2u7n9cB2DY8ndtwptqrQS5Naa2ZtAH5TXBHSz9x2ciE\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking721.sol\":{\"keccak256\":\"0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89\",\"dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokensStaked",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexedTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIndexed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeTokenWrapper",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "amountStaked",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  List of token-ids staked by staker."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardsPerUnitTime(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_rewardsPerUnitTime": "New rewards per unit time."
            }
          },
          "setTimeUnit(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256[])": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to stake."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "withdraw(uint256[])": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and total rewards for a user."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardsPerUnitTime(uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setTimeUnit(uint256)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256[])": {
            "notice": "Stake ERC721 Tokens."
          },
          "withdraw(uint256[])": {
            "notice": "Withdraw staked tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking721Base.sol": "Staking721Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking721Base.sol": {
        "keccak256": "0xe37e7d836b6bef5c503e43788e05af1e4383b05678c7d2165d19e4e339939f23",
        "urls": [
          "bzz-raw://fac8d795f1b7180b4a043a48a9ac005521ac30d1467a2f4bdc1b12e845e94ff1",
          "dweb:/ipfs/Qmdd9s882UvKDd91dwDY8w5Dn2MFnPrWNoy8uJCj3oGJBS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea",
        "urls": [
          "bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf",
          "dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking721.sol": {
        "keccak256": "0x82cbe393815bedf877e1437336aab66db0cd0cf8ea4aac5d840e00a854694121",
        "urls": [
          "bzz-raw://35a209d5d384f32331e847f32ba2fc2c8e356b17f6148e1cc976de5e00a54205",
          "dweb:/ipfs/QmY2u7n9cB2DY8ndtwptqrQS5Naa2ZtAH5TXBHSz9x2ciE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking721.sol": {
        "keccak256": "0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076",
        "urls": [
          "bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89",
          "dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking721Base.sol",
    "id": 6874,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ERC165": [
        7939
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC165": [
        13945
      ],
      "IERC20": [
        14015
      ],
      "IERC721": [
        14221
      ],
      "IERC721Receiver": [
        14356
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IStaking721": [
        34878
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "ReentrancyGuard": [
        47279
      ],
      "SafeMath": [
        51488
      ],
      "Staking721": [
        30762
      ],
      "Staking721Base": [
        6873
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6899:19",
    "nodes": [
      {
        "id": 6522,
        "nodeType": "PragmaDirective",
        "src": "39:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 6523,
        "nodeType": "ImportDirective",
        "src": "86:43:19",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6524,
        "nodeType": "ImportDirective",
        "src": "130:36:19",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6525,
        "nodeType": "ImportDirective",
        "src": "167:34:19",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6526,
        "nodeType": "ImportDirective",
        "src": "202:37:19",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking721.sol",
        "file": "../extension/Staking721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 30763,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6527,
        "nodeType": "ImportDirective",
        "src": "241:27:19",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC165.sol",
        "file": "../eip/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 7940,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6528,
        "nodeType": "ImportDirective",
        "src": "269:37:19",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 14016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6529,
        "nodeType": "ImportDirective",
        "src": "307:46:19",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC721Receiver.sol",
        "file": "../eip/interface/IERC721Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 14357,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6531,
        "nodeType": "ImportDirective",
        "src": "355:69:19",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6874,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6530,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "364:19:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6873,
        "nodeType": "ContractDefinition",
        "src": "1637:5300:19",
        "nodes": [
          {
            "id": 6547,
            "nodeType": "VariableDeclaration",
            "src": "1811:26:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6545,
              "nodeType": "StructuredDocumentation",
              "src": "1744:62:19",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1826:11:19",
            "scope": 6873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6546,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1811:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6550,
            "nodeType": "VariableDeclaration",
            "src": "1907:33:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6548,
              "nodeType": "StructuredDocumentation",
              "src": "1844:58:19",
              "text": "@dev The address of the native token wrapper contract."
            },
            "functionSelector": "f9ea29cb",
            "mutability": "mutable",
            "name": "nativeTokenWrapper",
            "nameLocation": "1922:18:19",
            "scope": 6873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1907:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6553,
            "nodeType": "VariableDeclaration",
            "src": "2007:34:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6551,
              "nodeType": "StructuredDocumentation",
              "src": "1947:55:19",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "2023:18:19",
            "scope": 6873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6552,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2007:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 6589,
            "nodeType": "FunctionDefinition",
            "src": "2048:429:19",
            "nodes": [],
            "body": {
              "id": 6588,
              "nodeType": "Block",
              "src": "2285:192:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6572,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6555,
                        "src": "2307:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6571,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "2295:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6574,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6576,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6557,
                        "src": "2352:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6577,
                        "name": "_rewardsPerUnitTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6559,
                        "src": "2363:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6575,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30624,
                      "src": "2331:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6579,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:52:19"
                },
                {
                  "expression": {
                    "id": 6582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6580,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6547,
                      "src": "2394:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6581,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6563,
                      "src": "2408:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2394:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6583,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:26:19"
                },
                {
                  "expression": {
                    "id": 6586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6584,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6550,
                      "src": "2430:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6585,
                      "name": "_nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6565,
                      "src": "2451:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2430:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6587,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:40:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6568,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6561,
                    "src": "2270:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6569,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6567,
                  "name": "Staking721",
                  "nameLocations": [
                    "2259:10:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30762,
                  "src": "2259:10:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2259:25:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6555,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2077:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6589,
                  "src": "2069:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6557,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "2108:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6589,
                  "src": "2100:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6559,
                  "mutability": "mutable",
                  "name": "_rewardsPerUnitTime",
                  "nameLocation": "2135:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6589,
                  "src": "2127:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6561,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2172:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6589,
                  "src": "2164:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6563,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2203:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6589,
                  "src": "2195:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6565,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2233:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6589,
                  "src": "2225:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:199:19"
            },
            "returnParameters": {
              "id": 6570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2285:0:19"
            },
            "scope": 6873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6602,
            "nodeType": "FunctionDefinition",
            "src": "2553:129:19",
            "nodes": [],
            "body": {
              "id": 6601,
              "nodeType": "Block",
              "src": "2588:94:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6594,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2606:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2610:6:19",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2606:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6596,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6550,
                          "src": "2620:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2606:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 6598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:34:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 6593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2598:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:77:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6600,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:77:19"
                }
              ]
            },
            "documentation": {
              "id": 6590,
              "nodeType": "StructuredDocumentation",
              "src": "2483:65:19",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2560:2:19"
            },
            "returnParameters": {
              "id": 6592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:19"
            },
            "scope": 6873,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6615,
            "nodeType": "FunctionDefinition",
            "src": "2731:165:19",
            "nodes": [],
            "body": {
              "id": 6614,
              "nodeType": "Block",
              "src": "2815:81:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6611,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6605,
                        "src": "2846:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6610,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6789,
                      "src": "2825:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6613,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:29:19"
                }
              ]
            },
            "documentation": {
              "id": 6603,
              "nodeType": "StructuredDocumentation",
              "src": "2688:38:19",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6608,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6607,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2802:12:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47278,
                  "src": "2802:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2802:12:19"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2740:19:19",
            "parameters": {
              "id": 6606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6605,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2768:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6615,
                  "src": "2760:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2759:17:19"
            },
            "returnParameters": {
              "id": 6609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2815:0:19"
            },
            "scope": 6873,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6628,
            "nodeType": "FunctionDefinition",
            "src": "2956:159:19",
            "nodes": [],
            "body": {
              "id": 6627,
              "nodeType": "Block",
              "src": "3033:82:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6624,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6618,
                        "src": "3065:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6623,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6830,
                      "src": "3043:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6626,
                  "nodeType": "ExpressionStatement",
                  "src": "3043:30:19"
                }
              ]
            },
            "documentation": {
              "id": 6616,
              "nodeType": "StructuredDocumentation",
              "src": "2902:49:19",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6621,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6620,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3020:12:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47278,
                  "src": "3020:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3020:12:19"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "2965:20:19",
            "parameters": {
              "id": 6619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6618,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2994:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6628,
                  "src": "2986:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2985:17:19"
            },
            "returnParameters": {
              "id": 6622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:0:19"
            },
            "scope": 6873,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6638,
            "nodeType": "FunctionDefinition",
            "src": "3191:124:19",
            "nodes": [],
            "body": {
              "id": 6637,
              "nodeType": "Block",
              "src": "3273:42:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6635,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6553,
                    "src": "3290:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6634,
                  "id": 6636,
                  "nodeType": "Return",
                  "src": "3283:25:19"
                }
              ]
            },
            "baseFunctions": [
              30747
            ],
            "documentation": {
              "id": 6629,
              "nodeType": "StructuredDocumentation",
              "src": "3121:65:19",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3200:21:19",
            "overrides": {
              "id": 6631,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3246:8:19"
            },
            "parameters": {
              "id": 6630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3221:2:19"
            },
            "returnParameters": {
              "id": 6634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "3264:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3264:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3263:9:19"
            },
            "scope": 6873,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6664,
            "nodeType": "FunctionDefinition",
            "src": "3505:261:19",
            "nodes": [],
            "body": {
              "id": 6663,
              "nodeType": "Block",
              "src": "3660:106:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 6655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6653,
                          "name": "isStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29781,
                          "src": "3678:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 6654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3691:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3678:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446972656374207472616e73666572",
                        "id": 6656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3694:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        },
                        "value": "Direct transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        }
                      ],
                      "id": 6652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3670:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6658,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:42:19"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 6659,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3729:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staking721Base_$6873",
                          "typeString": "contract Staking721Base"
                        }
                      },
                      "id": 6660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3734:16:19",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6664,
                      "src": "3729:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 6661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3751:8:19",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3729:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 6651,
                  "id": 6662,
                  "nodeType": "Return",
                  "src": "3722:37:19"
                }
              ]
            },
            "baseFunctions": [
              14355
            ],
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3514:16:19",
            "overrides": {
              "id": 6648,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3634:8:19"
            },
            "parameters": {
              "id": 6647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "3540:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "3557:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6644,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "3574:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3574:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6646,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "3591:14:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6645,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3591:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3530:81:19"
            },
            "returnParameters": {
              "id": 6651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "3652:6:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 6649,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3651:8:19"
            },
            "scope": 6873,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6685,
            "nodeType": "FunctionDefinition",
            "src": "3772:203:19",
            "nodes": [],
            "body": {
              "id": 6684,
              "nodeType": "Block",
              "src": "3863:112:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 6677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6672,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6666,
                        "src": "3880:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6674,
                              "name": "IERC721Receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14356,
                              "src": "3900:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$14356_$",
                                "typeString": "type(contract IERC721Receiver)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$14356_$",
                                "typeString": "type(contract IERC721Receiver)"
                              }
                            ],
                            "id": 6673,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3895:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3895:21:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Receiver_$14356",
                            "typeString": "type(contract IERC721Receiver)"
                          }
                        },
                        "id": 6676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3917:11:19",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3895:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3880:48:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 6680,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6666,
                          "src": "3956:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 6678,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3932:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Staking721Base_$6873_$",
                            "typeString": "type(contract super Staking721Base)"
                          }
                        },
                        "id": 6679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3938:17:19",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7938,
                        "src": "3932:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 6681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3932:36:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3880:88:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6671,
                  "id": 6683,
                  "nodeType": "Return",
                  "src": "3873:95:19"
                }
              ]
            },
            "baseFunctions": [
              7938
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3781:17:19",
            "overrides": {
              "id": 6668,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3839:8:19"
            },
            "parameters": {
              "id": 6667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6666,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3806:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6685,
                  "src": "3799:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 6665,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3799:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3798:20:19"
            },
            "returnParameters": {
              "id": 6671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6685,
                  "src": "3857:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6669,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3856:6:19"
            },
            "scope": 6873,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 6719,
            "nodeType": "FunctionDefinition",
            "src": "4402:401:19",
            "nodes": [],
            "body": {
              "id": 6718,
              "nodeType": "Block",
              "src": "4485:318:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6695,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6690,
                          "src": "4503:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 6696,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6553,
                          "src": "4515:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4503:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 6698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4535:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 6694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4495:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6700,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:67:19"
                },
                {
                  "expression": {
                    "id": 6703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6701,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6553,
                      "src": "4572:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 6702,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6690,
                      "src": "4594:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4572:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6704,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6708,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6547,
                        "src": "4673:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6711,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4706:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4698:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6709,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4698:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4698:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6713,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6688,
                        "src": "4725:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6714,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6690,
                        "src": "4746:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6715,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6550,
                        "src": "4768:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6705,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4612:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4632:27:19",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4612:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:184:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6717,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:184:19"
                }
              ]
            },
            "baseFunctions": [
              30755
            ],
            "documentation": {
              "id": 6686,
              "nodeType": "StructuredDocumentation",
              "src": "4158:239:19",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "4411:12:19",
            "overrides": {
              "id": 6692,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4476:8:19"
            },
            "parameters": {
              "id": 6691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6688,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "4432:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6719,
                  "src": "4424:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4424:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6690,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "4449:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6719,
                  "src": "4441:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4423:35:19"
            },
            "returnParameters": {
              "id": 6693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4485:0:19"
            },
            "scope": 6873,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6789,
            "nodeType": "FunctionDefinition",
            "src": "5069:660:19",
            "nodes": [],
            "body": {
              "id": 6788,
              "nodeType": "Block",
              "src": "5133:596:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6726,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5151:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5155:6:19",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5151:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6728,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21716,
                            "src": "5165:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5165:7:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5151:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5174:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5143:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6733,
                  "nodeType": "ExpressionStatement",
                  "src": "5143:48:19"
                },
                {
                  "assignments": [
                    6735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6735,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "5210:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6788,
                      "src": "5202:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6734,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5202:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6743,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6736,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6547,
                        "src": "5225:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6737,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "5240:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5260:12:19",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "5240:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5225:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6741,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6547,
                      "src": "5296:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5225:82:19",
                    "trueExpression": {
                      "id": 6740,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6550,
                      "src": "5275:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5202:105:19"
                },
                {
                  "assignments": [
                    6745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6745,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "5326:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6788,
                      "src": "5318:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6744,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5318:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6755,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6752,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5381:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5373:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5373:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5373:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6747,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6735,
                            "src": "5349:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6746,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14015,
                          "src": "5342:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5342:20:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14015",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5363:9:19",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13960,
                      "src": "5342:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:45:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5318:69:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6759,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6547,
                        "src": "5458:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5483:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5487:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5483:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6764,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5515:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5507:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6762,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5507:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5507:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6766,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6722,
                        "src": "5534:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6767,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6550,
                        "src": "5555:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6756,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "5397:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5417:27:19",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "5397:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:186:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6769,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:186:19"
                },
                {
                  "assignments": [
                    6771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6771,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5601:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6788,
                      "src": "5593:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6770,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5593:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6783,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6778,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5655:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking721Base_$6873",
                                "typeString": "contract Staking721Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking721Base_$6873",
                                "typeString": "contract Staking721Base"
                              }
                            ],
                            "id": 6777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5647:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6776,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5647:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5647:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 6773,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6735,
                              "src": "5623:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6772,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14015,
                            "src": "5616:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 6774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5616:20:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$14015",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 6775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5637:9:19",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13960,
                        "src": "5616:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 6780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5616:45:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6781,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6745,
                      "src": "5664:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5616:61:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5593:84:19"
                },
                {
                  "expression": {
                    "id": 6786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6784,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6553,
                      "src": "5688:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6785,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6771,
                      "src": "5710:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5688:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6787,
                  "nodeType": "ExpressionStatement",
                  "src": "5688:34:19"
                }
              ]
            },
            "documentation": {
              "id": 6720,
              "nodeType": "StructuredDocumentation",
              "src": "4997:67:19",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "5078:20:19",
            "parameters": {
              "id": 6723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6722,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5107:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6789,
                  "src": "5099:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5099:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5098:17:19"
            },
            "returnParameters": {
              "id": 6724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5133:0:19"
            },
            "scope": 6873,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6830,
            "nodeType": "FunctionDefinition",
            "src": "5818:481:19",
            "nodes": [],
            "body": {
              "id": 6829,
              "nodeType": "Block",
              "src": "5883:416:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5901:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5905:6:19",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5901:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6798,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21716,
                            "src": "5915:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5915:7:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5901:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5924:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5893:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5893:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6803,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:48:19"
                },
                {
                  "expression": {
                    "id": 6813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6804,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6553,
                      "src": "6011:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6805,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6792,
                          "src": "6032:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 6806,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6553,
                          "src": "6042:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6032:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6809,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6553,
                          "src": "6067:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 6810,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6792,
                          "src": "6088:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6067:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6032:63:19",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 6808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6063:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6011:84:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6814,
                  "nodeType": "ExpressionStatement",
                  "src": "6011:84:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6818,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6547,
                        "src": "6167:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6821,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6200:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6873",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6192:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6192:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6192:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6823,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6219:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6223:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6219:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6825,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6792,
                        "src": "6243:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6826,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6550,
                        "src": "6264:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6815,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6106:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6126:27:19",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "6106:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:186:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6828,
                  "nodeType": "ExpressionStatement",
                  "src": "6106:186:19"
                }
              ]
            },
            "documentation": {
              "id": 6790,
              "nodeType": "StructuredDocumentation",
              "src": "5735:78:19",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "5827:21:19",
            "parameters": {
              "id": 6793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6792,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5857:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6830,
                  "src": "5849:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5849:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5848:17:19"
            },
            "returnParameters": {
              "id": 6794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5883:0:19"
            },
            "scope": 6873,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6844,
            "nodeType": "FunctionDefinition",
            "src": "6394:125:19",
            "nodes": [],
            "body": {
              "id": 6843,
              "nodeType": "Block",
              "src": "6474:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6837,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6491:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6495:6:19",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6491:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6839,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6505:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6505:7:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6491:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6836,
                  "id": 6842,
                  "nodeType": "Return",
                  "src": "6484:28:19"
                }
              ]
            },
            "baseFunctions": [
              30761
            ],
            "documentation": {
              "id": 6831,
              "nodeType": "StructuredDocumentation",
              "src": "6305:84:19",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6403:22:19",
            "overrides": {
              "id": 6833,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6450:8:19"
            },
            "parameters": {
              "id": 6832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6425:2:19"
            },
            "returnParameters": {
              "id": 6836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6844,
                  "src": "6468:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6468:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6467:6:19"
            },
            "scope": 6873,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6858,
            "nodeType": "FunctionDefinition",
            "src": "6615:121:19",
            "nodes": [],
            "body": {
              "id": 6857,
              "nodeType": "Block",
              "src": "6691:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6851,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6708:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6712:6:19",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6708:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6853,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6722:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6722:7:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6708:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6850,
                  "id": 6856,
                  "nodeType": "Return",
                  "src": "6701:28:19"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 6845,
              "nodeType": "StructuredDocumentation",
              "src": "6525:85:19",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6624:18:19",
            "overrides": {
              "id": 6847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6667:8:19"
            },
            "parameters": {
              "id": 6846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6642:2:19"
            },
            "returnParameters": {
              "id": 6850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6858,
                  "src": "6685:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6685:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6684:6:19"
            },
            "scope": 6873,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6872,
            "nodeType": "FunctionDefinition",
            "src": "6820:115:19",
            "nodes": [],
            "body": {
              "id": 6871,
              "nodeType": "Block",
              "src": "6890:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6865,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6907:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6911:6:19",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6907:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6867,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "6921:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6921:7:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6907:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6864,
                  "id": 6870,
                  "nodeType": "Return",
                  "src": "6900:28:19"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 6859,
              "nodeType": "StructuredDocumentation",
              "src": "6742:73:19",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6829:12:19",
            "overrides": {
              "id": 6861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6866:8:19"
            },
            "parameters": {
              "id": 6860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6841:2:19"
            },
            "returnParameters": {
              "id": 6864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6872,
                  "src": "6884:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6862,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6884:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6883:6:19"
            },
            "scope": 6873,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6533,
              "name": "ContractMetadata",
              "nameLocations": [
                "1664:16:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1664:16:19"
            },
            "id": 6534,
            "nodeType": "InheritanceSpecifier",
            "src": "1664:16:19"
          },
          {
            "baseName": {
              "id": 6535,
              "name": "Multicall",
              "nameLocations": [
                "1682:9:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1682:9:19"
            },
            "id": 6536,
            "nodeType": "InheritanceSpecifier",
            "src": "1682:9:19"
          },
          {
            "baseName": {
              "id": 6537,
              "name": "Ownable",
              "nameLocations": [
                "1693:7:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1693:7:19"
            },
            "id": 6538,
            "nodeType": "InheritanceSpecifier",
            "src": "1693:7:19"
          },
          {
            "baseName": {
              "id": 6539,
              "name": "Staking721",
              "nameLocations": [
                "1702:10:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30762,
              "src": "1702:10:19"
            },
            "id": 6540,
            "nodeType": "InheritanceSpecifier",
            "src": "1702:10:19"
          },
          {
            "baseName": {
              "id": 6541,
              "name": "ERC165",
              "nameLocations": [
                "1714:6:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7939,
              "src": "1714:6:19"
            },
            "id": 6542,
            "nodeType": "InheritanceSpecifier",
            "src": "1714:6:19"
          },
          {
            "baseName": {
              "id": 6543,
              "name": "IERC721Receiver",
              "nameLocations": [
                "1722:15:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14356,
              "src": "1722:15:19"
            },
            "id": 6544,
            "nodeType": "InheritanceSpecifier",
            "src": "1722:15:19"
          }
        ],
        "canonicalName": "Staking721Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6532,
          "nodeType": "StructuredDocumentation",
          "src": "1309:56:19",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6873,
          14356,
          7939,
          13945,
          30762,
          34878,
          47279,
          21764,
          33834,
          21206,
          33577,
          18093,
          33084
        ],
        "name": "Staking721Base",
        "nameLocation": "1646:14:19",
        "scope": 6874,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33833,
          34799,
          34807,
          34814,
          34821,
          34828
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 19
}