{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition_V1.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantityInAllowlist",
              "type": "uint256"
            }
          ],
          "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxClaimableSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantityLimitPerTransaction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "waitTimeInSecondsBetweenClaims",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getClaimTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastClaimedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextValidClaimTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IClaimCondition_V1.ClaimCondition",
          "name": "_condition",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verifyMaxQuantityPerTransaction",
          "type": "bool"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantityInAllowlist",
              "type": "uint256"
            }
          ],
          "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaimMerkleProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validMerkleProof",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "merkleProofIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506160a580620000216000396000f3fe6080604052600436106102fe5760003560e01c80639010d07c1161019d578063b6f10c79116100e8578063b6f10c7914610966578063b88d4fde14610986578063c87b56dd146109a6578063ca15c873146109c6578063cb2ef6f7146109e6578063ce80564214610a09578063d37c353b14610a29578063d45573f614610a49578063d547741f14610a5e578063d637ed5914610a7e578063e159163414610afe578063e57553da14610b1e578063e715032214610b42578063e8a3d48514610b62578063e985e9c514610b77578063f28083c314610bc0578063ffbb7a1314610be757600080fd5b80639010d07c1461075e57806391d148541461077e578063938e3d7b1461079e57806395d89b41146107be5780639bcf7a15146107d35780639fc4d68f146107f3578063a05112fc14610813578063a0a8e46014610833578063a217fddf1461084f578063a22cb46514610864578063a2309ff814610884578063a32fa5b314610899578063a72e157d146108b9578063ac9650d8146108d9578063b24f2d3914610906578063b67875ce1461093157600080fd5b806301ffc9a71461030357806306fdde0314610338578063079fe40e1461035a578063081812fc14610387578063095ea7b3146103a757806313af4035146103c957806318160ddd146103e95780631e7ac4881461040c57806323b872dd1461042c5780632419f51b1461044c578063248a9ca31461046c578063252e82e8146104995780632a55205a146104d85780632f2ff15d1461050657806336568abe146105265780633b1475a71461054657806342842e0e1461055b57806342966c681461057b578063439c7be51461059b578063492e224b146105ae5780634cc157df146105ce578063572b6c05146106105780635ab31c1a14610630578063600dd5ea146106435780636352211e1461066357806363b45e2d146106835780636f4f28371461069857806370a08231146106b857806377312a9e146106d85780637e54523c146106f857806384b0196e146107185780638da5cb5b14610740575b600080fd5b34801561030f57600080fd5b5061032361031e366004614d71565b610c1e565b60405190151581526020015b60405180910390f35b34801561034457600080fd5b5061034d610c4a565b60405161032f9190614dde565b34801561036657600080fd5b5061036f610cdc565b6040516001600160a01b03909116815260200161032f565b34801561039357600080fd5b5061036f6103a2366004614dfe565b610ceb565b3480156103b357600080fd5b506103c76103c2366004614e33565b610d2f565b005b3480156103d557600080fd5b506103c76103e4366004614e5d565b610dc7565b3480156103f557600080fd5b5060e65460e554035b60405190815260200161032f565b34801561041857600080fd5b506103c7610427366004614e33565b610e00565b34801561043857600080fd5b506103c7610447366004614e78565b610e32565b34801561045857600080fd5b506103fe610467366004614dfe565b610e3d565b34801561047857600080fd5b506103fe610487366004614dfe565b6000908152600d602052604090205490565b3480156104a557600080fd5b506104b96104b4366004614ef5565b610eab565b6040805192151583526001600160a01b0390911660208301520161032f565b3480156104e457600080fd5b506104f86104f3366004614f66565b610eef565b60405161032f929190614f88565b34801561051257600080fd5b506103c7610521366004614fa1565b610f2c565b34801561053257600080fd5b506103c7610541366004614fa1565b610fc2565b34801561055257600080fd5b50600b546103fe565b34801561056757600080fd5b506103c7610576366004614e78565b611021565b34801561058757600080fd5b506103c7610596366004614dfe565b61103c565b61036f6105a9366004614ef5565b611047565b3480156105ba57600080fd5b506103236105c9366004614dfe565b611180565b3480156105da57600080fd5b506105ee6105e9366004614dfe565b6111a6565b604080516001600160a01b03909316835261ffff90911660208301520161032f565b34801561061c57600080fd5b5061032361062b366004614e5d565b611211565b6103c761063e3660046150a2565b61122f565b34801561064f57600080fd5b506103c761065e366004614e33565b6113ad565b34801561066f57600080fd5b5061036f61067e366004614dfe565b6113db565b34801561068f57600080fd5b506009546103fe565b3480156106a457600080fd5b506103c76106b3366004614e5d565b6113ed565b3480156106c457600080fd5b506103fe6106d3366004614e5d565b61141a565b3480156106e457600080fd5b506103c76106f3366004615146565b611468565b34801561070457600080fd5b506103c7610713366004614e33565b61161a565b34801561072457600080fd5b5061072d611648565b60405161032f9796959493929190615187565b34801561074c57600080fd5b506007546001600160a01b031661036f565b34801561076a57600080fd5b5061036f610779366004614f66565b6116e6565b34801561078a57600080fd5b50610323610799366004614fa1565b6117d4565b3480156107aa57600080fd5b506103c76107b9366004615220565b6117ff565b3480156107ca57600080fd5b5061034d61182c565b3480156107df57600080fd5b506103c76107ee366004615254565b61183b565b3480156107ff57600080fd5b5061034d61080e366004615279565b61186a565b34801561081f57600080fd5b5061034d61082e366004614dfe565b6119ea565b34801561083f57600080fd5b506040516004815260200161032f565b34801561085b57600080fd5b506103fe600081565b34801561087057600080fd5b506103c761087f3660046152b7565b611a84565b34801561089057600080fd5b5060e5546103fe565b3480156108a557600080fd5b506103236108b4366004614fa1565b611b56565b3480156108c557600080fd5b506103c76108d43660046152e3565b611bac565b3480156108e557600080fd5b506108f96108f436600461533e565b611d83565b60405161032f91906153b2565b34801561091257600080fd5b506004546001600160a01b03811690600160a01b900461ffff166105ee565b34801561093d57600080fd5b5061095161094c366004614e5d565b611ef6565b6040805192835260208301919091520161032f565b34801561097257600080fd5b506103c7610981366004615416565b611f33565b34801561099257600080fd5b506103c76109a1366004615437565b611f60565b3480156109b257600080fd5b5061034d6109c1366004614dfe565b611fb1565b3480156109d257600080fd5b506103fe6109e1366004614dfe565b612020565b3480156109f257600080fd5b506c05369676e617475726544726f7609c1b6103fe565b348015610a1557600080fd5b5061034d610a24366004615279565b6120a9565b348015610a3557600080fd5b506103fe610a4436600461549e565b612137565b348015610a5557600080fd5b506105ee6121cf565b348015610a6a57600080fd5b506103c7610a79366004614fa1565b6121ec565b348015610a8a57600080fd5b50600f54601054601154601254601354601454601554601654610aba97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e08201526101000161032f565b348015610b0a57600080fd5b506103c7610b193660046155a9565b612205565b348015610b2a57600080fd5b506104f86002546003546001600160a01b0390911691565b348015610b4e57600080fd5b5061034d610b5d3660046156bb565b6123f8565b348015610b6e57600080fd5b5061034d61246d565b348015610b8357600080fd5b50610323610b92366004615709565b6001600160a01b03918216600090815260ec6020908152604080832093909416825291909152205460ff1690565b348015610bcc57600080fd5b50600254600160b01b900460ff1660405161032f9190615749565b348015610bf357600080fd5b50610c07610c02366004615771565b61247a565b60408051921515835260208301919091520161032f565b6000610c2982612661565b80610c44575063152a902d60e11b6001600160e01b03198316145b92915050565b606060e78054610c59906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c85906157c7565b8015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610cf6826126b1565b610d13576040516333d1c03960e21b815260040160405180910390fd5b50600090815260eb60205260409020546001600160a01b031690565b6000610d3a826113db565b9050806001600160a01b0316836001600160a01b031603610d6e5760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610d806126dd565b6001600160a01b031614610db757610d9a81610b926126dd565b610db7576040516367d9dca160e11b815260040160405180910390fd5b610dc28383836126ec565b505050565b610dcf612748565b610df45760405162461bcd60e51b8152600401610deb906157fb565b60405180910390fd5b610dfd81612756565b50565b610e08612748565b610e245760405162461bcd60e51b8152600401610deb906157fb565b610e2e82826127a8565b5050565b610dc283838361285c565b6000610e4860095490565b8210610e865760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610deb565b60098281548110610e9957610e99615823565b90600052602060002001549050919050565b600080610eb9858585612a65565b6101408601356000908152604e602052604090205490915060ff16158015610ee55750610ee581612ac9565b9150935093915050565b600080600080610efe866111a6565b90945084925061ffff169050612710610f17828761584f565b610f219190615866565b925050509250929050565b6000828152600d6020526040902054610f459033612ad8565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1615610fb85760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610deb565b610e2e8282612b58565b336001600160a01b038216146110175760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610deb565b610e2e8282612b6c565b610dc283838360405180602001604052806000815250611f60565b610dfd816001612bc3565b60e554600b546000919061105f60a087013583615888565b111561107d5760405162461bcd60e51b8152600401610deb9061589b565b611088858585612da3565b915060006110996020870187614e5d565b90506110ce6110ae6080880160608901614e5d565b60a08801356110c46101008a0160e08b01614e5d565b8960c00135612f2b565b60006110e06040880160208901614e5d565b6001600160a01b0316141580156110fa5750604086013515155b1561111d5761111d826111136040890160208a01614e5d565b8860400135613035565b61112b818760a001356130dc565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c8960405161116f9190615934565b60405180910390a450509392505050565b6000818152600860205260408120805482919061119c906157c7565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156111ed5780516020820151611207565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526081602052604090205460ff1690565b61123d8686868686866130f6565b601754600061125461124d613188565b888661247a565b50905060006020850135158061126a5750601454155b9050611280611277613188565b89898985611bac565b818015611291575060008560200135115b156112db576112db6112a1613188565b60008581526019602090815260408083206001600160981b03600886901c16845290915290208054600160ff9093169290921b9091179055565b87600f60020160008282546112f09190615888565b90915550506000838152601860205260408120429161130d613188565b6001600160a01b03166001600160a01b031681526020019081526020016000208190555061133e6000898989612f2b565b600061134a8a8a613192565b9050808a6001600160a01b031661135f613188565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68c60405161139991815260200190565b60405180910390a450505050505050505050565b6113b5612748565b6113d15760405162461bcd60e51b8152600401610deb906157fb565b610e2e82826131a7565b60006113e682613224565b5192915050565b6113f5612748565b6114115760405162461bcd60e51b8152600401610deb906157fb565b610dfd8161333e565b60006001600160a01b038216611443576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815260ea60205260409020546001600160401b031690565b611470612748565b61148c5760405162461bcd60e51b8152600401610deb906157fb565b60175460115482156114ce575060006114a3613188565b436040516020016114b5929190615a42565b6040516020818303038152906040528051906020012091505b83602001358111156115175760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610deb565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e00160208101906115789190614e5d565b6001600160a01b039081169091528151600f5560208201516010556040808301516011556060830151601255608083015160135560a083015160145560c083015160155560e090920151601680546001600160a01b031916919092161790556017839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd790809061160c9086908690615a5f565b60405180910390a150505050565b611622612748565b61163e5760405162461bcd60e51b8152600401610deb906157fb565b610e2e82826133ae565b600060608060008060006060601a546000801b1480156116685750601b54155b6116ac5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610deb565b6116b461340c565b6116bc61341b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000828152600e602052604081205481805b828110156117cb576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561177457848203611762576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c44915050565b61176d600183615888565b91506117b9565b61177f8660006117d4565b80156117a657506000868152600e6020908152604080832083805260020190915290205481145b156117b9576117b6600183615888565b91505b6117c4600182615888565b90506116f8565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611807612748565b6118235760405162461bcd60e51b8152600401610deb906157fb565b610dfd8161342a565b606060e88054610c59906157c7565b611843612748565b61185f5760405162461bcd60e51b8152600401610deb906157fb565b610dc2838383613035565b600083815260086020526040812080546060929190611888906157c7565b80601f01602080910402602001604051908101604052809291908181526020018280546118b4906157c7565b80156119015780601f106118d657610100808354040283529160200191611901565b820191906000526020600020905b8154815290600101906020018083116118e457829003601f168201915b50505050509050805160000361194d5760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610deb565b600080828060200190518101906119649190615acd565b915091506119738287876123f8565b9350808487874660405160200161198d9493929190615b4d565b60405160208183030381529060405280519060200120146119e05760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610deb565b5050509392505050565b60086020526000908152604090208054611a03906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2f906157c7565b8015611a7c5780601f10611a5157610100808354040283529160200191611a7c565b820191906000526020600020905b815481529060010190602001808311611a5f57829003601f168201915b505050505081565b611a8c6126dd565b6001600160a01b0316826001600160a01b031603611abd5760405163b06307db60e01b815260040160405180910390fd5b8060ec6000611aca6126dd565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611b0e6126dd565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611b4a911515815260200190565b60405180910390a35050565b6000828152600c6020908152604080832083805290915281205460ff16611ba357506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c44565b50600192915050565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a082015260155460c08201526016546001600160a01b0390811660e08301819052908516141580611c1757508060c001518314155b15611c605760405162461bcd60e51b8152602060048201526019602482015278496e76616c6964207072696365206f722063757272656e637960381b6044820152606401610deb565b841580611c785750818015611c785750806060015185115b15611cb85760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606401610deb565b8060200151858260400151611ccd9190615888565b1115611d105760405162461bcd60e51b815260206004820152601260248201527165786365656473206d617820737570706c7960701b6044820152606401610deb565b600080611d1c88611ef6565b915091504283600001511180611d3b57508115801590611d3b57508042105b15611d795760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610deb565b5050505050505050565b6060816001600160401b03811115611d9d57611d9d614fdf565b604051908082528060200260200182016040528015611dd057816020015b6060815260200190600190039081611dbb5790505b5090506000611ddd6126dd565b9050336001600160a01b038216141560005b848110156117cb578115611e6e57611e4c30878784818110611e1357611e13615823565b9050602002810190611e259190615b76565b86604051602001611e3893929190615bbc565b6040516020818303038152906040526134fa565b848281518110611e5e57611e5e615823565b6020026020010181905250611eee565b611ed030878784818110611e8457611e84615823565b9050602002810190611e969190615b76565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506134fa92505050565b848281518110611ee257611ee2615823565b60200260200101819052505b600101611def565b60175460009081526018602090815260408083206001600160a01b0385168452909152902054601354810181811015611f2e57506000195b915091565b611f3b612748565b611f575760405162461bcd60e51b8152600401610deb906157fb565b610dfd81613526565b611f6b84848461285c565b611f7d836001600160a01b031661358a565b15611fab57611f8e84848484613599565b611fab576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611fbe8361368a565b5090506000611fcc8461378f565b9050611fd782611180565b156120055780604051602001611fed9190615bdd565b60405160208183030381529060405292505050919050565b8061200f856138f0565b604051602001611fed929190615c02565b6000818152600e6020526040812054815b81811015612084576000848152600e602090815260408083208484526001019091529020546001600160a01b0316156120725761206f600184615888565b92505b61207d600182615888565b9050612031565b506120908360006117d4565b156120a3576120a0600183615888565b91505b50919050565b6060610118546120b98133612ad8565b60006120c486610e3d565b90506120d181868661186a565b92506120ec8160405180602001604052806000815250613982565b6120f6818461399a565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d846040516121269190614dde565b60405180910390a250509392505050565b600081156121b85760008061214e84860186615c31565b91509150815160001415801561216357508015155b156121b5576121b588600b546121799190615888565b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061398292505050565b50505b6121c586868686866139b2565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d60205260409020546110179033612ad8565b600054610100900460ff16158080156122255750600054600160ff909116105b8061224657506122343061358a565b158015612246575060005460ff166001145b6122a95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610deb565b6000805460ff1916600117905580156122cc576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c610117557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66101185561231f87613abf565b6123298a8a613af7565b612331613b28565b61233a8861342a565b6123438b612756565b61234e60008c612b58565b61235b610118548c612b58565b612368610117548c612b58565b612376610117546000612b58565b61238982846001600160801b03166127a8565b61239c85856001600160801b03166131a7565b6123a58661333e565b80156123eb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b8181101561246457600085858360405160200161242d93929190615c75565b60408051601f1981840301815291905280516020918201208884018201511885840182015261245d915082615888565b905061240e565b50509392505050565b60018054611a03906157c7565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a0820181905260155460c08301526016546001600160a01b031660e08301526000918291156126585761254d6124e68580615c87565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a0830151604051612532908a9060208a8101359101615a42565b60405160208183030381529060405280519060200120613b9f565b9093509150826125925760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081a5b88185b1b1bdddb1a5cdd60821b6044820152606401610deb565b60175460009081526019602090815260408083206001600160981b0360088b901c168452909152902054600160ff88161b16156126015760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b6044820152606401610deb565b6020840135158015906126175750836020013585115b156126585760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21038ba3c90383937b7b360791b6044820152606401610deb565b50935093915050565b60006001600160e01b031982166380ac58cd60e01b148061269257506001600160e01b03198216635b5e139f60e01b145b80610c4457506301ffc9a760e01b6001600160e01b0319831614610c44565b600060e55482108015610c44575050600090815260e96020526040902054600160e01b900460ff161590565b60006126e7613c63565b905090565b600082815260eb602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006126e7816107996126dd565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156127ca5760405162461bcd60e51b8152600401610deb90615cd0565b6001600160a01b0382166127f05760405162461bcd60e51b8152600401610deb90615cf9565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b600061286782613224565b9050836001600160a01b031681600001516001600160a01b03161461289e5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b03166128b26126dd565b6001600160a01b031614806128ce57506128ce85610b926126dd565b806128f957506128dc6126dd565b6001600160a01b03166128ee84610ceb565b6001600160a01b0316145b90508061291957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661294057604051633a954ecd60e21b815260040160405180910390fd5b61294d8585856001613c85565b612959600084876126ec565b6001600160a01b03858116600090815260ea6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865260e990945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116612a2c5760e5548214612a2c57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061605083398151915260405160405180910390a45050505050565b6000612ac183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612abb9250612aaf9150889050613d23565b80519060200120613e6a565b90613e97565b949350505050565b6000610c4461011854836117d4565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610e2e57612b16816001600160a01b03166014613ebb565b612b21836020613ebb565b604051602001612b32929190615d24565b60408051601f198184030181529082905262461bcd60e51b8252610deb91600401614dde565b612b628282614056565b610e2e82826140b1565b612b76828261411e565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612bce83613224565b80519091508215612c56576000816001600160a01b0316612bed6126dd565b6001600160a01b03161480612c095750612c0982610b926126dd565b80612c345750612c176126dd565b6001600160a01b0316612c2986610ceb565b6001600160a01b0316145b905080612c5457604051632ce44b5f60e11b815260040160405180910390fd5b505b612c64816000866001613c85565b612c70600085836126ec565b6001600160a01b03808216600081815260ea602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865260e9909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612d6a5760e5548214612d6a57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020616050833981519152908390a4505060e6805460010190555050565b600080612db1858585610eab565b9250905080612df05760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610deb565b42612e0361012087016101008801615d91565b6001600160801b03161180612e315750612e2561014086016101208701615d91565b6001600160801b031642115b15612e6c5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610deb565b6000612e7b6020870187614e5d565b6001600160a01b031603612ec75760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610deb565b60008560a0013511612f035760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610deb565b50610140909301356000908152604e60205260409020805460ff191660011790555090919050565b8015611fab57600080612f3c6121cf565b909250905060006001600160a01b03871615612f585786612f60565b612f60610cdc565b90506000612f6e858861584f565b90506000612710612f8361ffff86168461584f565b612f8d9190615866565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03881601612ffb57813414612ffb5760405162461bcd60e51b81526020600482015260156024820152744d7573742073656e6420746f74616c20707269636560581b6044820152606401610deb565b61300e876130076126dd565b8784614180565b61302a8761301a6126dd565b856130258587615dac565b614180565b505050505050505050565b6127108111156130575760405162461bcd60e51b8152600401610deb90615cd0565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610e2e8282604051806020016040528060008152506141c6565b600061310133611211565b8061311b5750326131106126dd565b6001600160a01b0316145b9050806131505760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610deb565b600b548660e5546131619190615888565b111561317f5760405162461bcd60e51b8152600401610deb9061589b565b50505050505050565b60006126e76126dd565b60e554610c4483836130dc565b505050505050565b6127108111156131c95760405162461bcd60e51b8152600401610deb90615cd0565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612850565b60408051606081018252600080825260208201819052918101919091528160e55481101561332557600081815260e96020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906133235780516001600160a01b0316156132ba579392505050565b5060001901600081815260e96020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff161515928101929092521561331e579392505050565b6132ba565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166133645760405162461bcd60e51b8152600401610deb90615cf9565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906134009084908490614f88565b60405180910390a15050565b6060601c8054610c59906157c7565b6060601d8054610c59906157c7565b600060018054613439906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054613465906157c7565b80156134b25780601f10613487576101008083540402835291602001916134b2565b820191906000526020600020905b81548152906001019060200180831161349557829003601f168201915b5050505050905081600190816134c89190615e07565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613400929190615ec6565b606061351f83836040518060600160405280602781526020016160296027913961436e565b9392505050565b6002805482919060ff60b01b1916600160b01b83600181111561354b5761354b615733565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161357f9190615749565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026135b26126dd565b8786866040518563ffffffff1660e01b81526004016135d49493929190615ef4565b6020604051808303816000875af192505050801561360f575060408051601f3d908101601f1916820190925261360c91810190615f27565b60015b61366d573d80801561363d576040519150601f19603f3d011682016040523d82523d6000602084013e613642565b606091505b508051600003613665576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600080600061369860095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156136e857602002820191906000526020600020905b8154815260200190600101908083116136d4575b5050505050905060005b828110156137545781818151811061370c5761370c615823565b60200260200101518610156137425780935081818151811061373057613730615823565b60200260200101519450505050915091565b61374d600182615888565b90506136f2565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610deb565b6060600061379c60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156137ec57602002820191906000526020600020905b8154815260200190600101908083116137d8575b5050505050905060005b828110156137545781818151811061381057613810615823565b60200260200101518510156138de57600a600083838151811061383557613835615823565b602002602001015181526020019081526020016000208054613856906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054613882906157c7565b80156138cf5780601f106138a4576101008083540402835291602001916138cf565b820191906000526020600020905b8154815290600101906020018083116138b257829003601f168201915b50505050509350505050919050565b6138e9600182615888565b90506137f6565b606060006138fd836143dc565b60010190506000816001600160401b0381111561391c5761391c614fdf565b6040519080825280601f01601f191660200182016040528015613946576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461395057509392505050565b6000828152600860205260409020610dc28282615e07565b6000828152600a60205260409020610dc28282615e07565b60006139bc6144b2565b6139d85760405162461bcd60e51b8152600401610deb906157fb565b85600003613a105760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610deb565b6000600b549050613a58818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144c392505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613a8e8a84615888565b613a989190615dac565b88888888604051613aad959493929190615f44565b60405180910390a25095945050505050565b600054610100900460ff16613ae65760405162461bcd60e51b8152600401610deb90615f7d565b613aee61451e565b610dfd81614545565b600054610100900460ff16613b1e5760405162461bcd60e51b8152600401610deb90615f7d565b610e2e82826145ca565b600054610100900460ff16613b4f5760405162461bcd60e51b8152600401610deb90615f7d565b613b9d604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b815250614614565b565b6000808281805b8751811015613c5757613bba60028361584f565b91506000888281518110613bd057613bd0615823565b60200260200101519050808411613c12576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613c4e565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613c4b9190615888565b92505b50600101613ba6565b50941495939450505050565b6000613c6e33611211565b15613c80575060131936013560601c90565b503390565b613c936101175460006117d4565b158015613ca857506001600160a01b03841615155b8015613cbc57506001600160a01b03831615155b15611fab57613cce61011754856117d4565b158015613ce55750613ce361011754846117d4565b155b15611fab5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610deb565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613d536020840184614e5d565b613d636040850160208601614e5d565b6040850135613d786080870160608801614e5d565b613d856080880188615b76565b604051613d93929190615fc8565b60405190819003902060a088013560c0890135613db76101008b0160e08c01614e5d565b613dc96101208c016101008d01615d91565b613ddb6101408d016101208e01615d91565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610c44613e77614645565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000613ea6858561464f565b91509150613eb381614694565b509392505050565b60606000613eca83600261584f565b613ed5906002615888565b6001600160401b03811115613eec57613eec614fdf565b6040519080825280601f01601f191660200182016040528015613f16576020820181803683370190505b509050600360fc1b81600081518110613f3157613f31615823565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f6057613f60615823565b60200101906001600160f81b031916908160001a9053506000613f8484600261584f565b613f8f906001615888565b90505b6001811115614007576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fc357613fc3615823565b1a60f81b828281518110613fd957613fd9615823565b60200101906001600160f81b031916908160001a90535060049490941c9361400081615fd8565b9050613f92565b50831561351f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610deb565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e60205260408120805491600191906140d08385615888565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6141288282612ad8565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8015611fab5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016141ba576141b582826147d9565b611fab565b611fab8484848461487b565b60e5546001600160a01b0384166141ef57604051622e076360e81b815260040160405180910390fd5b826000036142105760405163b562e8dd60e01b815260040160405180910390fd5b61421d6000858386613c85565b6001600160a01b038416600081815260ea6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845260e990925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906142b69061358a565b1561432c575b60405182906001600160a01b03881690600090600080516020616050833981519152908290a46142f56000878480600101955087613599565b614312576040516368d2bf6b60e11b815260040160405180910390fd5b8082106142bc578260e5541461432757600080fd5b61435f565b5b6040516001830192906001600160a01b03881690600090600080516020616050833981519152908290a480821061432d575b5060e555611fab600085838684565b6060600080856001600160a01b03168560405161438b9190615fef565b600060405180830381855af49150503d80600081146143c6576040519150601f19603f3d011682016040523d82523d6000602084013e6143cb565b606091505b50915091506121c5868383876148ce565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061441b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310614445576904ee2d6d415b85acef8160201b830492506020015b662386f26fc10000831061446357662386f26fc10000830492506010015b6305f5e100831061447b576305f5e100830492506008015b612710831061448f57612710830492506004015b606483106144a1576064830492506002015b600a8310610c445760010192915050565b60006126e7610118546107996126dd565b6000806144d08486615888565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602052604090209092508291506126588482615e07565b600054610100900460ff16613b9d5760405162461bcd60e51b8152600401610deb90615f7d565b600054610100900460ff1661456c5760405162461bcd60e51b8152600401610deb90615f7d565b60005b8151811015610e2e5760016081600084848151811061459057614590615823565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161456f565b600054610100900460ff166145f15760405162461bcd60e51b8152600401610deb90615f7d565b60e76145fd8382615e07565b5060e861460a8282615e07565b50600060e5555050565b600054610100900460ff1661463b5760405162461bcd60e51b8152600401610deb90615f7d565b610e2e8282614945565b60006126e7614994565b60008082516041036146855760208301516040840151606085015160001a61467987828585614a08565b9450945050505061468d565b506000905060025b9250929050565b60008160048111156146a8576146a8615733565b036146b05750565b60018160048111156146c4576146c4615733565b0361470c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610deb565b600281600481111561472057614720615733565b0361476d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610deb565b600381600481111561478157614781615733565b03610dfd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610deb565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614826576040519150601f19603f3d011682016040523d82523d6000602084013e61482b565b606091505b5050905080610dc25760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610deb565b816001600160a01b0316836001600160a01b03160315611fab57306001600160a01b038416036148b9576141b56001600160a01b0385168383614ac2565b611fab6001600160a01b038516848484614b18565b6060831561493b578251600003614934576148e88561358a565b6149345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610deb565b5081612ac1565b612ac18383614b50565b600054610100900460ff1661496c5760405162461bcd60e51b8152600401610deb90615f7d565b601c6149788382615e07565b50601d6149858282615e07565b50506000601a819055601b5550565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6149bf614b7a565b6149c7614bd3565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115614a355750600090506003614ab9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614a89573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614ab257600060019250925050614ab9565b9150600090505b94509492505050565b610dc28363a9059cbb60e01b8484604051602401614ae1929190614f88565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614c04565b6040516001600160a01b0380851660248301528316604482015260648101829052611fab9085906323b872dd60e01b90608401614ae1565b815115614b605781518083602001fd5b8060405162461bcd60e51b8152600401610deb9190614dde565b600080614b8561340c565b805190915015614b9c578051602090910120919050565b601a548015614bab5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080614bde61341b565b805190915015614bf5578051602090910120919050565b601b548015614bab5792915050565b6000614c59826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614cd69092919063ffffffff16565b805190915015610dc25780806020019051810190614c77919061600b565b610dc25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610deb565b6060612ac1848460008585600080866001600160a01b03168587604051614cfd9190615fef565b60006040518083038185875af1925050503d8060008114614d3a576040519150601f19603f3d011682016040523d82523d6000602084013e614d3f565b606091505b5091509150614d50878383876148ce565b979650505050505050565b6001600160e01b031981168114610dfd57600080fd5b600060208284031215614d8357600080fd5b813561351f81614d5b565b60005b83811015614da9578181015183820152602001614d91565b50506000910152565b60008151808452614dca816020860160208601614d8e565b601f01601f19169290920160200192915050565b60208152600061351f6020830184614db2565b6001600160a01b03169052565b600060208284031215614e1057600080fd5b5035919050565b80356001600160a01b0381168114614e2e57600080fd5b919050565b60008060408385031215614e4657600080fd5b614e4f83614e17565b946020939093013593505050565b600060208284031215614e6f57600080fd5b61351f82614e17565b600080600060608486031215614e8d57600080fd5b614e9684614e17565b9250614ea460208501614e17565b9150604084013590509250925092565b60008083601f840112614ec657600080fd5b5081356001600160401b03811115614edd57600080fd5b60208301915083602082850101111561468d57600080fd5b600080600060408486031215614f0a57600080fd5b83356001600160401b0380821115614f2157600080fd5b908501906101608288031215614f3657600080fd5b90935060208501359080821115614f4c57600080fd5b50614f5986828701614eb4565b9497909650939450505050565b60008060408385031215614f7957600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614fb457600080fd5b82359150614fc460208401614e17565b90509250929050565b6000604082840312156120a357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561501d5761501d614fdf565b604052919050565b60006001600160401b0382111561503e5761503e614fdf565b50601f01601f191660200190565b600082601f83011261505d57600080fd5b813561507061506b82615025565b614ff5565b81815284602083860101111561508557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156150bb57600080fd5b6150c487614e17565b9550602087013594506150d960408801614e17565b93506060870135925060808701356001600160401b03808211156150fc57600080fd5b6151088a838b01614fcd565b935060a089013591508082111561511e57600080fd5b5061512b89828a0161504c565b9150509295509295509295565b8015158114610dfd57600080fd5b60008082840361012081121561515b57600080fd5b6101008082121561516b57600080fd5b849350830135905061517c81615138565b809150509250929050565b60ff60f81b881681526000602060e060208401526151a860e084018a614db2565b83810360408501526151ba818a614db2565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561520e578351835292840192918401916001016151f2565b50909c9b505050505050505050505050565b60006020828403121561523257600080fd5b81356001600160401b0381111561524857600080fd5b612ac18482850161504c565b60008060006060848603121561526957600080fd5b83359250614ea460208501614e17565b60008060006040848603121561528e57600080fd5b8335925060208401356001600160401b038111156152ab57600080fd5b614f5986828701614eb4565b600080604083850312156152ca57600080fd5b6152d383614e17565b9150602083013561517c81615138565b600080600080600060a086880312156152fb57600080fd5b61530486614e17565b94506020860135935061531960408701614e17565b925060608601359150608086013561533081615138565b809150509295509295909350565b6000806020838503121561535157600080fd5b82356001600160401b038082111561536857600080fd5b818501915085601f83011261537c57600080fd5b81358181111561538b57600080fd5b8660208260051b85010111156153a057600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561540957603f198886030184526153f7858351614db2565b945092850192908501906001016153db565b5092979650505050505050565b60006020828403121561542857600080fd5b81356002811061351f57600080fd5b6000806000806080858703121561544d57600080fd5b61545685614e17565b935061546460208601614e17565b92506040850135915060608501356001600160401b0381111561548657600080fd5b6154928782880161504c565b91505092959194509250565b6000806000806000606086880312156154b657600080fd5b8535945060208601356001600160401b03808211156154d457600080fd5b6154e089838a01614eb4565b909650945060408801359150808211156154f957600080fd5b5061550688828901614eb4565b969995985093965092949392505050565b600082601f83011261552857600080fd5b813560206001600160401b0382111561554357615543614fdf565b8160051b615552828201614ff5565b928352848101820192828101908785111561556c57600080fd5b83870192505b84831015614d505761558383614e17565b82529183019190830190615572565b80356001600160801b0381168114614e2e57600080fd5b6000806000806000806000806000806101408b8d0312156155c957600080fd5b6155d28b614e17565b995060208b01356001600160401b03808211156155ee57600080fd5b6155fa8e838f0161504c565b9a5060408d013591508082111561561057600080fd5b61561c8e838f0161504c565b995060608d013591508082111561563257600080fd5b61563e8e838f0161504c565b985060808d013591508082111561565457600080fd5b506156618d828e01615517565b96505061567060a08c01614e17565b945061567e60c08c01614e17565b935061568c60e08c01615592565b925061569b6101008c01615592565b91506156aa6101208c01614e17565b90509295989b9194979a5092959850565b6000806000604084860312156156d057600080fd5b83356001600160401b03808211156156e757600080fd5b6156f38783880161504c565b94506020860135915080821115614f4c57600080fd5b6000806040838503121561571c57600080fd5b61572583614e17565b9150614fc460208401614e17565b634e487b7160e01b600052602160045260246000fd5b602081016002831061576b57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561578657600080fd5b61578f84614e17565b92506020840135915060408401356001600160401b038111156157b157600080fd5b6157bd86828701614fcd565b9150509250925092565b600181811c908216806157db57607f821691505b6020821081036120a357634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c4457610c44615839565b60008261588357634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610c4457610c44615839565b6020808252601190820152704e6f7420656e6f75676820746f6b656e7360781b604082015260600190565b6000808335601e198436030181126158dd57600080fd5b83016020810192503590506001600160401b038111156158fc57600080fd5b80360382131561468d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815261594d6020820161594884614e17565b614df1565b600061595b60208401614e17565b6159686040840182614df1565b506040830135606083015261597f60608401614e17565b61598c6080840182614df1565b5061599a60808401846158c6565b6101608060a08601526159b26101808601838561590b565b925060a086013560c086015260c086013560e08601526159d460e08701614e17565b91506101006159e581870184614df1565b6159f0818801615592565b925050610120615a0a818701846001600160801b03169052565b615a15818801615592565b925050610140615a2f818701846001600160801b03169052565b9590950135939094019290925250919050565b60609290921b6001600160601b0319168252601482015260340190565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0808401359082015260c0808401359082015261012081016001600160a01b03615ab860e08601614e17565b1660e083015291151561010090910152919050565b60008060408385031215615ae057600080fd5b82516001600160401b03811115615af657600080fd5b8301601f81018513615b0757600080fd5b8051615b1561506b82615025565b818152866020838501011115615b2a57600080fd5b615b3b826020830160208601614d8e565b60209590950151949694955050505050565b60008551615b5f818460208a01614d8e565b820184868237909301918252506020019392505050565b6000808335601e19843603018112615b8d57600080fd5b8301803591506001600160401b03821115615ba757600080fd5b60200191503681900382131561468d57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b60008251615bef818460208701614d8e565b600360fc1b920191825250600101919050565b60008351615c14818460208801614d8e565b835190830190615c28818360208801614d8e565b01949350505050565b60008060408385031215615c4457600080fd5b82356001600160401b03811115615c5a57600080fd5b615c668582860161504c565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615c9e57600080fd5b8301803591506001600160401b03821115615cb857600080fd5b6020019150600581901b360382131561468d57600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615d54816015850160208801614d8e565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615d85816026840160208801614d8e565b01602601949350505050565b600060208284031215615da357600080fd5b61351f82615592565b81810381811115610c4457610c44615839565b601f821115610dc2576000816000526020600020601f850160051c81016020861015615de85750805b601f850160051c820191505b8181101561319f57828155600101615df4565b81516001600160401b03811115615e2057615e20614fdf565b615e3481615e2e84546157c7565b84615dbf565b602080601f831160018114615e695760008415615e515750858301515b600019600386901b1c1916600185901b17855561319f565b600085815260208120601f198616915b82811015615e9857888601518255948401946001909101908401615e79565b5085821015615eb65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000615ed96040830185614db2565b8281036020840152615eeb8185614db2565b95945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121c590830184614db2565b600060208284031215615f3957600080fd5b815161351f81614d5b565b858152606060208201526000615f5e60608301868861590b565b8281036040840152615f7181858761590b565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615fe757615fe7615839565b506000190190565b60008251616001818460208701614d8e565b9190910192915050565b60006020828403121561601d57600080fd5b815161351f8161513856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a057e6ba8a91b9f4d84b4fb12f610804c54d44d8c4732c6c8ed09fd1d8a94ab164736f6c63430008170033",
    "sourceMap": "1059:11962:287:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102fe5760003560e01c80639010d07c1161019d578063b6f10c79116100e8578063b6f10c7914610966578063b88d4fde14610986578063c87b56dd146109a6578063ca15c873146109c6578063cb2ef6f7146109e6578063ce80564214610a09578063d37c353b14610a29578063d45573f614610a49578063d547741f14610a5e578063d637ed5914610a7e578063e159163414610afe578063e57553da14610b1e578063e715032214610b42578063e8a3d48514610b62578063e985e9c514610b77578063f28083c314610bc0578063ffbb7a1314610be757600080fd5b80639010d07c1461075e57806391d148541461077e578063938e3d7b1461079e57806395d89b41146107be5780639bcf7a15146107d35780639fc4d68f146107f3578063a05112fc14610813578063a0a8e46014610833578063a217fddf1461084f578063a22cb46514610864578063a2309ff814610884578063a32fa5b314610899578063a72e157d146108b9578063ac9650d8146108d9578063b24f2d3914610906578063b67875ce1461093157600080fd5b806301ffc9a71461030357806306fdde0314610338578063079fe40e1461035a578063081812fc14610387578063095ea7b3146103a757806313af4035146103c957806318160ddd146103e95780631e7ac4881461040c57806323b872dd1461042c5780632419f51b1461044c578063248a9ca31461046c578063252e82e8146104995780632a55205a146104d85780632f2ff15d1461050657806336568abe146105265780633b1475a71461054657806342842e0e1461055b57806342966c681461057b578063439c7be51461059b578063492e224b146105ae5780634cc157df146105ce578063572b6c05146106105780635ab31c1a14610630578063600dd5ea146106435780636352211e1461066357806363b45e2d146106835780636f4f28371461069857806370a08231146106b857806377312a9e146106d85780637e54523c146106f857806384b0196e146107185780638da5cb5b14610740575b600080fd5b34801561030f57600080fd5b5061032361031e366004614d71565b610c1e565b60405190151581526020015b60405180910390f35b34801561034457600080fd5b5061034d610c4a565b60405161032f9190614dde565b34801561036657600080fd5b5061036f610cdc565b6040516001600160a01b03909116815260200161032f565b34801561039357600080fd5b5061036f6103a2366004614dfe565b610ceb565b3480156103b357600080fd5b506103c76103c2366004614e33565b610d2f565b005b3480156103d557600080fd5b506103c76103e4366004614e5d565b610dc7565b3480156103f557600080fd5b5060e65460e554035b60405190815260200161032f565b34801561041857600080fd5b506103c7610427366004614e33565b610e00565b34801561043857600080fd5b506103c7610447366004614e78565b610e32565b34801561045857600080fd5b506103fe610467366004614dfe565b610e3d565b34801561047857600080fd5b506103fe610487366004614dfe565b6000908152600d602052604090205490565b3480156104a557600080fd5b506104b96104b4366004614ef5565b610eab565b6040805192151583526001600160a01b0390911660208301520161032f565b3480156104e457600080fd5b506104f86104f3366004614f66565b610eef565b60405161032f929190614f88565b34801561051257600080fd5b506103c7610521366004614fa1565b610f2c565b34801561053257600080fd5b506103c7610541366004614fa1565b610fc2565b34801561055257600080fd5b50600b546103fe565b34801561056757600080fd5b506103c7610576366004614e78565b611021565b34801561058757600080fd5b506103c7610596366004614dfe565b61103c565b61036f6105a9366004614ef5565b611047565b3480156105ba57600080fd5b506103236105c9366004614dfe565b611180565b3480156105da57600080fd5b506105ee6105e9366004614dfe565b6111a6565b604080516001600160a01b03909316835261ffff90911660208301520161032f565b34801561061c57600080fd5b5061032361062b366004614e5d565b611211565b6103c761063e3660046150a2565b61122f565b34801561064f57600080fd5b506103c761065e366004614e33565b6113ad565b34801561066f57600080fd5b5061036f61067e366004614dfe565b6113db565b34801561068f57600080fd5b506009546103fe565b3480156106a457600080fd5b506103c76106b3366004614e5d565b6113ed565b3480156106c457600080fd5b506103fe6106d3366004614e5d565b61141a565b3480156106e457600080fd5b506103c76106f3366004615146565b611468565b34801561070457600080fd5b506103c7610713366004614e33565b61161a565b34801561072457600080fd5b5061072d611648565b60405161032f9796959493929190615187565b34801561074c57600080fd5b506007546001600160a01b031661036f565b34801561076a57600080fd5b5061036f610779366004614f66565b6116e6565b34801561078a57600080fd5b50610323610799366004614fa1565b6117d4565b3480156107aa57600080fd5b506103c76107b9366004615220565b6117ff565b3480156107ca57600080fd5b5061034d61182c565b3480156107df57600080fd5b506103c76107ee366004615254565b61183b565b3480156107ff57600080fd5b5061034d61080e366004615279565b61186a565b34801561081f57600080fd5b5061034d61082e366004614dfe565b6119ea565b34801561083f57600080fd5b506040516004815260200161032f565b34801561085b57600080fd5b506103fe600081565b34801561087057600080fd5b506103c761087f3660046152b7565b611a84565b34801561089057600080fd5b5060e5546103fe565b3480156108a557600080fd5b506103236108b4366004614fa1565b611b56565b3480156108c557600080fd5b506103c76108d43660046152e3565b611bac565b3480156108e557600080fd5b506108f96108f436600461533e565b611d83565b60405161032f91906153b2565b34801561091257600080fd5b506004546001600160a01b03811690600160a01b900461ffff166105ee565b34801561093d57600080fd5b5061095161094c366004614e5d565b611ef6565b6040805192835260208301919091520161032f565b34801561097257600080fd5b506103c7610981366004615416565b611f33565b34801561099257600080fd5b506103c76109a1366004615437565b611f60565b3480156109b257600080fd5b5061034d6109c1366004614dfe565b611fb1565b3480156109d257600080fd5b506103fe6109e1366004614dfe565b612020565b3480156109f257600080fd5b506c05369676e617475726544726f7609c1b6103fe565b348015610a1557600080fd5b5061034d610a24366004615279565b6120a9565b348015610a3557600080fd5b506103fe610a4436600461549e565b612137565b348015610a5557600080fd5b506105ee6121cf565b348015610a6a57600080fd5b506103c7610a79366004614fa1565b6121ec565b348015610a8a57600080fd5b50600f54601054601154601254601354601454601554601654610aba97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e08201526101000161032f565b348015610b0a57600080fd5b506103c7610b193660046155a9565b612205565b348015610b2a57600080fd5b506104f86002546003546001600160a01b0390911691565b348015610b4e57600080fd5b5061034d610b5d3660046156bb565b6123f8565b348015610b6e57600080fd5b5061034d61246d565b348015610b8357600080fd5b50610323610b92366004615709565b6001600160a01b03918216600090815260ec6020908152604080832093909416825291909152205460ff1690565b348015610bcc57600080fd5b50600254600160b01b900460ff1660405161032f9190615749565b348015610bf357600080fd5b50610c07610c02366004615771565b61247a565b60408051921515835260208301919091520161032f565b6000610c2982612661565b80610c44575063152a902d60e11b6001600160e01b03198316145b92915050565b606060e78054610c59906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c85906157c7565b8015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610cf6826126b1565b610d13576040516333d1c03960e21b815260040160405180910390fd5b50600090815260eb60205260409020546001600160a01b031690565b6000610d3a826113db565b9050806001600160a01b0316836001600160a01b031603610d6e5760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610d806126dd565b6001600160a01b031614610db757610d9a81610b926126dd565b610db7576040516367d9dca160e11b815260040160405180910390fd5b610dc28383836126ec565b505050565b610dcf612748565b610df45760405162461bcd60e51b8152600401610deb906157fb565b60405180910390fd5b610dfd81612756565b50565b610e08612748565b610e245760405162461bcd60e51b8152600401610deb906157fb565b610e2e82826127a8565b5050565b610dc283838361285c565b6000610e4860095490565b8210610e865760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610deb565b60098281548110610e9957610e99615823565b90600052602060002001549050919050565b600080610eb9858585612a65565b6101408601356000908152604e602052604090205490915060ff16158015610ee55750610ee581612ac9565b9150935093915050565b600080600080610efe866111a6565b90945084925061ffff169050612710610f17828761584f565b610f219190615866565b925050509250929050565b6000828152600d6020526040902054610f459033612ad8565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1615610fb85760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610deb565b610e2e8282612b58565b336001600160a01b038216146110175760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610deb565b610e2e8282612b6c565b610dc283838360405180602001604052806000815250611f60565b610dfd816001612bc3565b60e554600b546000919061105f60a087013583615888565b111561107d5760405162461bcd60e51b8152600401610deb9061589b565b611088858585612da3565b915060006110996020870187614e5d565b90506110ce6110ae6080880160608901614e5d565b60a08801356110c46101008a0160e08b01614e5d565b8960c00135612f2b565b60006110e06040880160208901614e5d565b6001600160a01b0316141580156110fa5750604086013515155b1561111d5761111d826111136040890160208a01614e5d565b8860400135613035565b61112b818760a001356130dc565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c8960405161116f9190615934565b60405180910390a450509392505050565b6000818152600860205260408120805482919061119c906157c7565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156111ed5780516020820151611207565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526081602052604090205460ff1690565b61123d8686868686866130f6565b601754600061125461124d613188565b888661247a565b50905060006020850135158061126a5750601454155b9050611280611277613188565b89898985611bac565b818015611291575060008560200135115b156112db576112db6112a1613188565b60008581526019602090815260408083206001600160981b03600886901c16845290915290208054600160ff9093169290921b9091179055565b87600f60020160008282546112f09190615888565b90915550506000838152601860205260408120429161130d613188565b6001600160a01b03166001600160a01b031681526020019081526020016000208190555061133e6000898989612f2b565b600061134a8a8a613192565b9050808a6001600160a01b031661135f613188565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68c60405161139991815260200190565b60405180910390a450505050505050505050565b6113b5612748565b6113d15760405162461bcd60e51b8152600401610deb906157fb565b610e2e82826131a7565b60006113e682613224565b5192915050565b6113f5612748565b6114115760405162461bcd60e51b8152600401610deb906157fb565b610dfd8161333e565b60006001600160a01b038216611443576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815260ea60205260409020546001600160401b031690565b611470612748565b61148c5760405162461bcd60e51b8152600401610deb906157fb565b60175460115482156114ce575060006114a3613188565b436040516020016114b5929190615a42565b6040516020818303038152906040528051906020012091505b83602001358111156115175760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610deb565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e00160208101906115789190614e5d565b6001600160a01b039081169091528151600f5560208201516010556040808301516011556060830151601255608083015160135560a083015160145560c083015160155560e090920151601680546001600160a01b031916919092161790556017839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd790809061160c9086908690615a5f565b60405180910390a150505050565b611622612748565b61163e5760405162461bcd60e51b8152600401610deb906157fb565b610e2e82826133ae565b600060608060008060006060601a546000801b1480156116685750601b54155b6116ac5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610deb565b6116b461340c565b6116bc61341b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000828152600e602052604081205481805b828110156117cb576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561177457848203611762576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c44915050565b61176d600183615888565b91506117b9565b61177f8660006117d4565b80156117a657506000868152600e6020908152604080832083805260020190915290205481145b156117b9576117b6600183615888565b91505b6117c4600182615888565b90506116f8565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611807612748565b6118235760405162461bcd60e51b8152600401610deb906157fb565b610dfd8161342a565b606060e88054610c59906157c7565b611843612748565b61185f5760405162461bcd60e51b8152600401610deb906157fb565b610dc2838383613035565b600083815260086020526040812080546060929190611888906157c7565b80601f01602080910402602001604051908101604052809291908181526020018280546118b4906157c7565b80156119015780601f106118d657610100808354040283529160200191611901565b820191906000526020600020905b8154815290600101906020018083116118e457829003601f168201915b50505050509050805160000361194d5760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610deb565b600080828060200190518101906119649190615acd565b915091506119738287876123f8565b9350808487874660405160200161198d9493929190615b4d565b60405160208183030381529060405280519060200120146119e05760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610deb565b5050509392505050565b60086020526000908152604090208054611a03906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2f906157c7565b8015611a7c5780601f10611a5157610100808354040283529160200191611a7c565b820191906000526020600020905b815481529060010190602001808311611a5f57829003601f168201915b505050505081565b611a8c6126dd565b6001600160a01b0316826001600160a01b031603611abd5760405163b06307db60e01b815260040160405180910390fd5b8060ec6000611aca6126dd565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611b0e6126dd565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611b4a911515815260200190565b60405180910390a35050565b6000828152600c6020908152604080832083805290915281205460ff16611ba357506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c44565b50600192915050565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a082015260155460c08201526016546001600160a01b0390811660e08301819052908516141580611c1757508060c001518314155b15611c605760405162461bcd60e51b8152602060048201526019602482015278496e76616c6964207072696365206f722063757272656e637960381b6044820152606401610deb565b841580611c785750818015611c785750806060015185115b15611cb85760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606401610deb565b8060200151858260400151611ccd9190615888565b1115611d105760405162461bcd60e51b815260206004820152601260248201527165786365656473206d617820737570706c7960701b6044820152606401610deb565b600080611d1c88611ef6565b915091504283600001511180611d3b57508115801590611d3b57508042105b15611d795760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610deb565b5050505050505050565b6060816001600160401b03811115611d9d57611d9d614fdf565b604051908082528060200260200182016040528015611dd057816020015b6060815260200190600190039081611dbb5790505b5090506000611ddd6126dd565b9050336001600160a01b038216141560005b848110156117cb578115611e6e57611e4c30878784818110611e1357611e13615823565b9050602002810190611e259190615b76565b86604051602001611e3893929190615bbc565b6040516020818303038152906040526134fa565b848281518110611e5e57611e5e615823565b6020026020010181905250611eee565b611ed030878784818110611e8457611e84615823565b9050602002810190611e969190615b76565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506134fa92505050565b848281518110611ee257611ee2615823565b60200260200101819052505b600101611def565b60175460009081526018602090815260408083206001600160a01b0385168452909152902054601354810181811015611f2e57506000195b915091565b611f3b612748565b611f575760405162461bcd60e51b8152600401610deb906157fb565b610dfd81613526565b611f6b84848461285c565b611f7d836001600160a01b031661358a565b15611fab57611f8e84848484613599565b611fab576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611fbe8361368a565b5090506000611fcc8461378f565b9050611fd782611180565b156120055780604051602001611fed9190615bdd565b60405160208183030381529060405292505050919050565b8061200f856138f0565b604051602001611fed929190615c02565b6000818152600e6020526040812054815b81811015612084576000848152600e602090815260408083208484526001019091529020546001600160a01b0316156120725761206f600184615888565b92505b61207d600182615888565b9050612031565b506120908360006117d4565b156120a3576120a0600183615888565b91505b50919050565b6060610118546120b98133612ad8565b60006120c486610e3d565b90506120d181868661186a565b92506120ec8160405180602001604052806000815250613982565b6120f6818461399a565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d846040516121269190614dde565b60405180910390a250509392505050565b600081156121b85760008061214e84860186615c31565b91509150815160001415801561216357508015155b156121b5576121b588600b546121799190615888565b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061398292505050565b50505b6121c586868686866139b2565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d60205260409020546110179033612ad8565b600054610100900460ff16158080156122255750600054600160ff909116105b8061224657506122343061358a565b158015612246575060005460ff166001145b6122a95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610deb565b6000805460ff1916600117905580156122cc576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c610117557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66101185561231f87613abf565b6123298a8a613af7565b612331613b28565b61233a8861342a565b6123438b612756565b61234e60008c612b58565b61235b610118548c612b58565b612368610117548c612b58565b612376610117546000612b58565b61238982846001600160801b03166127a8565b61239c85856001600160801b03166131a7565b6123a58661333e565b80156123eb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b8181101561246457600085858360405160200161242d93929190615c75565b60408051601f1981840301815291905280516020918201208884018201511885840182015261245d915082615888565b905061240e565b50509392505050565b60018054611a03906157c7565b6040805161010081018252600f5481526010546020820152601154918101919091526012546060820152601354608082015260145460a0820181905260155460c08301526016546001600160a01b031660e08301526000918291156126585761254d6124e68580615c87565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a0830151604051612532908a9060208a8101359101615a42565b60405160208183030381529060405280519060200120613b9f565b9093509150826125925760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081a5b88185b1b1bdddb1a5cdd60821b6044820152606401610deb565b60175460009081526019602090815260408083206001600160981b0360088b901c168452909152902054600160ff88161b16156126015760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b6044820152606401610deb565b6020840135158015906126175750836020013585115b156126585760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21038ba3c90383937b7b360791b6044820152606401610deb565b50935093915050565b60006001600160e01b031982166380ac58cd60e01b148061269257506001600160e01b03198216635b5e139f60e01b145b80610c4457506301ffc9a760e01b6001600160e01b0319831614610c44565b600060e55482108015610c44575050600090815260e96020526040902054600160e01b900460ff161590565b60006126e7613c63565b905090565b600082815260eb602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006126e7816107996126dd565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156127ca5760405162461bcd60e51b8152600401610deb90615cd0565b6001600160a01b0382166127f05760405162461bcd60e51b8152600401610deb90615cf9565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b600061286782613224565b9050836001600160a01b031681600001516001600160a01b03161461289e5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b03166128b26126dd565b6001600160a01b031614806128ce57506128ce85610b926126dd565b806128f957506128dc6126dd565b6001600160a01b03166128ee84610ceb565b6001600160a01b0316145b90508061291957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661294057604051633a954ecd60e21b815260040160405180910390fd5b61294d8585856001613c85565b612959600084876126ec565b6001600160a01b03858116600090815260ea6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865260e990945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116612a2c5760e5548214612a2c57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061605083398151915260405160405180910390a45050505050565b6000612ac183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612abb9250612aaf9150889050613d23565b80519060200120613e6a565b90613e97565b949350505050565b6000610c4461011854836117d4565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610e2e57612b16816001600160a01b03166014613ebb565b612b21836020613ebb565b604051602001612b32929190615d24565b60408051601f198184030181529082905262461bcd60e51b8252610deb91600401614dde565b612b628282614056565b610e2e82826140b1565b612b76828261411e565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612bce83613224565b80519091508215612c56576000816001600160a01b0316612bed6126dd565b6001600160a01b03161480612c095750612c0982610b926126dd565b80612c345750612c176126dd565b6001600160a01b0316612c2986610ceb565b6001600160a01b0316145b905080612c5457604051632ce44b5f60e11b815260040160405180910390fd5b505b612c64816000866001613c85565b612c70600085836126ec565b6001600160a01b03808216600081815260ea602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865260e9909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612d6a5760e5548214612d6a57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020616050833981519152908390a4505060e6805460010190555050565b600080612db1858585610eab565b9250905080612df05760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610deb565b42612e0361012087016101008801615d91565b6001600160801b03161180612e315750612e2561014086016101208701615d91565b6001600160801b031642115b15612e6c5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610deb565b6000612e7b6020870187614e5d565b6001600160a01b031603612ec75760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610deb565b60008560a0013511612f035760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610deb565b50610140909301356000908152604e60205260409020805460ff191660011790555090919050565b8015611fab57600080612f3c6121cf565b909250905060006001600160a01b03871615612f585786612f60565b612f60610cdc565b90506000612f6e858861584f565b90506000612710612f8361ffff86168461584f565b612f8d9190615866565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03881601612ffb57813414612ffb5760405162461bcd60e51b81526020600482015260156024820152744d7573742073656e6420746f74616c20707269636560581b6044820152606401610deb565b61300e876130076126dd565b8784614180565b61302a8761301a6126dd565b856130258587615dac565b614180565b505050505050505050565b6127108111156130575760405162461bcd60e51b8152600401610deb90615cd0565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610e2e8282604051806020016040528060008152506141c6565b600061310133611211565b8061311b5750326131106126dd565b6001600160a01b0316145b9050806131505760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610deb565b600b548660e5546131619190615888565b111561317f5760405162461bcd60e51b8152600401610deb9061589b565b50505050505050565b60006126e76126dd565b60e554610c4483836130dc565b505050505050565b6127108111156131c95760405162461bcd60e51b8152600401610deb90615cd0565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612850565b60408051606081018252600080825260208201819052918101919091528160e55481101561332557600081815260e96020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906133235780516001600160a01b0316156132ba579392505050565b5060001901600081815260e96020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff161515928101929092521561331e579392505050565b6132ba565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166133645760405162461bcd60e51b8152600401610deb90615cf9565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906134009084908490614f88565b60405180910390a15050565b6060601c8054610c59906157c7565b6060601d8054610c59906157c7565b600060018054613439906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054613465906157c7565b80156134b25780601f10613487576101008083540402835291602001916134b2565b820191906000526020600020905b81548152906001019060200180831161349557829003601f168201915b5050505050905081600190816134c89190615e07565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613400929190615ec6565b606061351f83836040518060600160405280602781526020016160296027913961436e565b9392505050565b6002805482919060ff60b01b1916600160b01b83600181111561354b5761354b615733565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161357f9190615749565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026135b26126dd565b8786866040518563ffffffff1660e01b81526004016135d49493929190615ef4565b6020604051808303816000875af192505050801561360f575060408051601f3d908101601f1916820190925261360c91810190615f27565b60015b61366d573d80801561363d576040519150601f19603f3d011682016040523d82523d6000602084013e613642565b606091505b508051600003613665576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600080600061369860095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156136e857602002820191906000526020600020905b8154815260200190600101908083116136d4575b5050505050905060005b828110156137545781818151811061370c5761370c615823565b60200260200101518610156137425780935081818151811061373057613730615823565b60200260200101519450505050915091565b61374d600182615888565b90506136f2565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610deb565b6060600061379c60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156137ec57602002820191906000526020600020905b8154815260200190600101908083116137d8575b5050505050905060005b828110156137545781818151811061381057613810615823565b60200260200101518510156138de57600a600083838151811061383557613835615823565b602002602001015181526020019081526020016000208054613856906157c7565b80601f0160208091040260200160405190810160405280929190818152602001828054613882906157c7565b80156138cf5780601f106138a4576101008083540402835291602001916138cf565b820191906000526020600020905b8154815290600101906020018083116138b257829003601f168201915b50505050509350505050919050565b6138e9600182615888565b90506137f6565b606060006138fd836143dc565b60010190506000816001600160401b0381111561391c5761391c614fdf565b6040519080825280601f01601f191660200182016040528015613946576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461395057509392505050565b6000828152600860205260409020610dc28282615e07565b6000828152600a60205260409020610dc28282615e07565b60006139bc6144b2565b6139d85760405162461bcd60e51b8152600401610deb906157fb565b85600003613a105760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610deb565b6000600b549050613a58818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144c392505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613a8e8a84615888565b613a989190615dac565b88888888604051613aad959493929190615f44565b60405180910390a25095945050505050565b600054610100900460ff16613ae65760405162461bcd60e51b8152600401610deb90615f7d565b613aee61451e565b610dfd81614545565b600054610100900460ff16613b1e5760405162461bcd60e51b8152600401610deb90615f7d565b610e2e82826145ca565b600054610100900460ff16613b4f5760405162461bcd60e51b8152600401610deb90615f7d565b613b9d604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b815250614614565b565b6000808281805b8751811015613c5757613bba60028361584f565b91506000888281518110613bd057613bd0615823565b60200260200101519050808411613c12576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613c4e565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613c4b9190615888565b92505b50600101613ba6565b50941495939450505050565b6000613c6e33611211565b15613c80575060131936013560601c90565b503390565b613c936101175460006117d4565b158015613ca857506001600160a01b03841615155b8015613cbc57506001600160a01b03831615155b15611fab57613cce61011754856117d4565b158015613ce55750613ce361011754846117d4565b155b15611fab5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610deb565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613d536020840184614e5d565b613d636040850160208601614e5d565b6040850135613d786080870160608801614e5d565b613d856080880188615b76565b604051613d93929190615fc8565b60405190819003902060a088013560c0890135613db76101008b0160e08c01614e5d565b613dc96101208c016101008d01615d91565b613ddb6101408d016101208e01615d91565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610c44613e77614645565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000613ea6858561464f565b91509150613eb381614694565b509392505050565b60606000613eca83600261584f565b613ed5906002615888565b6001600160401b03811115613eec57613eec614fdf565b6040519080825280601f01601f191660200182016040528015613f16576020820181803683370190505b509050600360fc1b81600081518110613f3157613f31615823565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f6057613f60615823565b60200101906001600160f81b031916908160001a9053506000613f8484600261584f565b613f8f906001615888565b90505b6001811115614007576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fc357613fc3615823565b1a60f81b828281518110613fd957613fd9615823565b60200101906001600160f81b031916908160001a90535060049490941c9361400081615fd8565b9050613f92565b50831561351f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610deb565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e60205260408120805491600191906140d08385615888565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6141288282612ad8565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8015611fab5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016141ba576141b582826147d9565b611fab565b611fab8484848461487b565b60e5546001600160a01b0384166141ef57604051622e076360e81b815260040160405180910390fd5b826000036142105760405163b562e8dd60e01b815260040160405180910390fd5b61421d6000858386613c85565b6001600160a01b038416600081815260ea6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845260e990925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906142b69061358a565b1561432c575b60405182906001600160a01b03881690600090600080516020616050833981519152908290a46142f56000878480600101955087613599565b614312576040516368d2bf6b60e11b815260040160405180910390fd5b8082106142bc578260e5541461432757600080fd5b61435f565b5b6040516001830192906001600160a01b03881690600090600080516020616050833981519152908290a480821061432d575b5060e555611fab600085838684565b6060600080856001600160a01b03168560405161438b9190615fef565b600060405180830381855af49150503d80600081146143c6576040519150601f19603f3d011682016040523d82523d6000602084013e6143cb565b606091505b50915091506121c5868383876148ce565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061441b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310614445576904ee2d6d415b85acef8160201b830492506020015b662386f26fc10000831061446357662386f26fc10000830492506010015b6305f5e100831061447b576305f5e100830492506008015b612710831061448f57612710830492506004015b606483106144a1576064830492506002015b600a8310610c445760010192915050565b60006126e7610118546107996126dd565b6000806144d08486615888565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602052604090209092508291506126588482615e07565b600054610100900460ff16613b9d5760405162461bcd60e51b8152600401610deb90615f7d565b600054610100900460ff1661456c5760405162461bcd60e51b8152600401610deb90615f7d565b60005b8151811015610e2e5760016081600084848151811061459057614590615823565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161456f565b600054610100900460ff166145f15760405162461bcd60e51b8152600401610deb90615f7d565b60e76145fd8382615e07565b5060e861460a8282615e07565b50600060e5555050565b600054610100900460ff1661463b5760405162461bcd60e51b8152600401610deb90615f7d565b610e2e8282614945565b60006126e7614994565b60008082516041036146855760208301516040840151606085015160001a61467987828585614a08565b9450945050505061468d565b506000905060025b9250929050565b60008160048111156146a8576146a8615733565b036146b05750565b60018160048111156146c4576146c4615733565b0361470c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610deb565b600281600481111561472057614720615733565b0361476d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610deb565b600381600481111561478157614781615733565b03610dfd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610deb565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614826576040519150601f19603f3d011682016040523d82523d6000602084013e61482b565b606091505b5050905080610dc25760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610deb565b816001600160a01b0316836001600160a01b03160315611fab57306001600160a01b038416036148b9576141b56001600160a01b0385168383614ac2565b611fab6001600160a01b038516848484614b18565b6060831561493b578251600003614934576148e88561358a565b6149345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610deb565b5081612ac1565b612ac18383614b50565b600054610100900460ff1661496c5760405162461bcd60e51b8152600401610deb90615f7d565b601c6149788382615e07565b50601d6149858282615e07565b50506000601a819055601b5550565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6149bf614b7a565b6149c7614bd3565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115614a355750600090506003614ab9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614a89573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614ab257600060019250925050614ab9565b9150600090505b94509492505050565b610dc28363a9059cbb60e01b8484604051602401614ae1929190614f88565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614c04565b6040516001600160a01b0380851660248301528316604482015260648101829052611fab9085906323b872dd60e01b90608401614ae1565b815115614b605781518083602001fd5b8060405162461bcd60e51b8152600401610deb9190614dde565b600080614b8561340c565b805190915015614b9c578051602090910120919050565b601a548015614bab5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080614bde61341b565b805190915015614bf5578051602090910120919050565b601b548015614bab5792915050565b6000614c59826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614cd69092919063ffffffff16565b805190915015610dc25780806020019051810190614c77919061600b565b610dc25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610deb565b6060612ac1848460008585600080866001600160a01b03168587604051614cfd9190615fef565b60006040518083038185875af1925050503d8060008114614d3a576040519150601f19603f3d011682016040523d82523d6000602084013e614d3f565b606091505b5091509150614d50878383876148ce565b979650505050505050565b6001600160e01b031981168114610dfd57600080fd5b600060208284031215614d8357600080fd5b813561351f81614d5b565b60005b83811015614da9578181015183820152602001614d91565b50506000910152565b60008151808452614dca816020860160208601614d8e565b601f01601f19169290920160200192915050565b60208152600061351f6020830184614db2565b6001600160a01b03169052565b600060208284031215614e1057600080fd5b5035919050565b80356001600160a01b0381168114614e2e57600080fd5b919050565b60008060408385031215614e4657600080fd5b614e4f83614e17565b946020939093013593505050565b600060208284031215614e6f57600080fd5b61351f82614e17565b600080600060608486031215614e8d57600080fd5b614e9684614e17565b9250614ea460208501614e17565b9150604084013590509250925092565b60008083601f840112614ec657600080fd5b5081356001600160401b03811115614edd57600080fd5b60208301915083602082850101111561468d57600080fd5b600080600060408486031215614f0a57600080fd5b83356001600160401b0380821115614f2157600080fd5b908501906101608288031215614f3657600080fd5b90935060208501359080821115614f4c57600080fd5b50614f5986828701614eb4565b9497909650939450505050565b60008060408385031215614f7957600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614fb457600080fd5b82359150614fc460208401614e17565b90509250929050565b6000604082840312156120a357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561501d5761501d614fdf565b604052919050565b60006001600160401b0382111561503e5761503e614fdf565b50601f01601f191660200190565b600082601f83011261505d57600080fd5b813561507061506b82615025565b614ff5565b81815284602083860101111561508557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156150bb57600080fd5b6150c487614e17565b9550602087013594506150d960408801614e17565b93506060870135925060808701356001600160401b03808211156150fc57600080fd5b6151088a838b01614fcd565b935060a089013591508082111561511e57600080fd5b5061512b89828a0161504c565b9150509295509295509295565b8015158114610dfd57600080fd5b60008082840361012081121561515b57600080fd5b6101008082121561516b57600080fd5b849350830135905061517c81615138565b809150509250929050565b60ff60f81b881681526000602060e060208401526151a860e084018a614db2565b83810360408501526151ba818a614db2565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561520e578351835292840192918401916001016151f2565b50909c9b505050505050505050505050565b60006020828403121561523257600080fd5b81356001600160401b0381111561524857600080fd5b612ac18482850161504c565b60008060006060848603121561526957600080fd5b83359250614ea460208501614e17565b60008060006040848603121561528e57600080fd5b8335925060208401356001600160401b038111156152ab57600080fd5b614f5986828701614eb4565b600080604083850312156152ca57600080fd5b6152d383614e17565b9150602083013561517c81615138565b600080600080600060a086880312156152fb57600080fd5b61530486614e17565b94506020860135935061531960408701614e17565b925060608601359150608086013561533081615138565b809150509295509295909350565b6000806020838503121561535157600080fd5b82356001600160401b038082111561536857600080fd5b818501915085601f83011261537c57600080fd5b81358181111561538b57600080fd5b8660208260051b85010111156153a057600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561540957603f198886030184526153f7858351614db2565b945092850192908501906001016153db565b5092979650505050505050565b60006020828403121561542857600080fd5b81356002811061351f57600080fd5b6000806000806080858703121561544d57600080fd5b61545685614e17565b935061546460208601614e17565b92506040850135915060608501356001600160401b0381111561548657600080fd5b6154928782880161504c565b91505092959194509250565b6000806000806000606086880312156154b657600080fd5b8535945060208601356001600160401b03808211156154d457600080fd5b6154e089838a01614eb4565b909650945060408801359150808211156154f957600080fd5b5061550688828901614eb4565b969995985093965092949392505050565b600082601f83011261552857600080fd5b813560206001600160401b0382111561554357615543614fdf565b8160051b615552828201614ff5565b928352848101820192828101908785111561556c57600080fd5b83870192505b84831015614d505761558383614e17565b82529183019190830190615572565b80356001600160801b0381168114614e2e57600080fd5b6000806000806000806000806000806101408b8d0312156155c957600080fd5b6155d28b614e17565b995060208b01356001600160401b03808211156155ee57600080fd5b6155fa8e838f0161504c565b9a5060408d013591508082111561561057600080fd5b61561c8e838f0161504c565b995060608d013591508082111561563257600080fd5b61563e8e838f0161504c565b985060808d013591508082111561565457600080fd5b506156618d828e01615517565b96505061567060a08c01614e17565b945061567e60c08c01614e17565b935061568c60e08c01615592565b925061569b6101008c01615592565b91506156aa6101208c01614e17565b90509295989b9194979a5092959850565b6000806000604084860312156156d057600080fd5b83356001600160401b03808211156156e757600080fd5b6156f38783880161504c565b94506020860135915080821115614f4c57600080fd5b6000806040838503121561571c57600080fd5b61572583614e17565b9150614fc460208401614e17565b634e487b7160e01b600052602160045260246000fd5b602081016002831061576b57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561578657600080fd5b61578f84614e17565b92506020840135915060408401356001600160401b038111156157b157600080fd5b6157bd86828701614fcd565b9150509250925092565b600181811c908216806157db57607f821691505b6020821081036120a357634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c4457610c44615839565b60008261588357634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610c4457610c44615839565b6020808252601190820152704e6f7420656e6f75676820746f6b656e7360781b604082015260600190565b6000808335601e198436030181126158dd57600080fd5b83016020810192503590506001600160401b038111156158fc57600080fd5b80360382131561468d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815261594d6020820161594884614e17565b614df1565b600061595b60208401614e17565b6159686040840182614df1565b506040830135606083015261597f60608401614e17565b61598c6080840182614df1565b5061599a60808401846158c6565b6101608060a08601526159b26101808601838561590b565b925060a086013560c086015260c086013560e08601526159d460e08701614e17565b91506101006159e581870184614df1565b6159f0818801615592565b925050610120615a0a818701846001600160801b03169052565b615a15818801615592565b925050610140615a2f818701846001600160801b03169052565b9590950135939094019290925250919050565b60609290921b6001600160601b0319168252601482015260340190565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0808401359082015260c0808401359082015261012081016001600160a01b03615ab860e08601614e17565b1660e083015291151561010090910152919050565b60008060408385031215615ae057600080fd5b82516001600160401b03811115615af657600080fd5b8301601f81018513615b0757600080fd5b8051615b1561506b82615025565b818152866020838501011115615b2a57600080fd5b615b3b826020830160208601614d8e565b60209590950151949694955050505050565b60008551615b5f818460208a01614d8e565b820184868237909301918252506020019392505050565b6000808335601e19843603018112615b8d57600080fd5b8301803591506001600160401b03821115615ba757600080fd5b60200191503681900382131561468d57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b60008251615bef818460208701614d8e565b600360fc1b920191825250600101919050565b60008351615c14818460208801614d8e565b835190830190615c28818360208801614d8e565b01949350505050565b60008060408385031215615c4457600080fd5b82356001600160401b03811115615c5a57600080fd5b615c668582860161504c565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615c9e57600080fd5b8301803591506001600160401b03821115615cb857600080fd5b6020019150600581901b360382131561468d57600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615d54816015850160208801614d8e565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615d85816026840160208801614d8e565b01602601949350505050565b600060208284031215615da357600080fd5b61351f82615592565b81810381811115610c4457610c44615839565b601f821115610dc2576000816000526020600020601f850160051c81016020861015615de85750805b601f850160051c820191505b8181101561319f57828155600101615df4565b81516001600160401b03811115615e2057615e20614fdf565b615e3481615e2e84546157c7565b84615dbf565b602080601f831160018114615e695760008415615e515750858301515b600019600386901b1c1916600185901b17855561319f565b600085815260208120601f198616915b82811015615e9857888601518255948401946001909101908401615e79565b5085821015615eb65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000615ed96040830185614db2565b8281036020840152615eeb8185614db2565b95945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121c590830184614db2565b600060208284031215615f3957600080fd5b815161351f81614d5b565b858152606060208201526000615f5e60608301868861590b565b8281036040840152615f7181858761590b565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615fe757615fe7615839565b506000190190565b60008251616001818460208701614d8e565b9190910192915050565b60006020828403121561601d57600080fd5b815161351f8161513856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a057e6ba8a91b9f4d84b4fb12f610804c54d44d8c4732c6c8ed09fd1d8a94ab164736f6c63430008170033",
    "sourceMap": "1059:11962:287:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4062:250;;;;;;;;;;-1:-1:-1;4062:250:287;;;;;:::i;:::-;;:::i;:::-;;;565:14:821;;558:22;540:41;;528:2;513:18;4062:250:287;;;;;;;;6619:98:395;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1621:32:821;;;1603:51;;1591:2;1576:18;676:104:74;1457:203:821;8087:200:395;;;;;;;;;;-1:-1:-1;8087:200:395;;;;;:::i;:::-;;:::i;7652:374::-;;;;;;;;;;-1:-1:-1;7652:374:395;;;;;:::i;:::-;;:::i;:::-;;1133:173:70;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;2807:306:395:-;;;;;;;;;;-1:-1:-1;3066:12:395;;3050:13;;:28;2807:306;;;2624:25:821;;;2612:2;2597:18;2807:306:395;2478:177:821;2030:269:73;;;;;;;;;;-1:-1:-1;2030:269:73;;;;;:::i;:::-;;:::i;8926:164:395:-;;;;;;;;;;-1:-1:-1;8926:164:395;;;;;:::i;:::-;;:::i;1301:203:267:-;;;;;;;;;;-1:-1:-1;1301:203:267;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;1252:279:86;;;;;;;;;;-1:-1:-1;1252:279:86;;;;;:::i;:::-;;:::i;:::-;;;;4610:14:821;;4603:22;4585:41;;-1:-1:-1;;;;;4662:32:821;;;4657:2;4642:18;;4635:60;4558:18;1252:279:86;4417:284:821;1421:325:77;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3253:271:71:-;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;11448:106:287:-;;;;;;;;;;-1:-1:-1;11526:21:287;;11448:106;;9156:179:395;;;;;;;;;;-1:-1:-1;9156:179:395;;;;;:::i;:::-;;:::i;11610:184:287:-;;;;;;;;;;-1:-1:-1;11610:184:287;;;;;:::i;:::-;;:::i;6180:951::-;;;;;;:::i;:::-;;:::i;3937:129:57:-;;;;;;;;;;-1:-1:-1;3937:129:57;;;;;:::i;:::-;;:::i;1986:381:77:-;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5687:32:821;;;5669:51;;5768:6;5756:19;;;5751:2;5736:18;;5729:47;5642:18;1986:381:77;5497:285:821;918:134:211;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;1583:2444:269:-;;;;;;:::i;:::-;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;6434:123:395:-;;;;;;;;;;-1:-1:-1;6434:123:395;;;;;:::i;:::-;;:::i;983:96:267:-;;;;;;;;;;-1:-1:-1;1057:8:267;:15;983:96;;1189:228:74;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;3948:203:395:-;;;;;;;;;;-1:-1:-1;3948:203:395;;;;;:::i;:::-;;:::i;4090:1273:269:-;;;;;;;;;;-1:-1:-1;4090:1273:269;;;;;:::i;:::-;;:::i;2910:255:73:-;;;;;;;;;;-1:-1:-1;2910:255:73;;;;;:::i;:::-;;:::i;4500:861:482:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;871:86:70:-;;;;;;;;;;-1:-1:-1;944:6:70;;-1:-1:-1;;;;;944:6:70;871:86;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1322:131:71:-;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;6781:102:395:-;;;;;;;;;;;;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;1383:534:57:-;;;;;;;;;;-1:-1:-1;1383:534:57;;;;;:::i;:::-;;:::i;568:46::-;;;;;;;;;;-1:-1:-1;568:46:57;;;;;:::i;:::-;;:::i;4428:89:287:-;;;;;;;;;;-1:-1:-1;4428:89:287;;4508:1;11465:36:821;;11453:2;11438:18;4428:89:287;11323:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;8354:282:395;;;;;;;;;;-1:-1:-1;8354:282:395;;;;;:::i;:::-;;:::i;11222:144:287:-;;;;;;;;;;-1:-1:-1;11318:13:287;;11222:144;;2204:211:71;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;5460:1225:269:-;;;;;;;;;;-1:-1:-1;5460:1225:269;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2477:144:77:-;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;7901:477:269;;;;;;;;;;-1:-1:-1;7901:477:269;;;;;:::i;:::-;;:::i;:::-;;;;13975:25:821;;;14031:2;14016:18;;14009:34;;;;13948:18;7901:477:269;13801:248:821;3544:200:73;;;;;;;;;;-1:-1:-1;3544:200:73;;;;;:::i;:::-;;:::i;9401:360:395:-;;;;;;;;;;-1:-1:-1;9401:360:395;;;;;:::i;:::-;;:::i;3629:402:287:-;;;;;;;;;;-1:-1:-1;3629:402:287;;;;;:::i;:::-;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;4318:104:287:-;;;;;;;;;;-1:-1:-1;;;;4318:104:287;;5538:389;;;;;;;;;;-1:-1:-1;5538:389:287;;;;;:::i;:::-;;:::i;4891:540::-;;;;;;;;;;-1:-1:-1;4891:540:287;;;;;:::i;:::-;;:::i;1058:147:73:-;;;;;;;;;;;;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;546:36:269:-;;;;;;;;;;-1:-1:-1;546:36:269;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;546:36:269;;;;;;;16012:25:821;;;16068:2;16053:18;;16046:34;;;;16096:18;;;16089:34;;;;16154:2;16139:18;;16132:34;;;;16197:3;16182:19;;16175:35;16241:3;16226:19;;16219:35;16285:3;16270:19;;16263:35;-1:-1:-1;;;;;16335:32:821;16329:3;16314:19;;16307:61;15999:3;15984:19;546:36:269;15669:705:821;2219:1163:287;;;;;;;;;;-1:-1:-1;2219:1163:287;;;;;:::i;:::-;;:::i;1268:136:73:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:73;;;;1268:136;2409:1283:57;;;;;;;;;;-1:-1:-1;2409:1283:57;;;;;:::i;:::-;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;8702:162:395:-;;;;;;;;;;-1:-1:-1;8702:162:395;;;;;:::i;:::-;-1:-1:-1;;;;;8822:25:395;;;8799:4;8822:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8702:162;1454:107:73;;;;;;;;;;-1:-1:-1;1539:15:73;;-1:-1:-1;;;1539:15:73;;;;1454:107;;;;;;:::i;6777:1027:269:-;;;;;;;;;;-1:-1:-1;6777:1027:269;;;;;:::i;:::-;;:::i;:::-;;;;20797:14:821;;20790:22;20772:41;;20844:2;20829:18;;20822:34;;;;20745:18;6777:1027:269;20604:258:821;4062:250:287;4190:4;4213:36;4237:11;4213:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4253:52:287;;;4213:92;4206:99;4062:250;-1:-1:-1;;4062:250:287:o;6619:98:395:-;6673:13;6705:5;6698:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6619:98;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;8087:200:395:-;8155:7;8179:16;8187:7;8179;:16::i;:::-;8174:64;;8204:34;;-1:-1:-1;;;8204:34:395;;;;;;;;;;;8174:64;-1:-1:-1;8256:24:395;;;;:15;:24;;;;;;-1:-1:-1;;;;;8256:24:395;;8087:200::o;7652:374::-;7724:13;7740:35;7767:7;7740:26;:35::i;:::-;7724:51;;7795:5;-1:-1:-1;;;;;7789:11:395;:2;-1:-1:-1;;;;;7789:11:395;;7785:48;;7809:24;;-1:-1:-1;;;7809:24:395;;;;;;;;;;;7785:48;7864:5;-1:-1:-1;;;;;7848:21:395;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7848:21:395;;7844:137;;7875:37;7892:5;7899:12;:10;:12::i;7875:37::-;7871:110;;7935:35;;-1:-1:-1;;;7935:35:395;;;;;;;;;;;7871:110;7991:28;8000:2;8004:7;8013:5;7991:8;:28::i;:::-;7714:312;7652:374;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2030:269:73:-;2147:24;:22;:24::i;:::-;2142:80;;2187:24;;-1:-1:-1;;;2187:24:73;;;;;;;:::i;2142:80::-;2231:61;2253:21;2276:15;2231:21;:61::i;:::-;2030:269;;:::o;8926:164:395:-;9055:28;9065:4;9071:2;9075:7;9055:9;:28::i;1301:203:267:-;1365:7;1398:17;1057:8;:15;;983:96;1398:17;1388:6;:27;1384:81;;1431:23;;-1:-1:-1;;;1431:23:267;;21797:2:821;1431:23:267;;;21779:21:821;21836:2;21816:18;;;21809:30;-1:-1:-1;;;21855:18:821;;;21848:43;21908:18;;1431:23:267;21595:337:821;1384:81:267;1481:8;1490:6;1481:16;;;;;;;;:::i;:::-;;;;;;;;;1474:23;;1301:203;;;:::o;1252:279:86:-;1374:12;1388:14;1423:33;1439:4;1445:10;;1423:15;:33::i;:::-;1484:8;;;;1477:16;;;;:6;:16;;;;;;1414:42;;-1:-1:-1;1477:16:86;;1476:17;:48;;;;;1497:27;1517:6;1497:19;:27::i;:::-;1466:58;;1252:279;;;;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;22930:2:821;3433:39:71;;;22912:21:821;22969:2;22949:18;;;22942:30;23008:31;22988:18;;;22981:59;23057:18;;3433:39:71;22728:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;23288:2:821;4592:36:71;;;23270:21:821;23327:2;23307:18;;;23300:30;-1:-1:-1;;;23346:18:821;;;23339:56;23412:18;;4592:36:71;23086:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;9156:179:395:-;9289:39;9306:4;9312:2;9316:7;9289:39;;;;;;;;;;;;:16;:39::i;11610:184:287:-;11767:20;11773:7;11782:4;11767:5;:20::i;6180:951::-;6359:13;;6418:21;;6309:14;;6359:13;6386:29;6402:13;;;;6359;6386:29;:::i;:::-;:53;6382:111;;;6455:27;;-1:-1:-1;;;6455:27:287;;;;;;;:::i;6382:111::-;6551:33;6567:4;6573:10;;6551:15;:33::i;:::-;6542:42;-1:-1:-1;6595:16:287;6614:7;;;;:4;:7;:::i;:::-;6595:26;-1:-1:-1;6657:97:287;6678:25;;;;;;;;:::i;:::-;6705:13;;;;6720;;;;;;;;:::i;:::-;6735:4;:18;;;6657:20;:97::i;:::-;6843:1;6810:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6810:35:287;;;:59;;;;-1:-1:-1;6849:15:287;;;;:20;;6810:59;6806:170;;;6885:80;6911:13;6926:21;;;;;;;;:::i;:::-;6949:4;:15;;;6885:25;:80::i;:::-;7010:34;7020:8;7030:4;:13;;;7010:9;:34::i;:::-;7104:13;7094:8;-1:-1:-1;;;;;7060:64:287;7086:6;-1:-1:-1;;;;;7060:64:287;;7119:4;7060:64;;;;;;:::i;:::-;;;;;;;;6325:806;;6180:951;;;;;:::o;3937:129:57:-;4002:4;4025:23;;;:13;:23;;;;;:30;;4002:4;;4025:23;:30;;;:::i;:::-;;;:34;4018:41;;3937:129;;;:::o;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1583:2444:269:-;1836:85;1849:9;1860;1871;1882:14;1898:15;1915:5;1836:12;:85::i;:::-;1960:11;;1932:25;2409:68;2432:16;:14;:16::i;:::-;2450:9;2461:15;2409:22;:68::i;:::-;-1:-1:-1;2381:96:269;-1:-1:-1;2822:38:269;2863;;;;:43;;:98;;-1:-1:-1;2922:25:269;;:39;2863:98;2822:139;;2972:102;2984:16;:14;:16::i;:::-;3002:9;3013;3024:14;3040:33;2972:11;:102::i;:::-;3089:16;:62;;;;;3150:1;3109:15;:38;;;:42;3089:62;3085:338;;;3336:76;3393:16;:14;:16::i;:::-;3336:36;;;;:17;:36;;;;;;;;-1:-1:-1;;;;;1172:1:290;1163:10;;;;1227:20;;;;;;;:28;;1198:1;1212:4;1204:12;;;1198:19;;;;1227:28;;;;;1076:186;3336:76:269;3499:9;3467:14;:28;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;3518:37:269;;;;:18;:37;;;;;3576:15;;3556:16;:14;:16::i;:::-;-1:-1:-1;;;;;3518:55:269;-1:-1:-1;;;;;3518:55:269;;;;;;;;;;;;:73;;;;3648:70;3677:1;3681:9;3692;3703:14;3648:20;:70::i;:::-;3775:20;3798:44;3821:9;3832;3798:22;:44::i;:::-;3775:67;;3901:12;3890:9;-1:-1:-1;;;;;3858:67:269;3872:16;:14;:16::i;:::-;-1:-1:-1;;;;;3858:67:269;;3915:9;3858:67;;;;2624:25:821;;2612:2;2597:18;;2478:177;3858:67:269;;;;;;;;1826:2201;;;;1583:2444;;;;;;:::o;3065:256:77:-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;6434:123:395:-;6498:7;6524:21;6537:7;6524:12;:21::i;:::-;:26;;6434:123;-1:-1:-1;;6434:123:395:o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3948:203:395:-;4012:7;-1:-1:-1;;;;;4035:19:395;;4031:60;;4063:28;;-1:-1:-1;;;4063:28:395;;;;;;;;;;;4031:60;-1:-1:-1;;;;;;4116:19:395;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4116:27:395;;3948:203::o;4090:1273:269:-;4216:24;:22;:24::i;:::-;4211:80;;4256:24;;-1:-1:-1;;;4256:24:269;;;;;;;:::i;4211:80::-;4329:11;;4381:28;;4420:170;;;;-1:-1:-1;4485:1:269;4547:16;:14;:16::i;:::-;4565:12;4530:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4520:59;;;;;;4500:79;;4420:170;4627:10;:29;;;4604:20;:52;4600:111;;;4672:28;;-1:-1:-1;;;4672:28:269;;26844:2:821;4672:28:269;;;26826:21:821;26883:2;26863:18;;;26856:30;-1:-1:-1;;;26902:18:821;;;26895:48;26960:18;;4672:28:269;26642:342:821;4600:111:269;4738:504;;;;;;;;4783:10;:25;;;4738:504;;;;4842:10;:29;;;4738:504;;;;4900:20;4738:504;;;;4963:10;:38;;;4738:504;;;;5047:10;:41;;;4738:504;;;;5114:10;:21;;;4738:504;;;;5164:10;:24;;;4738:504;;;;5212:10;:19;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4738:504:269;;;;;;4721:521;;:14;:521;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4721:521:269;;;;;;;;5252:11;:31;;;5299:57;;;;;5321:10;;5333:22;;5299:57;:::i;:::-;;;;;;;;4201:1162;;4090:1273;;:::o;2910:255:73:-;3015:24;:22;:24::i;:::-;3010:80;;3055:24;;-1:-1:-1;;;3055:24:73;;;;;;;:::i;3010:80::-;3100:58;3126:21;3149:8;3100:25;:58::i;4500:861:482:-;4615:13;4642:18;4674:21;4709:15;4738:25;4777:12;4803:27;5066:11;;5081:1;5066:16;;;:39;;;;-1:-1:-1;5086:14:482;;:19;5066:39;5058:73;;;;-1:-1:-1;;;5058:73:482;;28060:2:821;5058:73:482;;;28042:21:821;28099:2;28079:18;;;28072:30;-1:-1:-1;;;28118:18:821;;;28111:51;28179:18;;5058:73:482;27858:345:821;5058:73:482;5193:13;:11;:13::i;:::-;5220:16;:14;:16::i;:::-;5328;;;5312:1;5328:16;;;;;;;;;-1:-1:-1;;;5142:212:482;;;-1:-1:-1;5142:212:482;;-1:-1:-1;5250:13:482;;-1:-1:-1;5285:4:482;;-1:-1:-1;5312:1:482;-1:-1:-1;5328:16:482;-1:-1:-1;5142:212:482;-1:-1:-1;4500:861:482:o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6781:102:395:-;6837:13;6869:7;6862:14;;;;;:::i;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;1383:534:57:-;1502:17;1522:23;;;:13;:23;;;;;1502:43;;1465:25;;1502:17;1522:23;1502:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:4;:11;1574:1;1559:16;1555:74;;1591:27;;-1:-1:-1;;;1591:27:57;;28410:2:821;1591:27:57;;;28392:21:821;28449:2;28429:18;;;28422:30;-1:-1:-1;;;28468:18:821;;;28461:47;28525:18;;1591:27:57;28208:341:821;1555:74:57;1640:25;1667:22;1704:4;1693:34;;;;;;;;;;;;:::i;:::-;1639:88;;;;1759:34;1774:12;1788:4;;1759:14;:34::i;:::-;1738:56;;1878:14;1840:11;1853:4;;1859:13;1823:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1813:61;;;;;;:79;1805:105;;;;-1:-1:-1;;;1805:105:57;;29998:2:821;1805:105:57;;;29980:21:821;30037:2;30017:18;;;30010:30;-1:-1:-1;;;30056:18:821;;;30049:43;30109:18;;1805:105:57;29796:337:821;1805:105:57;1492:425;;;1383:534;;;;;:::o;568:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8354:282:395:-;8464:12;:10;:12::i;:::-;-1:-1:-1;;;;;8452:24:395;:8;-1:-1:-1;;;;;8452:24:395;;8448:54;;8485:17;;-1:-1:-1;;;8485:17:395;;;;;;;;;;;8448:54;8558:8;8513:18;:32;8532:12;:10;:12::i;:::-;-1:-1:-1;;;;;8513:32:395;;;;;;;;;;;;;;;;;-1:-1:-1;8513:32:395;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8513:53:395;;;;;;;;;;;8596:12;:10;:12::i;:::-;-1:-1:-1;;;;;8581:48:395;;8620:8;8581:48;;;;565:14:821;558:22;540:41;;528:2;513:18;;400:187;8581:48:395;;;;;;;;8354:282;;:::o;2204:211:71:-;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;5460:1225:269:-;5667:56;;;;;;;;5709:14;5667:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5667:56:269;;;;;;;;;5738:39;;;;;;:92;;;5799:17;:31;;;5781:14;:49;;5738:92;5734:158;;;5846:35;;-1:-1:-1;;;5846:35:269;;30340:2:821;5846:35:269;;;30322:21:821;30379:2;30359:18;;;30352:30;-1:-1:-1;;;30398:18:821;;;30391:55;30463:18;;5846:35:269;30138:349:821;5734:158:269;6028:14;;;:124;;;6059:31;:92;;;;;6106:17;:45;;;6094:9;:57;6059:92;6011:203;;;6177:26;;-1:-1:-1;;;6177:26:269;;30694:2:821;6177:26:269;;;30676:21:821;30733:2;30713:18;;;30706:30;-1:-1:-1;;;30752:18:821;;;30745:46;30808:18;;6177:26:269;30492:340:821;6011:203:269;6274:17;:36;;;6262:9;6228:17;:31;;;:43;;;;:::i;:::-;:82;6224:141;;;6326:28;;-1:-1:-1;;;6326:28:269;;31039:2:821;6326:28:269;;;31021:21:821;31078:2;31058:18;;;31051:30;-1:-1:-1;;;31097:18:821;;;31090:48;31155:18;;6326:28:269;30837:342:821;6224:141:269;6376:21;6399:31;6434:27;6452:8;6434:17;:27::i;:::-;6375:86;;;;6523:15;6488:17;:32;;;:50;:131;;;-1:-1:-1;6555:18:269;;;;;:63;;;6595:23;6577:15;:41;6555:63;6471:208;;;6644:24;;-1:-1:-1;;;6644:24:269;;31386:2:821;6644:24:269;;;31368:21:821;31425:2;31405:18;;;31398:30;-1:-1:-1;;;31444:18:821;;;31437:44;31498:18;;6644:24:269;31184:338:821;6471:208:269;5657:1028;;;5460:1225;;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;7901:477:269;8082:11;;7981:21;8063:31;;;:18;:31;;;;;;;;-1:-1:-1;;;;;8063:41:269;;;;;;;;;;8181:45;;8165:61;;8245:39;;;8241:121;;;-1:-1:-1;;;8241:121:269;7901:477;;;:::o;3544:200:73:-;3622:24;:22;:24::i;:::-;3617:80;;3662:24;;-1:-1:-1;;;3662:24:73;;;;;;;:::i;3617:80::-;3706:31;3728:8;3706:21;:31::i;9401:360:395:-;9562:28;9572:4;9578:2;9582:7;9562:9;:28::i;:::-;9604:15;:2;-1:-1:-1;;;;;9604:13:395;;:15::i;:::-;9600:155;;;9625:56;9656:4;9662:2;9666:7;9675:5;9625:30;:56::i;:::-;9621:134;;9704:40;;-1:-1:-1;;;9704:40:395;;;;;;;;;;;9621:134;9401:360;;;;:::o;3629:402:287:-;3695:13;3721:15;3742:21;3754:8;3742:11;:21::i;:::-;3720:43;;;3773:22;3798:21;3810:8;3798:11;:21::i;:::-;3773:46;;3834:25;3851:7;3834:16;:25::i;:::-;3830:195;;;3906:8;3889:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;3875:46;;;;3629:402;;;:::o;3830:195::-;3983:8;3993:19;:8;:17;:19::i;:::-;3966:47;;;;;;;;;:::i;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;5538:389:287:-;5652:25;5631:10;;929:28:71;940:4;946:10;929;:28::i;:::-;5689:15:287::1;5707:25;5725:6;5707:17;:25::i;:::-;5689:43;;5756:27;5769:7;5778:4;;5756:12;:27::i;:::-;5742:41;;5794:30;5812:7;5794:30;;;;;;;;;;;::::0;:17:::1;:30::i;:::-;5834:33;5846:7;5855:11;5834;:33::i;:::-;5900:6;5883:37;5908:11;5883:37;;;;;;:::i;:::-;;;;;;;;5679:248;5538:389:::0;;;;;;:::o;4891:540::-;5038:15;5069:16;;5065:293;;5102:25;;5155:35;;;;5166:5;5155:35;:::i;:::-;5101:89;;;;5208:12;:19;5231:1;5208:24;;:48;;;;-1:-1:-1;5236:20:287;;;5208:48;5204:144;;;5276:57;5318:7;5294:21;;:31;;;;:::i;:::-;5327:5;;5276:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5276:17:287;;-1:-1:-1;;;5276:57:287:i;:::-;5087:271;;5065:293;5375:49;5390:7;5399:17;;5418:5;;5375:14;:49::i;:::-;5368:56;4891:540;-1:-1:-1;;;;;;4891:540:287:o;1058:147:73:-;1153:20;;-1:-1:-1;;;;;1153:20:73;;;-1:-1:-1;;;1182:14:73;;;;;;1058:147::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;2219:1163:287:-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;33963:2:821;3325:201:450;;;33945:21:821;34002:2;33982:18;;;33975:30;34041:34;34021:18;;;34014:62;-1:-1:-1;;;34092:18:821;;;34085:44;34146:19;;3325:201:450;33761:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;2631:26:287::1;2616:12;:41:::0;2680:24:::1;2667:10;:37:::0;2790:41:::1;2812:18:::0;2790:21:::1;:41::i;:::-;2841:30;2856:5;2863:7;2841:14;:30::i;:::-;2881:28;:26;:28::i;:::-;2920:31;2938:12;2920:17;:31::i;:::-;2961:26;2973:13;2961:11;:26::i;:::-;2998:45;785:4:71;3029:13:287::0;2998:10:::1;:45::i;:::-;3053:37;3064:10;;3076:13;3053:10;:37::i;:::-;3100:39;3111:12;;3125:13;3100:10;:39::i;:::-;3149:36;3160:12;;3182:1;3149:10;:36::i;:::-;3196:61;3218:21;3241:15;-1:-1:-1::0;;;;;3196:61:287::1;:21;:61::i;:::-;3267:56;3292:17;3311:11;-1:-1:-1::0;;;;;3267:56:287::1;:24;:56::i;:::-;3333:42;3360:14;3333:26;:42::i;:::-;3651:14:450::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;11465:36:821;;3721:14:450;;11453:2:821;11438:18;3721:14:450;;;;;;;3647:99;3269:483;2219:1163:287;;;;;;;;;;:::o;2409:1283:57:-;2602:11;;2768:4;2762:11;;2862:19;;;2883:2;2858:28;2845:42;;;2933:22;;;2762:11;2585:14;3029:657;3053:6;3049:1;:10;3029:657;;;3135:12;3177:3;;3182:1;3160:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3160:24:57;;;;;;;;;3150:35;;3160:24;3150:35;;;;3373:21;;;;;3367:28;3461:13;3631:23;;;;;3624:38;3061:7;;-1:-1:-1;3387:1:57;3061:7;:::i;:::-;;;3029:657;;;;2523:1169;2409:1283;;;;;:::o;565:34:56:-;;;;;;;:::i;6777:1027:269:-;6997:56;;;;;;;;7039:14;6997:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6997:56:269;;;;;6938:21;;;;7068:42;7064:734;;7165:212;7201:21;:15;;:21;:::i;:::-;7165:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7240:28:269;;;;7296:66;;;;7313:8;;7323:38;;;;;;7296:66;;:::i;:::-;;;;;;;;;;;;;7286:77;;;;;;7165:18;:212::i;:::-;7126:251;;-1:-1:-1;7126:251:269;-1:-1:-1;7126:251:269;7391:82;;7432:26;;-1:-1:-1;;;7432:26:269;;35445:2:821;7432:26:269;;;35427:21:821;35484:2;35464:18;;;35457:30;-1:-1:-1;;;35503:18:821;;;35496:46;35559:18;;7432:26:269;35243:340:821;7391:82:269;7509:11;;7491:30;;;;:17;:30;;;;;;;;-1:-1:-1;;;;;639:1:290;630:10;;;;701:20;;;;;;;;665:1;679:4;671:12;;665:19;701:27;:32;7487:124:269;;7573:23;;-1:-1:-1;;;7573:23:269;;35790:2:821;7573:23:269;;;35772:21:821;35829:2;35809:18;;;35802:30;-1:-1:-1;;;35848:18:821;;;35841:43;35901:18;;7573:23:269;35588:337:821;7487:124:269;7629:38;;;;:43;;;;:97;;;7688:15;:38;;;7676:9;:50;7629:97;7625:163;;;7746:27;;-1:-1:-1;;;7746:27:269;;36132:2:821;7746:27:269;;;36114:21:821;36171:2;36151:18;;;36144:30;-1:-1:-1;;;36190:18:821;;;36183:47;36247:18;;7746:27:269;35930:341:821;7625:163:269;6987:817;6777:1027;;;;;;:::o;3545:344:395:-;3669:4;-1:-1:-1;;;;;;3704:51:395;;-1:-1:-1;;;3704:51:395;;:126;;-1:-1:-1;;;;;;;3771:59:395;;-1:-1:-1;;;3771:59:395;3704:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:484;;;3846:36:395;1060:166:484;10007:172:395;10064:4;10127:13;;10117:7;:23;10087:85;;;;-1:-1:-1;;10145:20:395;;;;:11;:20;;;;;:27;-1:-1:-1;;;10145:27:395;;;;10144:28;;10007:172::o;12544:242:287:-;12704:14;12741:38;:36;:38::i;:::-;12734:45;;12544:242;:::o;18988:189:395:-;19098:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19098:29:395;-1:-1:-1;;;;;19098:29:395;;;;;;;;;19142:28;;19098:24;;19142:28;;;;;;;18988:189;;;:::o;9927:127:287:-;9983:4;10006:41;9983:4;10034:12;:10;:12::i;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2358:477:73:-;2486:6;2468:15;:24;2464:80;;;2508:25;;-1:-1:-1;;;2508:25:73;;;;;;;:::i;2464:80::-;-1:-1:-1;;;;;2557:35:73;;2553:93;;2608:27;;-1:-1:-1;;;2608:27:73;;;;;;;:::i;2553:93::-;2656:14;:40;;-1:-1:-1;;;;;;2706:44:73;-1:-1:-1;;;2656:40:73;;;;-1:-1:-1;;;;;;2706:44:73;;-1:-1:-1;;;;;2706:44:73;;;;;;;;2766:62;;2624:25:821;;;2766:62:73;;2612:2:821;2597:18;2766:62:73;;;;;;;;2358:477;;:::o;14063:2082:395:-;14173:35;14211:21;14224:7;14211:12;:21::i;:::-;14173:59;;14269:4;-1:-1:-1;;;;;14247:26:395;:13;:18;;;-1:-1:-1;;;;;14247:26:395;;14243:67;;14282:28;;-1:-1:-1;;;14282:28:395;;;;;;;;;;;14243:67;14321:22;14363:4;-1:-1:-1;;;;;14347:20:395;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14347:20:395;;:72;;;;14383:36;14400:4;14406:12;:10;:12::i;14383:36::-;14347:124;;;;14459:12;:10;:12::i;:::-;-1:-1:-1;;;;;14435:36:395;:20;14447:7;14435:11;:20::i;:::-;-1:-1:-1;;;;;14435:36:395;;14347:124;14321:151;;14488:17;14483:66;;14514:35;;-1:-1:-1;;;14514:35:395;;;;;;;;;;;14483:66;-1:-1:-1;;;;;14563:16:395;;14559:52;;14588:23;;-1:-1:-1;;;14588:23:395;;;;;;;;;;;14559:52;14622:43;14644:4;14650:2;14654:7;14663:1;14622:21;:43::i;:::-;14727:35;14744:1;14748:7;14757:4;14727:8;:35::i;:::-;-1:-1:-1;;;;;15052:18:395;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15052:31:395;;;-1:-1:-1;;;;;15052:31:395;;;-1:-1:-1;;15052:31:395;;;;;;;15097:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15097:29:395;;;;;;;;;;;15175:20;;;:11;:20;;;;;;15209:18;;-1:-1:-1;;;;;;15241:49:395;;;;-1:-1:-1;;;15274:15:395;15241:49;;;;;;;;;;15560:11;;15619:24;;;;;15661:13;;15175:20;;15619:24;;15661:13;15657:377;;15868:13;;15853:11;:28;15849:171;;15905:20;;15973:28;;;;-1:-1:-1;;;;;15947:54:395;-1:-1:-1;;;15947:54:395;-1:-1:-1;;;;;;15947:54:395;;;-1:-1:-1;;;;;15905:20:395;;15947:54;;;;15849:171;15028:1016;;;16078:7;16074:2;-1:-1:-1;;;;;16059:27:395;16068:4;-1:-1:-1;;;;;16059:27:395;-1:-1:-1;;;;;;;;;;;16059:27:395;;;;;;;;;14163:1982;;14063:2082;;;:::o;2414:204:86:-;2516:7;2542:69;2600:10;;2542:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2542:49:86;;-1:-1:-1;2569:20:86;;-1:-1:-1;2584:4:86;;-1:-1:-1;2569:14:86;:20::i;:::-;2559:31;;;;;;2542:16;:49::i;:::-;:57;;:69::i;:::-;2535:76;2414:204;-1:-1:-1;;;;2414:204:86:o;9234:136:287:-;9312:4;9335:28;9343:10;;9355:7;9335;:28::i;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2030:269:73;;:::o;16522:2355:395:-;16601:35;16639:21;16652:7;16639:12;:21::i;:::-;16686:18;;16601:59;;-1:-1:-1;16715:284:395;;;;16748:22;16790:4;-1:-1:-1;;;;;16774:20:395;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16774:20:395;;:76;;;;16814:36;16831:4;16837:12;:10;:12::i;16814:36::-;16774:132;;;;16894:12;:10;:12::i;:::-;-1:-1:-1;;;;;16870:36:395;:20;16882:7;16870:11;:20::i;:::-;-1:-1:-1;;;;;16870:36:395;;16774:132;16748:159;;16927:17;16922:66;;16953:35;;-1:-1:-1;;;16953:35:395;;;;;;;;;;;16922:66;16734:265;16715:284;17009:51;17031:4;17045:1;17049:7;17058:1;17009:21;:51::i;:::-;17122:35;17139:1;17143:7;17152:4;17122:8;:35::i;:::-;-1:-1:-1;;;;;17481:18:395;;;17447:31;17481:18;;;:12;:18;;;;;;;;17513:24;;-1:-1:-1;;;;;;;;;;17513:24:395;;;;;;;;;-1:-1:-1;;;;;;17513:24:395;;;;17551:29;;;;;17536:1;17551:29;;;;;;;;-1:-1:-1;;;;;;17551:29:395;;;;;;;;;;17710:20;;;:11;:20;;;;;;17744;;-1:-1:-1;;;;17811:15:395;17778:49;;;-1:-1:-1;;;17778:49:395;-1:-1:-1;;;;;;17778:49:395;;;;;;;;;;17841:22;-1:-1:-1;;;17841:22:395;;;18129:11;;;18188:24;;;;;18230:13;;17481:18;;18188:24;;18230:13;18226:377;;18437:13;;18422:11;:28;18418:171;;18474:20;;18542:28;;;;-1:-1:-1;;;;;18516:54:395;-1:-1:-1;;;18516:54:395;-1:-1:-1;;;;;;18516:54:395;;;-1:-1:-1;;;;;18474:20:395;;18516:54;;;;18418:171;-1:-1:-1;;18628:35:395;;18655:7;;-1:-1:-1;18651:1:395;;-1:-1:-1;;;;;;18628:35:395;;;-1:-1:-1;;;;;;;;;;;18628:35:395;18651:1;;18628:35;-1:-1:-1;;18846:12:395;:14;;;;;;-1:-1:-1;;16522:2355:395:o;1778:562:86:-;1875:14;1901:12;1943:24;1950:4;1956:10;;1943:6;:24::i;:::-;1923:44;-1:-1:-1;1923:44:86;-1:-1:-1;1923:44:86;1978:60;;2006:21;;-1:-1:-1;;;2006:21:86;;37983:2:821;2006:21:86;;;37965::821;38022:2;38002:18;;;37995:30;-1:-1:-1;;;38041:18:821;;;38034:41;38092:18;;2006:21:86;37781:335:821;1978:60:86;2082:15;2052:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2052:45:86;;:92;;;-1:-1:-1;2119:25:86;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2101:43:86;:15;:43;2052:92;2048:144;;;2160:21;;-1:-1:-1;;;2160:21:86;;38514:2:821;2160:21:86;;;38496::821;38553:2;38533:18;;;38526:30;-1:-1:-1;;;38572:18:821;;;38565:41;38623:18;;2160:21:86;38312:335:821;2048:144:86;2228:1;2209:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2209:21:86;;2201:53;;;;-1:-1:-1;;;2201:53:86;;38854:2:821;2201:53:86;;;38836:21:821;38893:2;38873:18;;;38866:30;-1:-1:-1;;;38912:18:821;;;38905:49;38971:18;;2201:53:86;38652:343:821;2201:53:86;2288:1;2272:4;:13;;;:17;2264:35;;;;-1:-1:-1;;;2264:35:86;;39202:2:821;2264:35:86;;;39184:21:821;39241:1;39221:18;;;39214:29;-1:-1:-1;;;39259:18:821;;;39252:35;39304:18;;2264:35:86;39000:328:821;2264:35:86;-1:-1:-1;2317:8:86;;;;;2310:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2310:23:86;2329:4;2310:23;;;-1:-1:-1;1778:562:86;;;-1:-1:-1;1778:562:86:o;7854:1000:287:-;8050:56;;8089:7;8050:56;8117:28;8147:21;8172:20;:18;:20::i;:::-;8116:76;;-1:-1:-1;8116:76:287;-1:-1:-1;8203:21:287;-1:-1:-1;;;;;8227:35:287;;;:84;;8290:21;8227:84;;;8265:22;:20;:22::i;:::-;8203:108;-1:-1:-1;8322:18:287;8343:33;8362:14;8343:16;:33;:::i;:::-;8322:54;-1:-1:-1;8386:20:287;1955:6;8410:27;;;;8322:54;8410:27;:::i;:::-;8409:39;;;;:::i;:::-;8386:62;-1:-1:-1;;;;;;;;8463:45:287;;;8459:168;;8541:10;8528:9;:23;8524:93;;8571:31;;-1:-1:-1;;;8571:31:287;;39535:2:821;8571:31:287;;;39517:21:821;39574:2;39554:18;;;39547:30;-1:-1:-1;;;39593:18:821;;;39586:51;39654:18;;8571:31:287;39333:345:821;8524:93:287;8637:97;8674:9;8685:12;:10;:12::i;:::-;8699:20;8721:12;8637:36;:97::i;:::-;8744:103;8781:9;8792:12;:10;:12::i;:::-;8806:13;8821:25;8834:12;8821:10;:25;:::i;:::-;8744:36;:103::i;:::-;8040:814;;;;;7854:1000;;;;:::o;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;2624:25:821;;;4836:49:77;;4804:29;;4901:43;;2597:18:821;4901:43:77;;;;;;;4619:332;;;:::o;10258:102:395:-;10326:27;10336:2;10340:8;10326:27;;;;;;;;;;;;:9;:27::i;7374:390:287:-;7568:8;7579:30;7598:10;7579:18;:30::i;:::-;:59;;;-1:-1:-1;7629:9:287;7613:12;:10;:12::i;:::-;-1:-1:-1;;;;;7613:25:287;;7579:59;7568:70;;7656:3;7648:19;;;;-1:-1:-1;;;7648:19:287;;40018:2:821;7648:19:287;;;40000:21:821;40057:1;40037:18;;;40030:29;-1:-1:-1;;;40075:18:821;;;40068:33;40118:18;;7648:19:287;39816:326:821;7648:19:287;7714:21;;7701:9;7685:13;;:25;;;;:::i;:::-;:50;;7677:80;;;;-1:-1:-1;;;7677:80:287;;;;;;;:::i;:::-;7558:206;7374:390;;;;;;:::o;12427:111::-;12493:7;12519:12;:10;:12::i;8907:239::-;9079:13;;9102:37;9112:3;9117:21;9102:9;:37::i;9117:236:269:-;;;;;;;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;2624:25:821;;;3689:46:77;;2612:2:821;2597:18;3689:46:77;2478:177:821;5291:1086:395;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5401:7:395;5483:13;;5476:4;:20;5472:841;;;5516:31;5550:17;;;:11;:17;;;;;;;;;5516:51;;;;;;;;;-1:-1:-1;;;;;5516:51:395;;;;-1:-1:-1;;;5516:51:395;;-1:-1:-1;;;;;5516:51:395;;;;;;;;-1:-1:-1;;;5516:51:395;;;;;;;;;;;;;;5585:714;;5634:14;;-1:-1:-1;;;;;5634:28:395;;5630:99;;5697:9;5291:1086;-1:-1:-1;;;5291:1086:395:o;5630:99::-;-1:-1:-1;;;6065:6:395;6109:17;;;;:11;:17;;;;;;;;;6097:29;;;;;;;;;-1:-1:-1;;;;;6097:29:395;;;;;-1:-1:-1;;;6097:29:395;;-1:-1:-1;;;;;6097:29:395;;;;;;;;-1:-1:-1;;;6097:29:395;;;;;;;;;;;;;6156:28;6152:107;;6223:9;5291:1086;-1:-1:-1;;;5291:1086:395:o;6152:107::-;6026:255;;;5498:815;5472:841;6339:31;;-1:-1:-1;;;6339:31:395;;;;;;;;;;;1499:265:74;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;;;;;;:::i;1578:86::-;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;3218:261:73:-;3321:15;:26;;;3357:20;:44;;-1:-1:-1;;;;;;3357:44:73;-1:-1:-1;;;;;3357:44:73;;;;;3417:55;;;;;;3357:44;;3321:26;;3417:55;:::i;:::-;;;;;;;;3218:261;;:::o;5585:98:482:-;5639:13;5671:5;5664:12;;;;;:::i;5910:104::-;5967:13;5999:8;5992:15;;;;;:::i;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;3787:157:73:-;3863:15;:26;;3881:8;;3863:15;-1:-1:-1;;;;3863:26:73;-1:-1:-1;;;3881:8:73;3863:26;;;;;;;;:::i;:::-;;;;;;3905:32;3928:8;3905:32;;;;;;:::i;:::-;;;;;;;;3787:157;:::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;19658:672:395:-;19816:4;19863:2;-1:-1:-1;;;;;19836:47:395;;19884:12;:10;:12::i;:::-;19898:4;19904:7;19913:5;19836:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19836:83:395;;;;;;;;-1:-1:-1;;19836:83:395;;;;;;;;;;;;:::i;:::-;;;19832:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20089:6;:13;20106:1;20089:18;20085:229;;20134:40;;-1:-1:-1;;;20134:40:395;;;;;;;;;;;20085:229;20274:6;20268:13;20259:6;20255:2;20251:15;20244:38;19832:492;-1:-1:-1;;;;;;19965:66:395;-1:-1:-1;;;19965:66:395;;-1:-1:-1;19658:672:395;;;;;;:::o;1592:471:267:-;1654:15;1671:13;1696:25;1724:17;1057:8;:15;;983:96;1724:17;1696:45;;1751:24;1778:8;1751:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:9;1797:224;1821:17;1817:1;:21;1797:224;;;1877:7;1885:1;1877:10;;;;;;;;:::i;:::-;;;;;;;1866:8;:21;1862:149;;;1915:1;1907:9;;1944:7;1952:1;1944:10;;;;;;;;:::i;:::-;;;;;;;1934:20;;1973:23;;;1592:471;;;:::o;1862:149::-;1840:6;1845:1;1840:6;;:::i;:::-;;;1797:224;;;-1:-1:-1;2031:25:267;;-1:-1:-1;;;2031:25:267;;43680:2:821;2031:25:267;;;43662:21:821;43719:2;43699:18;;;43692:30;-1:-1:-1;;;43738:18:821;;;43731:45;43793:18;;2031:25:267;43478:339:821;2177:390:267;2239:13;2264:25;2292:17;1057:8;:15;;983:96;2292:17;2264:45;;2319:24;2346:8;2319:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:9;2365:161;2389:17;2385:1;:21;2365:161;;;2445:7;2453:1;2445:10;;;;;;;;:::i;:::-;;;;;;;2434:8;:21;2430:86;;;2482:7;:19;2490:7;2498:1;2490:10;;;;;;;;:::i;:::-;;;;;;;2482:19;;;;;;;;;;;2475:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:390;;;:::o;2430:86::-;2408:6;2413:1;2408:6;;:::i;:::-;;;2365:161;;480:707:480;536:13;585:14;602:28;624:5;602:21;:28::i;:::-;633:1;602:32;585:49;;648:20;682:6;-1:-1:-1;;;;;671:18:480;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;671:18:480;-1:-1:-1;648:41:480;-1:-1:-1;809:28:480;;;825:2;809:28;864:280;-1:-1:-1;;895:5:480;-1:-1:-1;;;1029:2:480;1018:14;;1013:30;895:5;1000:44;1088:2;1079:11;;;-1:-1:-1;1108:21:480;864:280;1108:21;-1:-1:-1;1164:6:480;480:707;-1:-1:-1;;;480:707:480:o;678:140:57:-;771:23;;;;:13;:23;;;;;:40;797:14;771:23;:40;:::i;2652:117:267:-;2734:17;;;;:7;:17;;;;;:28;2754:8;2734:17;:28;:::i;1277:592:271:-;1432:15;1464:14;:12;:14::i;:::-;1459:70;;1494:24;;-1:-1:-1;;;1494:24:271;;;;;;;:::i;1459:70::-;1543:7;1554:1;1543:12;1539:58;;1571:15;;-1:-1:-1;;;1571:15:271;;45372:2:821;1571:15:271;;;45354:21:821;45411:1;45391:18;;;45384:29;-1:-1:-1;;;45429:18:821;;;45422:35;45474:18;;1571:15:271;45170:328:821;1539:58:271;1607:15;1625:21;;1607:39;;1692:55;1711:7;1720;1729:17;;1692:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1692:18:271;;-1:-1:-1;;;1692:55:271:i;:::-;1658:21;1657:90;;;;;-1:-1:-1;1780:7:271;1763:74;1809:1;1789:17;1799:7;1780;1789:17;:::i;:::-;:21;;;;:::i;:::-;1812:17;;1831:5;;1763:74;;;;;;;;;;:::i;:::-;;;;;;;;1848:14;1277:592;;;;;;;:::o;470:194:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;572:26:211::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2137:151:395:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2241:40:395::1;2266:5;2273:7;2241:24;:40::i;920:122:86:-:0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;994:41:86::1;;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:86::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:86::1;;::::0;:13:::1;:41::i;:::-;920:122::o:0;112:876:294:-;203:4;;251;203;;293:567;317:5;:12;313:1;:16;293:567;;;350:10;359:1;350:10;;:::i;:::-;;;374:20;397:5;403:1;397:8;;;;;;;;:::i;:::-;;;;;;;374:31;;440:12;424;:28;420:430;;575:44;;;;;;46583:19:821;;;46618:12;;;46611:28;;;46655:12;;575:44:294;;;;;;;;;;;;565:55;;;;;;550:70;;420:430;;;762:44;;;;;;46583:19:821;;;46618:12;;;46611:28;;;46655:12;;762:44:294;;;;;;;;;;;;752:55;;;;;;737:70;;834:1;825:10;;;;;:::i;:::-;;;420:430;-1:-1:-1;331:3:294;;293:567;;;-1:-1:-1;953:20:294;;;;;-1:-1:-1;;;;112:876:294:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;12544:242:287:o;11848:573::-;12193:33;12201:12;;12223:1;12193:7;:33::i;:::-;12192:34;:56;;;;-1:-1:-1;;;;;;12230:18:287;;;;12192:56;:76;;;;-1:-1:-1;;;;;;12252:16:287;;;;12192:76;12188:227;;;12289:27;12297:12;;12311:4;12289:7;:27::i;:::-;12288:28;:58;;;;;12321:25;12329:12;;12343:2;12321:7;:25::i;:::-;12320:26;12288:58;12284:121;;;12366:24;;-1:-1:-1;;;12366:24:287;;46880:2:821;12366:24:287;;;46862:21:821;46919:2;46899:18;;;46892:30;-1:-1:-1;;;46938:18:821;;;46931:44;46992:18;;12366:24:287;46678:338:821;2690:570:86;2764:12;512:270;2861:7;;;;:4;:7;:::i;:::-;2886:21;;;;;;;;:::i;:::-;2925:15;;;;2958:25;;;;;;;;:::i;:::-;3017:8;;;;:4;:8;:::i;:::-;3001:26;;;;;;;:::i;:::-;;;;;;;;;3045:13;;;;3076:18;;;;3112:13;;;;;;;;:::i;:::-;3143:27;;;;;;;;:::i;:::-;3188:25;;;;;;;;:::i;:::-;2807:446;;;;;;48281:25:821;;;;-1:-1:-1;;;;;48380:15:821;;;48360:18;;;48353:43;48432:15;;;48412:18;;;48405:43;48464:18;;;48457:34;;;;48528:15;;;48507:19;;;48500:44;48560:19;;;48553:35;;;;48604:19;;;48597:35;48648:19;;;48641:35;48713:15;;;48692:19;;;48685:44;-1:-1:-1;;;;;48804:15:821;;;3231:8:86;48783:19:821;;;48776:44;;;;48857:16;;48836:19;;;48829:45;3231:8:86;;;48890:19:821;;;48883:36;48253:19;;2807:446:86;;;;;;;;;;;;2788:465;;2690:570;;;:::o;4236:176:482:-;4313:7;4339:66;4372:20;:18;:20::i;:::-;4394:10;8569:4:481;8563:11;-1:-1:-1;;;8587:23:481;;8639:4;8630:14;;8623:39;;;;8691:4;8682:14;;8675:34;8745:4;8730:20;;;8369:397;3683:227;3761:7;3781:17;3800:18;3822:27;3833:4;3839:9;3822:10;:27::i;:::-;3780:69;;;;3859:18;3871:5;3859:11;:18::i;:::-;-1:-1:-1;3894:9:481;3683:227;-1:-1:-1;;;3683:227:481:o;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;49273:2:821;1911:55:298;;;49255:21:821;;;49292:18;;;49285:30;49351:34;49331:18;;;49324:62;49403:18;;1911:55:298;49071:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;:::-;702:173;;;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;10720:1708:395:-;10861:13;;-1:-1:-1;;;;;10888:16:395;;10884:48;;10913:19;;-1:-1:-1;;;10913:19:395;;;;;;;;;;;10884:48;10946:8;10958:1;10946:13;10942:44;;10968:18;;-1:-1:-1;;;10968:18:395;;;;;;;;;;;10942:44;10997:61;11027:1;11031:2;11035:12;11049:8;10997:21;:61::i;:::-;-1:-1:-1;;;;;11329:16:395;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11387:49:395;;-1:-1:-1;;;;;11329:44:395;;;;;;;11387:49;;;-1:-1:-1;;;;;;;;;11329:44:395;;;;;;11387:49;;;;;;;;;;;;;;;;11451:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11500:66:395;;;-1:-1:-1;;;11550:15:395;11500:66;;;;;;;;;;;;;11451:25;;11644:23;;;;11686:15;;:13;:15::i;:::-;11682:618;;;11721:308;11751:38;;11776:12;;-1:-1:-1;;;;;11751:38:395;;;11768:1;;-1:-1:-1;;;;;;;;;;;11751:38:395;11768:1;;11751:38;11816:69;11855:1;11859:2;11863:14;;;;;;11879:5;11816:30;:69::i;:::-;11811:172;;11920:40;;-1:-1:-1;;;11920:40:395;;;;;;;;;;;11811:172;12024:3;12009:12;:18;11721:308;;12108:12;12091:13;;:29;12087:43;;12122:8;;;12087:43;11682:618;;;12169:117;12199:40;;12224:14;;;;;-1:-1:-1;;;;;12199:40:395;;;12216:1;;-1:-1:-1;;;;;;;;;;;12199:40:395;12216:1;;12199:40;12281:3;12266:12;:18;12169:117;;11682:618;-1:-1:-1;12313:13:395;:28;12361:60;12390:1;12394:2;12398:12;12412:8;12361:60;:::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;10150:916:486:-;10203:7;;-1:-1:-1;;;10278:17:486;;10274:103;;-1:-1:-1;;;10315:17:486;;;-1:-1:-1;10360:2:486;10350:12;10274:103;-1:-1:-1;;;10394:5:486;:17;10390:103;;-1:-1:-1;;;10431:17:486;;;-1:-1:-1;10476:2:486;10466:12;10390:103;10519:8;10510:5;:17;10506:103;;10556:8;10547:17;;;-1:-1:-1;10592:2:486;10582:12;10506:103;10635:7;10626:5;:16;10622:100;;10671:7;10662:16;;;-1:-1:-1;10706:1:486;10696:11;10622:100;10748:7;10739:5;:16;10735:100;;10784:7;10775:16;;;-1:-1:-1;10819:1:486;10809:11;10735:100;10861:7;10852:5;:16;10848:100;;10897:7;10888:16;;;-1:-1:-1;10932:1:486;10922:11;10848:100;10974:7;10965:5;:16;10961:66;;11011:1;11001:11;11053:6;10150:916;-1:-1:-1;;10150:916:486:o;10829:127:287:-;10893:4;10916:33;10924:10;;10936:12;:10;:12::i;2864:362:267:-;3014:25;;3078:24;3089:13;3078:8;:24;:::i;:::-;3150:8;:22;;;;;;;;;;;;;-1:-1:-1;3183:16:267;;;:7;3150:22;3183:16;;;;3068:34;;-1:-1:-1;3068:34:267;;-1:-1:-1;3183:36:267;3202:17;3183:16;:36;:::i;776:69:478:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;2294:202:395::0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2408:5:395::1;:13;2416:5:::0;2408;:13:::1;:::i;:::-;-1:-1:-1::0;2431:7:395::1;:17;2441:7:::0;2431;:17:::1;:::i;:::-;-1:-1:-1::0;2644:7:395;2458:13:::1;:31:::0;-1:-1:-1;;2294:202:395:o;2798:147:482:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;2900:38:482::1;2924:4;2930:7;2900:23;:38::i;3304:109::-:0;3357:7;3383:23;:21;:23::i;2167:730:481:-;2248:7;2257:12;2285:9;:16;2305:2;2285:22;2281:610;;2621:4;2606:20;;2600:27;2670:4;2655:20;;2649:27;2727:4;2712:20;;2706:27;2323:9;2698:36;2768:25;2779:4;2698:36;2600:27;2649;2768:10;:25::i;:::-;2761:32;;;;;;;;;2281:610;-1:-1:-1;2840:1:481;;-1:-1:-1;2844:35:481;2281:610;2167:730;;;;;:::o;592:511::-;669:20;660:5;:29;;;;;;;;:::i;:::-;;656:441;;592:511;:::o;656:441::-;765:29;756:5;:38;;;;;;;;:::i;:::-;;752:345;;810:34;;-1:-1:-1;;;810:34:481;;49926:2:821;810:34:481;;;49908:21:821;49965:2;49945:18;;;49938:30;-1:-1:-1;;;49984:18:821;;;49977:54;50048:18;;810:34:481;49724:348:821;752:345:481;874:35;865:5;:44;;;;;;;;:::i;:::-;;861:236;;925:41;;-1:-1:-1;;;925:41:481;;50279:2:821;925:41:481;;;50261:21:821;50318:2;50298:18;;;50291:30;50357:33;50337:18;;;50330:61;50408:18;;925:41:481;50077:355:821;861:236:481;996:30;987:5;:39;;;;;;;;:::i;:::-;;983:114;;1042:44;;-1:-1:-1;;;1042:44:481;;50639:2:821;1042:44:481;;;50621:21:821;50678:2;50658:18;;;50651:30;50717:34;50697:18;;;50690:62;-1:-1:-1;;;50768:18:821;;;50761:32;50810:19;;1042:44:481;50437:398:821;2482:292:292;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;51252:2:821;2719:48:292;;;51234:21:821;51291:2;51271:18;;;51264:30;-1:-1:-1;;;51310:18:821;;;51303:58;51378:18;;2719:48:292;51050:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;51609:2:821;8110:60:289;;;51591:21:821;51648:2;51628:18;;;51621:30;51687:31;51667:18;;;51660:59;51736:18;;8110:60:289;51407:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;2951:267:482:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;3063:5:482::1;:12;3071:4:::0;3063:5;:12:::1;:::i;:::-;-1:-1:-1::0;3085:8:482::1;:18;3096:7:::0;3085:8;:18:::1;:::i;:::-;-1:-1:-1::0;;3182:1:482::1;3168:11;:15:::0;;;3193:14:::1;:18:::0;-1:-1:-1;2951:267:482:o;3419:192::-;3474:7;1913:95;3533:17;:15;:17::i;:::-;3552:20;:18;:20::i;:::-;3510:93;;;;;;52024:25:821;;;;52065:18;;52058:34;;;;52108:18;;;52101:34;3574:13:482;52151:18:821;;;52144:34;3597:4:482;52194:19:821;;;52187:61;51996:19;;3510:93:482;;;;;;;;;;;;3500:104;;;;;;3493:111;;3419:192;:::o;5031:1456:481:-;5119:7;;-1:-1:-1;;;;;6030:79:481;;6026:161;;;-1:-1:-1;6141:1:481;;-1:-1:-1;6145:30:481;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;52486:25:821;;;52559:4;52547:17;;52527:18;;;52520:45;;;;52581:18;;;52574:34;;;52624:18;;;52617:34;;;6298:24:481;;52458:19:821;;6298:24:481;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:481;;-1:-1:-1;;6298:24:481;;;-1:-1:-1;;;;;;;6336:20:481;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:481;;-1:-1:-1;5031:1456:481;;;;;;;;:::o;759:175:228:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;52920:15:821;;;1067:68:228;;;52902:34:821;52972:15;;52952:18;;;52945:43;53004:18;;;52997:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;52837:18:821;;1067:68:228;52662:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;6229:630:482:-;6279:7;6298:18;6319:13;:11;:13::i;:::-;6346:18;;6298:34;;-1:-1:-1;6346:22:482;6342:511;;6391:22;;;;;;;;6229:630;-1:-1:-1;6229:630:482:o;6342:511::-;6688:11;;6717:15;;6713:130;;6759:10;6229:630;-1:-1:-1;;6229:630:482:o;6713:130::-;6815:13;6808:20;;;;6229:630;:::o;7080:666::-;7133:7;7152:21;7176:16;:14;:16::i;:::-;7206:21;;7152:40;;-1:-1:-1;7206:25:482;7202:538;;7254:25;;;;;;;;7080:666;-1:-1:-1;7080:666:482:o;7202:538::-;7566:14;;7598:18;;7594:136;;7643:13;7080:666;-1:-1:-1;;7080:666:482:o;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;53494:2:821;3711:85:228;;;53476:21:821;53533:2;53513:18;;;53506:30;53572:34;53552:18;;;53545:62;-1:-1:-1;;;53623:18:821;;;53616:40;53673:19;;3711:85:228;53292:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;14:131:821:-;-1:-1:-1;;;;;;88:32:821;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:821;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:821;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:821:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:104::-;-1:-1:-1;;;;;1414:31:821;1402:44;;1348:104::o;1665:180::-;1724:6;1777:2;1765:9;1756:7;1752:23;1748:32;1745:52;;;1793:1;1790;1783:12;1745:52;-1:-1:-1;1816:23:821;;1665:180;-1:-1:-1;1665:180:821:o;1850:173::-;1918:20;;-1:-1:-1;;;;;1967:31:821;;1957:42;;1947:70;;2013:1;2010;2003:12;1947:70;1850:173;;;:::o;2028:254::-;2096:6;2104;2157:2;2145:9;2136:7;2132:23;2128:32;2125:52;;;2173:1;2170;2163:12;2125:52;2196:29;2215:9;2196:29;:::i;:::-;2186:39;2272:2;2257:18;;;;2244:32;;-1:-1:-1;;;2028:254:821:o;2287:186::-;2346:6;2399:2;2387:9;2378:7;2374:23;2370:32;2367:52;;;2415:1;2412;2405:12;2367:52;2438:29;2457:9;2438:29;:::i;2660:328::-;2737:6;2745;2753;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;2845:29;2864:9;2845:29;:::i;:::-;2835:39;;2893:38;2927:2;2916:9;2912:18;2893:38;:::i;:::-;2883:48;;2978:2;2967:9;2963:18;2950:32;2940:42;;2660:328;;;;;:::o;3360:347::-;3411:8;3421:6;3475:3;3468:4;3460:6;3456:17;3452:27;3442:55;;3493:1;3490;3483:12;3442:55;-1:-1:-1;3516:20:821;;-1:-1:-1;;;;;3548:30:821;;3545:50;;;3591:1;3588;3581:12;3545:50;3628:4;3620:6;3616:17;3604:29;;3680:3;3673:4;3664:6;3656;3652:19;3648:30;3645:39;3642:59;;;3697:1;3694;3687:12;3712:700;3823:6;3831;3839;3892:2;3880:9;3871:7;3867:23;3863:32;3860:52;;;3908:1;3905;3898:12;3860:52;3948:9;3935:23;-1:-1:-1;;;;;4018:2:821;4010:6;4007:14;4004:34;;;4034:1;4031;4024:12;4004:34;4057:22;;;;4113:3;4095:16;;;4091:26;4088:46;;;4130:1;4127;4120:12;4088:46;4153:2;;-1:-1:-1;4208:2:821;4193:18;;4180:32;;4224:16;;;4221:36;;;4253:1;4250;4243:12;4221:36;;4292:60;4344:7;4333:8;4322:9;4318:24;4292:60;:::i;:::-;3712:700;;4371:8;;-1:-1:-1;4266:86:821;;-1:-1:-1;;;;3712:700:821:o;4706:248::-;4774:6;4782;4835:2;4823:9;4814:7;4810:23;4806:32;4803:52;;;4851:1;4848;4841:12;4803:52;-1:-1:-1;;4874:23:821;;;4944:2;4929:18;;;4916:32;;-1:-1:-1;4706:248:821:o;4959:274::-;-1:-1:-1;;;;;5151:32:821;;;;5133:51;;5215:2;5200:18;;5193:34;5121:2;5106:18;;4959:274::o;5238:254::-;5306:6;5314;5367:2;5355:9;5346:7;5342:23;5338:32;5335:52;;;5383:1;5380;5373:12;5335:52;5419:9;5406:23;5396:33;;5448:38;5482:2;5471:9;5467:18;5448:38;:::i;:::-;5438:48;;5238:254;;;;;:::o;5787:162::-;5854:5;5899:2;5890:6;5885:3;5881:16;5877:25;5874:45;;;5915:1;5912;5905:12;5954:127;6015:10;6010:3;6006:20;6003:1;5996:31;6046:4;6043:1;6036:15;6070:4;6067:1;6060:15;6086:275;6157:2;6151:9;6222:2;6203:13;;-1:-1:-1;;6199:27:821;6187:40;;-1:-1:-1;;;;;6242:34:821;;6278:22;;;6239:62;6236:88;;;6304:18;;:::i;:::-;6340:2;6333:22;6086:275;;-1:-1:-1;6086:275:821:o;6366:186::-;6414:4;-1:-1:-1;;;;;6439:6:821;6436:30;6433:56;;;6469:18;;:::i;:::-;-1:-1:-1;6535:2:821;6514:15;-1:-1:-1;;6510:29:821;6541:4;6506:40;;6366:186::o;6557:462::-;6599:5;6652:3;6645:4;6637:6;6633:17;6629:27;6619:55;;6670:1;6667;6660:12;6619:55;6706:6;6693:20;6737:48;6753:31;6781:2;6753:31;:::i;:::-;6737:48;:::i;:::-;6810:2;6801:7;6794:19;6856:3;6849:4;6844:2;6836:6;6832:15;6828:26;6825:35;6822:55;;;6873:1;6870;6863:12;6822:55;6938:2;6931:4;6923:6;6919:17;6912:4;6903:7;6899:18;6886:55;6986:1;6961:16;;;6979:4;6957:27;6950:38;;;;6965:7;6557:462;-1:-1:-1;;;6557:462:821:o;7024:877::-;7172:6;7180;7188;7196;7204;7212;7265:3;7253:9;7244:7;7240:23;7236:33;7233:53;;;7282:1;7279;7272:12;7233:53;7305:29;7324:9;7305:29;:::i;:::-;7295:39;;7381:2;7370:9;7366:18;7353:32;7343:42;;7404:38;7438:2;7427:9;7423:18;7404:38;:::i;:::-;7394:48;;7489:2;7478:9;7474:18;7461:32;7451:42;;7544:3;7533:9;7529:19;7516:33;-1:-1:-1;;;;;7609:2:821;7601:6;7598:14;7595:34;;;7625:1;7622;7615:12;7595:34;7648:74;7714:7;7705:6;7694:9;7690:22;7648:74;:::i;:::-;7638:84;;7775:3;7764:9;7760:19;7747:33;7731:49;;7805:2;7795:8;7792:16;7789:36;;;7821:1;7818;7811:12;7789:36;;7844:51;7887:7;7876:8;7865:9;7861:24;7844:51;:::i;:::-;7834:61;;;7024:877;;;;;;;;:::o;7906:118::-;7992:5;7985:13;7978:21;7971:5;7968:32;7958:60;;8014:1;8011;8004:12;8029:414;8129:6;8137;8181:9;8172:7;8168:23;8211:3;8207:2;8203:12;8200:32;;;8228:1;8225;8218:12;8200:32;8251:3;8274:2;8270;8266:11;8263:31;;;8290:1;8287;8280:12;8263:31;8313:9;;-1:-1:-1;8357:18:821;;8344:32;;-1:-1:-1;8385:28:821;8344:32;8385:28;:::i;:::-;8432:5;8422:15;;;8029:414;;;;;:::o;8448:1259::-;8854:3;8849;8845:13;8837:6;8833:26;8822:9;8815:45;8796:4;8879:2;8917:3;8912:2;8901:9;8897:18;8890:31;8944:46;8985:3;8974:9;8970:19;8962:6;8944:46;:::i;:::-;9038:9;9030:6;9026:22;9021:2;9010:9;9006:18;8999:50;9072:33;9098:6;9090;9072:33;:::i;:::-;9136:2;9121:18;;9114:34;;;-1:-1:-1;;;;;9185:32:821;;9179:3;9164:19;;9157:61;9205:3;9234:19;;9227:35;;;9299:22;;;9293:3;9278:19;;9271:51;9371:13;;9393:22;;;9443:2;9469:15;;;;-1:-1:-1;9431:15:821;;;;-1:-1:-1;9512:169:821;9526:6;9523:1;9520:13;9512:169;;;9587:13;;9575:26;;9656:15;;;;9621:12;;;;9548:1;9541:9;9512:169;;;-1:-1:-1;9698:3:821;;8448:1259;-1:-1:-1;;;;;;;;;;;;8448:1259:821:o;9965:321::-;10034:6;10087:2;10075:9;10066:7;10062:23;10058:32;10055:52;;;10103:1;10100;10093:12;10055:52;10143:9;10130:23;-1:-1:-1;;;;;10168:6:821;10165:30;10162:50;;;10208:1;10205;10198:12;10162:50;10231:49;10272:7;10263:6;10252:9;10248:22;10231:49;:::i;10291:322::-;10368:6;10376;10384;10437:2;10425:9;10416:7;10412:23;10408:32;10405:52;;;10453:1;10450;10443:12;10405:52;10489:9;10476:23;10466:33;;10518:38;10552:2;10541:9;10537:18;10518:38;:::i;10618:477::-;10697:6;10705;10713;10766:2;10754:9;10745:7;10741:23;10737:32;10734:52;;;10782:1;10779;10772:12;10734:52;10818:9;10805:23;10795:33;;10879:2;10868:9;10864:18;10851:32;-1:-1:-1;;;;;10898:6:821;10895:30;10892:50;;;10938:1;10935;10928:12;10892:50;10977:58;11027:7;11018:6;11007:9;11003:22;10977:58;:::i;11512:315::-;11577:6;11585;11638:2;11626:9;11617:7;11613:23;11609:32;11606:52;;;11654:1;11651;11644:12;11606:52;11677:29;11696:9;11677:29;:::i;:::-;11667:39;;11756:2;11745:9;11741:18;11728:32;11769:28;11791:5;11769:28;:::i;11832:527::-;11924:6;11932;11940;11948;11956;12009:3;11997:9;11988:7;11984:23;11980:33;11977:53;;;12026:1;12023;12016:12;11977:53;12049:29;12068:9;12049:29;:::i;:::-;12039:39;;12125:2;12114:9;12110:18;12097:32;12087:42;;12148:38;12182:2;12171:9;12167:18;12148:38;:::i;:::-;12138:48;;12233:2;12222:9;12218:18;12205:32;12195:42;;12287:3;12276:9;12272:19;12259:33;12301:28;12323:5;12301:28;:::i;:::-;12348:5;12338:15;;;11832:527;;;;;;;;:::o;12364:626::-;12461:6;12469;12522:2;12510:9;12501:7;12497:23;12493:32;12490:52;;;12538:1;12535;12528:12;12490:52;12578:9;12565:23;-1:-1:-1;;;;;12648:2:821;12640:6;12637:14;12634:34;;;12664:1;12661;12654:12;12634:34;12702:6;12691:9;12687:22;12677:32;;12747:7;12740:4;12736:2;12732:13;12728:27;12718:55;;12769:1;12766;12759:12;12718:55;12809:2;12796:16;12835:2;12827:6;12824:14;12821:34;;;12851:1;12848;12841:12;12821:34;12904:7;12899:2;12889:6;12886:1;12882:14;12878:2;12874:23;12870:32;12867:45;12864:65;;;12925:1;12922;12915:12;12864:65;12956:2;12948:11;;;;;12978:6;;-1:-1:-1;12364:626:821;;-1:-1:-1;;;;12364:626:821:o;12995:801::-;13155:4;13184:2;13224;13213:9;13209:18;13254:2;13243:9;13236:21;13277:6;13312;13306:13;13343:6;13335;13328:22;13381:2;13370:9;13366:18;13359:25;;13443:2;13433:6;13430:1;13426:14;13415:9;13411:30;13407:39;13393:53;;13481:2;13473:6;13469:15;13502:1;13512:255;13526:6;13523:1;13520:13;13512:255;;;13619:2;13615:7;13603:9;13595:6;13591:22;13587:36;13582:3;13575:49;13647:40;13680:6;13671;13665:13;13647:40;:::i;:::-;13637:50;-1:-1:-1;13745:12:821;;;;13710:15;;;;13548:1;13541:9;13512:255;;;-1:-1:-1;13784:6:821;;12995:801;-1:-1:-1;;;;;;;12995:801:821:o;14054:277::-;14134:6;14187:2;14175:9;14166:7;14162:23;14158:32;14155:52;;;14203:1;14200;14193:12;14155:52;14242:9;14229:23;14281:1;14274:5;14271:12;14261:40;;14297:1;14294;14287:12;14336:537;14431:6;14439;14447;14455;14508:3;14496:9;14487:7;14483:23;14479:33;14476:53;;;14525:1;14522;14515:12;14476:53;14548:29;14567:9;14548:29;:::i;:::-;14538:39;;14596:38;14630:2;14619:9;14615:18;14596:38;:::i;:::-;14586:48;;14681:2;14670:9;14666:18;14653:32;14643:42;;14736:2;14725:9;14721:18;14708:32;-1:-1:-1;;;;;14755:6:821;14752:30;14749:50;;;14795:1;14792;14785:12;14749:50;14818:49;14859:7;14850:6;14839:9;14835:22;14818:49;:::i;:::-;14808:59;;;14336:537;;;;;;;:::o;14878:786::-;14978:6;14986;14994;15002;15010;15063:2;15051:9;15042:7;15038:23;15034:32;15031:52;;;15079:1;15076;15069:12;15031:52;15115:9;15102:23;15092:33;;15176:2;15165:9;15161:18;15148:32;-1:-1:-1;;;;;15240:2:821;15232:6;15229:14;15226:34;;;15256:1;15253;15246:12;15226:34;15295:58;15345:7;15336:6;15325:9;15321:22;15295:58;:::i;:::-;15372:8;;-1:-1:-1;15269:84:821;-1:-1:-1;15460:2:821;15445:18;;15432:32;;-1:-1:-1;15476:16:821;;;15473:36;;;15505:1;15502;15495:12;15473:36;;15544:60;15596:7;15585:8;15574:9;15570:24;15544:60;:::i;:::-;14878:786;;;;-1:-1:-1;14878:786:821;;-1:-1:-1;15623:8:821;;15518:86;14878:786;-1:-1:-1;;;14878:786:821:o;16379:718::-;16433:5;16486:3;16479:4;16471:6;16467:17;16463:27;16453:55;;16504:1;16501;16494:12;16453:55;16540:6;16527:20;16566:4;-1:-1:-1;;;;;16585:2:821;16582:26;16579:52;;;16611:18;;:::i;:::-;16657:2;16654:1;16650:10;16680:28;16704:2;16700;16696:11;16680:28;:::i;:::-;16742:15;;;16812;;;16808:24;;;16773:12;;;;16844:15;;;16841:35;;;16872:1;16869;16862:12;16841:35;16908:2;16900:6;16896:15;16885:26;;16920:148;16936:6;16931:3;16928:15;16920:148;;;17002:23;17021:3;17002:23;:::i;:::-;16990:36;;16953:12;;;;17046;;;;16920:148;;17102:173;17170:20;;-1:-1:-1;;;;;17219:31:821;;17209:42;;17199:70;;17265:1;17262;17255:12;17280:1417;17475:6;17483;17491;17499;17507;17515;17523;17531;17539;17547;17600:3;17588:9;17579:7;17575:23;17571:33;17568:53;;;17617:1;17614;17607:12;17568:53;17640:29;17659:9;17640:29;:::i;:::-;17630:39;;17720:2;17709:9;17705:18;17692:32;-1:-1:-1;;;;;17784:2:821;17776:6;17773:14;17770:34;;;17800:1;17797;17790:12;17770:34;17823:49;17864:7;17855:6;17844:9;17840:22;17823:49;:::i;:::-;17813:59;;17925:2;17914:9;17910:18;17897:32;17881:48;;17954:2;17944:8;17941:16;17938:36;;;17970:1;17967;17960:12;17938:36;17993:51;18036:7;18025:8;18014:9;18010:24;17993:51;:::i;:::-;17983:61;;18097:2;18086:9;18082:18;18069:32;18053:48;;18126:2;18116:8;18113:16;18110:36;;;18142:1;18139;18132:12;18110:36;18165:51;18208:7;18197:8;18186:9;18182:24;18165:51;:::i;:::-;18155:61;;18269:3;18258:9;18254:19;18241:33;18225:49;;18299:2;18289:8;18286:16;18283:36;;;18315:1;18312;18305:12;18283:36;;18338:63;18393:7;18382:8;18371:9;18367:24;18338:63;:::i;:::-;18328:73;;;18420:39;18454:3;18443:9;18439:19;18420:39;:::i;:::-;18410:49;;18478:39;18512:3;18501:9;18497:19;18478:39;:::i;:::-;18468:49;;18536:39;18570:3;18559:9;18555:19;18536:39;:::i;:::-;18526:49;;18594:39;18628:3;18617:9;18613:19;18594:39;:::i;:::-;18584:49;;18652:39;18686:3;18675:9;18671:19;18652:39;:::i;:::-;18642:49;;17280:1417;;;;;;;;;;;;;:::o;18702:628::-;18790:6;18798;18806;18859:2;18847:9;18838:7;18834:23;18830:32;18827:52;;;18875:1;18872;18865:12;18827:52;18915:9;18902:23;-1:-1:-1;;;;;18985:2:821;18977:6;18974:14;18971:34;;;19001:1;18998;18991:12;18971:34;19024:49;19065:7;19056:6;19045:9;19041:22;19024:49;:::i;:::-;19014:59;;19126:2;19115:9;19111:18;19098:32;19082:48;;19155:2;19145:8;19142:16;19139:36;;;19171:1;19168;19161:12;19335:260;19403:6;19411;19464:2;19452:9;19443:7;19439:23;19435:32;19432:52;;;19480:1;19477;19470:12;19432:52;19503:29;19522:9;19503:29;:::i;:::-;19493:39;;19551:38;19585:2;19574:9;19570:18;19551:38;:::i;19600:127::-;19661:10;19656:3;19652:20;19649:1;19642:31;19692:4;19689:1;19682:15;19716:4;19713:1;19706:15;19732:349;19885:2;19870:18;;19918:1;19907:13;;19897:144;;19963:10;19958:3;19954:20;19951:1;19944:31;19998:4;19995:1;19988:15;20026:4;20023:1;20016:15;19897:144;20050:25;;;19732:349;:::o;20086:513::-;20198:6;20206;20214;20267:2;20255:9;20246:7;20242:23;20238:32;20235:52;;;20283:1;20280;20273:12;20235:52;20306:29;20325:9;20306:29;:::i;:::-;20296:39;;20382:2;20371:9;20367:18;20354:32;20344:42;;20437:2;20426:9;20422:18;20409:32;-1:-1:-1;;;;;20456:6:821;20453:30;20450:50;;;20496:1;20493;20486:12;20450:50;20519:74;20585:7;20576:6;20565:9;20561:22;20519:74;:::i;:::-;20509:84;;;20086:513;;;;;:::o;20867:380::-;20946:1;20942:12;;;;20989;;;21010:61;;21064:4;21056:6;21052:17;21042:27;;21010:61;21117:2;21109:6;21106:14;21086:18;21083:38;21080:161;;21163:10;21158:3;21154:20;21151:1;21144:31;21198:4;21195:1;21188:15;21226:4;21223:1;21216:15;21252:338;21454:2;21436:21;;;21493:2;21473:18;;;21466:30;-1:-1:-1;;;21527:2:821;21512:18;;21505:44;21581:2;21566:18;;21252:338::o;21937:127::-;21998:10;21993:3;21989:20;21986:1;21979:31;22029:4;22026:1;22019:15;22053:4;22050:1;22043:15;22069:127;22130:10;22125:3;22121:20;22118:1;22111:31;22161:4;22158:1;22151:15;22185:4;22182:1;22175:15;22201:168;22274:9;;;22305;;22322:15;;;22316:22;;22302:37;22292:71;;22343:18;;:::i;22506:217::-;22546:1;22572;22562:132;;22616:10;22611:3;22607:20;22604:1;22597:31;22651:4;22648:1;22641:15;22679:4;22676:1;22669:15;22562:132;-1:-1:-1;22708:9:821;;22506:217::o;23441:125::-;23506:9;;;23527:10;;;23524:36;;;23540:18;;:::i;23571:341::-;23773:2;23755:21;;;23812:2;23792:18;;;23785:30;-1:-1:-1;;;23846:2:821;23831:18;;23824:47;23903:2;23888:18;;23571:341::o;23917:501::-;23976:5;23983:6;24043:3;24030:17;24129:2;24125:7;24114:8;24098:14;24094:29;24090:43;24070:18;24066:68;24056:96;;24148:1;24145;24138:12;24056:96;24176:33;;24280:4;24267:18;;;-1:-1:-1;24228:21:821;;-1:-1:-1;;;;;;24297:30:821;;24294:50;;;24340:1;24337;24330:12;24294:50;24387:6;24371:14;24367:27;24360:5;24356:39;24353:59;;;24408:1;24405;24398:12;24423:267;24512:6;24507:3;24500:19;24564:6;24557:5;24550:4;24545:3;24541:14;24528:43;-1:-1:-1;24616:1:821;24591:16;;;24609:4;24587:27;;;24580:38;;;;24672:2;24651:15;;;-1:-1:-1;;24647:29:821;24638:39;;;24634:50;;24423:267::o;24804:1542::-;24995:2;24984:9;24977:21;25007:66;25069:2;25058:9;25054:18;25026:26;25045:6;25026:26;:::i;:::-;25007:66;:::i;:::-;24958:4;25102:35;25133:2;25125:6;25121:15;25102:35;:::i;:::-;25146:52;25194:2;25183:9;25179:18;25165:12;25146:52;:::i;:::-;;25259:2;25251:6;25247:15;25234:29;25229:2;25218:9;25214:18;25207:57;25295:35;25326:2;25318:6;25314:15;25295:35;:::i;:::-;25339:55;25389:3;25378:9;25374:19;25358:14;25339:55;:::i;:::-;;25439:57;25491:3;25483:6;25479:16;25471:6;25439:57;:::i;:::-;25515:6;25558:2;25552:3;25541:9;25537:19;25530:31;25584:77;25656:3;25645:9;25641:19;25627:12;25611:14;25584:77;:::i;:::-;25570:91;;25723:3;25715:6;25711:16;25698:30;25692:3;25681:9;25677:19;25670:59;25791:3;25783:6;25779:16;25766:30;25760:3;25749:9;25745:19;25738:59;25828:36;25859:3;25851:6;25847:16;25828:36;:::i;:::-;25806:58;;25883:3;25895:54;25945:2;25934:9;25930:18;25914:14;25895:54;:::i;:::-;25980:35;26011:2;26003:6;25999:15;25980:35;:::i;:::-;25958:57;;;26034:3;26046:54;26096:2;26085:9;26081:18;26065:14;-1:-1:-1;;;;;24761:31:821;24749:44;;24695:104;26046:54;26131:35;26162:2;26154:6;26150:15;26131:35;:::i;:::-;26109:57;;;26185:3;26197:54;26247:2;26236:9;26232:18;26216:14;-1:-1:-1;;;;;24761:31:821;24749:44;;24695:104;26197:54;26300:15;;;;26287:29;26267:18;;;;26260:57;;;;-1:-1:-1;26334:6:821;24804:1542;-1:-1:-1;24804:1542:821:o;26351:286::-;26553:2;26524:15;;;;-1:-1:-1;;;;;;26520:45:821;26508:58;;26591:2;26582:12;;26575:28;26628:2;26619:12;;26351:286::o;26989:864::-;27244:20;;27226:39;;27328:4;27316:17;;;27303:31;27281:20;;;27274:61;27398:4;27386:17;;;27373:31;27351:20;;;27344:61;27468:4;27456:17;;;27443:31;27421:20;;;27414:61;27538:4;27526:17;;;27513:31;27491:20;;;27484:61;27608:4;27596:17;;;27583:31;27561:20;;;27554:61;27678:4;27666:17;;;27653:31;27631:20;;;27624:61;27213:3;27198:19;;-1:-1:-1;;;;;27727:37:821;27758:4;27746:17;;27727:37;:::i;:::-;27723:63;27716:4;27701:20;;27694:93;27831:14;;27824:22;27818:3;27803:19;;;27796:51;26989:864;;-1:-1:-1;26989:864:821:o;28554:716::-;28642:6;28650;28703:2;28691:9;28682:7;28678:23;28674:32;28671:52;;;28719:1;28716;28709:12;28671:52;28752:9;28746:16;-1:-1:-1;;;;;28777:6:821;28774:30;28771:50;;;28817:1;28814;28807:12;28771:50;28840:22;;28893:4;28885:13;;28881:27;-1:-1:-1;28871:55:821;;28922:1;28919;28912:12;28871:55;28951:2;28945:9;28976:48;28992:31;29020:2;28992:31;:::i;28976:48::-;29047:2;29040:5;29033:17;29089:7;29082:4;29077:2;29073;29069:11;29065:22;29062:35;29059:55;;;29110:1;29107;29100:12;29059:55;29123:71;29191:2;29184:4;29177:5;29173:16;29166:4;29162:2;29158:13;29123:71;:::i;:::-;29258:4;29243:20;;;;29237:27;29213:5;;29237:27;;-1:-1:-1;;;;;28554:716:821:o;29275:516::-;29490:3;29528:6;29522:13;29544:66;29603:6;29598:3;29591:4;29583:6;29579:17;29544:66;:::i;:::-;29632:16;;29685:6;29677;29632:16;29657:35;29711:18;;;29738;;;-1:-1:-1;29780:4:821;29772:13;;29275:516;-1:-1:-1;;;29275:516:821:o;31527:521::-;31604:4;31610:6;31670:11;31657:25;31764:2;31760:7;31749:8;31733:14;31729:29;31725:43;31705:18;31701:68;31691:96;;31783:1;31780;31773:12;31691:96;31810:33;;31862:20;;;-1:-1:-1;;;;;;31894:30:821;;31891:50;;;31937:1;31934;31927:12;31891:50;31970:4;31958:17;;-1:-1:-1;32001:14:821;31997:27;;;31987:38;;31984:58;;;32038:1;32035;32028:12;32053:352;32264:6;32256;32251:3;32238:33;32359:2;32330:15;;;;-1:-1:-1;;;;;;32326:45:821;32290:16;;32315:57;;;32396:2;32388:11;;32053:352;-1:-1:-1;32053:352:821:o;32410:452::-;32642:3;32680:6;32674:13;32696:66;32755:6;32750:3;32743:4;32735:6;32731:17;32696:66;:::i;:::-;-1:-1:-1;;;32784:16:821;;32809:18;;;-1:-1:-1;32854:1:821;32843:13;;32410:452;-1:-1:-1;32410:452:821:o;32867:496::-;33046:3;33084:6;33078:13;33100:66;33159:6;33154:3;33147:4;33139:6;33135:17;33100:66;:::i;:::-;33229:13;;33188:16;;;;33251:70;33229:13;33188:16;33298:4;33286:17;;33251:70;:::i;:::-;33337:20;;32867:496;-1:-1:-1;;;;32867:496:821:o;33368:388::-;33445:6;33453;33506:2;33494:9;33485:7;33481:23;33477:32;33474:52;;;33522:1;33519;33512:12;33474:52;33562:9;33549:23;-1:-1:-1;;;;;33587:6:821;33584:30;33581:50;;;33627:1;33624;33617:12;33581:50;33650:49;33691:7;33682:6;33671:9;33667:22;33650:49;:::i;:::-;33640:59;33746:2;33731:18;;;;33718:32;;-1:-1:-1;;;;33368:388:821:o;34375:313::-;34586:6;34578;34573:3;34560:33;34612:16;;;34637:18;;;34679:2;34671:11;;34375:313;-1:-1:-1;34375:313:821:o;34693:545::-;34786:4;34792:6;34852:11;34839:25;34946:2;34942:7;34931:8;34915:14;34911:29;34907:43;34887:18;34883:68;34873:96;;34965:1;34962;34955:12;34873:96;34992:33;;35044:20;;;-1:-1:-1;;;;;;35076:30:821;;35073:50;;;35119:1;35116;35109:12;35073:50;35152:4;35140:17;;-1:-1:-1;35203:1:821;35199:14;;;35183;35179:35;35169:46;;35166:66;;;35228:1;35225;35218:12;36276:339;36478:2;36460:21;;;36517:2;36497:18;;;36490:30;-1:-1:-1;;;36551:2:821;36536:18;;36529:45;36606:2;36591:18;;36276:339::o;36620:341::-;36822:2;36804:21;;;36861:2;36841:18;;;36834:30;-1:-1:-1;;;36895:2:821;36880:18;;36873:47;36952:2;36937:18;;36620:341::o;36966:810::-;-1:-1:-1;;;37372:3:821;37365:36;37347:3;37430:6;37424:13;37446:75;37514:6;37509:2;37504:3;37500:12;37493:4;37485:6;37481:17;37446:75;:::i;:::-;-1:-1:-1;;;37580:2:821;37540:16;;;37572:11;;;37565:40;37630:13;;37652:76;37630:13;37714:2;37706:11;;37699:4;37687:17;;37652:76;:::i;:::-;37748:17;37767:2;37744:26;;36966:810;-1:-1:-1;;;;36966:810:821:o;38121:186::-;38180:6;38233:2;38221:9;38212:7;38208:23;38204:32;38201:52;;;38249:1;38246;38239:12;38201:52;38272:29;38291:9;38272:29;:::i;39683:128::-;39750:9;;;39771:11;;;39768:37;;;39785:18;;:::i;40273:543::-;40375:2;40370:3;40367:11;40364:446;;;40411:1;40435:5;40432:1;40425:16;40479:4;40476:1;40466:18;40549:2;40537:10;40533:19;40530:1;40526:27;40520:4;40516:38;40585:4;40573:10;40570:20;40567:47;;;-1:-1:-1;40608:4:821;40567:47;40663:2;40658:3;40654:12;40651:1;40647:20;40641:4;40637:31;40627:41;;40718:82;40736:2;40729:5;40726:13;40718:82;;;40781:17;;;40762:1;40751:13;40718:82;;40992:1345;41118:3;41112:10;-1:-1:-1;;;;;41137:6:821;41134:30;41131:56;;;41167:18;;:::i;:::-;41196:97;41286:6;41246:38;41278:4;41272:11;41246:38;:::i;:::-;41240:4;41196:97;:::i;:::-;41348:4;;41405:2;41394:14;;41422:1;41417:663;;;;42124:1;42141:6;42138:89;;;-1:-1:-1;42193:19:821;;;42187:26;42138:89;-1:-1:-1;;40949:1:821;40945:11;;;40941:24;40937:29;40927:40;40973:1;40969:11;;;40924:57;42240:81;;41387:944;;41417:663;40220:1;40213:14;;;40257:4;40244:18;;-1:-1:-1;;41453:20:821;;;41571:236;41585:7;41582:1;41579:14;41571:236;;;41674:19;;;41668:26;41653:42;;41766:27;;;;41734:1;41722:14;;;;41601:19;;41571:236;;;41575:3;41835:6;41826:7;41823:19;41820:201;;;41896:19;;;41890:26;-1:-1:-1;;41979:1:821;41975:14;;;41991:3;41971:24;41967:37;41963:42;41948:58;41933:74;;41820:201;-1:-1:-1;;;;;42067:1:821;42051:14;;;42047:22;42034:36;;-1:-1:-1;40992:1345:821:o;42342:383::-;42539:2;42528:9;42521:21;42502:4;42565:45;42606:2;42595:9;42591:18;42583:6;42565:45;:::i;:::-;42658:9;42650:6;42646:22;42641:2;42630:9;42626:18;42619:50;42686:33;42712:6;42704;42686:33;:::i;:::-;42678:41;42342:383;-1:-1:-1;;;;;42342:383:821:o;42730:489::-;-1:-1:-1;;;;;42999:15:821;;;42981:34;;43051:15;;43046:2;43031:18;;43024:43;43098:2;43083:18;;43076:34;;;43146:3;43141:2;43126:18;;43119:31;;;42924:4;;43167:46;;43193:19;;43185:6;43167:46;:::i;43224:249::-;43293:6;43346:2;43334:9;43325:7;43321:23;43317:32;43314:52;;;43362:1;43359;43352:12;43314:52;43394:9;43388:16;43413:30;43437:5;43413:30;:::i;45503:506::-;45746:6;45735:9;45728:25;45789:2;45784;45773:9;45769:18;45762:30;45709:4;45815:62;45873:2;45862:9;45858:18;45850:6;45842;45815:62;:::i;:::-;45925:9;45917:6;45913:22;45908:2;45897:9;45893:18;45886:50;45953;45996:6;45988;45980;45953:50;:::i;:::-;45945:58;45503:506;-1:-1:-1;;;;;;;;45503:506:821:o;46014:407::-;46216:2;46198:21;;;46255:2;46235:18;;;46228:30;46294:34;46289:2;46274:18;;46267:62;-1:-1:-1;;;46360:2:821;46345:18;;46338:41;46411:3;46396:19;;46014:407::o;47548:271::-;47731:6;47723;47718:3;47705:33;47687:3;47757:16;;47782:13;;;47757:16;47548:271;-1:-1:-1;47548:271:821:o;48930:136::-;48969:3;48997:5;48987:39;;49006:18;;:::i;:::-;-1:-1:-1;;;49042:18:821;;48930:136::o;49432:287::-;49561:3;49599:6;49593:13;49615:66;49674:6;49669:3;49662:4;49654:6;49650:17;49615:66;:::i;:::-;49697:16;;;;;49432:287;-1:-1:-1;;49432:287:821:o;53042:245::-;53109:6;53162:2;53150:9;53141:7;53137:23;53133:32;53130:52;;;53178:1;53175;53168:12;53130:52;53210:9;53204:16;53229:28;53251:5;53229:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)": "5ab31c1a",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "eip712Domain()": "84b0196e",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimTimestamp(address)": "b67875ce",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "reveal(uint256,bytes)": "ce805642",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": "77312a9e",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8",
    "verifyClaim(address,uint256,address,uint256,bool)": "a72e157d",
    "verifyClaimMerkleProof(address,uint256,(bytes32[],uint256))": "ffbb7a13"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase_V1.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getClaimTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastClaimedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextValidClaimTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"_condition\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verifyMaxQuantityPerTransaction\",\"type\":\"bool\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase_V1.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaimMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"validMerkleProof\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"merkleProofIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ClaimConditionUpdated((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"details\":\"Emitted when the contract's claim conditions are updated.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"FlatPlatformFeeUpdated(address,uint256)\":{\"details\":\"Emitted when the flat platform fee is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PlatformFeeInfoUpdated(address,uint256)\":{\"details\":\"Emitted when fee on primary sales is updated.\"},\"PlatformFeeTypeUpdated(uint8)\":{\"details\":\"Emitted when the platform fee type is updated.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokenURIRevealed(uint256,string)\":{\"details\":\"Emitted when tokens are revealed.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed via `claim`.\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"},\"TokensMintedWithSignature(address,address,uint256,(address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32))\":{\"details\":\"Emitted when tokens are minted.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getClaimTimestamp(address)\":{\"details\":\"Returns the timestamp for when a claimer is eligible for claiming NFTs again.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee type.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Claim lazy minted tokens via signature.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"},\"verifyClaim(address,uint256,address,uint256,bool)\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"},\"verifyClaimMerkleProof(address,uint256,(bytes32[],uint256))\":{\"details\":\"Checks whether a claimer meets the claim condition's allowlist criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol\":\"SignatureDrop_V4\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3\",\"dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e\",\"dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/SignatureMintERC721Upgradeable.sol\":{\"keccak256\":\"0x1fce882d68e862f9201c970effdfeb42e045a4cd3222f72c97eea4d449a632a2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90a453d4408dfe8e76e4a0b379bed0ec79db3e3490fb2fa399af54b52490d3ff\",\"dweb:/ipfs/QmUjPU1e8iTZ9vBeP1e8y772pp12XysG78frdEztbAqdN7\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xd11d6dc01294bbcfae4e79a98dd71ca524c898c7e8639ca607c0a3b55ccc0543\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c86bacbd6fc4eb6e1e8345de3c6edbb2be08502afc746984e7a303f0363a68b4\",\"dweb:/ipfs/QmRPZfT4jybAgnpyJbJziCJ3SEpzbTPAXwrDs1KJ7XNpXV\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/legacy-contracts/extension/BatchMintMetadata_V1.sol\":{\"keccak256\":\"0xa97c714c00db94510c3064171653c21469e0a6555be6d234b71c330f77801892\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91009a3ccb9d841ca68f304d2a0a5e8cef61bc0484ff051f8c3f8893f6243fc2\",\"dweb:/ipfs/QmY76M6gS1SsjHgGiX2UsPVibssxEbheV21AnNshJmrq4q\"]},\"contracts/legacy-contracts/extension/DropSinglePhase_V1.sol\":{\"keccak256\":\"0xf4de9773174e20c7e946c5cdf37bbbe0c2e850b197d44c5ebd9fa1af19782e48\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a10d12bbf5beeb2ebefc456ffd9bd31ed3ab6872e4b986f98894b5cf8e5c6473\",\"dweb:/ipfs/QmRAmthTC4P8KVr4Kc94YVCDvaTsN5kerp6R29FvtXsdNn\"]},\"contracts/legacy-contracts/extension/LazyMint_V1.sol\":{\"keccak256\":\"0x844d07f689a630f5d070d2b5eda7e5109c4ae3d41ff61a1c83b6062102897847\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91701ef20ab07c008a0366a9b45a0f05f142fb75f112add639100bcac4d2765f\",\"dweb:/ipfs/QmVZNe3d8rL5VWweQkBnne8QQgd3ez25dgRt9m4BzLVpZB\"]},\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":{\"keccak256\":\"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6\",\"dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX\"]},\"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol\":{\"keccak256\":\"0x1952ba0cb02f12130a85c2781116c48bafc8fac1195689298e94f838e2456bf7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab95b5826cb7d7ea84d6dbde83b14e83e18ee305730d01be99bdcf36f919e717\",\"dweb:/ipfs/QmYjcAvQJbJrP5TxuWZyVB1wdSgau37Qm4z5tNTDyiZhhn\"]},\"contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol\":{\"keccak256\":\"0x7052d2799107e3f2516f69480bcbf8a18961b82895faf631cfd793794f8007c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d6a5c4ef8e62a728ffc26b71ed3c1f0ee0b79e95f63b6e70976ea01e25e6d2e\",\"dweb:/ipfs/QmYfToFmCdgptjjxss4yNQd9raJTMT8NnDh9rBJVp9TSfJ\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/BitMaps.sol\":{\"keccak256\":\"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d\",\"dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732\",\"dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4\",\"dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b\",\"dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0x31a2e227f5653e4b31e0f680857b8842073d083b33df11b3f3b3bb5ddc10526e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://051dd3770ecfea8fd28342b4e48c34d0cba9fbc2dbb1286d710d3d547d707018\",\"dweb:/ipfs/QmQp89U3xBRY7Xjw2HfozkMD3Yh64WvzJKQ1SHGRiEdm2J\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition_V1.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "maxQuantityInAllowlist",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastClaimedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextValidClaimTimestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition_V1.ClaimCondition",
              "name": "_condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verifyMaxQuantityPerTransaction",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase_V1.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "maxQuantityInAllowlist",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaimMerkleProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "validMerkleProof",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "merkleProofIndex",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getClaimTimestamp(address)": {
            "details": "Returns the timestamp for when a claimer is eligible for claiming NFTs again."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee type."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Claim lazy minted tokens via signature."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          },
          "verifyClaim(address,uint256,address,uint256,bool)": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          },
          "verifyClaimMerkleProof(address,uint256,(bytes32[],uint256))": {
            "details": "Checks whether a claimer meets the claim condition's allowlist criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol": "SignatureDrop_V4"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242",
        "urls": [
          "bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3",
          "dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1c9ba3e965533f3edbbebfc9e791a5dc8fc7c1ef9a301e99c5f6cc92f34cb9eb",
        "urls": [
          "bzz-raw://9f1bf3572d06d88be1adb215e6dde42575a709e0e92bf00afc8123c341565b2e",
          "dweb:/ipfs/QmZ4xLhRgPjC9YyWXGrZ6ZXW8FWo5ypLxQiwhNSqi2eMs7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721Upgradeable.sol": {
        "keccak256": "0x1fce882d68e862f9201c970effdfeb42e045a4cd3222f72c97eea4d449a632a2",
        "urls": [
          "bzz-raw://90a453d4408dfe8e76e4a0b379bed0ec79db3e3490fb2fa399af54b52490d3ff",
          "dweb:/ipfs/QmUjPU1e8iTZ9vBeP1e8y772pp12XysG78frdEztbAqdN7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xd11d6dc01294bbcfae4e79a98dd71ca524c898c7e8639ca607c0a3b55ccc0543",
        "urls": [
          "bzz-raw://c86bacbd6fc4eb6e1e8345de3c6edbb2be08502afc746984e7a303f0363a68b4",
          "dweb:/ipfs/QmRPZfT4jybAgnpyJbJziCJ3SEpzbTPAXwrDs1KJ7XNpXV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/BatchMintMetadata_V1.sol": {
        "keccak256": "0xa97c714c00db94510c3064171653c21469e0a6555be6d234b71c330f77801892",
        "urls": [
          "bzz-raw://91009a3ccb9d841ca68f304d2a0a5e8cef61bc0484ff051f8c3f8893f6243fc2",
          "dweb:/ipfs/QmY76M6gS1SsjHgGiX2UsPVibssxEbheV21AnNshJmrq4q"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/DropSinglePhase_V1.sol": {
        "keccak256": "0xf4de9773174e20c7e946c5cdf37bbbe0c2e850b197d44c5ebd9fa1af19782e48",
        "urls": [
          "bzz-raw://a10d12bbf5beeb2ebefc456ffd9bd31ed3ab6872e4b986f98894b5cf8e5c6473",
          "dweb:/ipfs/QmRAmthTC4P8KVr4Kc94YVCDvaTsN5kerp6R29FvtXsdNn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/LazyMint_V1.sol": {
        "keccak256": "0x844d07f689a630f5d070d2b5eda7e5109c4ae3d41ff61a1c83b6062102897847",
        "urls": [
          "bzz-raw://91701ef20ab07c008a0366a9b45a0f05f142fb75f112add639100bcac4d2765f",
          "dweb:/ipfs/QmVZNe3d8rL5VWweQkBnne8QQgd3ez25dgRt9m4BzLVpZB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol": {
        "keccak256": "0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452",
        "urls": [
          "bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6",
          "dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol": {
        "keccak256": "0x1952ba0cb02f12130a85c2781116c48bafc8fac1195689298e94f838e2456bf7",
        "urls": [
          "bzz-raw://ab95b5826cb7d7ea84d6dbde83b14e83e18ee305730d01be99bdcf36f919e717",
          "dweb:/ipfs/QmYjcAvQJbJrP5TxuWZyVB1wdSgau37Qm4z5tNTDyiZhhn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol": {
        "keccak256": "0x7052d2799107e3f2516f69480bcbf8a18961b82895faf631cfd793794f8007c5",
        "urls": [
          "bzz-raw://5d6a5c4ef8e62a728ffc26b71ed3c1f0ee0b79e95f63b6e70976ea01e25e6d2e",
          "dweb:/ipfs/QmYfToFmCdgptjjxss4yNQd9raJTMT8NnDh9rBJVp9TSfJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/BitMaps.sol": {
        "keccak256": "0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17",
        "urls": [
          "bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d",
          "dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0x00d989813c0653bd2f45623a73d805512c9070c7f0e8ad30838954dcf6a5acad",
        "urls": [
          "bzz-raw://31de8046c697ed04df40a33a6b6087dedd41a85ef8c79bf7712507d5b9839732",
          "dweb:/ipfs/QmSXSeDCbLt1hwEcZyutFrNLPBbBQm1PKiE89hp5xLQ2wU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol": {
        "keccak256": "0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2",
        "urls": [
          "bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4",
          "dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0x1a94069aa241fa1ebb4409d02a405c932d3ad7e875bdd5587c88244da210ccdf",
        "urls": [
          "bzz-raw://35bc03e7b41fc0141b0b77a9b440d425ff34fe6417b986a605d0b65128cc190b",
          "dweb:/ipfs/Qma3YG36dbRQ5k9emJqqYtr5DKnZvXEQRawsbThyB3NKrX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol": {
        "keccak256": "0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db",
        "urls": [
          "bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9",
          "dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0",
        "urls": [
          "bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66",
          "dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0x31a2e227f5653e4b31e0f680857b8842073d083b33df11b3f3b3bb5ddc10526e",
        "urls": [
          "bzz-raw://051dd3770ecfea8fd28342b4e48c34d0cba9fbc2dbb1286d710d3d547d707018",
          "dweb:/ipfs/QmQp89U3xBRY7Xjw2HfozkMD3Yh64WvzJKQ1SHGRiEdm2J"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/legacy-contracts/pre-builts/SignatureDrop_V4.sol",
    "id": 64292,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "BatchMintMetadata_V1": [
        56126
      ],
      "BitMaps": [
        64898
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "DelayedReveal": [
        18252
      ],
      "DropSinglePhase_V1": [
        57308
      ],
      "ECDSAUpgradeable": [
        162361
      ],
      "EIP712Upgradeable": [
        162645
      ],
      "ERC165Upgradeable": [
        162692
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "ERC721AUpgradeable": [
        103476
      ],
      "IClaimCondition_V1": [
        57952
      ],
      "IContractMetadata": [
        33084
      ],
      "IDelayedReveal": [
        33115
      ],
      "IDropSinglePhase_V1": [
        58072
      ],
      "IERC165": [
        13945
      ],
      "IERC165Upgradeable": [
        162704
      ],
      "IERC20": [
        14015
      ],
      "IERC2981": [
        14089
      ],
      "IERC2981Upgradeable": [
        153941
      ],
      "IERC5267Upgradeable": [
        153966
      ],
      "IERC721AUpgradeable": [
        103547
      ],
      "IERC721MetadataUpgradeable": [
        159732
      ],
      "IERC721ReceiverUpgradeable": [
        159184
      ],
      "IERC721Upgradeable": [
        159300
      ],
      "ILazyMint": [
        33463
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IPlatformFee": [
        33976
      ],
      "IPrimarySale": [
        33997
      ],
      "IRoyalty": [
        34061
      ],
      "ISignatureMintERC721": [
        34561
      ],
      "IWETH": [
        55358
      ],
      "Initializable": [
        154159
      ],
      "LazyMint_V1": [
        57661
      ],
      "MathUpgradeable": [
        163570
      ],
      "MerkleProof": [
        65274
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "PlatformFee": [
        22629
      ],
      "PrimarySale": [
        22703
      ],
      "Royalty": [
        23031
      ],
      "SafeERC20": [
        49165
      ],
      "SignatureDrop_V4": [
        64291
      ],
      "SignatureMintERC721Upgradeable": [
        24793
      ],
      "SignedMathUpgradeable": [
        165216
      ],
      "Strings": [
        66084
      ],
      "StringsUpgradeable": [
        161995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:12983:287",
    "nodes": [
      {
        "id": 63448,
        "nodeType": "PragmaDirective",
        "src": "39:24:287",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 63449,
        "nodeType": "ImportDirective",
        "src": "135:39:287",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63450,
        "nodeType": "ImportDirective",
        "src": "175:74:287",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 161996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63451,
        "nodeType": "ImportDirective",
        "src": "250:80:287",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 153942,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63452,
        "nodeType": "ImportDirective",
        "src": "332:62:287",
        "nodes": [],
        "absolutePath": "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol",
        "file": "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 103477,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63453,
        "nodeType": "ImportDirective",
        "src": "444:79:287",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63454,
        "nodeType": "ImportDirective",
        "src": "524:43:287",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 65176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63455,
        "nodeType": "ImportDirective",
        "src": "609:46:287",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63456,
        "nodeType": "ImportDirective",
        "src": "656:41:287",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 22630,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63457,
        "nodeType": "ImportDirective",
        "src": "698:37:287",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 23032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63458,
        "nodeType": "ImportDirective",
        "src": "736:41:287",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63459,
        "nodeType": "ImportDirective",
        "src": "778:37:287",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 21765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63460,
        "nodeType": "ImportDirective",
        "src": "816:43:287",
        "nodes": [],
        "absolutePath": "contracts/extension/DelayedReveal.sol",
        "file": "../../extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 18253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63461,
        "nodeType": "ImportDirective",
        "src": "860:38:287",
        "nodes": [],
        "absolutePath": "contracts/legacy-contracts/extension/LazyMint_V1.sol",
        "file": "../extension/LazyMint_V1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 57662,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63462,
        "nodeType": "ImportDirective",
        "src": "899:51:287",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63463,
        "nodeType": "ImportDirective",
        "src": "951:45:287",
        "nodes": [],
        "absolutePath": "contracts/legacy-contracts/extension/DropSinglePhase_V1.sol",
        "file": "../extension/DropSinglePhase_V1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 57309,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63464,
        "nodeType": "ImportDirective",
        "src": "997:60:287",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721Upgradeable.sol",
        "file": "../../extension/SignatureMintERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64292,
        "sourceUnit": 24794,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 64291,
        "nodeType": "ContractDefinition",
        "src": "1059:11962:287",
        "nodes": [
          {
            "id": 63495,
            "nodeType": "UsingForDirective",
            "src": "1387:37:287",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63493,
              "name": "StringsUpgradeable",
              "nameLocations": [
                "1393:18:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161995,
              "src": "1393:18:287"
            },
            "typeName": {
              "id": 63494,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1416:7:287",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 63498,
            "nodeType": "VariableDeclaration",
            "src": "1717:28:287",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63496,
              "nodeType": "StructuredDocumentation",
              "src": "1614:98:287",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "1733:12:287",
            "scope": 64291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 63497,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1717:7:287",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 63501,
            "nodeType": "VariableDeclaration",
            "src": "1842:26:287",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63499,
              "nodeType": "StructuredDocumentation",
              "src": "1751:86:287",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "1858:10:287",
            "scope": 64291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 63500,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1842:7:287",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 63505,
            "nodeType": "VariableDeclaration",
            "src": "1920:41:287",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 63502,
              "nodeType": "StructuredDocumentation",
              "src": "1875:40:287",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "1945:7:287",
            "scope": 64291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63503,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1920:7:287",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 63504,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1955:6:287",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 63602,
            "nodeType": "FunctionDefinition",
            "src": "2219:1163:287",
            "nodes": [],
            "body": {
              "id": 63601,
              "nodeType": "Block",
              "src": "2606:776:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63532,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63498,
                      "src": "2616:12:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5452414e534645525f524f4c45",
                          "id": 63534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2641:15:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                            "typeString": "literal_string \"TRANSFER_ROLE\""
                          },
                          "value": "TRANSFER_ROLE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                            "typeString": "literal_string \"TRANSFER_ROLE\""
                          }
                        ],
                        "id": 63533,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2631:9:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 63535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2631:26:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2616:41:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 63537,
                  "nodeType": "ExpressionStatement",
                  "src": "2616:41:287"
                },
                {
                  "expression": {
                    "id": 63542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63538,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63501,
                      "src": "2667:10:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d494e5445525f524f4c45",
                          "id": 63540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2690:13:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                            "typeString": "literal_string \"MINTER_ROLE\""
                          },
                          "value": "MINTER_ROLE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                            "typeString": "literal_string \"MINTER_ROLE\""
                          }
                        ],
                        "id": 63539,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2680:9:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 63541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2680:24:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2667:37:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 63543,
                  "nodeType": "ExpressionStatement",
                  "src": "2667:37:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63545,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63517,
                        "src": "2812:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 63544,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46309,
                      "src": "2790:21:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 63546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2790:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63547,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:41:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63549,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63510,
                        "src": "2856:5:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 63550,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63512,
                        "src": "2863:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 63548,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102144,
                      "src": "2841:14:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 63551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:30:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63552,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:30:287"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63553,
                      "name": "__SignatureMintERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24604,
                      "src": "2881:26:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:28:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63555,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:28:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63557,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63514,
                        "src": "2938:12:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 63556,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "2920:17:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 63558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2920:31:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63559,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:31:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63561,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63508,
                        "src": "2973:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63560,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21757,
                      "src": "2961:11:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:26:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63563,
                  "nodeType": "ExpressionStatement",
                  "src": "2961:26:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63565,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "3009:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 63566,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63508,
                        "src": "3029:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63564,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "2998:10:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 63567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:45:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63568,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:45:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63570,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63501,
                        "src": "3064:10:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 63571,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63508,
                        "src": "3076:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63569,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3053:10:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 63572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:37:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63573,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:37:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63575,
                        "name": "transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63498,
                        "src": "3111:12:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 63576,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63508,
                        "src": "3125:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63574,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3100:10:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 63577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3100:39:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63578,
                  "nodeType": "ExpressionStatement",
                  "src": "3100:39:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63580,
                        "name": "transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63498,
                        "src": "3160:12:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 63583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3182:1:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 63582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3174:7:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3174:7:287",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3174:10:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63579,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "3149:10:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 63585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3149:36:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63586,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:36:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63588,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63527,
                        "src": "3218:21:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63589,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63525,
                        "src": "3241:15:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 63587,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22540,
                      "src": "3196:21:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:61:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63591,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:61:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63593,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63521,
                        "src": "3292:17:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63594,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63523,
                        "src": "3311:11:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 63592,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "3267:24:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:56:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63596,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:56:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63598,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63519,
                        "src": "3360:14:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63597,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "3333:26:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3333:42:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63600,
                  "nodeType": "ExpressionStatement",
                  "src": "3333:42:287"
                }
              ]
            },
            "documentation": {
              "id": 63506,
              "nodeType": "StructuredDocumentation",
              "src": "2160:54:287",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63529,
                  "name": "initializer",
                  "nameLocations": [
                    "2594:11:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2594:11:287"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:11:287"
              }
            ],
            "name": "initialize",
            "nameLocation": "2228:10:287",
            "parameters": {
              "id": 63528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63508,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2256:13:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2248:21:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63510,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2293:5:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2279:19:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63509,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63512,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2322:7:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2308:21:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63514,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2353:12:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2339:26:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63517,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2392:18:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2375:35:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63515,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2375:7:287",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 63516,
                    "nodeType": "ArrayTypeName",
                    "src": "2375:9:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63519,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2428:14:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2420:22:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63521,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2460:17:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2452:25:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63523,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "2495:11:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2487:19:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 63522,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63525,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "2524:15:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2516:23:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 63524,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63527,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "2557:21:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63602,
                  "src": "2549:29:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:346:287"
            },
            "returnParameters": {
              "id": 63531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2606:0:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63650,
            "nodeType": "FunctionDefinition",
            "src": "3629:402:287",
            "nodes": [],
            "body": {
              "id": 63649,
              "nodeType": "Block",
              "src": "3710:321:287",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63612,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63612,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "3729:7:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 63649,
                      "src": "3721:15:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63611,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3721:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 63616,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63614,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63605,
                        "src": "3754:8:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63613,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56022,
                      "src": "3742:11:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 63615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:21:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3720:43:287"
                },
                {
                  "assignments": [
                    63618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63618,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3787:8:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 63649,
                      "src": "3773:22:287",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 63617,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3773:6:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63620,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63605,
                        "src": "3810:8:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63619,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56073,
                      "src": "3798:11:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 63621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:21:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3773:46:287"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 63624,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63612,
                        "src": "3851:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63623,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18251,
                      "src": "3834:16:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 63625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3834:25:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 63647,
                    "nodeType": "Block",
                    "src": "3938:87:287",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63640,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63618,
                                  "src": "3983:8:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 63641,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63605,
                                      "src": "3993:8:287",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 63642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4002:8:287",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 161825,
                                    "src": "3993:17:287",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 63643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3993:19:287",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63638,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3966:3:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 63639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3970:12:287",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3966:16:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 63644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3966:47:287",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 63637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3959:6:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 63636,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3959:6:287",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3959:55:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 63610,
                        "id": 63646,
                        "nodeType": "Return",
                        "src": "3952:62:287"
                      }
                    ]
                  },
                  "id": 63648,
                  "nodeType": "IfStatement",
                  "src": "3830:195:287",
                  "trueBody": {
                    "id": 63635,
                    "nodeType": "Block",
                    "src": "3861:71:287",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 63630,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63618,
                                  "src": "3906:8:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 63631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3916:3:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 63628,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3889:3:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 63629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3893:12:287",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3889:16:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 63632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3889:31:287",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 63627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3882:6:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 63626,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3882:6:287",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3882:39:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 63610,
                        "id": 63634,
                        "nodeType": "Return",
                        "src": "3875:46:287"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              102480
            ],
            "documentation": {
              "id": 63603,
              "nodeType": "StructuredDocumentation",
              "src": "3579:45:287",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3638:8:287",
            "overrides": {
              "id": 63607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3677:8:287"
            },
            "parameters": {
              "id": 63606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63605,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3655:8:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63650,
                  "src": "3647:16:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3647:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3646:18:287"
            },
            "returnParameters": {
              "id": 63610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63650,
                  "src": "3695:13:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63608,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3694:15:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63674,
            "nodeType": "FunctionDefinition",
            "src": "4062:250:287",
            "nodes": [],
            "body": {
              "id": 63673,
              "nodeType": "Block",
              "src": "4196:116:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 63663,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63653,
                          "src": "4237:11:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 63661,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4213:5:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_SignatureDrop_V4_$64291_$",
                            "typeString": "type(contract super SignatureDrop_V4)"
                          }
                        },
                        "id": 63662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4219:17:287",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 102236,
                        "src": "4213:23:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 63664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4213:36:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 63670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 63666,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153941,
                              "src": "4258:19:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$153941_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 63665,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4253:4:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 63667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4253:25:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$153941",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 63668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4279:11:287",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4253:37:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 63669,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63653,
                        "src": "4294:11:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4253:52:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4213:92:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63660,
                  "id": 63672,
                  "nodeType": "Return",
                  "src": "4206:99:287"
                }
              ]
            },
            "baseFunctions": [
              13944,
              102236
            ],
            "documentation": {
              "id": 63651,
              "nodeType": "StructuredDocumentation",
              "src": "4037:20:287",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4071:17:287",
            "overrides": {
              "id": 63657,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 63655,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": [
                    "4152:18:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 103476,
                  "src": "4152:18:287"
                },
                {
                  "id": 63656,
                  "name": "IERC165",
                  "nameLocations": [
                    "4172:7:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13945,
                  "src": "4172:7:287"
                }
              ],
              "src": "4143:37:287"
            },
            "parameters": {
              "id": 63654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63653,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4105:11:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63674,
                  "src": "4098:18:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 63652,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4088:34:287"
            },
            "returnParameters": {
              "id": 63660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63674,
                  "src": "4190:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4189:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 63685,
            "nodeType": "FunctionDefinition",
            "src": "4318:104:287",
            "nodes": [],
            "body": {
              "id": 63684,
              "nodeType": "Block",
              "src": "4374:48:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5369676e617475726544726f70",
                        "id": 63681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4399:15:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        },
                        "value": "SignatureDrop"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        }
                      ],
                      "id": 63680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4391:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 63679,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4391:7:287",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 63682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4391:24:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 63678,
                  "id": 63683,
                  "nodeType": "Return",
                  "src": "4384:31:287"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "4327:12:287",
            "parameters": {
              "id": 63675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4339:2:287"
            },
            "returnParameters": {
              "id": 63678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63685,
                  "src": "4365:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 63676,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4364:9:287"
            },
            "scope": 64291,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63696,
            "nodeType": "FunctionDefinition",
            "src": "4428:89:287",
            "nodes": [],
            "body": {
              "id": 63695,
              "nodeType": "Block",
              "src": "4485:32:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 63692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4508:1:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 63691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4502:5:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 63690,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4502:5:287",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 63693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4502:8:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 63689,
                  "id": 63694,
                  "nodeType": "Return",
                  "src": "4495:15:287"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "4437:15:287",
            "parameters": {
              "id": 63686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4452:2:287"
            },
            "returnParameters": {
              "id": 63689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63696,
                  "src": "4478:5:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 63687,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4478:5:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4477:7:287"
            },
            "scope": 64291,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63754,
            "nodeType": "FunctionDefinition",
            "src": "4891:540:287",
            "nodes": [],
            "body": {
              "id": 63753,
              "nodeType": "Block",
              "src": "5055:376:287",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 63709,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63703,
                        "src": "5069:5:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 63710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5075:6:287",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5069:12:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5084:1:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5069:16:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63745,
                  "nodeType": "IfStatement",
                  "src": "5065:293:287",
                  "trueBody": {
                    "id": 63744,
                    "nodeType": "Block",
                    "src": "5087:271:287",
                    "statements": [
                      {
                        "assignments": [
                          63714,
                          63716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63714,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5115:12:287",
                            "nodeType": "VariableDeclaration",
                            "scope": 63744,
                            "src": "5102:25:287",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 63713,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5102:5:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 63716,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5137:14:287",
                            "nodeType": "VariableDeclaration",
                            "scope": 63744,
                            "src": "5129:22:287",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 63715,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5129:7:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63726,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 63719,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63703,
                              "src": "5166:5:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 63721,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5174:5:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 63720,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5174:5:287",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 63723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5181:7:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 63722,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5181:7:287",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 63724,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5173:16:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 63717,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5155:3:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 63718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5159:6:287",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5155:10:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 63725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5155:35:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5101:89:287"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 63734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 63730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 63727,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63714,
                                "src": "5208:12:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 63728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5221:6:287",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5208:19:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 63729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5231:1:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5208:24:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 63733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 63731,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63716,
                              "src": "5236:14:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 63732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5254:2:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5236:20:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5208:48:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 63743,
                        "nodeType": "IfStatement",
                        "src": "5204:144:287",
                        "trueBody": {
                          "id": 63742,
                          "nodeType": "Block",
                          "src": "5258:90:287",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 63738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 63736,
                                      "name": "nextTokenIdToLazyMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57595,
                                      "src": "5294:21:287",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 63737,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63699,
                                      "src": "5318:7:287",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5294:31:287",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 63739,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63703,
                                    "src": "5327:5:287",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 63735,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18119,
                                  "src": "5276:17:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 63740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5276:57:287",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 63741,
                              "nodeType": "ExpressionStatement",
                              "src": "5276:57:287"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63748,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63699,
                        "src": "5390:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63749,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63701,
                        "src": "5399:17:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 63750,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63703,
                        "src": "5418:5:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 63746,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5375:5:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_V4_$64291_$",
                          "typeString": "type(contract super SignatureDrop_V4)"
                        }
                      },
                      "id": 63747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5381:8:287",
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57654,
                      "src": "5375:14:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 63751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:49:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 63708,
                  "id": 63752,
                  "nodeType": "Return",
                  "src": "5368:56:287"
                }
              ]
            },
            "baseFunctions": [
              57654
            ],
            "documentation": {
              "id": 63697,
              "nodeType": "StructuredDocumentation",
              "src": "4719:167:287",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "4900:8:287",
            "overrides": {
              "id": 63705,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5020:8:287"
            },
            "parameters": {
              "id": 63704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63699,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4926:7:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63754,
                  "src": "4918:15:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4918:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63701,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "4959:17:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63754,
                  "src": "4943:33:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63700,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4943:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63703,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5001:5:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63754,
                  "src": "4986:20:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63702,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4986:5:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4908:104:287"
            },
            "returnParameters": {
              "id": 63708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63707,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5046:7:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63754,
                  "src": "5038:15:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:17:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63796,
            "nodeType": "FunctionDefinition",
            "src": "5538:389:287",
            "nodes": [],
            "body": {
              "id": 63795,
              "nodeType": "Block",
              "src": "5679:248:287",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63768,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "5697:7:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 63795,
                      "src": "5689:15:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5689:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63770,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63757,
                        "src": "5725:6:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63769,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55961,
                      "src": "5707:17:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 63771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5707:25:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5689:43:287"
                },
                {
                  "expression": {
                    "id": 63778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63773,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63765,
                      "src": "5742:11:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63775,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63768,
                          "src": "5769:7:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 63776,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63759,
                          "src": "5778:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 63774,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18185,
                        "src": "5756:12:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 63777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5756:27:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5742:41:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 63779,
                  "nodeType": "ExpressionStatement",
                  "src": "5742:41:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63781,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63768,
                        "src": "5812:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 63782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5821:2:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 63780,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18119,
                      "src": "5794:17:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 63783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5794:30:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63784,
                  "nodeType": "ExpressionStatement",
                  "src": "5794:30:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63786,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63768,
                        "src": "5846:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63787,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63765,
                        "src": "5855:11:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 63785,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56088,
                      "src": "5834:11:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 63788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5834:33:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63789,
                  "nodeType": "ExpressionStatement",
                  "src": "5834:33:287"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63791,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63757,
                        "src": "5900:6:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63792,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63765,
                        "src": "5908:11:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 63790,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33094,
                      "src": "5883:16:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 63793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5883:37:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63794,
                  "nodeType": "EmitStatement",
                  "src": "5878:42:287"
                }
              ]
            },
            "baseFunctions": [
              33104
            ],
            "documentation": {
              "id": 63755,
              "nodeType": "StructuredDocumentation",
              "src": "5437:96:287",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 63762,
                    "name": "minterRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63501,
                    "src": "5631:10:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 63763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63761,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5622:8:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21800,
                  "src": "5622:8:287"
                },
                "nodeType": "ModifierInvocation",
                "src": "5622:20:287"
              }
            ],
            "name": "reveal",
            "nameLocation": "5547:6:287",
            "parameters": {
              "id": 63760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63757,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5571:6:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63796,
                  "src": "5563:14:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5563:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63759,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "5602:4:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63796,
                  "src": "5587:19:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63758,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5587:5:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5553:59:287"
            },
            "returnParameters": {
              "id": 63766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63765,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "5666:11:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63796,
                  "src": "5652:25:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5652:6:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5651:27:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63882,
            "nodeType": "FunctionDefinition",
            "src": "6180:951:287",
            "nodes": [],
            "body": {
              "id": 63881,
              "nodeType": "Block",
              "src": "6325:806:287",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63808,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "6343:13:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 63881,
                      "src": "6335:21:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6335:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63810,
                  "initialValue": {
                    "id": 63809,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102103,
                    "src": "6359:13:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6335:37:287"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 63811,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63808,
                        "src": "6386:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 63812,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6402:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6407:8:287",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34513,
                        "src": "6402:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6386:29:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 63815,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57595,
                      "src": "6418:21:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6386:53:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63822,
                  "nodeType": "IfStatement",
                  "src": "6382:111:287",
                  "trueBody": {
                    "id": 63821,
                    "nodeType": "Block",
                    "src": "6441:52:287",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                              "id": 63818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6462:19:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              },
                              "value": "Not enough tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              }
                            ],
                            "id": 63817,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6455:6:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 63819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6455:27:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63820,
                        "nodeType": "ExpressionStatement",
                        "src": "6455:27:287"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 63828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63823,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63805,
                      "src": "6542:6:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63825,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6567:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 63826,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63802,
                          "src": "6573:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 63824,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24727,
                        "src": "6551:15:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34524_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 63827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6551:33:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6542:42:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63829,
                  "nodeType": "ExpressionStatement",
                  "src": "6542:42:287"
                },
                {
                  "assignments": [
                    63831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63831,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "6603:8:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 63881,
                      "src": "6595:16:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63830,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6595:7:287",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63834,
                  "initialValue": {
                    "expression": {
                      "id": 63832,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63800,
                      "src": "6614:4:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 63833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6619:2:287",
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34503,
                    "src": "6614:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6595:26:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63836,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6678:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6683:20:287",
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34509,
                        "src": "6678:25:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 63838,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6705:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6710:8:287",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34513,
                        "src": "6705:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 63840,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6720:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6725:8:287",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34517,
                        "src": "6720:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 63842,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6735:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6740:13:287",
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34515,
                        "src": "6735:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63835,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64021
                      ],
                      "referencedDeclaration": 64021,
                      "src": "6657:20:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 63844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6657:97:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63845,
                  "nodeType": "ExpressionStatement",
                  "src": "6657:97:287"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 63852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 63846,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6810:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6815:16:287",
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34505,
                        "src": "6810:21:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 63850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6843:1:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 63849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6835:7:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63848,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6835:7:287",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6835:10:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6810:35:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 63853,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "6849:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6854:10:287",
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34507,
                        "src": "6849:15:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 63855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6868:1:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6849:20:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6810:59:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63867,
                  "nodeType": "IfStatement",
                  "src": "6806:170:287",
                  "trueBody": {
                    "id": 63866,
                    "nodeType": "Block",
                    "src": "6871:105:287",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 63859,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63808,
                              "src": "6911:13:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 63860,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63800,
                                "src": "6926:4:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 63861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6931:16:287",
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34505,
                              "src": "6926:21:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 63862,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63800,
                                "src": "6949:4:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 63863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6954:10:287",
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34507,
                              "src": "6949:15:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 63858,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23024,
                            "src": "6885:25:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 63864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6885:80:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63865,
                        "nodeType": "ExpressionStatement",
                        "src": "6885:80:287"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63869,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63831,
                        "src": "7020:8:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 63870,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63800,
                          "src": "7030:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 63871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7035:8:287",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34513,
                        "src": "7030:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63868,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102721,
                        102884
                      ],
                      "referencedDeclaration": 102721,
                      "src": "7010:9:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7010:34:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63873,
                  "nodeType": "ExpressionStatement",
                  "src": "7010:34:287"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63875,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63805,
                        "src": "7086:6:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63876,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63831,
                        "src": "7094:8:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63877,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63808,
                        "src": "7104:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63878,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63800,
                        "src": "7119:4:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 63874,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34536,
                      "src": "7060:25:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$34524_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 63879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7060:64:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63880,
                  "nodeType": "EmitStatement",
                  "src": "7055:69:287"
                }
              ]
            },
            "baseFunctions": [
              34560
            ],
            "documentation": {
              "id": 63797,
              "nodeType": "StructuredDocumentation",
              "src": "6127:48:287",
              "text": "@dev Claim lazy minted tokens via signature."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "6189:17:287",
            "parameters": {
              "id": 63803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63800,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "6237:4:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63882,
                  "src": "6216:25:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34524_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 63799,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63798,
                      "name": "MintRequest",
                      "nameLocations": [
                        "6216:11:287"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34524,
                      "src": "6216:11:287"
                    },
                    "referencedDeclaration": 34524,
                    "src": "6216:11:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34524_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63802,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6266:10:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63882,
                  "src": "6251:25:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63801,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6251:5:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6206:76:287"
            },
            "returnParameters": {
              "id": 63806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63805,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "6317:6:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63882,
                  "src": "6309:14:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6309:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6308:16:287"
            },
            "scope": 64291,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63928,
            "nodeType": "FunctionDefinition",
            "src": "7374:390:287",
            "nodes": [],
            "body": {
              "id": 63927,
              "nodeType": "Block",
              "src": "7558:206:287",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63901,
                      "mutability": "mutable",
                      "name": "bot",
                      "nameLocation": "7573:3:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 63927,
                      "src": "7568:8:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 63900,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7568:4:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63912,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 63903,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7598:3:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 63904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7602:6:287",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7598:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 63902,
                        "name": "isTrustedForwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46351,
                        "src": "7579:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 63905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7579:30:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 63910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63906,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "7613:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7613:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 63908,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "7629:2:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 63909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7632:6:287",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "7629:9:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7613:25:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7579:59:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7568:70:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63914,
                        "name": "bot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63901,
                        "src": "7656:3:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "424f54",
                        "id": 63915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7661:5:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b",
                          "typeString": "literal_string \"BOT\""
                        },
                        "value": "BOT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b",
                          "typeString": "literal_string \"BOT\""
                        }
                      ],
                      "id": 63913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7648:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7648:19:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63917,
                  "nodeType": "ExpressionStatement",
                  "src": "7648:19:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63919,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102103,
                            "src": "7685:13:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 63920,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63887,
                            "src": "7701:9:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7685:25:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 63922,
                          "name": "nextTokenIdToLazyMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57595,
                          "src": "7714:21:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7685:50:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                        "id": 63924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7737:19:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        },
                        "value": "Not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        }
                      ],
                      "id": 63918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7677:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7677:80:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63926,
                  "nodeType": "ExpressionStatement",
                  "src": "7677:80:287"
                }
              ]
            },
            "baseFunctions": [
              57262
            ],
            "documentation": {
              "id": 63883,
              "nodeType": "StructuredDocumentation",
              "src": "7320:49:287",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "7383:12:287",
            "overrides": {
              "id": 63898,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7549:8:287"
            },
            "parameters": {
              "id": 63897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63885,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63928,
                  "src": "7405:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63887,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "7430:9:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 63928,
                  "src": "7422:17:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7422:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63928,
                  "src": "7449:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7449:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63928,
                  "src": "7466:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63928,
                  "src": "7483:23:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$58026_calldata_ptr",
                    "typeString": "struct IDropSinglePhase_V1.AllowlistProof"
                  },
                  "typeName": {
                    "id": 63893,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63892,
                      "name": "AllowlistProof",
                      "nameLocations": [
                        "7483:14:287"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58026,
                      "src": "7483:14:287"
                    },
                    "referencedDeclaration": 58026,
                    "src": "7483:14:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$58026_storage_ptr",
                      "typeString": "struct IDropSinglePhase_V1.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63928,
                  "src": "7516:12:287",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63895,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7516:5:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7395:139:287"
            },
            "returnParameters": {
              "id": 63899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7558:0:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64021,
            "nodeType": "FunctionDefinition",
            "src": "7854:1000:287",
            "nodes": [],
            "body": {
              "id": 64020,
              "nodeType": "Block",
              "src": "8040:814:287",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63941,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63937,
                      "src": "8054:14:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8072:1:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8054:19:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63946,
                  "nodeType": "IfStatement",
                  "src": "8050:56:287",
                  "trueBody": {
                    "id": 63945,
                    "nodeType": "Block",
                    "src": "8075:31:287",
                    "statements": [
                      {
                        "functionReturnParameters": 63940,
                        "id": 63944,
                        "nodeType": "Return",
                        "src": "8089:7:287"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    63948,
                    63950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63948,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "8125:20:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 64020,
                      "src": "8117:28:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63947,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8117:7:287",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 63950,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "8154:14:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 64020,
                      "src": "8147:21:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 63949,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8147:6:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63953,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63951,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22447,
                      "src": "8172:18:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 63952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8172:20:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8116:76:287"
                },
                {
                  "assignments": [
                    63955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63955,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "8211:13:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 64020,
                      "src": "8203:21:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63954,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8203:7:287",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63966,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 63961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 63956,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63931,
                        "src": "8227:21:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 63959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8260:1:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 63958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8252:7:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63957,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8252:7:287",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8252:10:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8227:35:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 63964,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63931,
                      "src": "8290:21:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 63965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8227:84:287",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63962,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "8265:20:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 63963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8265:22:287",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8203:108:287"
                },
                {
                  "assignments": [
                    63968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63968,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "8330:10:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 64020,
                      "src": "8322:18:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8322:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63972,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63969,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63933,
                      "src": "8343:16:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 63970,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63937,
                      "src": "8362:14:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8343:33:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8322:54:287"
                },
                {
                  "assignments": [
                    63974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63974,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "8394:12:287",
                      "nodeType": "VariableDeclaration",
                      "scope": 64020,
                      "src": "8386:20:287",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63973,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8386:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63981,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63975,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63968,
                            "src": "8410:10:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 63976,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63950,
                            "src": "8423:14:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8410:27:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 63978,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8409:29:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 63979,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63505,
                      "src": "8441:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8409:39:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8386:62:287"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63982,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63935,
                      "src": "8463:9:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 63983,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "8476:19:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 63984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8496:12:287",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "8476:32:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8463:45:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63997,
                  "nodeType": "IfStatement",
                  "src": "8459:168:287",
                  "trueBody": {
                    "id": 63996,
                    "nodeType": "Block",
                    "src": "8510:117:287",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 63986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8528:3:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 63987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8532:5:287",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8528:9:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 63988,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63968,
                            "src": "8541:10:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8528:23:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 63995,
                        "nodeType": "IfStatement",
                        "src": "8524:93:287",
                        "trueBody": {
                          "id": 63994,
                          "nodeType": "Block",
                          "src": "8553:64:287",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4d7573742073656e6420746f74616c207072696365",
                                    "id": 63991,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8578:23:287",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c77e3b5b83fc57e5be027b05f42517ac3be200acc20aeaeec256e29127e2e8f5",
                                      "typeString": "literal_string \"Must send total price\""
                                    },
                                    "value": "Must send total price"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c77e3b5b83fc57e5be027b05f42517ac3be200acc20aeaeec256e29127e2e8f5",
                                      "typeString": "literal_string \"Must send total price\""
                                    }
                                  ],
                                  "id": 63990,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "8571:6:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 63992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8571:31:287",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 63993,
                              "nodeType": "ExpressionStatement",
                              "src": "8571:31:287"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64001,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63935,
                        "src": "8674:9:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64002,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "8685:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8685:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64004,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63948,
                        "src": "8699:20:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64005,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63974,
                        "src": "8721:12:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63998,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "8637:19:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 64000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8657:16:287",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "8637:36:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 64006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:97:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64007,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:97:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64011,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63935,
                        "src": "8781:9:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64012,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "8792:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8792:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64014,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63955,
                        "src": "8806:13:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64015,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63968,
                          "src": "8821:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 64016,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63974,
                          "src": "8834:12:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8821:25:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64008,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "8744:19:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 64010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8764:16:287",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "8744:36:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 64018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8744:103:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64019,
                  "nodeType": "ExpressionStatement",
                  "src": "8744:103:287"
                }
              ]
            },
            "baseFunctions": [
              57292
            ],
            "documentation": {
              "id": 63929,
              "nodeType": "StructuredDocumentation",
              "src": "7770:79:287",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "7863:20:287",
            "overrides": {
              "id": 63939,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8031:8:287"
            },
            "parameters": {
              "id": 63938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63931,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "7901:21:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64021,
                  "src": "7893:29:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7893:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63933,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "7940:16:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64021,
                  "src": "7932:24:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7932:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63935,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "7974:9:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64021,
                  "src": "7966:17:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7966:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63937,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8001:14:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64021,
                  "src": "7993:22:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7993:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7883:138:287"
            },
            "returnParameters": {
              "id": 63940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8040:0:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64042,
            "nodeType": "FunctionDefinition",
            "src": "8907:239:287",
            "nodes": [],
            "body": {
              "id": 64041,
              "nodeType": "Block",
              "src": "9054:92:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64032,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64030,
                      "src": "9064:12:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64033,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102103,
                      "src": "9079:13:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9064:28:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64035,
                  "nodeType": "ExpressionStatement",
                  "src": "9064:28:287"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64037,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64024,
                        "src": "9112:3:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64038,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64026,
                        "src": "9117:21:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64036,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102721,
                        102884
                      ],
                      "referencedDeclaration": 102721,
                      "src": "9102:9:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 64039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9102:37:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64040,
                  "nodeType": "ExpressionStatement",
                  "src": "9102:37:287"
                }
              ]
            },
            "baseFunctions": [
              57302
            ],
            "documentation": {
              "id": 64022,
              "nodeType": "StructuredDocumentation",
              "src": "8860:42:287",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "8916:22:287",
            "overrides": {
              "id": 64028,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9014:8:287"
            },
            "parameters": {
              "id": 64027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64024,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8956:3:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64042,
                  "src": "8948:11:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8948:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64026,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "8977:21:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64042,
                  "src": "8969:29:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8969:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8938:66:287"
            },
            "returnParameters": {
              "id": 64031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64030,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9040:12:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64042,
                  "src": "9032:20:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9032:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9031:22:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64057,
            "nodeType": "FunctionDefinition",
            "src": "9234:136:287",
            "nodes": [],
            "body": {
              "id": 64056,
              "nodeType": "Block",
              "src": "9318:52:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64052,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63501,
                        "src": "9343:10:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64053,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64045,
                        "src": "9355:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64051,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "9335:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9335:28:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64050,
                  "id": 64055,
                  "nodeType": "Return",
                  "src": "9328:35:287"
                }
              ]
            },
            "baseFunctions": [
              24652
            ],
            "documentation": {
              "id": 64043,
              "nodeType": "StructuredDocumentation",
              "src": "9152:77:287",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "9243:19:287",
            "overrides": {
              "id": 64047,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9294:8:287"
            },
            "parameters": {
              "id": 64046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64045,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "9271:7:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64057,
                  "src": "9263:15:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9263:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9262:17:287"
            },
            "returnParameters": {
              "id": 64050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64057,
                  "src": "9312:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64048,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9312:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9311:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64071,
            "nodeType": "FunctionDefinition",
            "src": "9465:137:287",
            "nodes": [],
            "body": {
              "id": 64070,
              "nodeType": "Block",
              "src": "9537:65:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64065,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "9562:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64066,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "9582:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9582:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64064,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "9554:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9554:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64063,
                  "id": 64069,
                  "nodeType": "Return",
                  "src": "9547:48:287"
                }
              ]
            },
            "baseFunctions": [
              22628
            ],
            "documentation": {
              "id": 64058,
              "nodeType": "StructuredDocumentation",
              "src": "9376:84:287",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "9474:22:287",
            "overrides": {
              "id": 64060,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9513:8:287"
            },
            "parameters": {
              "id": 64059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9496:2:287"
            },
            "returnParameters": {
              "id": 64063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64071,
                  "src": "9531:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64061,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9531:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9530:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64085,
            "nodeType": "FunctionDefinition",
            "src": "9702:142:287",
            "nodes": [],
            "body": {
              "id": 64084,
              "nodeType": "Block",
              "src": "9779:65:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64079,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "9804:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64080,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "9824:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9824:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64078,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "9796:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9796:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64077,
                  "id": 64083,
                  "nodeType": "Return",
                  "src": "9789:48:287"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 64072,
              "nodeType": "StructuredDocumentation",
              "src": "9608:89:287",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "9711:27:287",
            "overrides": {
              "id": 64074,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9755:8:287"
            },
            "parameters": {
              "id": 64073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9738:2:287"
            },
            "returnParameters": {
              "id": 64077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64085,
                  "src": "9773:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64075,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9773:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9772:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64099,
            "nodeType": "FunctionDefinition",
            "src": "9927:127:287",
            "nodes": [],
            "body": {
              "id": 64098,
              "nodeType": "Block",
              "src": "9989:65:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64093,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "10014:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64094,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "10034:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10034:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64092,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10006:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10006:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64091,
                  "id": 64097,
                  "nodeType": "Return",
                  "src": "9999:48:287"
                }
              ]
            },
            "baseFunctions": [
              21763
            ],
            "documentation": {
              "id": 64086,
              "nodeType": "StructuredDocumentation",
              "src": "9850:72:287",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "9936:12:287",
            "overrides": {
              "id": 64088,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9965:8:287"
            },
            "parameters": {
              "id": 64087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9948:2:287"
            },
            "returnParameters": {
              "id": 64091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64099,
                  "src": "9983:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9983:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9982:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64113,
            "nodeType": "FunctionDefinition",
            "src": "10144:133:287",
            "nodes": [],
            "body": {
              "id": 64112,
              "nodeType": "Block",
              "src": "10212:65:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64107,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "10237:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64108,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "10257:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10257:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64106,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10229:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10229:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64105,
                  "id": 64111,
                  "nodeType": "Return",
                  "src": "10222:48:287"
                }
              ]
            },
            "baseFunctions": [
              23030
            ],
            "documentation": {
              "id": 64100,
              "nodeType": "StructuredDocumentation",
              "src": "10060:79:287",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10153:18:287",
            "overrides": {
              "id": 64102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10188:8:287"
            },
            "parameters": {
              "id": 64101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10171:2:287"
            },
            "returnParameters": {
              "id": 64105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64113,
                  "src": "10206:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10206:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10205:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64127,
            "nodeType": "FunctionDefinition",
            "src": "10372:133:287",
            "nodes": [],
            "body": {
              "id": 64126,
              "nodeType": "Block",
              "src": "10440:65:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64121,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "10465:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64122,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "10485:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10485:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64120,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10457:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10457:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64119,
                  "id": 64125,
                  "nodeType": "Return",
                  "src": "10450:48:287"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 64114,
              "nodeType": "StructuredDocumentation",
              "src": "10283:84:287",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10381:18:287",
            "overrides": {
              "id": 64116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10416:8:287"
            },
            "parameters": {
              "id": 64115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10399:2:287"
            },
            "returnParameters": {
              "id": 64119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "10434:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10434:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10433:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64141,
            "nodeType": "FunctionDefinition",
            "src": "10600:137:287",
            "nodes": [],
            "body": {
              "id": 64140,
              "nodeType": "Block",
              "src": "10672:65:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64135,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "10697:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64136,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "10717:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10717:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64134,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10689:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10689:41:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64133,
                  "id": 64139,
                  "nodeType": "Return",
                  "src": "10682:48:287"
                }
              ]
            },
            "baseFunctions": [
              57307
            ],
            "documentation": {
              "id": 64128,
              "nodeType": "StructuredDocumentation",
              "src": "10511:84:287",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "10609:22:287",
            "overrides": {
              "id": 64130,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10648:8:287"
            },
            "parameters": {
              "id": 64129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10631:2:287"
            },
            "returnParameters": {
              "id": 64133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64141,
                  "src": "10666:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10666:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10665:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64155,
            "nodeType": "FunctionDefinition",
            "src": "10829:127:287",
            "nodes": [],
            "body": {
              "id": 64154,
              "nodeType": "Block",
              "src": "10899:57:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64149,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63501,
                        "src": "10924:10:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64150,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            64277
                          ],
                          "referencedDeclaration": 64277,
                          "src": "10936:10:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10936:12:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64148,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "10916:7:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 64152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10916:33:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64147,
                  "id": 64153,
                  "nodeType": "Return",
                  "src": "10909:40:287"
                }
              ]
            },
            "baseFunctions": [
              57660
            ],
            "documentation": {
              "id": 64142,
              "nodeType": "StructuredDocumentation",
              "src": "10743:81:287",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "10838:12:287",
            "overrides": {
              "id": 64144,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10875:8:287"
            },
            "parameters": {
              "id": 64143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10850:2:287"
            },
            "returnParameters": {
              "id": 64147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64155,
                  "src": "10893:4:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10893:4:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10892:6:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64168,
            "nodeType": "FunctionDefinition",
            "src": "11222:144:287",
            "nodes": [],
            "body": {
              "id": 64167,
              "nodeType": "Block",
              "src": "11277:89:287",
              "nodes": [],
              "statements": [
                {
                  "id": 64166,
                  "nodeType": "UncheckedBlock",
                  "src": "11287:73:287",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64161,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102103,
                          "src": "11318:13:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 64162,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102176,
                            "src": "11334:13:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 64163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11334:15:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11318:31:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 64160,
                      "id": 64165,
                      "nodeType": "Return",
                      "src": "11311:38:287"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 64156,
              "nodeType": "StructuredDocumentation",
              "src": "11140:77:287",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "11231:11:287",
            "parameters": {
              "id": 64157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11242:2:287"
            },
            "returnParameters": {
              "id": 64160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64168,
                  "src": "11268:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11268:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11267:9:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64177,
            "nodeType": "FunctionDefinition",
            "src": "11448:106:287",
            "nodes": [],
            "body": {
              "id": 64176,
              "nodeType": "Block",
              "src": "11509:45:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64174,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57595,
                    "src": "11526:21:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64173,
                  "id": 64175,
                  "nodeType": "Return",
                  "src": "11519:28:287"
                }
              ]
            },
            "documentation": {
              "id": 64169,
              "nodeType": "StructuredDocumentation",
              "src": "11372:71:287",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "11457:17:287",
            "parameters": {
              "id": 64170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11474:2:287"
            },
            "returnParameters": {
              "id": 64173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64177,
                  "src": "11500:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11500:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11499:9:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64189,
            "nodeType": "FunctionDefinition",
            "src": "11610:184:287",
            "nodes": [],
            "body": {
              "id": 64188,
              "nodeType": "Block",
              "src": "11658:136:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64184,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64180,
                        "src": "11773:7:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11782:4:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64183,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        103184,
                        103366
                      ],
                      "referencedDeclaration": 103366,
                      "src": "11767:5:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 64186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11767:20:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64187,
                  "nodeType": "ExpressionStatement",
                  "src": "11767:20:287"
                }
              ]
            },
            "documentation": {
              "id": 64178,
              "nodeType": "StructuredDocumentation",
              "src": "11560:45:287",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "11619:4:287",
            "parameters": {
              "id": 64181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64180,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11632:7:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64189,
                  "src": "11624:15:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11624:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11623:17:287"
            },
            "returnParameters": {
              "id": 64182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11658:0:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 64253,
            "nodeType": "FunctionDefinition",
            "src": "11848:573:287",
            "nodes": [],
            "body": {
              "id": 64252,
              "nodeType": "Block",
              "src": "12009:412:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64205,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64192,
                        "src": "12047:4:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64206,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64194,
                        "src": "12053:2:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64207,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64196,
                        "src": "12057:12:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64208,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64198,
                        "src": "12071:8:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64202,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "12019:5:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_V4_$64291_$",
                          "typeString": "type(contract super SignatureDrop_V4)"
                        }
                      },
                      "id": 64204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12025:21:287",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 103457,
                      "src": "12019:27:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 64209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12019:61:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64210,
                  "nodeType": "ExpressionStatement",
                  "src": "12019:61:287"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 64232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 64225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 64218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12192:34:287",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 64212,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63498,
                              "src": "12201:12:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 64215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12223:1:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 64214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12215:7:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 64213,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12215:7:287",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12215:10:287",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 64211,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21818,
                            "src": "12193:7:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 64217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12193:33:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 64224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64219,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64192,
                          "src": "12230:4:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 64222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12246:1:287",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 64221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12238:7:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64220,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12238:7:287",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12238:10:287",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12230:18:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "12192:56:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 64231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 64226,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64194,
                        "src": "12252:2:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12266:1:287",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 64228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12258:7:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64227,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12258:7:287",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12258:10:287",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12252:16:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12192:76:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64251,
                  "nodeType": "IfStatement",
                  "src": "12188:227:287",
                  "trueBody": {
                    "id": 64250,
                    "nodeType": "Block",
                    "src": "12270:145:287",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 64243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 64237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "12288:28:287",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 64234,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63498,
                                  "src": "12297:12:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 64235,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64192,
                                  "src": "12311:4:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 64233,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21818,
                                "src": "12289:7:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 64236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12289:27:287",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 64242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "12320:26:287",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 64239,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63498,
                                  "src": "12329:12:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 64240,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64194,
                                  "src": "12343:2:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 64238,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21818,
                                "src": "12321:7:287",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 64241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12321:25:287",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12288:58:287",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 64249,
                        "nodeType": "IfStatement",
                        "src": "12284:121:287",
                        "trueBody": {
                          "id": 64248,
                          "nodeType": "Block",
                          "src": "12348:57:287",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 64245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12373:16:287",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 64244,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "12366:6:287",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 64246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12366:24:287",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 64247,
                              "nodeType": "ExpressionStatement",
                              "src": "12366:24:287"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              103457
            ],
            "documentation": {
              "id": 64190,
              "nodeType": "StructuredDocumentation",
              "src": "11800:43:287",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "11857:21:287",
            "overrides": {
              "id": 64200,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12000:8:287"
            },
            "parameters": {
              "id": 64199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64192,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11896:4:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64253,
                  "src": "11888:12:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11888:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64194,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11918:2:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64253,
                  "src": "11910:10:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11910:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64196,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "11938:12:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64253,
                  "src": "11930:20:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11930:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64198,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "11968:8:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64253,
                  "src": "11960:16:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11960:7:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11878:104:287"
            },
            "returnParameters": {
              "id": 64201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12009:0:287"
            },
            "scope": 64291,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64263,
            "nodeType": "FunctionDefinition",
            "src": "12427:111:287",
            "nodes": [],
            "body": {
              "id": 64262,
              "nodeType": "Block",
              "src": "12502:36:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64259,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64277
                      ],
                      "referencedDeclaration": 64277,
                      "src": "12519:10:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 64260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12519:12:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64258,
                  "id": 64261,
                  "nodeType": "Return",
                  "src": "12512:19:287"
                }
              ]
            },
            "baseFunctions": [
              57244
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "12436:14:287",
            "overrides": {
              "id": 64255,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12475:8:287"
            },
            "parameters": {
              "id": 64254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12450:2:287"
            },
            "returnParameters": {
              "id": 64258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64263,
                  "src": "12493:7:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12493:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12492:9:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64277,
            "nodeType": "FunctionDefinition",
            "src": "12544:242:287",
            "nodes": [],
            "body": {
              "id": 64276,
              "nodeType": "Block",
              "src": "12724:62:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64272,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "12741:25:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 64273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12767:10:287",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "12741:36:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 64274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12741:38:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64271,
                  "id": 64275,
                  "nodeType": "Return",
                  "src": "12734:45:287"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370,
              161677
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "12553:10:287",
            "overrides": {
              "id": 64268,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 64265,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "12629:18:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "12629:18:287"
                },
                {
                  "id": 64266,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "12649:25:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "12649:25:287"
                },
                {
                  "id": 64267,
                  "name": "Multicall",
                  "nameLocations": [
                    "12676:9:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "12676:9:287"
                }
              ],
              "src": "12620:66:287"
            },
            "parameters": {
              "id": 64264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12563:2:287"
            },
            "returnParameters": {
              "id": 64271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64270,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12712:6:287",
                  "nodeType": "VariableDeclaration",
                  "scope": 64277,
                  "src": "12704:14:287",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12704:7:287",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12703:16:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 64290,
            "nodeType": "FunctionDefinition",
            "src": "12792:227:287",
            "nodes": [],
            "body": {
              "id": 64289,
              "nodeType": "Block",
              "src": "12959:60:287",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64285,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "12976:25:287",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 64286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13002:8:287",
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46397,
                      "src": "12976:34:287",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 64287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12976:36:287",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 64284,
                  "id": 64288,
                  "nodeType": "Return",
                  "src": "12969:43:287"
                }
              ]
            },
            "baseFunctions": [
              46397,
              161686
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "12801:8:287",
            "overrides": {
              "id": 64281,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 64279,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "12875:18:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161692,
                  "src": "12875:18:287"
                },
                {
                  "id": 64280,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "12895:25:287"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "12895:25:287"
                }
              ],
              "src": "12866:55:287"
            },
            "parameters": {
              "id": 64278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12809:2:287"
            },
            "returnParameters": {
              "id": 64284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64290,
                  "src": "12939:14:287",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64282,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12939:5:287",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12938:16:287"
            },
            "scope": 64291,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63465,
              "name": "Initializable",
              "nameLocations": [
                "1092:13:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1092:13:287"
            },
            "id": 63466,
            "nodeType": "InheritanceSpecifier",
            "src": "1092:13:287"
          },
          {
            "baseName": {
              "id": 63467,
              "name": "ContractMetadata",
              "nameLocations": [
                "1111:16:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1111:16:287"
            },
            "id": 63468,
            "nodeType": "InheritanceSpecifier",
            "src": "1111:16:287"
          },
          {
            "baseName": {
              "id": 63469,
              "name": "PlatformFee",
              "nameLocations": [
                "1133:11:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22629,
              "src": "1133:11:287"
            },
            "id": 63470,
            "nodeType": "InheritanceSpecifier",
            "src": "1133:11:287"
          },
          {
            "baseName": {
              "id": 63471,
              "name": "Royalty",
              "nameLocations": [
                "1150:7:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23031,
              "src": "1150:7:287"
            },
            "id": 63472,
            "nodeType": "InheritanceSpecifier",
            "src": "1150:7:287"
          },
          {
            "baseName": {
              "id": 63473,
              "name": "PrimarySale",
              "nameLocations": [
                "1163:11:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "1163:11:287"
            },
            "id": 63474,
            "nodeType": "InheritanceSpecifier",
            "src": "1163:11:287"
          },
          {
            "baseName": {
              "id": 63475,
              "name": "Ownable",
              "nameLocations": [
                "1180:7:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21764,
              "src": "1180:7:287"
            },
            "id": 63476,
            "nodeType": "InheritanceSpecifier",
            "src": "1180:7:287"
          },
          {
            "baseName": {
              "id": 63477,
              "name": "DelayedReveal",
              "nameLocations": [
                "1193:13:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18252,
              "src": "1193:13:287"
            },
            "id": 63478,
            "nodeType": "InheritanceSpecifier",
            "src": "1193:13:287"
          },
          {
            "baseName": {
              "id": 63479,
              "name": "LazyMint_V1",
              "nameLocations": [
                "1212:11:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57661,
              "src": "1212:11:287"
            },
            "id": 63480,
            "nodeType": "InheritanceSpecifier",
            "src": "1212:11:287"
          },
          {
            "baseName": {
              "id": 63481,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1229:21:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1229:21:287"
            },
            "id": 63482,
            "nodeType": "InheritanceSpecifier",
            "src": "1229:21:287"
          },
          {
            "baseName": {
              "id": 63483,
              "name": "DropSinglePhase_V1",
              "nameLocations": [
                "1256:18:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57308,
              "src": "1256:18:287"
            },
            "id": 63484,
            "nodeType": "InheritanceSpecifier",
            "src": "1256:18:287"
          },
          {
            "baseName": {
              "id": 63485,
              "name": "SignatureMintERC721Upgradeable",
              "nameLocations": [
                "1280:30:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24793,
              "src": "1280:30:287"
            },
            "id": 63486,
            "nodeType": "InheritanceSpecifier",
            "src": "1280:30:287"
          },
          {
            "baseName": {
              "id": 63487,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1316:25:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1316:25:287"
            },
            "id": 63488,
            "nodeType": "InheritanceSpecifier",
            "src": "1316:25:287"
          },
          {
            "baseName": {
              "id": 63489,
              "name": "Multicall",
              "nameLocations": [
                "1347:9:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1347:9:287"
            },
            "id": 63490,
            "nodeType": "InheritanceSpecifier",
            "src": "1347:9:287"
          },
          {
            "baseName": {
              "id": 63491,
              "name": "ERC721AUpgradeable",
              "nameLocations": [
                "1362:18:287"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103476,
              "src": "1362:18:287"
            },
            "id": 63492,
            "nodeType": "InheritanceSpecifier",
            "src": "1362:18:287"
          }
        ],
        "canonicalName": "SignatureDrop_V4",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64291,
          103476,
          103547,
          159732,
          159300,
          162692,
          162704,
          21206,
          33577,
          46402,
          161692,
          24793,
          34561,
          162645,
          153966,
          57308,
          58072,
          57952,
          22411,
          22111,
          33932,
          33907,
          57661,
          56126,
          33463,
          18252,
          33115,
          21764,
          33834,
          22703,
          33997,
          23031,
          34061,
          14089,
          13945,
          22629,
          33976,
          18093,
          154159,
          33084
        ],
        "name": "SignatureDrop_V4",
        "nameLocation": "1068:16:287",
        "scope": 64292,
        "usedErrors": [
          103488,
          103491,
          103494,
          103497,
          103500,
          103503,
          103506,
          103509,
          103512,
          103515,
          103518,
          103521,
          103524
        ],
        "usedEvents": [
          33083,
          33094,
          33450,
          33833,
          33846,
          33855,
          33864,
          33962,
          33969,
          33975,
          33996,
          34051,
          34060,
          34536,
          58037,
          58045,
          153946,
          154005,
          159199,
          159208,
          159217
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 287
}