{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensDepositedByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensWithdrawnByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensStaked",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isIndexed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "amountStaked",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052609b805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162003eac38038062003eac83398101604081905262000047916200016c565b600054610100900460ff1615808015620000685750600054600160ff909116105b80620000845750303b15801562000084575060005460ff166001145b620000ec5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000110576000805461ff0019166101001790555b6001600160a01b038216608052801562000164576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50506200019e565b6000602082840312156200017f57600080fd5b81516001600160a01b03811681146200019757600080fd5b9392505050565b608051613cd6620001d6600039600081816101c3015281816108f0015281816109a0015281816116040152612f210152613cd66000f3fe6080604052600436106101b35760003560e01c8063938e3d7b116100e8578063938e3d7b1461052557806393ce534314610545578063940670451461055a578063961004d314610590578063983d95ce146105b0578063a0a8e460146105d0578063a217fddf146105ec578063a32fa5b314610601578063ac9650d814610621578063c34531531461064e578063ca15c8731461067c578063cb2ef6f71461069c578063cb43b2dd146106ba578063d547741f146106da578063d68124c7146106fa578063e8a3d4851461070f578063f7c618c114610731578063fd48ba171461075157600080fd5b806301ffc9a71461023c5780630e8b229b146102715780630fbf0a9314610294578063150b7a02146102b457806316c621e0146102ed57806323ef258014610300578063248a9ca3146103205780632f2ff15d1461034d57806336568abe1461036d578063372500ab1461038d5780635357e916146103a2578063572b6c05146103cf5780636360106f146103ef5780636a5ab6e51461040f57806372f702f31461042f5780639010d07c1461044f5780639168ae721461046f57806391d148541461050557600080fd5b3661023757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102355760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561024857600080fd5b5061025c6102573660046132fd565b610781565b60405190151581526020015b60405180910390f35b34801561027d57600080fd5b506102866107b8565b604051908152602001610268565b3480156102a057600080fd5b506102356102af36600461336b565b610800565b3480156102c057600080fd5b506102d46102cf3660046133c3565b610820565b6040516001600160e01b03199091168152602001610268565b6102356102fb36600461345d565b610883565b34801561030c57600080fd5b5061023561031b36600461345d565b610a9a565b34801561032c57600080fd5b5061028661033b36600461345d565b60009081526003602052604090205490565b34801561035957600080fd5b50610235610368366004613476565b610bc1565b34801561037957600080fd5b50610235610388366004613476565b610c57565b34801561039957600080fd5b50610235610cb6565b3480156103ae57600080fd5b506103c26103bd36600461345d565b610cd2565b60405161026891906134a2565b3480156103db57600080fd5b5061025c6103ea3660046134b6565b610cfc565b3480156103fb57600080fd5b5061023561040a36600461345d565b610d1a565b34801561041b57600080fd5b5061023561042a366004613586565b610e42565b34801561043b57600080fd5b50609b546103c2906001600160a01b031681565b34801561045b57600080fd5b506103c261046a36600461369e565b610fa4565b34801561047b57600080fd5b506104cc61048a3660046134b6565b609f60205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b03909116918301919091526060820152608001610268565b34801561051157600080fd5b5061025c610520366004613476565b611092565b34801561053157600080fd5b506102356105403660046136c0565b6110bd565b34801561055157600080fd5b5060d554610286565b34801561056657600080fd5b506103c261057536600461345d565b60a0602052600090815260409020546001600160a01b031681565b34801561059c57600080fd5b506102866105ab36600461345d565b6110ea565b3480156105bc57600080fd5b506102356105cb36600461336b565b61110b565b3480156105dc57600080fd5b5060405160018152602001610268565b3480156105f857600080fd5b50610286600081565b34801561060d57600080fd5b5061025c61061c366004613476565b61111d565b34801561062d57600080fd5b5061064161063c36600461336b565b611173565b6040516102689190613744565b34801561065a57600080fd5b5061066e6106693660046134b6565b6112e6565b6040516102689291906137a8565b34801561068857600080fd5b5061028661069736600461345d565b611514565b3480156106a857600080fd5b50674e46545374616b6560c01b610286565b3480156106c657600080fd5b506102356106d536600461345d565b61159d565b3480156106e657600080fd5b506102356106f5366004613476565b61165e565b34801561070657600080fd5b50610286611677565b34801561071b57600080fd5b506107246116bf565b60405161026891906137f5565b34801561073d57600080fd5b5060d4546103c2906001600160a01b031681565b34801561075d57600080fd5b5061025c61076c36600461345d565b609e6020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806107b257506301ffc9a760e01b6001600160e01b03198316145b92915050565b600060a160006001609b60159054906101000a90046001600160401b03166107e0919061381e565b6001600160401b0316815260200190815260200160002060010154905090565b61080861174d565b61081282826117a6565b61081c6001606955565b5050565b609b54600090600160a01b900460ff166002146108715760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b604482015260640161022c565b50630a85bd0160e11b95945050505050565b61088b61174d565b6108986000610520611bc9565b6108b45760405162461bcd60e51b815260040161022c90613845565b60d4546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108ee5760d4546001600160a01b0316610910565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161094091906134a2565b602060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610981919061386d565b60d4549091506109c4906001600160a01b031661099c611bc9565b30867f0000000000000000000000000000000000000000000000000000000000000000611bd8565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016109f391906134a2565b602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a34919061386d565b610a3e9190613886565b90508060d56000828254610a529190613899565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a1505050610a976001606955565b50565b610aa2611d49565b610abe5760405162461bcd60e51b815260040161022c90613845565b600060a160006001609b60159054906101000a90046001600160401b0316610ae6919061381e565b6001600160401b031681526020808201929092526040908101600020815160808101835281548152600182015493810184905260028201549281019290925260030154606082015291508203610b725760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b604482015260640161022c565b8051610b7e9083611d57565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b600082815260036020526040902054610bda9033611e5f565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610c4d5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c64657273000000604482015260640161022c565b61081c8282611edf565b336001600160a01b03821614610cac5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b604482015260640161022c565b61081c8282611ef3565b610cbe61174d565b610cc6611f4a565b610cd06001606955565b565b609d8181548110610ce257600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b610d22611d49565b610d3e5760405162461bcd60e51b815260040161022c90613845565b600060a160006001609b60159054906101000a90046001600160401b0316610d66919061381e565b6001600160401b03168152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905080600001518203610dfc5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161022c565b610e0a828260200151611d57565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de09101610bb5565b600054610100900460ff1615808015610e625750600054600160ff909116105b80610e835750610e713061210f565b158015610e83575060005460ff166001145b610ee65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161022c565b6000805460ff191660011790558015610f09576000805461ff0019166101001790555b610f128661211e565b60d480546001600160a01b0319166001600160a01b038716179055610f36846121a3565b610f408383611d57565b610f4987612241565b610f54600089611edf565b8015610f9a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b60008281526004602052604081205481805b828110156110895760008681526004602090815260408083208484526001019091529020546001600160a01b031615611032578482036110205760008681526004602090815260408083209383526001909301905220546001600160a01b031692506107b2915050565b61102b600183613899565b9150611077565b61103d866000611092565b80156110645750600086815260046020908152604080832083805260020190915290205481145b1561107757611074600183613899565b91505b611082600182613899565b9050610fb6565b50505092915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6110c5611d49565b6110e15760405162461bcd60e51b815260040161022c90613845565b610a9781612241565b609c81815481106110fa57600080fd5b600091825260209091200154905081565b61111361174d565b6108128282612311565b600082815260026020908152604080832083805290915281205460ff1661116a575060008281526002602090815260408083206001600160a01b038516845290915290205460ff166107b2565b50600192915050565b6060816001600160401b0381111561118d5761118d6134d1565b6040519080825280602002602001820160405280156111c057816020015b60608152602001906001900390816111ab5790505b50905060006111cd611bc9565b9050336001600160a01b038216141560005b8481101561108957811561125e5761123c30878784818110611203576112036138ac565b905060200281019061121591906138c2565b8660405160200161122893929190613908565b604051602081830303815290604052612789565b84828151811061124e5761124e6138ac565b60200260200101819052506112de565b6112c030878784818110611274576112746138ac565b905060200281019061128691906138c2565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061278992505050565b8482815181106112d2576112d26138ac565b60200260200101819052505b6001016111df565b6060600080609c80548060200260200160405190810160405280929190818152602001828054801561133757602002820191906000526020600020905b815481526020019060010190808311611323575b50505050509050600081516001600160401b03811115611359576113596134d1565b604051908082528060200260200182016040528015611382578160200160208202803683370190505b5082519091506000805b8281101561144157876001600160a01b031660a060008784815181106113b4576113b46138ac565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b0316148482815181106113fa576113fa6138ac565b60200260200101901515908115158152505083818151811061141e5761141e6138ac565b60200260200101511561143957611436600183613899565b91505b60010161138c565b50806001600160401b0381111561145a5761145a6134d1565b604051908082528060200260200182016040528015611483578160200160208202803683370190505b5095506000805b838110156114fe578481815181106114a4576114a46138ac565b6020026020010151156114f6578581815181106114c3576114c36138ac565b60200260200101518883815181106114dd576114dd6138ac565b60209081029190910101526114f3600183613899565b91505b60010161148a565b50611508886127b5565b95505050505050915091565b600081815260046020526040812054815b818110156115785760008481526004602090815260408083208484526001019091529020546001600160a01b03161561156657611563600184613899565b92505b611571600182613899565b9050611525565b50611584836000611092565b1561159757611594600183613899565b91505b50919050565b6115aa6000610520611bc9565b6115c65760405162461bcd60e51b815260040161022c90613845565b60d55481116115e2578060d5546115dd9190613886565b6115e5565b60005b60d55560d454611628906001600160a01b031630611601611bc9565b847f0000000000000000000000000000000000000000000000000000000000000000611bd8565b6040518181527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150565b600082815260036020526040902054610cac9033611e5f565b600060a160006001609b60159054906101000a90046001600160401b031661169f919061381e565b6001600160401b0316815260200190815260200160002060000154905090565b600180546116cc90613929565b80601f01602080910402602001604051908101604052809291908181526020018280546116f890613929565b80156117455780601f1061171a57610100808354040283529160200191611745565b820191906000526020600020905b81548152906001019060200180831161172857829003601f168201915b505050505081565b60026069540361179f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161022c565b6002606955565b806001600160401b0381166000036117f35760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161022c565b609b546001600160a01b03166000609f8161180c612830565b6001600160a01b031681526020810191909152604001600020546001600160401b0316111561184a57611845611840612830565b61283a565b611934565b609d611854612830565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b03929092169190911790554290609f90611891612830565b6001600160a01b03168152602081019190915260400160002080546001600160801b03928316600160801b029216919091179055609b546118e5906001906001600160401b03600160a81b9091041661381e565b609f60006118f1612830565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b0316811015611b0157609b805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e611972612830565b30888886818110611985576119856138ac565b905060200201356040518463ffffffff1660e01b81526004016119aa9392919061395d565b600060405180830381600087803b1580156119c457600080fd5b505af11580156119d8573d6000803e3d6000fd5b5050609b805460ff60a01b1916600160a01b179055506119f89050612830565b60a06000878785818110611a0e57611a0e6138ac565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550609e6000868684818110611a5d57611a5d6138ac565b602090810292909201358352508101919091526040016000205460ff16611af9576001609e6000878785818110611a9657611a966138ac565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550609c858583818110611ad657611ad66138ac565b835460018101855560009485526020948590209190940292909201359190920155505b600101611937565b5081609f6000611b0f612830565b6001600160a01b03168152602081019190915260400160009081208054909190611b439084906001600160401b0316613981565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611b779291906139a1565b6040518091039020611b87612830565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b6001606955565b6000611bd3612910565b905090565b8115611d425773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611d3657306001600160a01b03851603611c7d57604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611c5557600080fd5b505af1158015611c69573d6000803e3d6000fd5b50505050611c78838383612932565b611d42565b306001600160a01b03841603611d2b57348214611cd25760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161022c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0d57600080fd5b505af1158015611d21573d6000803e3d6000fd5b5050505050611d42565b611c78838383612932565b611d42858585856129fd565b5050505050565b6000611bd381610520611bc9565b81600003611d9e5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161022c565b609b8054600160a81b90046001600160401b0316906001906015611dc28385613981565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160808101825284815260208082018581524283850190815260006060850181815287825260a190945294909420925183555160018301559151600282015590516003909101558015611e5a574260a16000611e45600185613886565b81526020810191909152604001600020600301555b505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1661081c57611e9d816001600160a01b03166014612a55565b611ea8836020612a55565b604051602001611eb99291906139ca565b60408051601f198184030181529082905262461bcd60e51b825261022c916004016137f5565b611ee98282612bf0565b61081c8282612c4b565b611efd8282612cb8565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f5c611f57612830565b612d1a565b609f6000611f68612830565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010154611f969190613899565b905080600003611fd55760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161022c565b42609f6000611fe2612830565b6001600160a01b031681526020810191909152604001600090812080546001600160801b03938416600160801b02931692909217909155609f81612024612830565b6001600160a01b031681526020810191909152604001600020600190810191909155609b546120639190600160a81b90046001600160401b031661381e565b609f600061206f612830565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790556120c26120bc612830565b82612ea8565b6120ca612830565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161210491815260200190565b60405180910390a250565b6001600160a01b03163b151590565b600054610100900460ff166121455760405162461bcd60e51b815260040161022c90613a37565b60005b815181101561081c57600160376000848481518110612169576121696138ac565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101612148565b600054610100900460ff166121ca5760405162461bcd60e51b815260040161022c90613a37565b6121d2612f45565b6001600160a01b03811661221f5760405162461bcd60e51b81526020600482015260146024820152730636f6c6c656374696f6e206164647265737320360641b604482015260640161022c565b609b80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001805461225090613929565b80601f016020809104026020016040519081016040528092919081815260200182805461227c90613929565b80156122c95780601f1061229e576101008083540402835291602001916122c9565b820191906000526020600020905b8154815290600101906020018083116122ac57829003601f168201915b5050505050905081600190816122df9190613ad2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610bb5929190613b91565b6000609f600061231f612830565b6001600160a01b0316815260208101919091526040016000908120546001600160401b039081169250839190821690036123925760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161022c565b806001600160401b03168210156123ea5760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161022c565b609b546001600160a01b0316612401611840612830565b816001600160401b03168303612560576000609d80548060200260200160405190810160405280929190818152602001828054801561246957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161244b575b5050505050905060005b815181101561255d57612484612830565b6001600160a01b031682828151811061249f5761249f6138ac565b60200260200101516001600160a01b0316036125555781600183516124c49190613886565b815181106124d4576124d46138ac565b6020026020010151609d82815481106124ef576124ef6138ac565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550609d80548061252e5761252e613bbf565b600082815260209020810160001990810180546001600160a01b031916905501905561255d565b600101612473565b50505b81609f600061256d612830565b6001600160a01b031681526020810191909152604001600090812080549091906125a19084906001600160401b031661381e565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b031681101561272c576125e1612830565b6001600160a01b031660a06000888885818110612600576126006138ac565b60209081029290920135835250810191909152604001600020546001600160a01b03161461265d5760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b604482015260640161022c565b600060a06000888885818110612675576126756138ac565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e306126b8612830565b8989868181106126ca576126ca6138ac565b905060200201356040518463ffffffff1660e01b81526004016126ef9392919061395d565b600060405180830381600087803b15801561270957600080fd5b505af115801561271d573d6000803e3d6000fd5b505050508060010190506125c8565b50848460405161273d9291906139a1565b604051809103902061274d612830565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b60606127ae8383604051806060016040528060278152602001613c7a60279139612f74565b9392505050565b6001600160a01b0381166000908152609f60205260408120546001600160401b031681036127fc57506001600160a01b03166000908152609f602052604090206001015490565b61280582612d1a565b6001600160a01b0383166000908152609f60205260409020600101546107b29190613899565b919050565b6000611bd3611bc9565b600061284582612d1a565b6001600160a01b0383166000908152609f6020526040812060010180549293508392909190612875908490613899565b90915550506001600160a01b0382166000908152609f6020526040902080546001600160801b03428116600160801b029116179055609b546128ca906001906001600160401b03600160a81b9091041661381e565b6001600160a01b039092166000908152609f6020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b600061291b33610cfc565b1561292d575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461297f576040519150601f19603f3d011682016040523d82523d6000602084013e612984565b606091505b50509050806129f757816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156129c857600080fd5b505af11580156129dc573d6000803e3d6000fd5b506129f7935050506001600160a01b03841690508585612fec565b50505050565b816001600160a01b0316836001600160a01b031603156129f757306001600160a01b03841603612a4057612a3b6001600160a01b0385168383612fec565b6129f7565b6129f76001600160a01b03851684848461304f565b60606000612a64836002613bd5565b612a6f906002613899565b6001600160401b03811115612a8657612a866134d1565b6040519080825280601f01601f191660200182016040528015612ab0576020820181803683370190505b509050600360fc1b81600081518110612acb57612acb6138ac565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612afa57612afa6138ac565b60200101906001600160f81b031916908160001a9053506000612b1e846002613bd5565b612b29906001613899565b90505b6001811115612ba1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612b5d57612b5d6138ac565b1a60f81b828281518110612b7357612b736138ac565b60200101906001600160f81b031916908160001a90535060049490941c93612b9a81613bec565b9050612b2c565b5083156127ae5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161022c565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612c6a8385613899565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612cc28282611e5f565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0381166000908152609f60209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b0316938201939093526001909101546060820152609b54909291600160a81b90910416815b81811015612e9f57600081815260a16020908152604080832081516080810183528154815260018201549381019390935260028101549183019190915260030154606082015290848303612df05785604001516001600160801b0316612df6565b81604001515b905060008260600151600003612e0c5742612e12565b82606001515b9050600080612e4889600001516001600160401b03168585612e349190613886565b612e3e9190613bd5565b8660200151613070565b91509150600080612e688c886000015185612e639190613c19565b6130bb565b91509150838015612e765750815b612e80578b612e82565b805b9b5050505050505050600181612e989190613899565b9050612d8f565b50505050919050565b60d554811115612ef55760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161022c565b8060d56000828254612f079190613886565b909155505060d45461081c906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611bd8565b600054610100900460ff16612f6c5760405162461bcd60e51b815260040161022c90613a37565b610cd06130d6565b6060600080856001600160a01b031685604051612f919190613c3b565b600060405180830381855af49150503d8060008114612fcc576040519150601f19603f3d011682016040523d82523d6000602084013e612fd1565b606091505b5091509150612fe2868383876130fd565b9695505050505050565b6040516001600160a01b038316602482015260448101829052611e5a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261317c565b6129f7846323b872dd60e01b8585856040516024016130189392919061395d565b6000808360000361308757506001905060006130b4565b8383028385828161309a5761309a613c03565b04146130ad5760008092509250506130b4565b6001925090505b9250929050565b600080838301848110156130ad5760008092509250506130b4565b600054610100900460ff16611bc25760405162461bcd60e51b815260040161022c90613a37565b6060831561316a578251600003613163576131178561210f565b6131635760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022c565b5081613174565b613174838361324e565b949350505050565b60006131d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132789092919063ffffffff16565b805190915015611e5a57808060200190518101906131ef9190613c57565b611e5a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022c565b81511561325e5781518083602001fd5b8060405162461bcd60e51b815260040161022c91906137f5565b6060613174848460008585600080866001600160a01b0316858760405161329f9190613c3b565b60006040518083038185875af1925050503d80600081146132dc576040519150601f19603f3d011682016040523d82523d6000602084013e6132e1565b606091505b50915091506132f2878383876130fd565b979650505050505050565b60006020828403121561330f57600080fd5b81356001600160e01b0319811681146127ae57600080fd5b60008083601f84011261333957600080fd5b5081356001600160401b0381111561335057600080fd5b6020830191508360208260051b85010111156130b457600080fd5b6000806020838503121561337e57600080fd5b82356001600160401b0381111561339457600080fd5b6133a085828601613327565b90969095509350505050565b80356001600160a01b038116811461282b57600080fd5b6000806000806000608086880312156133db57600080fd5b6133e4866133ac565b94506133f2602087016133ac565b93506040860135925060608601356001600160401b038082111561341557600080fd5b818801915088601f83011261342957600080fd5b81358181111561343857600080fd5b89602082850101111561344a57600080fd5b9699959850939650602001949392505050565b60006020828403121561346f57600080fd5b5035919050565b6000806040838503121561348957600080fd5b82359150613499602084016133ac565b90509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156134c857600080fd5b6127ae826133ac565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561350f5761350f6134d1565b604052919050565b600082601f83011261352857600080fd5b81356001600160401b03811115613541576135416134d1565b613554601f8201601f19166020016134e7565b81815284602083860101111561356957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a0312156135a157600080fd5b6135aa886133ac565b96506020808901356001600160401b03808211156135c757600080fd5b6135d38c838d01613517565b985060408b01359150808211156135e957600080fd5b818b0191508b601f8301126135fd57600080fd5b81358181111561360f5761360f6134d1565b8060051b91506136208483016134e7565b818152918301840191848101908e84111561363a57600080fd5b938501935b8385101561365f57613650856133ac565b8252938501939085019061363f565b809a50505050505050613674606089016133ac565b9350613682608089016133ac565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156136b157600080fd5b50508035926020909101359150565b6000602082840312156136d257600080fd5b81356001600160401b038111156136e857600080fd5b61317484828501613517565b60005b8381101561370f5781810151838201526020016136f7565b50506000910152565b600081518084526137308160208601602086016136f4565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561379b57603f19888603018452613789858351613718565b9450928501929085019060010161376d565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b828110156137e1578151845292840192908401906001016137c5565b505050602093909301939093525092915050565b6020815260006127ae6020830184613718565b634e487b7160e01b600052601160045260246000fd5b6001600160401b0382811682821603908082111561383e5761383e613808565b5092915050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b60006020828403121561387f57600080fd5b5051919050565b818103818111156107b2576107b2613808565b808201808211156107b2576107b2613808565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126138d957600080fd5b8301803591506001600160401b038211156138f357600080fd5b6020019150368190038213156130b457600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b600181811c9082168061393d57607f821691505b60208210810361159757634e487b7160e01b600052602260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160401b0381811683821601908082111561383e5761383e613808565b60006001600160fb1b038311156139b757600080fd5b8260051b80858437919091019392505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516139fa8160158501602088016136f4565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613a2b8160268401602088016136f4565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611e5a576000816000526020600020601f850160051c81016020861015613aab5750805b601f850160051c820191505b81811015613aca57828155600101613ab7565b505050505050565b81516001600160401b03811115613aeb57613aeb6134d1565b613aff81613af98454613929565b84613a82565b602080601f831160018114613b345760008415613b1c5750858301515b600019600386901b1c1916600185901b178555613aca565b600085815260208120601f198616915b82811015613b6357888601518255948401946001909101908401613b44565b5085821015613b815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000613ba46040830185613718565b8281036020840152613bb68185613718565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176107b2576107b2613808565b600081613bfb57613bfb613808565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613c3657634e487b7160e01b600052601260045260246000fd5b500490565b60008251613c4d8184602087016136f4565b9190910192915050565b600060208284031215613c6957600080fd5b815180151581146127ae57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200cb939b9ce70f4a3eb2d950044e2c16fe44aecf5fa30ff90f0e351824d02dc2a64736f6c63430008170033",
    "sourceMap": "1421:5986:376:-:0;;;782:28:93;;;-1:-1:-1;;;;782:28:93;-1:-1:-1;;;782:28:93;;;2081:110:376;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:450;1713:19:476;:23;;;3387:66:450;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;511:2:821;3325:201:450;;;493:21:821;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:821;;;633:44;694:19;;3325:201:450;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;-1:-1:-1;;;;;2144:40:376;::::1;;::::0;3647:99:450;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;876:36:821;;3721:14:450;;864:2:821;849:18;3721:14:450;;;;;;;3647:99;3269:483;2081:110:376;1421:5986;;14:290:821;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:821;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:821:o;724:194::-;1421:5986:376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101b35760003560e01c8063938e3d7b116100e8578063938e3d7b1461052557806393ce534314610545578063940670451461055a578063961004d314610590578063983d95ce146105b0578063a0a8e460146105d0578063a217fddf146105ec578063a32fa5b314610601578063ac9650d814610621578063c34531531461064e578063ca15c8731461067c578063cb2ef6f71461069c578063cb43b2dd146106ba578063d547741f146106da578063d68124c7146106fa578063e8a3d4851461070f578063f7c618c114610731578063fd48ba171461075157600080fd5b806301ffc9a71461023c5780630e8b229b146102715780630fbf0a9314610294578063150b7a02146102b457806316c621e0146102ed57806323ef258014610300578063248a9ca3146103205780632f2ff15d1461034d57806336568abe1461036d578063372500ab1461038d5780635357e916146103a2578063572b6c05146103cf5780636360106f146103ef5780636a5ab6e51461040f57806372f702f31461042f5780639010d07c1461044f5780639168ae721461046f57806391d148541461050557600080fd5b3661023757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102355760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561024857600080fd5b5061025c6102573660046132fd565b610781565b60405190151581526020015b60405180910390f35b34801561027d57600080fd5b506102866107b8565b604051908152602001610268565b3480156102a057600080fd5b506102356102af36600461336b565b610800565b3480156102c057600080fd5b506102d46102cf3660046133c3565b610820565b6040516001600160e01b03199091168152602001610268565b6102356102fb36600461345d565b610883565b34801561030c57600080fd5b5061023561031b36600461345d565b610a9a565b34801561032c57600080fd5b5061028661033b36600461345d565b60009081526003602052604090205490565b34801561035957600080fd5b50610235610368366004613476565b610bc1565b34801561037957600080fd5b50610235610388366004613476565b610c57565b34801561039957600080fd5b50610235610cb6565b3480156103ae57600080fd5b506103c26103bd36600461345d565b610cd2565b60405161026891906134a2565b3480156103db57600080fd5b5061025c6103ea3660046134b6565b610cfc565b3480156103fb57600080fd5b5061023561040a36600461345d565b610d1a565b34801561041b57600080fd5b5061023561042a366004613586565b610e42565b34801561043b57600080fd5b50609b546103c2906001600160a01b031681565b34801561045b57600080fd5b506103c261046a36600461369e565b610fa4565b34801561047b57600080fd5b506104cc61048a3660046134b6565b609f60205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b03909116918301919091526060820152608001610268565b34801561051157600080fd5b5061025c610520366004613476565b611092565b34801561053157600080fd5b506102356105403660046136c0565b6110bd565b34801561055157600080fd5b5060d554610286565b34801561056657600080fd5b506103c261057536600461345d565b60a0602052600090815260409020546001600160a01b031681565b34801561059c57600080fd5b506102866105ab36600461345d565b6110ea565b3480156105bc57600080fd5b506102356105cb36600461336b565b61110b565b3480156105dc57600080fd5b5060405160018152602001610268565b3480156105f857600080fd5b50610286600081565b34801561060d57600080fd5b5061025c61061c366004613476565b61111d565b34801561062d57600080fd5b5061064161063c36600461336b565b611173565b6040516102689190613744565b34801561065a57600080fd5b5061066e6106693660046134b6565b6112e6565b6040516102689291906137a8565b34801561068857600080fd5b5061028661069736600461345d565b611514565b3480156106a857600080fd5b50674e46545374616b6560c01b610286565b3480156106c657600080fd5b506102356106d536600461345d565b61159d565b3480156106e657600080fd5b506102356106f5366004613476565b61165e565b34801561070657600080fd5b50610286611677565b34801561071b57600080fd5b506107246116bf565b60405161026891906137f5565b34801561073d57600080fd5b5060d4546103c2906001600160a01b031681565b34801561075d57600080fd5b5061025c61076c36600461345d565b609e6020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806107b257506301ffc9a760e01b6001600160e01b03198316145b92915050565b600060a160006001609b60159054906101000a90046001600160401b03166107e0919061381e565b6001600160401b0316815260200190815260200160002060010154905090565b61080861174d565b61081282826117a6565b61081c6001606955565b5050565b609b54600090600160a01b900460ff166002146108715760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b604482015260640161022c565b50630a85bd0160e11b95945050505050565b61088b61174d565b6108986000610520611bc9565b6108b45760405162461bcd60e51b815260040161022c90613845565b60d4546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108ee5760d4546001600160a01b0316610910565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161094091906134a2565b602060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610981919061386d565b60d4549091506109c4906001600160a01b031661099c611bc9565b30867f0000000000000000000000000000000000000000000000000000000000000000611bd8565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016109f391906134a2565b602060405180830381865afa158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a34919061386d565b610a3e9190613886565b90508060d56000828254610a529190613899565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a1505050610a976001606955565b50565b610aa2611d49565b610abe5760405162461bcd60e51b815260040161022c90613845565b600060a160006001609b60159054906101000a90046001600160401b0316610ae6919061381e565b6001600160401b031681526020808201929092526040908101600020815160808101835281548152600182015493810184905260028201549281019290925260030154606082015291508203610b725760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b604482015260640161022c565b8051610b7e9083611d57565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b600082815260036020526040902054610bda9033611e5f565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610c4d5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c64657273000000604482015260640161022c565b61081c8282611edf565b336001600160a01b03821614610cac5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b604482015260640161022c565b61081c8282611ef3565b610cbe61174d565b610cc6611f4a565b610cd06001606955565b565b609d8181548110610ce257600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b610d22611d49565b610d3e5760405162461bcd60e51b815260040161022c90613845565b600060a160006001609b60159054906101000a90046001600160401b0316610d66919061381e565b6001600160401b03168152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905080600001518203610dfc5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161022c565b610e0a828260200151611d57565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de09101610bb5565b600054610100900460ff1615808015610e625750600054600160ff909116105b80610e835750610e713061210f565b158015610e83575060005460ff166001145b610ee65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161022c565b6000805460ff191660011790558015610f09576000805461ff0019166101001790555b610f128661211e565b60d480546001600160a01b0319166001600160a01b038716179055610f36846121a3565b610f408383611d57565b610f4987612241565b610f54600089611edf565b8015610f9a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b60008281526004602052604081205481805b828110156110895760008681526004602090815260408083208484526001019091529020546001600160a01b031615611032578482036110205760008681526004602090815260408083209383526001909301905220546001600160a01b031692506107b2915050565b61102b600183613899565b9150611077565b61103d866000611092565b80156110645750600086815260046020908152604080832083805260020190915290205481145b1561107757611074600183613899565b91505b611082600182613899565b9050610fb6565b50505092915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6110c5611d49565b6110e15760405162461bcd60e51b815260040161022c90613845565b610a9781612241565b609c81815481106110fa57600080fd5b600091825260209091200154905081565b61111361174d565b6108128282612311565b600082815260026020908152604080832083805290915281205460ff1661116a575060008281526002602090815260408083206001600160a01b038516845290915290205460ff166107b2565b50600192915050565b6060816001600160401b0381111561118d5761118d6134d1565b6040519080825280602002602001820160405280156111c057816020015b60608152602001906001900390816111ab5790505b50905060006111cd611bc9565b9050336001600160a01b038216141560005b8481101561108957811561125e5761123c30878784818110611203576112036138ac565b905060200281019061121591906138c2565b8660405160200161122893929190613908565b604051602081830303815290604052612789565b84828151811061124e5761124e6138ac565b60200260200101819052506112de565b6112c030878784818110611274576112746138ac565b905060200281019061128691906138c2565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061278992505050565b8482815181106112d2576112d26138ac565b60200260200101819052505b6001016111df565b6060600080609c80548060200260200160405190810160405280929190818152602001828054801561133757602002820191906000526020600020905b815481526020019060010190808311611323575b50505050509050600081516001600160401b03811115611359576113596134d1565b604051908082528060200260200182016040528015611382578160200160208202803683370190505b5082519091506000805b8281101561144157876001600160a01b031660a060008784815181106113b4576113b46138ac565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b0316148482815181106113fa576113fa6138ac565b60200260200101901515908115158152505083818151811061141e5761141e6138ac565b60200260200101511561143957611436600183613899565b91505b60010161138c565b50806001600160401b0381111561145a5761145a6134d1565b604051908082528060200260200182016040528015611483578160200160208202803683370190505b5095506000805b838110156114fe578481815181106114a4576114a46138ac565b6020026020010151156114f6578581815181106114c3576114c36138ac565b60200260200101518883815181106114dd576114dd6138ac565b60209081029190910101526114f3600183613899565b91505b60010161148a565b50611508886127b5565b95505050505050915091565b600081815260046020526040812054815b818110156115785760008481526004602090815260408083208484526001019091529020546001600160a01b03161561156657611563600184613899565b92505b611571600182613899565b9050611525565b50611584836000611092565b1561159757611594600183613899565b91505b50919050565b6115aa6000610520611bc9565b6115c65760405162461bcd60e51b815260040161022c90613845565b60d55481116115e2578060d5546115dd9190613886565b6115e5565b60005b60d55560d454611628906001600160a01b031630611601611bc9565b847f0000000000000000000000000000000000000000000000000000000000000000611bd8565b6040518181527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150565b600082815260036020526040902054610cac9033611e5f565b600060a160006001609b60159054906101000a90046001600160401b031661169f919061381e565b6001600160401b0316815260200190815260200160002060000154905090565b600180546116cc90613929565b80601f01602080910402602001604051908101604052809291908181526020018280546116f890613929565b80156117455780601f1061171a57610100808354040283529160200191611745565b820191906000526020600020905b81548152906001019060200180831161172857829003601f168201915b505050505081565b60026069540361179f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161022c565b6002606955565b806001600160401b0381166000036117f35760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161022c565b609b546001600160a01b03166000609f8161180c612830565b6001600160a01b031681526020810191909152604001600020546001600160401b0316111561184a57611845611840612830565b61283a565b611934565b609d611854612830565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b03929092169190911790554290609f90611891612830565b6001600160a01b03168152602081019190915260400160002080546001600160801b03928316600160801b029216919091179055609b546118e5906001906001600160401b03600160a81b9091041661381e565b609f60006118f1612830565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b0316811015611b0157609b805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e611972612830565b30888886818110611985576119856138ac565b905060200201356040518463ffffffff1660e01b81526004016119aa9392919061395d565b600060405180830381600087803b1580156119c457600080fd5b505af11580156119d8573d6000803e3d6000fd5b5050609b805460ff60a01b1916600160a01b179055506119f89050612830565b60a06000878785818110611a0e57611a0e6138ac565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550609e6000868684818110611a5d57611a5d6138ac565b602090810292909201358352508101919091526040016000205460ff16611af9576001609e6000878785818110611a9657611a966138ac565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550609c858583818110611ad657611ad66138ac565b835460018101855560009485526020948590209190940292909201359190920155505b600101611937565b5081609f6000611b0f612830565b6001600160a01b03168152602081019190915260400160009081208054909190611b439084906001600160401b0316613981565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611b779291906139a1565b6040518091039020611b87612830565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b6001606955565b6000611bd3612910565b905090565b8115611d425773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611d3657306001600160a01b03851603611c7d57604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611c5557600080fd5b505af1158015611c69573d6000803e3d6000fd5b50505050611c78838383612932565b611d42565b306001600160a01b03841603611d2b57348214611cd25760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161022c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0d57600080fd5b505af1158015611d21573d6000803e3d6000fd5b5050505050611d42565b611c78838383612932565b611d42858585856129fd565b5050505050565b6000611bd381610520611bc9565b81600003611d9e5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161022c565b609b8054600160a81b90046001600160401b0316906001906015611dc28385613981565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160808101825284815260208082018581524283850190815260006060850181815287825260a190945294909420925183555160018301559151600282015590516003909101558015611e5a574260a16000611e45600185613886565b81526020810191909152604001600020600301555b505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1661081c57611e9d816001600160a01b03166014612a55565b611ea8836020612a55565b604051602001611eb99291906139ca565b60408051601f198184030181529082905262461bcd60e51b825261022c916004016137f5565b611ee98282612bf0565b61081c8282612c4b565b611efd8282612cb8565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f5c611f57612830565b612d1a565b609f6000611f68612830565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010154611f969190613899565b905080600003611fd55760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161022c565b42609f6000611fe2612830565b6001600160a01b031681526020810191909152604001600090812080546001600160801b03938416600160801b02931692909217909155609f81612024612830565b6001600160a01b031681526020810191909152604001600020600190810191909155609b546120639190600160a81b90046001600160401b031661381e565b609f600061206f612830565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790556120c26120bc612830565b82612ea8565b6120ca612830565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161210491815260200190565b60405180910390a250565b6001600160a01b03163b151590565b600054610100900460ff166121455760405162461bcd60e51b815260040161022c90613a37565b60005b815181101561081c57600160376000848481518110612169576121696138ac565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101612148565b600054610100900460ff166121ca5760405162461bcd60e51b815260040161022c90613a37565b6121d2612f45565b6001600160a01b03811661221f5760405162461bcd60e51b81526020600482015260146024820152730636f6c6c656374696f6e206164647265737320360641b604482015260640161022c565b609b80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001805461225090613929565b80601f016020809104026020016040519081016040528092919081815260200182805461227c90613929565b80156122c95780601f1061229e576101008083540402835291602001916122c9565b820191906000526020600020905b8154815290600101906020018083116122ac57829003601f168201915b5050505050905081600190816122df9190613ad2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610bb5929190613b91565b6000609f600061231f612830565b6001600160a01b0316815260208101919091526040016000908120546001600160401b039081169250839190821690036123925760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161022c565b806001600160401b03168210156123ea5760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161022c565b609b546001600160a01b0316612401611840612830565b816001600160401b03168303612560576000609d80548060200260200160405190810160405280929190818152602001828054801561246957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161244b575b5050505050905060005b815181101561255d57612484612830565b6001600160a01b031682828151811061249f5761249f6138ac565b60200260200101516001600160a01b0316036125555781600183516124c49190613886565b815181106124d4576124d46138ac565b6020026020010151609d82815481106124ef576124ef6138ac565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550609d80548061252e5761252e613bbf565b600082815260209020810160001990810180546001600160a01b031916905501905561255d565b600101612473565b50505b81609f600061256d612830565b6001600160a01b031681526020810191909152604001600090812080549091906125a19084906001600160401b031661381e565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b031681101561272c576125e1612830565b6001600160a01b031660a06000888885818110612600576126006138ac565b60209081029290920135835250810191909152604001600020546001600160a01b03161461265d5760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b604482015260640161022c565b600060a06000888885818110612675576126756138ac565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e306126b8612830565b8989868181106126ca576126ca6138ac565b905060200201356040518463ffffffff1660e01b81526004016126ef9392919061395d565b600060405180830381600087803b15801561270957600080fd5b505af115801561271d573d6000803e3d6000fd5b505050508060010190506125c8565b50848460405161273d9291906139a1565b604051809103902061274d612830565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b60606127ae8383604051806060016040528060278152602001613c7a60279139612f74565b9392505050565b6001600160a01b0381166000908152609f60205260408120546001600160401b031681036127fc57506001600160a01b03166000908152609f602052604090206001015490565b61280582612d1a565b6001600160a01b0383166000908152609f60205260409020600101546107b29190613899565b919050565b6000611bd3611bc9565b600061284582612d1a565b6001600160a01b0383166000908152609f6020526040812060010180549293508392909190612875908490613899565b90915550506001600160a01b0382166000908152609f6020526040902080546001600160801b03428116600160801b029116179055609b546128ca906001906001600160401b03600160a81b9091041661381e565b6001600160a01b039092166000908152609f6020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b600061291b33610cfc565b1561292d575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461297f576040519150601f19603f3d011682016040523d82523d6000602084013e612984565b606091505b50509050806129f757816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156129c857600080fd5b505af11580156129dc573d6000803e3d6000fd5b506129f7935050506001600160a01b03841690508585612fec565b50505050565b816001600160a01b0316836001600160a01b031603156129f757306001600160a01b03841603612a4057612a3b6001600160a01b0385168383612fec565b6129f7565b6129f76001600160a01b03851684848461304f565b60606000612a64836002613bd5565b612a6f906002613899565b6001600160401b03811115612a8657612a866134d1565b6040519080825280601f01601f191660200182016040528015612ab0576020820181803683370190505b509050600360fc1b81600081518110612acb57612acb6138ac565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612afa57612afa6138ac565b60200101906001600160f81b031916908160001a9053506000612b1e846002613bd5565b612b29906001613899565b90505b6001811115612ba1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612b5d57612b5d6138ac565b1a60f81b828281518110612b7357612b736138ac565b60200101906001600160f81b031916908160001a90535060049490941c93612b9a81613bec565b9050612b2c565b5083156127ae5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161022c565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612c6a8385613899565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612cc28282611e5f565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0381166000908152609f60209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b0316938201939093526001909101546060820152609b54909291600160a81b90910416815b81811015612e9f57600081815260a16020908152604080832081516080810183528154815260018201549381019390935260028101549183019190915260030154606082015290848303612df05785604001516001600160801b0316612df6565b81604001515b905060008260600151600003612e0c5742612e12565b82606001515b9050600080612e4889600001516001600160401b03168585612e349190613886565b612e3e9190613bd5565b8660200151613070565b91509150600080612e688c886000015185612e639190613c19565b6130bb565b91509150838015612e765750815b612e80578b612e82565b805b9b5050505050505050600181612e989190613899565b9050612d8f565b50505050919050565b60d554811115612ef55760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161022c565b8060d56000828254612f079190613886565b909155505060d45461081c906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611bd8565b600054610100900460ff16612f6c5760405162461bcd60e51b815260040161022c90613a37565b610cd06130d6565b6060600080856001600160a01b031685604051612f919190613c3b565b600060405180830381855af49150503d8060008114612fcc576040519150601f19603f3d011682016040523d82523d6000602084013e612fd1565b606091505b5091509150612fe2868383876130fd565b9695505050505050565b6040516001600160a01b038316602482015260448101829052611e5a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261317c565b6129f7846323b872dd60e01b8585856040516024016130189392919061395d565b6000808360000361308757506001905060006130b4565b8383028385828161309a5761309a613c03565b04146130ad5760008092509250506130b4565b6001925090505b9250929050565b600080838301848110156130ad5760008092509250506130b4565b600054610100900460ff16611bc25760405162461bcd60e51b815260040161022c90613a37565b6060831561316a578251600003613163576131178561210f565b6131635760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022c565b5081613174565b613174838361324e565b949350505050565b60006131d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132789092919063ffffffff16565b805190915015611e5a57808060200190518101906131ef9190613c57565b611e5a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022c565b81511561325e5781518083602001fd5b8060405162461bcd60e51b815260040161022c91906137f5565b6060613174848460008585600080866001600160a01b0316858760405161329f9190613c3b565b60006040518083038185875af1925050503d80600081146132dc576040519150601f19603f3d011682016040523d82523d6000602084013e6132e1565b606091505b50915091506132f2878383876130fd565b979650505050505050565b60006020828403121561330f57600080fd5b81356001600160e01b0319811681146127ae57600080fd5b60008083601f84011261333957600080fd5b5081356001600160401b0381111561335057600080fd5b6020830191508360208260051b85010111156130b457600080fd5b6000806020838503121561337e57600080fd5b82356001600160401b0381111561339457600080fd5b6133a085828601613327565b90969095509350505050565b80356001600160a01b038116811461282b57600080fd5b6000806000806000608086880312156133db57600080fd5b6133e4866133ac565b94506133f2602087016133ac565b93506040860135925060608601356001600160401b038082111561341557600080fd5b818801915088601f83011261342957600080fd5b81358181111561343857600080fd5b89602082850101111561344a57600080fd5b9699959850939650602001949392505050565b60006020828403121561346f57600080fd5b5035919050565b6000806040838503121561348957600080fd5b82359150613499602084016133ac565b90509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156134c857600080fd5b6127ae826133ac565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561350f5761350f6134d1565b604052919050565b600082601f83011261352857600080fd5b81356001600160401b03811115613541576135416134d1565b613554601f8201601f19166020016134e7565b81815284602083860101111561356957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a0312156135a157600080fd5b6135aa886133ac565b96506020808901356001600160401b03808211156135c757600080fd5b6135d38c838d01613517565b985060408b01359150808211156135e957600080fd5b818b0191508b601f8301126135fd57600080fd5b81358181111561360f5761360f6134d1565b8060051b91506136208483016134e7565b818152918301840191848101908e84111561363a57600080fd5b938501935b8385101561365f57613650856133ac565b8252938501939085019061363f565b809a50505050505050613674606089016133ac565b9350613682608089016133ac565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156136b157600080fd5b50508035926020909101359150565b6000602082840312156136d257600080fd5b81356001600160401b038111156136e857600080fd5b61317484828501613517565b60005b8381101561370f5781810151838201526020016136f7565b50506000910152565b600081518084526137308160208601602086016136f4565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561379b57603f19888603018452613789858351613718565b9450928501929085019060010161376d565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b828110156137e1578151845292840192908401906001016137c5565b505050602093909301939093525092915050565b6020815260006127ae6020830184613718565b634e487b7160e01b600052601160045260246000fd5b6001600160401b0382811682821603908082111561383e5761383e613808565b5092915050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b60006020828403121561387f57600080fd5b5051919050565b818103818111156107b2576107b2613808565b808201808211156107b2576107b2613808565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126138d957600080fd5b8301803591506001600160401b038211156138f357600080fd5b6020019150368190038213156130b457600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b600181811c9082168061393d57607f821691505b60208210810361159757634e487b7160e01b600052602260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160401b0381811683821601908082111561383e5761383e613808565b60006001600160fb1b038311156139b757600080fd5b8260051b80858437919091019392505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516139fa8160158501602088016136f4565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613a2b8160268401602088016136f4565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611e5a576000816000526020600020601f850160051c81016020861015613aab5750805b601f850160051c820191505b81811015613aca57828155600101613ab7565b505050505050565b81516001600160401b03811115613aeb57613aeb6134d1565b613aff81613af98454613929565b84613a82565b602080601f831160018114613b345760008415613b1c5750858301515b600019600386901b1c1916600185901b178555613aca565b600085815260208120601f198616915b82811015613b6357888601518255948401946001909101908401613b44565b5085821015613b815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000613ba46040830185613718565b8281036020840152613bb68185613718565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176107b2576107b2613808565b600081613bfb57613bfb613808565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613c3657634e487b7160e01b600052601260045260246000fd5b500490565b60008251613c4d8184602087016136f4565b9190910192915050565b600060208284031215613c6957600080fd5b815180151581146127ae57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200cb939b9ce70f4a3eb2d950044e2c16fe44aecf5fa30ff90f0e351824d02dc2a64736f6c63430008170033",
    "sourceMap": "1421:5986:376:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3285:10;-1:-1:-1;;;;;3299:18:376;3285:32;;3277:77;;;;-1:-1:-1;;;3277:77:376;;216:2:821;3277:77:376;;;198:21:821;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;3277:77:376;;;;;;;;;1421:5986;;;;;5372:206;;;;;;;;;;-1:-1:-1;5372:206:376;;;;;:::i;:::-;;:::i;:::-;;;831:14:821;;824:22;806:41;;794:2;779:18;5372:206:376;;;;;;;;5897:179:93;;;;;;;;;;;;;:::i;:::-;;;1004:25:821;;;992:2;977:18;5897:179:93;858:177:821;2279:101:93;;;;;;;;;;-1:-1:-1;2279:101:93;;;;;:::i;:::-;;:::i;5151:215:376:-;;;;;;;;;;-1:-1:-1;5151:215:376;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3007:33:821;;;2989:52;;2977:2;2962:18;5151:215:376;2845:202:821;3410:752:376;;;;;;:::i;:::-;;:::i;4030:513:93:-;;;;;;;;;;-1:-1:-1;4030:513:93;;;;;:::i;:::-;;:::i;2738:120:71:-;;;;;;;;;;-1:-1:-1;2738:120:71;;;;;:::i;:::-;2806:7;2832:19;;;:13;:19;;;;;;;2738:120;3253:271;;;;;;;;;;-1:-1:-1;3253:271:71;;;;;:::i;:::-;;:::i;4464:217::-;;;;;;;;;;-1:-1:-1;4464:217:71;;;;;:::i;:::-;;:::i;2928:78:93:-;;;;;;;;;;;;;:::i;1074:29::-;;;;;;;;;;-1:-1:-1;1074:29:93;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:134:211:-;;;;;;;;;;-1:-1:-1;918:134:211;;;;;:::i;:::-;;:::i;3284:446:93:-;;;;;;;;;;-1:-1:-1;3284:446:93;;;;;:::i;:::-;;:::i;2256:590:376:-;;;;;;;;;;-1:-1:-1;2256:590:376;;;;;:::i;:::-;;:::i;685:27:93:-;;;;;;;;;;-1:-1:-1;685:27:93;;;;-1:-1:-1;;;;;685:27:93;;;1643:633:72;;;;;;;;;;-1:-1:-1;1643:633:72;;;;;:::i;:::-;;:::i;1316:41:93:-;;;;;;;;;;-1:-1:-1;1316:41:93;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1316:41:93;;;;-1:-1:-1;;;1316:41:93;;;;;;-1:-1:-1;;;1316:41:93;;;-1:-1:-1;;;;;1316:41:93;;;;;;;;-1:-1:-1;;;;;7264:15:821;;;7246:34;;7316:15;;;;7311:2;7296:18;;7289:43;-1:-1:-1;;;;;7368:32:821;;;7348:18;;;7341:60;;;;7432:2;7417:18;;7410:34;7196:3;7181:19;1316:41:93;6982:468:821;1322:131:71;;;;;;;;;;-1:-1:-1;1322:131:71;;;;;:::i;:::-;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;4845:116:376:-;;;;;;;;;;-1:-1:-1;4936:18:376;;4845:116;;1425:48:93;;;;;;;;;;-1:-1:-1;1425:48:93;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1425:48:93;;;978:30;;;;;;;;;;-1:-1:-1;978:30:93;;;;;:::i;:::-;;:::i;2592:107::-;;;;;;;;;;-1:-1:-1;2592:107:93;;;;;:::i;:::-;;:::i;3061:103:376:-;;;;;;;;;;-1:-1:-1;3061:103:376;;1757:1;7924:36:821;;7912:2;7897:18;3061:103:376;7782:184:821;740:49:71;;;;;;;;;;-1:-1:-1;740:49:71;785:4;740:49;;2204:211;;;;;;;;;;-1:-1:-1;2204:211:71;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4835:911:93:-;;;;;;;;;;-1:-1:-1;4835:911:93;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2683:398:72:-;;;;;;;;;;-1:-1:-1;2683:398:72;;;;;:::i;:::-;;:::i;2906:99:376:-;;;;;;;;;;-1:-1:-1;;;;2906:99:376;;4222:547;;;;;;;;;;-1:-1:-1;4222:547:376;;;;;:::i;:::-;;:::i;3895:171:71:-;;;;;;;;;;-1:-1:-1;3895:171:71;;;;;:::i;:::-;;:::i;5752:139:93:-;;;;;;;;;;;;;:::i;565:34:56:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1947:26:376:-;;;;;;;;;;-1:-1:-1;1947:26:376;;;;-1:-1:-1;;;;;1947:26:376;;;1177:41:93;;;;;;;;;;-1:-1:-1;1177:41:93;;;;;:::i;:::-;;;;;;;;;;;;;;;;5372:206:376;5449:4;-1:-1:-1;;;;;;5472:59:376;;-1:-1:-1;;;5472:59:376;;:99;;-1:-1:-1;;;;;;;;;;1168:51:484;;;5535:36:376;5465:106;5372:206;-1:-1:-1;;5372:206:376:o;5897:179:93:-;5951:27;6012:17;:38;6048:1;6030:15;;;;;;;;;-1:-1:-1;;;;;6030:15:93;:19;;;;:::i;:::-;-1:-1:-1;;;;;6012:38:93;;;;;;;;;;;;:57;;;5990:79;;5897:179;:::o;2279:101::-;2505:21:452;:19;:21::i;:::-;2356:17:93::1;2363:9;;2356:6;:17::i;:::-;2547:20:452::0;1787:1;3053:7;:22;2873:209;2547:20;2279:101:93;;:::o;5151:215:376:-;5278:9;;5252:6;;-1:-1:-1;;;5278:9:376;;;;5291:1;5278:14;5270:42;;;;-1:-1:-1;;;5270:42:376;;11219:2:821;5270:42:376;;;11201:21:821;11258:2;11238:18;;;11231:30;-1:-1:-1;;;11277:18:821;;;11270:45;11332:18;;5270:42:376;11017:339:821;5270:42:376;-1:-1:-1;;;;5151:215:376;;;;;;;:::o;3410:752::-;2505:21:452;:19;:21::i;:::-;3504:41:376::1;785:4:71;3532:12:376;:10;:12::i;3504:41::-;3496:68;;;;-1:-1:-1::0;;;3496:68:376::1;;;;;;;:::i;:::-;3598:11;::::0;3575:20:::1;::::0;-1:-1:-1;;;;;3598:11:376::1;434:42:292;3598:47:376;:82;;3669:11;::::0;-1:-1:-1;;;;;3669:11:376::1;3598:82;;;3648:18;3598:82;3575:105;;3691:21;3722:12;-1:-1:-1::0;;;;;3715:30:376::1;;3754:4;3715:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3831:11;::::0;3691:69;;-1:-1:-1;3770:188:376::1;::::0;-1:-1:-1;;;;;3831:11:376::1;3856:12;:10;:12::i;:::-;3890:4;3909:7;3930:18;3770:47;:188::i;:::-;3968:20;4039:13;3998:12;-1:-1:-1::0;;;;;3991:30:376::1;;4030:4;3991:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;3968:84;;4085:12;4063:18;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4113:42:376::1;::::0;1004:25:821;;;4113:42:376::1;::::0;992:2:821;977:18;4113:42:376::1;;;;;;;3486:676;;;2547:20:452::0;1787:1;3053:7;:22;2873:209;2547:20;3410:752:376;:::o;4030:513:93:-;4122:24;:22;:24::i;:::-;4117:80;;4162:24;;-1:-1:-1;;;4162:24:93;;;;;;;:::i;4117:80::-;4207:33;4243:17;:38;4279:1;4261:15;;;;;;;;;-1:-1:-1;;;;;4261:15:93;:19;;;;:::i;:::-;-1:-1:-1;;;;;4243:38:93;;;;;;;;;;;;;;;-1:-1:-1;4243:38:93;4207:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4299:51:93;;4291:81;;;;-1:-1:-1;;;4291:81:93;;12358:2:821;4291:81:93;;;12340:21:821;12397:2;12377:18;;;12370:30;-1:-1:-1;;;12416:18:821;;;12409:47;12473:18;;4291:81:93;12156:341:821;4291:81:93;4404:18;;4383:61;;4424:19;4383:20;:61::i;:::-;4486:28;;;;;4460:76;;;12676:25:821;;;12717:18;;;12710:34;;;4460:76:93;;12649:18:821;4460:76:93;;;;;;;;4107:436;4030:513;:::o;3253:271:71:-;3348:19;;;;:13;:19;;;;;;3337:43;;3369:10;3337;:43::i;:::-;3394:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3394:23:71;;;;;;;;;;;;3390:93;;;3433:39;;-1:-1:-1;;;3433:39:71;;12957:2:821;3433:39:71;;;12939:21:821;12996:2;12976:18;;;12969:30;13035:31;13015:18;;;13008:59;13084:18;;3433:39:71;12755:353:821;3390:93:71;3492:25;3503:4;3509:7;3492:10;:25::i;4464:217::-;4555:10;-1:-1:-1;;;;;4555:21:71;;;4551:88;;4592:36;;-1:-1:-1;;;4592:36:71;;13315:2:821;4592:36:71;;;13297:21:821;13354:2;13334:18;;;13327:30;-1:-1:-1;;;13373:18:821;;;13366:56;13439:18;;4592:36:71;13113:350:821;4551:88:71;4648:26;4660:4;4666:7;4648:11;:26::i;2928:78:93:-;2505:21:452;:19;:21::i;:::-;2984:15:93::1;:13;:15::i;:::-;2547:20:452::0;1787:1;3053:7;:22;2873:209;2547:20;2928:78:93:o;1074:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1074:29:93;;-1:-1:-1;1074:29:93;:::o;918:134:211:-;-1:-1:-1;;;;;1017:28:211;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3284:446:93:-;3356:24;:22;:24::i;:::-;3351:80;;3396:24;;-1:-1:-1;;;3396:24:93;;;;;;;:::i;3351:80::-;3441:33;3477:17;:38;3513:1;3495:15;;;;;;;;;-1:-1:-1;;;;;3495:15:93;:19;;;;:::i;:::-;-1:-1:-1;;;;;3477:38:93;;;;;;;;;;;;3441:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3546:9;:18;;;3533:9;:31;3525:64;;;;-1:-1:-1;;;3525:64:93;;13670:2:821;3525:64:93;;;13652:21:821;13709:2;13689:18;;;13682:30;-1:-1:-1;;;13728:18:821;;;13721:50;13788:18;;3525:64:93;13468:344:821;3525:64:93;3600:61;3621:9;3632;:28;;;3600:20;:61::i;:::-;3693:18;;3677:46;;;12676:25:821;;;12732:2;12717:18;;12710:34;;;3677:46:93;;12649:18:821;3677:46:93;12502:248:821;2256:590:376;3279:19:450;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:450;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:450;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:450;;14019:2:821;3325:201:450;;;14001:21:821;14058:2;14038:18;;;14031:30;14097:34;14077:18;;;14070:62;-1:-1:-1;;;14148:18:821;;;14141:44;14202:19;;3325:201:450;13817:410:821;3325:201:450;3536:12;:16;;-1:-1:-1;;3536:16:450;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:450;;;;;3562:65;2550:51:376::1;2582:18;2550:31;:51::i;:::-;2612:11;:26:::0;;-1:-1:-1;;;;;;2612:26:376::1;-1:-1:-1::0;;;;;2612:26:376;::::1;;::::0;;2648:32:::1;2666:13:::0;2648:17:::1;:32::i;:::-;2690:52;2711:9;2722:19;2690:20;:52::i;:::-;2753:31;2771:12;2753:17;:31::i;:::-;2794:45;785:4:71;2825:13:376::0;2794:10:::1;:45::i;:::-;3651:14:450::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:450;;;3721:14;;-1:-1:-1;7924:36:821;;3721:14:450;;7912:2:821;7897:18;3721:14:450;;;;;;;3647:99;3269:483;2256:590:376;;;;;;;:::o;1643:633:72:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:72;:42;1893:367;;1972:5;1963;:14;1959:133;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:72;;-1:-1:-1;2060:13:72;;-1:-1:-1;;2060:13:72;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:72;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1322:131:71:-;1400:4;1423:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1423:23:71;;;;;;;;;;;;;;;1322:131::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;978:30:93:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;978:30:93;:::o;2592:107::-;2505:21:452;:19;:21::i;:::-;2672:20:93::1;2682:9;;2672;:20::i;2204:211:71:-:0;2283:4;2304:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2299:88;;-1:-1:-1;2353:14:71;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2353:23:71;;;;;;;;;;;;2346:30;;2299:88;-1:-1:-1;2404:4:71;2204:211;;;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:34;;834:14;851:12;:10;:12::i;:::-;834:29;-1:-1:-1;892:10:65;-1:-1:-1;;;;;892:20:65;;;;873:16;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;4835:911:93;4919:30;4951:16;4979:31;5013:13;4979:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5036:28;5078:14;:21;-1:-1:-1;;;;;5067:33:93;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5067:33:93;-1:-1:-1;5138:21:93;;5036:64;;-1:-1:-1;5110:25:93;;5208:194;5232:17;5228:1;:21;5208:194;;;5326:7;-1:-1:-1;;;;;5290:43:93;:13;:32;5304:14;5319:1;5304:17;;;;;;;;:::i;:::-;;;;;;;5290:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5290:32:93;-1:-1:-1;;;;;5290:43:93;;5270:14;5285:1;5270:17;;;;;;;;:::i;:::-;;;;;;:63;;;;;;;;;;;5351:14;5366:1;5351:17;;;;;;;;:::i;:::-;;;;;;;5347:44;;;5370:21;5390:1;5370:21;;:::i;:::-;;;5347:44;5251:3;;5208:194;;;;5442:16;-1:-1:-1;;;;;5428:31:93;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5428:31:93;;5412:47;;5469:13;5501:9;5496:196;5520:17;5516:1;:21;5496:196;;;5562:14;5577:1;5562:17;;;;;;;;:::i;:::-;;;;;;;5558:124;;;5622:14;5637:1;5622:17;;;;;;;;:::i;:::-;;;;;;;5599:13;5613:5;5599:20;;;;;;;;:::i;:::-;;;;;;;;;;:40;5657:10;5666:1;5657:10;;:::i;:::-;;;5558:124;5539:3;;5496:196;;;;5713:26;5731:7;5713:17;:26::i;:::-;5702:37;;4969:777;;;;;4835:911;;;:::o;2683:398:72:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:72;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;4222:547:376:-;4296:41;785:4:71;4324:12:376;:10;:12::i;4296:41::-;4288:68;;;;-1:-1:-1;;;4288:68:376;;;;;;;:::i;:::-;4457:18;;4447:7;:28;:63;;4503:7;4482:18;;:28;;;;:::i;:::-;4447:63;;;4478:1;4447:63;4426:18;:84;4582:11;;4521:188;;-1:-1:-1;;;;;4582:11:376;4615:4;4634:12;:10;:12::i;:::-;4660:7;4681:18;4521:47;:188::i;:::-;4725:37;;1004:25:821;;;4725:37:376;;992:2:821;977:18;4725:37:376;;;;;;;4222:547;:::o;3895:171:71:-;3991:19;;;;:13;:19;;;;;;3980:43;;4012:10;3980;:43::i;5752:139:93:-;5796:17;5837;:38;5873:1;5855:15;;;;;;;;;-1:-1:-1;;;;;5855:15:93;:19;;;;:::i;:::-;-1:-1:-1;;;;;5837:38:93;;;;;;;;;;;;:47;;;5825:59;;5752:139;:::o;565:34:56:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2580:287:452:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:452;;16033:2:821;2704:63:452;;;16015:21:821;16072:2;16052:18;;;16045:30;16111:33;16091:18;;;16084:61;16162:18;;2704:63:452;15831:355:821;2704:63:452;1830:1;2842:7;:18;2580:287::o;6327:1125:93:-;6420:9;-1:-1:-1;;;;;6455:8:93;;6400:10;6455:8;6447:37;;;;-1:-1:-1;;;6447:37:93;;16393:2:821;6447:37:93;;;16375:21:821;16432:2;16412:18;;;16405:30;-1:-1:-1;;;16451:18:821;;;16444:46;16507:18;;6447:37:93;16191:340:821;6447:37:93;6519:12;;-1:-1:-1;;;;;6519:12:93;6495:21;6546:7;6495:21;6554:17;:15;:17::i;:::-;-1:-1:-1;;;;;6546:26:93;;;;;;;;;;;;-1:-1:-1;6546:26:93;:39;-1:-1:-1;;;;;6546:39:93;:43;6542:362;;;6605:51;6638:17;:15;:17::i;:::-;6605:32;:51::i;:::-;6542:362;;;6687:12;6705:17;:15;:17::i;:::-;6687:36;;;;;;;-1:-1:-1;6687:36:93;;;;;;;;;-1:-1:-1;;;;;;6687:36:93;-1:-1:-1;;;;;6687:36:93;;;;;;;;;;6791:15;;6737:7;;6745:17;:15;:17::i;:::-;-1:-1:-1;;;;;6737:26:93;;;;;;;;;;;;-1:-1:-1;6737:26:93;:70;;-1:-1:-1;;;;;6737:70:93;;;-1:-1:-1;;;6737:70:93;;;;;;;;;6874:15;;:19;;-1:-1:-1;;;;;;;;;;6874:15:93;;;;:19;:::i;:::-;6821:7;:26;6829:17;:15;:17::i;:::-;-1:-1:-1;;;;;6821:26:93;;;;;;;;;;;;-1:-1:-1;6821:26:93;:72;;-1:-1:-1;;;;;6821:72:93;;;;-1:-1:-1;;;6821:72:93;-1:-1:-1;;;;;;;;6821:72:93;;;;;;;;;6542:362;6918:9;6913:419;6937:3;-1:-1:-1;;;;;6933:7:93;:1;:7;6913:419;;;6961:9;:13;;-1:-1:-1;;;;6961:13:93;-1:-1:-1;;;6961:13:93;;;-1:-1:-1;;;;;6988:39:93;;;7028:17;:15;:17::i;:::-;7055:4;7062:9;;7072:1;7062:12;;;;;;;:::i;:::-;;;;;;;6988:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7089:9:93;:13;;-1:-1:-1;;;;7089:13:93;-1:-1:-1;;;7089:13:93;;;-1:-1:-1;7147:17:93;;-1:-1:-1;7147:15:93;:17::i;:::-;7117:13;:27;7131:9;;7141:1;7131:12;;;;;;;:::i;:::-;;;;;;;7117:27;;;;;;;;;;;;:47;;;;;-1:-1:-1;;;;;7117:47:93;;;;;-1:-1:-1;;;;;7117:47:93;;;;;;7184:9;:23;7194:9;;7204:1;7194:12;;;;;;;:::i;:::-;;;;;;;;;;7184:23;;-1:-1:-1;7184:23:93;;;;;;;;-1:-1:-1;7184:23:93;;;;7179:143;;7253:4;7227:9;:23;7237:9;;7247:1;7237:12;;;;;;;:::i;:::-;;;;;;;7227:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;7275:13;7294:9;;7304:1;7294:12;;;;;;;:::i;:::-;7275:32;;;;;;;-1:-1:-1;7275:32:93;;;7294:12;7275:32;;;;7294:12;;;;;;;;;7275:32;;;;;-1:-1:-1;7179:143:93;6942:3;;6913:419;;;;7384:3;7341:7;:26;7349:17;:15;:17::i;:::-;-1:-1:-1;;;;;7341:26:93;;;;;;;;;;;;-1:-1:-1;7341:26:93;;;:46;;:26;;-1:-1:-1;7341:46:93;;;;-1:-1:-1;;;;;7341:46:93;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7341:46:93;;;;;-1:-1:-1;;;;;7341:46:93;;;;;;7435:9;;7403:42;;;;;;;:::i;:::-;;;;;;;;7416:17;:15;:17::i;:::-;-1:-1:-1;;;;;7403:42:93;;;;;;;;;;;6390:1062;;6327:1125;;:::o;2873:209:452:-;1787:1;3053:7;:22;2873:209::o;7183:222:376:-;7323:14;7360:38;:36;:38::i;:::-;7353:45;;7183:222;:::o;967:1021:292:-;1162:49;;1194:7;1162:49;-1:-1:-1;;;;;;;1225:25:292;;;1221:761;;1287:4;-1:-1:-1;;;;;1270:22:292;;;1266:626;;1400:44;;-1:-1:-1;;;1400:44:292;;;;;1004:25:821;;;-1:-1:-1;;;;;1400:35:292;;;;;977:18:821;;1400:44:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:69;1497:3;1502:7;1511:19;1462:34;:69::i;:::-;1221:761;;1266:626;1571:4;-1:-1:-1;;;;;1556:20:292;;;1552:340;;1664:9;1653:7;:20;1645:52;;;;-1:-1:-1;;;1645:52:292;;17665:2:821;1645:52:292;;;17647:21:821;17704:2;17684:18;;;17677:30;-1:-1:-1;;;17723:18:821;;;17716:49;17782:18;;1645:52:292;17463:343:821;1645:52:292;1721:19;-1:-1:-1;;;;;1715:34:292;;1758:7;1715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:761;;1552:340;1808:69;1843:3;1848:7;1857:19;1808:34;:69::i;1221:761::-;1922:49;1940:9;1951:5;1958:3;1963:7;1922:17;:49::i;:::-;967:1021;;;;;:::o;6512:137:376:-;6578:4;6601:41;6578:4;6629:12;:10;:12::i;10215:589:93:-;10328:9;10341:1;10328:14;10320:47;;;;-1:-1:-1;;;10320:47:93;;18013:2:821;10320:47:93;;;17995:21:821;18052:2;18032:18;;;18025:30;-1:-1:-1;;;18071:18:821;;;18064:50;18131:18;;10320:47:93;17811:344:821;10320:47:93;10399:15;;;-1:-1:-1;;;10399:15:93;;-1:-1:-1;;;;;10399:15:93;;10443:1;;10399:15;10424:20;10443:1;10399:15;10424:20;:::i;:::-;;;-1:-1:-1;;;;;10424:20:93;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10488:188:93;;;;;;;;;;;;;;;;;;10621:15;10488:188;;;;;;-1:-1:-1;10488:188:93;;;;;;10455:30;;;:17;:30;;;;;;;:221;;;;;-1:-1:-1;10455:221:93;;;;;;;;;;;;;;;;10691:15;;10687:111;;10772:15;10722:17;:34;10740:15;10754:1;10740:11;:15;:::i;:::-;10722:34;;;;;;;;;;;-1:-1:-1;10722:34:93;:47;;:65;10687:111;10310:494;10215:589;;:::o;5555:491:71:-;5643:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5643:23:71;;;;;;;;;;;;5638:402;;5825:41;5853:7;-1:-1:-1;;;;;5825:41:71;5863:2;5825:19;:41::i;:::-;5937:38;5965:4;5972:2;5937:19;:38::i;:::-;5734:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5734:263:71;;;;;;;;;;-1:-1:-1;;;5682:347:71;;;;;;;:::i;3475:152:72:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:72;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:72;;;4197:34;;;;4190:41;2279:101:93;;:::o;8840:534::-;8892:15;8956:36;8974:17;:15;:17::i;:::-;8956;:36::i;:::-;8910:7;:26;8918:17;:15;:17::i;:::-;-1:-1:-1;;;;;8910:26:93;-1:-1:-1;;;;;8910:26:93;;;;;;;;;;;;:43;;;:82;;;;:::i;:::-;8892:100;;9011:7;9022:1;9011:12;9003:35;;;;-1:-1:-1;;;9003:35:93;;19177:2:821;9003:35:93;;;19159:21:821;19216:2;19196:18;;;19189:30;-1:-1:-1;;;19235:18:821;;;19228:40;19285:18;;9003:35:93;18975:334:821;9003:35:93;9103:15;9049:7;:26;9057:17;:15;:17::i;:::-;-1:-1:-1;;;;;9049:26:93;;;;;;;;;;;;-1:-1:-1;9049:26:93;;;:70;;-1:-1:-1;;;;;9049:70:93;;;-1:-1:-1;;;9049:70:93;;;;;;;;;;9129:7;-1:-1:-1;9137:17:93;:15;:17::i;:::-;-1:-1:-1;;;;;9129:26:93;;;;;;;;;;;;-1:-1:-1;9129:26:93;:43;;;;:47;;;;9239:15;;:19;;9129:43;-1:-1:-1;;;9239:15:93;;-1:-1:-1;;;;;9239:15:93;:19;:::i;:::-;9186:7;:26;9194:17;:15;:17::i;:::-;-1:-1:-1;;;;;9186:26:93;;;;;;;;;;;;-1:-1:-1;9186:26:93;:72;;-1:-1:-1;;;;;9186:72:93;;;;-1:-1:-1;;;9186:72:93;-1:-1:-1;;;;;;;;9186:72:93;;;;;;;;;9269:40;9282:17;:15;:17::i;:::-;9301:7;9269:12;:40::i;:::-;9340:17;:15;:17::i;:::-;-1:-1:-1;;;;;9325:42:93;;9359:7;9325:42;;;;1004:25:821;;992:2;977:18;;858:177;9325:42:93;;;;;;;;8882:492;8840:534::o;1423:320:476:-;-1:-1:-1;;;;;1713:19:476;;:23;;;1423:320::o;670:242:211:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;787:9:211::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:211::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:211;:45;;-1:-1:-1;;850:45:211::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;831:3:211::1;782:124;;1651:235:93::0;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1737:24:93::1;:22;:24::i;:::-;-1:-1:-1::0;;;;;1780:36:93;::::1;1772:69;;;::::0;-1:-1:-1;;;1772:69:93;;19928:2:821;1772:69:93::1;::::0;::::1;19910:21:821::0;19967:2;19947:18;;;19940:30;-1:-1:-1;;;19986:18:821;;;19979:50;20046:18;;1772:69:93::1;19726:344:821::0;1772:69:93::1;1851:12;:28:::0;;-1:-1:-1;;;;;;1851:28:93::1;-1:-1:-1::0;;;;;1851:28:93;;;::::1;::::0;;;::::1;::::0;;1651:235::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;7517:1246:93:-;7593:21;7617:7;:26;7625:17;:15;:17::i;:::-;-1:-1:-1;;;;;7617:26:93;;;;;;;;;;;;-1:-1:-1;7617:26:93;;;:39;-1:-1:-1;;;;;7617:39:93;;;;-1:-1:-1;7686:9:93;;7721:8;;;;;7713:41;;;;-1:-1:-1;;;7713:41:93;;22858:2:821;7713:41:93;;;22840:21:821;22897:2;22877:18;;;22870:30;-1:-1:-1;;;22916:18:821;;;22909:50;22976:18;;7713:41:93;22656:344:821;7713:41:93;7789:3;-1:-1:-1;;;;;7772:20:93;:13;:20;;7764:61;;;;-1:-1:-1;;;7764:61:93;;23207:2:821;7764:61:93;;;23189:21:821;23246:2;23226:18;;;23219:30;-1:-1:-1;;;23265:18:821;;;23258:58;23333:18;;7764:61:93;23005:352:821;7764:61:93;7860:12;;-1:-1:-1;;;;;7860:12:93;7883:51;7916:17;:15;:17::i;7883:51::-;7966:3;-1:-1:-1;;;;;7949:20:93;:13;:20;7945:400;;7985:30;8018:12;7985:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7985:45:93;;;;;;;;;;;;;;;;;;;;;;;8049:9;8044:291;8068:13;:20;8064:1;:24;8044:291;;;8137:17;:15;:17::i;:::-;-1:-1:-1;;;;;8117:37:93;:13;8131:1;8117:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8117:37:93;;8113:208;;8196:13;8233:1;8210:13;:20;:24;;;;:::i;:::-;8196:39;;;;;;;;:::i;:::-;;;;;;;8178:12;8191:1;8178:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8178:57:93;;;;;-1:-1:-1;;;;;8178:57:93;;;;;;8257:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8257:18:93;;;;;-1:-1:-1;;;;;;8257:18:93;;;;;;8297:5;;8113:208;8090:3;;8044:291;;;;7971:374;7945:400;8397:3;8354:7;:26;8362:17;:15;:17::i;:::-;-1:-1:-1;;;;;8354:26:93;;;;;;;;;;;;-1:-1:-1;8354:26:93;;;:46;;:26;;-1:-1:-1;8354:46:93;;;;-1:-1:-1;;;;;8354:46:93;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8354:46:93;;;;;-1:-1:-1;;;;;8354:46:93;;;;;;8416:9;8411:285;8435:3;-1:-1:-1;;;;;8431:7:93;:1;:7;8411:285;;;8498:17;:15;:17::i;:::-;-1:-1:-1;;;;;8467:48:93;:13;:27;8481:9;;8491:1;8481:12;;;;;;;:::i;:::-;;;;;;;;;;8467:27;;-1:-1:-1;8467:27:93;;;;;;;;-1:-1:-1;8467:27:93;;-1:-1:-1;;;;;8467:27:93;:48;8459:71;;;;-1:-1:-1;;;8459:71:93;;23696:2:821;8459:71:93;;;23678:21:821;23735:2;23715:18;;;23708:30;-1:-1:-1;;;23754:18:821;;;23747:40;23804:18;;8459:71:93;23494:334:821;8459:71:93;8582:1;8544:13;:27;8558:9;;8568:1;8558:12;;;;;;;:::i;:::-;;;;;;;;;;8544:27;;-1:-1:-1;8544:27:93;;;;;;;;-1:-1:-1;8544:27:93;:40;;-1:-1:-1;;;;;;8544:40:93;-1:-1:-1;;;;;8544:40:93;;;;;;8598:39;;;8646:4;8653:17;:15;:17::i;:::-;8672:9;;8682:1;8672:12;;;;;;;:::i;:::-;;;;;;;8598:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8440:3;;;;;8411:285;;;;8746:9;;8711:45;;;;;;;:::i;:::-;;;;;;;;8727:17;:15;:17::i;:::-;-1:-1:-1;;;;;8711:45:93;;;;;;;;;;;7583:1180;;;7517:1246;;:::o;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;9428:312:93:-;-1:-1:-1;;;;;9533:14:93;;9501:16;9533:14;;;:7;:14;;;;;:27;-1:-1:-1;;;;;9533:27:93;:32;;9529:205;;-1:-1:-1;;;;;;9592:14:93;;;;;:7;:14;;;;;:31;;;;9428:312::o;9529:205::-;9699:24;9717:5;9699:17;:24::i;:::-;-1:-1:-1;;;;;9665:14:93;;;;;;:7;:14;;;;;:31;;;:58;;;;:::i;9529:205::-;9428:312;;;:::o;7065:112:376:-;7132:7;7158:12;:10;:12::i;9839:333:93:-;9925:15;9943:26;9961:7;9943:17;:26::i;:::-;-1:-1:-1;;;;;9979:16:93;;;;;;:7;:16;;;;;:33;;:44;;9925;;-1:-1:-1;9925:44:93;;9979:33;;:16;:44;;9925;;9979;:::i;:::-;;;;-1:-1:-1;;;;;;;10033:16:93;;;;;;:7;:16;;;;;:60;;-1:-1:-1;;;;;10077:15:93;10033:60;;-1:-1:-1;;;10033:60:93;;;;;;10146:15;;:19;;-1:-1:-1;;;;;;;;;;10146:15:93;;;;:19;:::i;:::-;-1:-1:-1;;;;;10103:16:93;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10103:62:93;;;;-1:-1:-1;;;10103:62:93;-1:-1:-1;;;;;;;;10103:62:93;;;;;;;;;;-1:-1:-1;9839:333:93:o;1058:401:211:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:211;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:478;;7183:222:376:o;2866:439:292:-;3088:12;3106:2;-1:-1:-1;;;;;3106:7:292;3122:5;3106:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:46;;;3148:7;3143:156;;3177:19;-1:-1:-1;;;;;3171:34:292;;3214:5;3171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3237:51:292;;-1:-1:-1;;;;;;;;3237:40:292;;;-1:-1:-1;3278:2:292;3282:5;3237:40;:51::i;:::-;2975:330;2866:439;;;:::o;2061:358::-;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;:::-;2230:183;;;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;1563:441:298:-;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:298;;1663:47;;-1:-1:-1;;;1720:6:298;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:298;;;;;;;;;-1:-1:-1;;;1745:6:298;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:298;;;;;;;;-1:-1:-1;1775:9:298;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:298;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:298;;;;;;;;-1:-1:-1;1890:1:298;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:298;;1911:55;;;;-1:-1:-1;;;1911:55:298;;24559:2:821;1911:55:298;;;24541:21:821;;;24578:18;;;24571:30;24637:34;24617:18;;;24610:62;24689:18;;1911:55:298;24357:356:821;5034:168:71;5112:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5112:23:71;;;;;;;;;;:30;;-1:-1:-1;;5112:30:71;5138:4;5112:30;;;5157:38;5184:10;;5121:4;;5157:38;;5112:14;5157:38;5034:168;;:::o;3690:253:72:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:72;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:72;;;-1:-1:-1;;;;;;3846:40:72;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5251:204:71:-;5330:25;5341:4;5347:7;5330:10;:25::i;:::-;5372:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5372:23:71;;;;;;;;;;5365:30;;-1:-1:-1;;5365:30:71;;;5410:38;5437:10;;5381:4;;5410:38;;5372:14;5410:38;5251:204;;:::o;10855:1047:93:-;-1:-1:-1;;;;;10981:16:93;;10930;10981;;;:7;:16;;;;;;;;10958:39;;;;;;;;;-1:-1:-1;;;;;10958:39:93;;;;;-1:-1:-1;;;10958:39:93;;;;;;;;;;-1:-1:-1;;;10958:39:93;;;-1:-1:-1;;;;;10958:39:93;;;;;;;;;;;;;;;;;11104:15;;10958:39;;;-1:-1:-1;;;11104:15:93;;;;10958:39;11130:766;11171:16;11167:1;:20;11130:766;;;11211:33;11247:20;;;:17;:20;;;;;;;;11211:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11302:23;;;:76;;11355:6;:23;;;-1:-1:-1;;;;;11302:76:93;;;;11328:9;:24;;;11302:76;11282:96;;11392:15;11410:9;:22;;;11436:1;11410:27;:70;;11465:15;11410:70;;;11440:9;:22;;;11410:70;11392:88;;11496:22;11520;11546:136;11603:6;:19;;;-1:-1:-1;;;;;11579:43:93;11590:9;11580:7;:19;;;;:::i;:::-;11579:43;;;;:::i;:::-;11640:9;:28;;;11546:15;:136::i;:::-;11495:187;;;;11697:18;11717;11739:62;11755:8;11782:9;:18;;;11765:14;:35;;;;:::i;:::-;11739:15;:62::i;:::-;11696:105;;;;11827:17;:34;;;;;11848:13;11827:34;:58;;11877:8;11827:58;;;11864:10;11827:58;11816:69;;11197:699;;;;;;;11194:1;11189:6;;;;;:::i;:::-;;;11130:766;;;;10948:954;;;10855:1047;;;:::o;5829:393:376:-;5934:18;;5922:8;:30;;5914:67;;;;-1:-1:-1;;;5914:67:376;;25274:2:821;5914:67:376;;;25256:21:821;25313:2;25293:18;;;25286:30;-1:-1:-1;;;25332:18:821;;;25325:54;25396:18;;5914:67:376;25072:348:821;5914:67:376;6013:8;5991:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6092:11:376;;6031:184;;-1:-1:-1;;;;;6092:11:376;6125:4;6144:7;6165:8;6187:18;6031:47;:184::i;1868:111:452:-;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;:::-;1938:34:452::1;:32;:34::i;7055:325:289:-:0;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;759:175:228:-;868:58;;-1:-1:-1;;;;;25909:32:821;;868:58:228;;;25891:51:821;25958:18;;;25951:34;;;841:86:228;;861:5;;-1:-1:-1;;;891:23:228;25864:18:821;;868:58:228;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1040:96;1060:5;1090:27;;;1119:4;1125:2;1129:5;1067:68;;;;;;;;;;:::i;1339:493:243:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:243;;-1:-1:-1;1705:1:243;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:243;-1:-1:-1;1339:493:243;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;1985:109:452;5374:13:450;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:450;;;;;;;:::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;8118:18;8129:6;8118:10;:18::i;:::-;8110:60;;;;-1:-1:-1;;;8110:60:289;;26198:2:821;8110:60:289;;;26180:21:821;26237:2;26217:18;;;26210:30;26276:31;26256:18;;;26249:59;26325:18;;8110:60:289;25996:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;26838:2:821;3711:85:228;;;26820:21:821;26877:2;26857:18;;;26850:30;26916:34;26896:18;;;26889:62;-1:-1:-1;;;26967:18:821;;;26960:40;27017:19;;3711:85:228;26636:406:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:289;;;;;;;;:::i;4108:223:530:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;375:286:821:-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:23;;-1:-1:-1;;;;;;580:32:821;;570:43;;560:71;;627:1;624;617:12;1040:367;1103:8;1113:6;1167:3;1160:4;1152:6;1148:17;1144:27;1134:55;;1185:1;1182;1175:12;1134:55;-1:-1:-1;1208:20:821;;-1:-1:-1;;;;;1240:30:821;;1237:50;;;1283:1;1280;1273:12;1237:50;1320:4;1312:6;1308:17;1296:29;;1380:3;1373:4;1363:6;1360:1;1356:14;1348:6;1344:27;1340:38;1337:47;1334:67;;;1397:1;1394;1387:12;1412:437;1498:6;1506;1559:2;1547:9;1538:7;1534:23;1530:32;1527:52;;;1575:1;1572;1565:12;1527:52;1615:9;1602:23;-1:-1:-1;;;;;1640:6:821;1637:30;1634:50;;;1680:1;1677;1670:12;1634:50;1719:70;1781:7;1772:6;1761:9;1757:22;1719:70;:::i;:::-;1808:8;;1693:96;;-1:-1:-1;1412:437:821;-1:-1:-1;;;;1412:437:821:o;1854:173::-;1922:20;;-1:-1:-1;;;;;1971:31:821;;1961:42;;1951:70;;2017:1;2014;2007:12;2032:808;2129:6;2137;2145;2153;2161;2214:3;2202:9;2193:7;2189:23;2185:33;2182:53;;;2231:1;2228;2221:12;2182:53;2254:29;2273:9;2254:29;:::i;:::-;2244:39;;2302:38;2336:2;2325:9;2321:18;2302:38;:::i;:::-;2292:48;;2387:2;2376:9;2372:18;2359:32;2349:42;;2442:2;2431:9;2427:18;2414:32;-1:-1:-1;;;;;2506:2:821;2498:6;2495:14;2492:34;;;2522:1;2519;2512:12;2492:34;2560:6;2549:9;2545:22;2535:32;;2605:7;2598:4;2594:2;2590:13;2586:27;2576:55;;2627:1;2624;2617:12;2576:55;2667:2;2654:16;2693:2;2685:6;2682:14;2679:34;;;2709:1;2706;2699:12;2679:34;2754:7;2749:2;2740:6;2736:2;2732:15;2728:24;2725:37;2722:57;;;2775:1;2772;2765:12;2722:57;2032:808;;;;-1:-1:-1;2032:808:821;;-1:-1:-1;2806:2:821;2798:11;;2828:6;2032:808;-1:-1:-1;;;2032:808:821:o;3052:180::-;3111:6;3164:2;3152:9;3143:7;3139:23;3135:32;3132:52;;;3180:1;3177;3170:12;3132:52;-1:-1:-1;3203:23:821;;3052:180;-1:-1:-1;3052:180:821:o;3604:254::-;3672:6;3680;3733:2;3721:9;3712:7;3708:23;3704:32;3701:52;;;3749:1;3746;3739:12;3701:52;3785:9;3772:23;3762:33;;3814:38;3848:2;3837:9;3833:18;3814:38;:::i;:::-;3804:48;;3604:254;;;;;:::o;3863:203::-;-1:-1:-1;;;;;4027:32:821;;;;4009:51;;3997:2;3982:18;;3863:203::o;4071:186::-;4130:6;4183:2;4171:9;4162:7;4158:23;4154:32;4151:52;;;4199:1;4196;4189:12;4151:52;4222:29;4241:9;4222:29;:::i;4262:127::-;4323:10;4318:3;4314:20;4311:1;4304:31;4354:4;4351:1;4344:15;4378:4;4375:1;4368:15;4394:275;4465:2;4459:9;4530:2;4511:13;;-1:-1:-1;;4507:27:821;4495:40;;-1:-1:-1;;;;;4550:34:821;;4586:22;;;4547:62;4544:88;;;4612:18;;:::i;:::-;4648:2;4641:22;4394:275;;-1:-1:-1;4394:275:821:o;4674:531::-;4717:5;4770:3;4763:4;4755:6;4751:17;4747:27;4737:55;;4788:1;4785;4778:12;4737:55;4824:6;4811:20;-1:-1:-1;;;;;4846:2:821;4843:26;4840:52;;;4872:18;;:::i;:::-;4916:55;4959:2;4940:13;;-1:-1:-1;;4936:27:821;4965:4;4932:38;4916:55;:::i;:::-;4996:2;4987:7;4980:19;5042:3;5035:4;5030:2;5022:6;5018:15;5014:26;5011:35;5008:55;;;5059:1;5056;5049:12;5008:55;5124:2;5117:4;5109:6;5105:17;5098:4;5089:7;5085:18;5072:55;5172:1;5147:16;;;5165:4;5143:27;5136:38;;;;5151:7;4674:531;-1:-1:-1;;;4674:531:821:o;5210:1514::-;5358:6;5366;5374;5382;5390;5398;5406;5459:3;5447:9;5438:7;5434:23;5430:33;5427:53;;;5476:1;5473;5466:12;5427:53;5499:29;5518:9;5499:29;:::i;:::-;5489:39;;5547:2;5600;5589:9;5585:18;5572:32;-1:-1:-1;;;;;5664:2:821;5656:6;5653:14;5650:34;;;5680:1;5677;5670:12;5650:34;5703:50;5745:7;5736:6;5725:9;5721:22;5703:50;:::i;:::-;5693:60;;5806:2;5795:9;5791:18;5778:32;5762:48;;5835:2;5825:8;5822:16;5819:36;;;5851:1;5848;5841:12;5819:36;5889:8;5878:9;5874:24;5864:34;;5936:7;5929:4;5925:2;5921:13;5917:27;5907:55;;5958:1;5955;5948:12;5907:55;5994:2;5981:16;6016:2;6012;6009:10;6006:36;;;6022:18;;:::i;:::-;6068:2;6065:1;6061:10;6051:20;;6091:28;6115:2;6111;6107:11;6091:28;:::i;:::-;6153:15;;;6223:11;;;6219:20;;;6184:12;;;;6251:19;;;6248:39;;;6283:1;6280;6273:12;6248:39;6307:11;;;;6327:148;6343:6;6338:3;6335:15;6327:148;;;6409:23;6428:3;6409:23;:::i;:::-;6397:36;;6360:12;;;;6453;;;;6327:148;;;6494:5;6484:15;;;;;;;;6518:38;6552:2;6541:9;6537:18;6518:38;:::i;:::-;6508:48;;6575:39;6609:3;6598:9;6594:19;6575:39;:::i;:::-;6565:49;;6661:3;6650:9;6646:19;6633:33;6623:43;;6713:3;6702:9;6698:19;6685:33;6675:43;;5210:1514;;;;;;;;;;:::o;6729:248::-;6797:6;6805;6858:2;6846:9;6837:7;6833:23;6829:32;6826:52;;;6874:1;6871;6864:12;6826:52;-1:-1:-1;;6897:23:821;;;6967:2;6952:18;;;6939:32;;-1:-1:-1;6729:248:821:o;7455:322::-;7524:6;7577:2;7565:9;7556:7;7552:23;7548:32;7545:52;;;7593:1;7590;7583:12;7545:52;7633:9;7620:23;-1:-1:-1;;;;;7658:6:821;7655:30;7652:50;;;7698:1;7695;7688:12;7652:50;7721;7763:7;7754:6;7743:9;7739:22;7721:50;:::i;8424:250::-;8509:1;8519:113;8533:6;8530:1;8527:13;8519:113;;;8609:11;;;8603:18;8590:11;;;8583:39;8555:2;8548:10;8519:113;;;-1:-1:-1;;8666:1:821;8648:16;;8641:27;8424:250::o;8679:270::-;8720:3;8758:5;8752:12;8785:6;8780:3;8773:19;8801:76;8870:6;8863:4;8858:3;8854:14;8847:4;8840:5;8836:16;8801:76;:::i;:::-;8931:2;8910:15;-1:-1:-1;;8906:29:821;8897:39;;;;8938:4;8893:50;;8679:270;-1:-1:-1;;8679:270:821:o;8954:800::-;9114:4;9143:2;9183;9172:9;9168:18;9213:2;9202:9;9195:21;9236:6;9271;9265:13;9302:6;9294;9287:22;9340:2;9329:9;9325:18;9318:25;;9402:2;9392:6;9389:1;9385:14;9374:9;9370:30;9366:39;9352:53;;9440:2;9432:6;9428:15;9461:1;9471:254;9485:6;9482:1;9479:13;9471:254;;;9578:2;9574:7;9562:9;9554:6;9550:22;9546:36;9541:3;9534:49;9606:39;9638:6;9629;9623:13;9606:39;:::i;:::-;9596:49;-1:-1:-1;9703:12:821;;;;9668:15;;;;9507:1;9500:9;9471:254;;;-1:-1:-1;9742:6:821;;8954:800;-1:-1:-1;;;;;;;8954:800:821:o;9759:709::-;9977:2;9989:21;;;10059:13;;9962:18;;;10081:22;;;9929:4;;10156;;10134:2;10119:18;;;10183:17;;;9929:4;10228:169;10242:6;10239:1;10236:13;10228:169;;;10303:13;;10291:26;;10337:12;;;;10372:15;;;;10264:1;10257:9;10228:169;;;-1:-1:-1;;;10448:4:821;10433:20;;;;10426:36;;;;-1:-1:-1;10414:3:821;9759:709;-1:-1:-1;;9759:709:821:o;10473:219::-;10622:2;10611:9;10604:21;10585:4;10642:44;10682:2;10671:9;10667:18;10659:6;10642:44;:::i;10697:127::-;10758:10;10753:3;10749:20;10746:1;10739:31;10789:4;10786:1;10779:15;10813:4;10810:1;10803:15;10829:183;-1:-1:-1;;;;;10948:10:821;;;10936;;;10932:27;;10971:12;;;10968:38;;;10986:18;;:::i;:::-;10968:38;10829:183;;;;:::o;11361:338::-;11563:2;11545:21;;;11602:2;11582:18;;;11575:30;-1:-1:-1;;;11636:2:821;11621:18;;11614:44;11690:2;11675:18;;11361:338::o;11704:184::-;11774:6;11827:2;11815:9;11806:7;11802:23;11798:32;11795:52;;;11843:1;11840;11833:12;11795:52;-1:-1:-1;11866:16:821;;11704:184;-1:-1:-1;11704:184:821:o;11893:128::-;11960:9;;;11981:11;;;11978:37;;;11995:18;;:::i;12026:125::-;12091:9;;;12112:10;;;12109:36;;;12125:18;;:::i;14431:127::-;14492:10;14487:3;14483:20;14480:1;14473:31;14523:4;14520:1;14513:15;14547:4;14544:1;14537:15;14563:521;14640:4;14646:6;14706:11;14693:25;14800:2;14796:7;14785:8;14769:14;14765:29;14761:43;14741:18;14737:68;14727:96;;14819:1;14816;14809:12;14727:96;14846:33;;14898:20;;;-1:-1:-1;;;;;;14930:30:821;;14927:50;;;14973:1;14970;14963:12;14927:50;15006:4;14994:17;;-1:-1:-1;15037:14:821;15033:27;;;15023:38;;15020:58;;;15074:1;15071;15064:12;15089:352;15300:6;15292;15287:3;15274:33;15395:2;15366:15;;;;-1:-1:-1;;;;;;15362:45:821;15326:16;;15351:57;;;15432:2;15424:11;;15089:352;-1:-1:-1;15089:352:821:o;15446:380::-;15525:1;15521:12;;;;15568;;;15589:61;;15643:4;15635:6;15631:17;15621:27;;15589:61;15696:2;15688:6;15685:14;15665:18;15662:38;15659:161;;15742:10;15737:3;15733:20;15730:1;15723:31;15777:4;15774:1;15767:15;15805:4;15802:1;15795:15;16536:375;-1:-1:-1;;;;;16794:15:821;;;16776:34;;16846:15;;;;16841:2;16826:18;;16819:43;16893:2;16878:18;;16871:34;;;;16726:2;16711:18;;16536:375::o;16916:180::-;-1:-1:-1;;;;;17021:10:821;;;17033;;;17017:27;;17056:11;;;17053:37;;;17070:18;;:::i;17101:357::-;17272:3;-1:-1:-1;;;;;17293:31:821;;17290:51;;;17337:1;17334;17327:12;17290:51;17371:6;17368:1;17364:14;17413:6;17405;17400:3;17387:33;17436:16;;;;;17101:357;-1:-1:-1;;;17101:357:821:o;18160:810::-;-1:-1:-1;;;18566:3:821;18559:36;18541:3;18624:6;18618:13;18640:75;18708:6;18703:2;18698:3;18694:12;18687:4;18679:6;18675:17;18640:75;:::i;:::-;-1:-1:-1;;;18774:2:821;18734:16;;;18766:11;;;18759:40;18824:13;;18846:76;18824:13;18908:2;18900:11;;18893:4;18881:17;;18846:76;:::i;:::-;18942:17;18961:2;18938:26;;18160:810;-1:-1:-1;;;;18160:810:821:o;19314:407::-;19516:2;19498:21;;;19555:2;19535:18;;;19528:30;19594:34;19589:2;19574:18;;19567:62;-1:-1:-1;;;19660:2:821;19645:18;;19638:41;19711:3;19696:19;;19314:407::o;20201:543::-;20303:2;20298:3;20295:11;20292:446;;;20339:1;20363:5;20360:1;20353:16;20407:4;20404:1;20394:18;20477:2;20465:10;20461:19;20458:1;20454:27;20448:4;20444:38;20513:4;20501:10;20498:20;20495:47;;;-1:-1:-1;20536:4:821;20495:47;20591:2;20586:3;20582:12;20579:1;20575:20;20569:4;20565:31;20555:41;;20646:82;20664:2;20657:5;20654:13;20646:82;;;20709:17;;;20690:1;20679:13;20646:82;;;20650:3;;;20201:543;;;:::o;20920:1345::-;21046:3;21040:10;-1:-1:-1;;;;;21065:6:821;21062:30;21059:56;;;21095:18;;:::i;:::-;21124:97;21214:6;21174:38;21206:4;21200:11;21174:38;:::i;:::-;21168:4;21124:97;:::i;:::-;21276:4;;21333:2;21322:14;;21350:1;21345:663;;;;22052:1;22069:6;22066:89;;;-1:-1:-1;22121:19:821;;;22115:26;22066:89;-1:-1:-1;;20877:1:821;20873:11;;;20869:24;20865:29;20855:40;20901:1;20897:11;;;20852:57;22168:81;;21315:944;;21345:663;20148:1;20141:14;;;20185:4;20172:18;;-1:-1:-1;;21381:20:821;;;21499:236;21513:7;21510:1;21507:14;21499:236;;;21602:19;;;21596:26;21581:42;;21694:27;;;;21662:1;21650:14;;;;21529:19;;21499:236;;;21503:3;21763:6;21754:7;21751:19;21748:201;;;21824:19;;;21818:26;-1:-1:-1;;21907:1:821;21903:14;;;21919:3;21899:24;21895:37;21891:42;21876:58;21861:74;;21748:201;-1:-1:-1;;;;;21995:1:821;21979:14;;;21975:22;21962:36;;-1:-1:-1;20920:1345:821:o;22270:381::-;22467:2;22456:9;22449:21;22430:4;22493:44;22533:2;22522:9;22518:18;22510:6;22493:44;:::i;:::-;22585:9;22577:6;22573:22;22568:2;22557:9;22553:18;22546:50;22613:32;22638:6;22630;22613:32;:::i;:::-;22605:40;22270:381;-1:-1:-1;;;;;22270:381:821:o;23362:127::-;23423:10;23418:3;23414:20;23411:1;23404:31;23454:4;23451:1;23444:15;23478:4;23475:1;23468:15;24043:168;24116:9;;;24147;;24164:15;;;24158:22;;24144:37;24134:71;;24185:18;;:::i;24216:136::-;24255:3;24283:5;24273:39;;24292:18;;:::i;:::-;-1:-1:-1;;;24328:18:821;;24216:136::o;24718:127::-;24779:10;24774:3;24770:20;24767:1;24760:31;24810:4;24807:1;24800:15;24834:4;24831:1;24824:15;24850:217;24890:1;24916;24906:132;;24960:10;24955:3;24951:20;24948:1;24941:31;24995:4;24992:1;24985:15;25023:4;25020:1;25013:15;24906:132;-1:-1:-1;25052:9:821;;24850:217::o;25425:287::-;25554:3;25592:6;25586:13;25608:66;25667:6;25662:3;25655:4;25647:6;25643:17;25608:66;:::i;:::-;25690:16;;;;;25425:287;-1:-1:-1;;25425:287:821:o;26354:277::-;26421:6;26474:2;26462:9;26453:7;26449:23;26445:32;26442:52;;;26490:1;26487;26480:12;26442:52;26522:9;26516:16;26575:5;26568:13;26561:21;26554:5;26551:32;26541:60;;26597:1;26594;26587:12",
    "linkReferences": {},
    "immutableReferences": {
      "92289": [
        {
          "start": 451,
          "length": 32
        },
        {
          "start": 2288,
          "length": 32
        },
        {
          "start": 2464,
          "length": 32
        },
        {
          "start": 5636,
          "length": 32
        },
        {
          "start": 12065,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "claimRewards()": "372500ab",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardTokenBalance()": "93ce5343",
    "getRewardsPerUnitTime()": "0e8b229b",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "indexedTokens(uint256)": "961004d3",
    "initialize(address,string,address[],address,address,uint256,uint256)": "6a5ab6e5",
    "isIndexed(uint256)": "fd48ba17",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "setContractURI(string)": "938e3d7b",
    "setRewardsPerUnitTime(uint256)": "23ef2580",
    "setTimeUnit(uint256)": "6360106f",
    "stake(uint256[])": "0fbf0a93",
    "stakerAddress(uint256)": "94067045",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdraw(uint256[])": "983d95ce",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensStaked\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isIndexed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"amountStaked\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RewardTokensDepositedByAdmin(uint256)\":{\"details\":\"Emitted when contract admin deposits reward tokens.\"},\"RewardTokensWithdrawnByAdmin(uint256)\":{\"details\":\"Emitted when contract admin withdraws reward tokens.\"},\"RewardsClaimed(address,uint256)\":{\"details\":\"Emitted when a staker claims staking rewards.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokensStaked(address,uint256[])\":{\"details\":\"Emitted when a set of token-ids are staked.\"},\"TokensWithdrawn(address,uint256[])\":{\"details\":\"Emitted when a set of staked token-ids are withdrawn.\"},\"UpdatedRewardsPerUnitTime(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates rewardsPerUnitTime.\"},\"UpdatedTimeUnit(uint256,uint256)\":{\"details\":\"Emitted when contract admin updates timeUnit.\"}},\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"contractType()\":{\"details\":\"Returns the module type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  List of token-ids staked by staker.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[],address,address,uint256,uint256)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setRewardsPerUnitTime(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_rewardsPerUnitTime\":\"New rewards per unit time.\"}},\"setTimeUnit(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256[])\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to stake.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdraw(uint256[])\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"nativeTokenWrapper\":{\"details\":\"The address of the native token wrapper contract.\"},\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and total rewards for a user.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setRewardsPerUnitTime(uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setTimeUnit(uint256)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256[])\":{\"notice\":\"Stake ERC721 Tokens.\"},\"withdraw(uint256[])\":{\"notice\":\"Withdraw staked tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/staking/NFTStake.sol\":\"NFTStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf\",\"dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a\",\"dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Staking721Upgradeable.sol\":{\"keccak256\":\"0x37f7195cc1ff4f7a55a91647fbe34dcedd50405ebfc21771b814d2185de93b21\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d83390e1063c2200c752fd58de0cf4b0a11f3203c89dea4ec77f7a76bf387c94\",\"dweb:/ipfs/QmaGdyAg2L3ngkdu3Ht8qQgU1EH9gUsGGq92RTEFvkoKhx\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IStaking721.sol\":{\"keccak256\":\"0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89\",\"dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"contracts/prebuilts/interface/staking/INFTStake.sol\":{\"keccak256\":\"0xa50c121c0d322526fe8432c9b69d0ae51d8e8467a3314e1af69da2de0f398559\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1fe3a11b07b0c7e3146fc191f2d60bc3e0397c87ab8d23f7a745bd51a48efb18\",\"dweb:/ipfs/QmThdDoyvZ4CEkDnxgZ5DS2tjHwrhdbpwrkNaw79auvqL2\"]},\"contracts/prebuilts/staking/NFTStake.sol\":{\"keccak256\":\"0x4193f0bf83144226a037737cc09322195b0bde8a80632ab9abcebfc7806bb2be\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d44bb4eb1d687aedbee0e51b5f22c49e152844c4eb6f30a865192086feb0579\",\"dweb:/ipfs/QmfAVYXPxcydJZPPxbGMuwK4qkJxSbjBevTqoDsDvZz4Dw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensDepositedByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensWithdrawnByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokensStaked",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexedTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIndexed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "amountStaked",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "contractType()": {
            "details": "Returns the module type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  List of token-ids staked by staker."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[],address,address,uint256,uint256)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setRewardsPerUnitTime(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_rewardsPerUnitTime": "New rewards per unit time."
            }
          },
          "setTimeUnit(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256[])": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to stake."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "withdraw(uint256[])": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and total rewards for a user."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setRewardsPerUnitTime(uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setTimeUnit(uint256)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256[])": {
            "notice": "Stake ERC721 Tokens."
          },
          "withdraw(uint256[])": {
            "notice": "Withdraw staked tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/staking/NFTStake.sol": "NFTStake"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0x00754fd93079350acb6b1d0451320cc4b4252bf7990aa39cde29abb5ca4a60ea",
        "urls": [
          "bzz-raw://c91392521b426c02b342d4ba0f2c5cad2c6074e1be90203c9525751dd23b36bf",
          "dweb:/ipfs/QmNjjCttJ9A39HMn3FTMqjQN5y7UoQrPUhQ7Nd8Ci7jFZj"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0x4d0e92086fc4427a5f041525a40499c4eb6d9dc6a5eb8c8358275527ef3ce383",
        "urls": [
          "bzz-raw://df24c5134cb68ba612cff4648ee8ec7d4a18158b20eb903b883d1dfe9c42bd3a",
          "dweb:/ipfs/QmUgqKCxTotDEyiGxB4dQjok32qz1Z9TTv4nUMHqZ1uehH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking721Upgradeable.sol": {
        "keccak256": "0x37f7195cc1ff4f7a55a91647fbe34dcedd50405ebfc21771b814d2185de93b21",
        "urls": [
          "bzz-raw://d83390e1063c2200c752fd58de0cf4b0a11f3203c89dea4ec77f7a76bf387c94",
          "dweb:/ipfs/QmaGdyAg2L3ngkdu3Ht8qQgU1EH9gUsGGq92RTEFvkoKhx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking721.sol": {
        "keccak256": "0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076",
        "urls": [
          "bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89",
          "dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/interface/staking/INFTStake.sol": {
        "keccak256": "0xa50c121c0d322526fe8432c9b69d0ae51d8e8467a3314e1af69da2de0f398559",
        "urls": [
          "bzz-raw://1fe3a11b07b0c7e3146fc191f2d60bc3e0397c87ab8d23f7a745bd51a48efb18",
          "dweb:/ipfs/QmThdDoyvZ4CEkDnxgZ5DS2tjHwrhdbpwrkNaw79auvqL2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/staking/NFTStake.sol": {
        "keccak256": "0x4193f0bf83144226a037737cc09322195b0bde8a80632ab9abcebfc7806bb2be",
        "urls": [
          "bzz-raw://6d44bb4eb1d687aedbee0e51b5f22c49e152844c4eb6f30a865192086feb0579",
          "dweb:/ipfs/QmfAVYXPxcydJZPPxbGMuwK4qkJxSbjBevTqoDsDvZz4Dw"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/staking/NFTStake.sol",
    "id": 92654,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "AddressUpgradeable": [
        160109
      ],
      "ContextUpgradeable": [
        161692
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ERC165Upgradeable": [
        162692
      ],
      "ERC2771ContextUpgradeable": [
        46402
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC165Upgradeable": [
        162704
      ],
      "IERC20": [
        14015
      ],
      "IERC721": [
        14221
      ],
      "IERC721ReceiverUpgradeable": [
        159184
      ],
      "IMulticall": [
        33577
      ],
      "INFTStake": [
        77798
      ],
      "IPermissions": [
        33907
      ],
      "IPermissionsEnumerable": [
        33932
      ],
      "IWETH": [
        55358
      ],
      "Initializable": [
        154159
      ],
      "Multicall": [
        21206
      ],
      "NFTStake": [
        92653
      ],
      "Permissions": [
        22111
      ],
      "PermissionsEnumerable": [
        22411
      ],
      "SafeERC20": [
        49165
      ],
      "Staking721Upgradeable": [
        31763
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7369:376",
    "nodes": [
      {
        "id": 92248,
        "nodeType": "PragmaDirective",
        "src": "39:24:376",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 92249,
        "nodeType": "ImportDirective",
        "src": "736:41:376",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC721.sol",
        "file": "../../eip/interface/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 14222,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92250,
        "nodeType": "ImportDirective",
        "src": "778:87:376",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 162693,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92251,
        "nodeType": "ImportDirective",
        "src": "866:89:376",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 159185,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92252,
        "nodeType": "ImportDirective",
        "src": "978:79:376",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 46403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92253,
        "nodeType": "ImportDirective",
        "src": "1068:39:376",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 21207,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92254,
        "nodeType": "ImportDirective",
        "src": "1108:43:376",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 65176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92255,
        "nodeType": "ImportDirective",
        "src": "1193:46:376",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 18094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92256,
        "nodeType": "ImportDirective",
        "src": "1240:51:376",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 22412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92258,
        "nodeType": "ImportDirective",
        "src": "1292:82:376",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking721Upgradeable.sol",
        "file": "../../extension/Staking721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 31764,
        "symbolAliases": [
          {
            "foreign": {
              "id": 92257,
              "name": "Staking721Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31763,
              "src": "1301:21:376",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 92259,
        "nodeType": "ImportDirective",
        "src": "1375:44:376",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/staking/INFTStake.sol",
        "file": "../interface/staking/INFTStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 92654,
        "sourceUnit": 77799,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 92653,
        "nodeType": "ContractDefinition",
        "src": "1421:5986:376",
        "nodes": [
          {
            "id": 92283,
            "nodeType": "VariableDeclaration",
            "src": "1658:58:376",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1683:11:376",
            "scope": 92653,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 92278,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1658:7:376",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4e46545374616b65",
                  "id": 92281,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1705:10:376",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a583f56595d24b930a6a8b1ef7fa966f10b923d7f872874075532a853a714f78",
                    "typeString": "literal_string \"NFTStake\""
                  },
                  "value": "NFTStake"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a583f56595d24b930a6a8b1ef7fa966f10b923d7f872874075532a853a714f78",
                    "typeString": "literal_string \"NFTStake\""
                  }
                ],
                "id": 92280,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1697:7:376",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 92279,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1697:7:376",
                  "typeDescriptions": {}
                }
              },
              "id": 92282,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1697:19:376",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 92286,
            "nodeType": "VariableDeclaration",
            "src": "1722:36:376",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1747:7:376",
            "scope": 92653,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 92284,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1722:7:376",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 92285,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1757:1:376",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 92289,
            "nodeType": "VariableDeclaration",
            "src": "1828:45:376",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 92287,
              "nodeType": "StructuredDocumentation",
              "src": "1765:58:376",
              "text": "@dev The address of the native token wrapper contract."
            },
            "mutability": "immutable",
            "name": "nativeTokenWrapper",
            "nameLocation": "1855:18:376",
            "scope": 92653,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 92288,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1828:7:376",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 92292,
            "nodeType": "VariableDeclaration",
            "src": "1947:26:376",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 92290,
              "nodeType": "StructuredDocumentation",
              "src": "1880:62:376",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1962:11:376",
            "scope": 92653,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 92291,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1947:7:376",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 92295,
            "nodeType": "VariableDeclaration",
            "src": "2040:34:376",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 92293,
              "nodeType": "StructuredDocumentation",
              "src": "1980:55:376",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "2056:18:376",
            "scope": 92653,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 92294,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2040:7:376",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 92307,
            "nodeType": "FunctionDefinition",
            "src": "2081:110:376",
            "nodes": [],
            "body": {
              "id": 92306,
              "nodeType": "Block",
              "src": "2134:57:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92302,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92289,
                      "src": "2144:18:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92303,
                      "name": "_nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92297,
                      "src": "2165:19:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2144:40:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 92305,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:40:376"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 92300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92299,
                  "name": "initializer",
                  "nameLocations": [
                    "2122:11:376"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2122:11:376"
                },
                "nodeType": "ModifierInvocation",
                "src": "2122:11:376"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 92298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92297,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2101:19:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92307,
                  "src": "2093:27:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:29:376"
            },
            "returnParameters": {
              "id": 92301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2134:0:376"
            },
            "scope": 92653,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92355,
            "nodeType": "FunctionDefinition",
            "src": "2256:590:376",
            "nodes": [],
            "body": {
              "id": 92354,
              "nodeType": "Block",
              "src": "2540:306:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92329,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92315,
                        "src": "2582:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 92328,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46339,
                      "src": "2550:31:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 92330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:51:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92331,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:51:376"
                },
                {
                  "expression": {
                    "id": 92334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92332,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92292,
                      "src": "2612:11:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92333,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92317,
                      "src": "2626:12:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2612:26:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 92335,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:26:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92337,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92319,
                        "src": "2666:13:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92336,
                      "name": "__Staking721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30840,
                      "src": "2648:17:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 92338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:32:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92339,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:32:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92341,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92321,
                        "src": "2711:9:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92342,
                        "name": "_rewardsPerUnitTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92323,
                        "src": "2722:19:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92340,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31625,
                      "src": "2690:20:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 92343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2690:52:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92344,
                  "nodeType": "ExpressionStatement",
                  "src": "2690:52:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92346,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92312,
                        "src": "2771:12:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 92345,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18086,
                      "src": "2753:17:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 92347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:31:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92348,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:31:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92350,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "2805:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 92351,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92310,
                        "src": "2825:13:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92349,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22335
                      ],
                      "referencedDeclaration": 22335,
                      "src": "2794:10:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 92352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:45:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92353,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:45:376"
                }
              ]
            },
            "documentation": {
              "id": 92308,
              "nodeType": "StructuredDocumentation",
              "src": "2197:54:376",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "6a5ab6e5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 92326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92325,
                  "name": "initializer",
                  "nameLocations": [
                    "2528:11:376"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154061,
                  "src": "2528:11:376"
                },
                "nodeType": "ModifierInvocation",
                "src": "2528:11:376"
              }
            ],
            "name": "initialize",
            "nameLocation": "2265:10:376",
            "parameters": {
              "id": 92324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92310,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2293:13:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2285:21:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92312,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2330:12:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2316:26:376",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92311,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:6:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92315,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2369:18:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2352:35:376",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92313,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2352:7:376",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 92314,
                    "nodeType": "ArrayTypeName",
                    "src": "2352:9:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92317,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2405:12:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2397:20:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92319,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2435:13:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2427:21:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92321,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "2466:9:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2458:17:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92323,
                  "mutability": "mutable",
                  "name": "_rewardsPerUnitTime",
                  "nameLocation": "2493:19:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92355,
                  "src": "2485:27:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2275:243:376"
            },
            "returnParameters": {
              "id": 92327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:376"
            },
            "scope": 92653,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92364,
            "nodeType": "FunctionDefinition",
            "src": "2906:99:376",
            "nodes": [],
            "body": {
              "id": 92363,
              "nodeType": "Block",
              "src": "2970:35:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92361,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92283,
                    "src": "2987:11:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 92360,
                  "id": 92362,
                  "nodeType": "Return",
                  "src": "2980:18:376"
                }
              ]
            },
            "documentation": {
              "id": 92356,
              "nodeType": "StructuredDocumentation",
              "src": "2852:49:376",
              "text": "@dev Returns the module type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "2915:12:376",
            "parameters": {
              "id": 92357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2927:2:376"
            },
            "returnParameters": {
              "id": 92360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92364,
                  "src": "2961:7:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92358,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2960:9:376"
            },
            "scope": 92653,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 92376,
            "nodeType": "FunctionDefinition",
            "src": "3061:103:376",
            "nodes": [],
            "body": {
              "id": 92375,
              "nodeType": "Block",
              "src": "3126:38:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92372,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92286,
                        "src": "3149:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3143:5:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 92370,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3143:5:376",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 92373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:14:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 92369,
                  "id": 92374,
                  "nodeType": "Return",
                  "src": "3136:21:376"
                }
              ]
            },
            "documentation": {
              "id": 92365,
              "nodeType": "StructuredDocumentation",
              "src": "3011:45:376",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "3070:15:376",
            "parameters": {
              "id": 92366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3085:2:376"
            },
            "returnParameters": {
              "id": 92369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92376,
                  "src": "3119:5:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 92367,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:5:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:7:376"
            },
            "scope": 92653,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 92389,
            "nodeType": "FunctionDefinition",
            "src": "3240:121:376",
            "nodes": [],
            "body": {
              "id": 92388,
              "nodeType": "Block",
              "src": "3267:94:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 92384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 92381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3285:3:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3289:6:376",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3285:10:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 92383,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92289,
                          "src": "3299:18:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3285:32:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 92385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:34:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 92380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3277:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:77:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92387,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:77:376"
                }
              ]
            },
            "documentation": {
              "id": 92377,
              "nodeType": "StructuredDocumentation",
              "src": "3170:65:376",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 92378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3247:2:376"
            },
            "returnParameters": {
              "id": 92379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3267:0:376"
            },
            "scope": 92653,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92465,
            "nodeType": "FunctionDefinition",
            "src": "3410:752:376",
            "nodes": [],
            "body": {
              "id": 92464,
              "nodeType": "Block",
              "src": "3486:676:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92399,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21787,
                            "src": "3512:18:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 92400,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                92652
                              ],
                              "referencedDeclaration": 92652,
                              "src": "3532:10:376",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 92401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3532:12:376",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92398,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21818,
                          "src": "3504:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 92402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3504:41:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 92403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:16:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 92397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3496:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:68:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92405,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:68:376"
                },
                {
                  "assignments": [
                    92407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92407,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "3583:12:376",
                      "nodeType": "VariableDeclaration",
                      "scope": 92464,
                      "src": "3575:20:376",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 92406,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3575:7:376",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92415,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 92411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 92408,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92292,
                        "src": "3598:11:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 92409,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65175,
                          "src": "3613:19:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 92410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3633:12:376",
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64943,
                        "src": "3613:32:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3598:47:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 92413,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92292,
                      "src": "3669:11:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 92414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3598:82:376",
                    "trueExpression": {
                      "id": 92412,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92289,
                      "src": "3648:18:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3575:105:376"
                },
                {
                  "assignments": [
                    92417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92417,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "3699:13:376",
                      "nodeType": "VariableDeclaration",
                      "scope": 92464,
                      "src": "3691:21:376",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3691:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92427,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92424,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3754:4:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 92423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3746:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92422,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3746:7:376",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3746:13:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 92419,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92407,
                            "src": "3722:12:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92418,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14015,
                          "src": "3715:6:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 92420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3715:20:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14015",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 92421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3736:9:376",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13960,
                      "src": "3715:30:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 92426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:45:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3691:69:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92431,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92292,
                        "src": "3831:11:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 92432,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            92652
                          ],
                          "referencedDeclaration": 92652,
                          "src": "3856:10:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 92433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3856:12:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 92436,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3890:4:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 92435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3882:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3882:7:376",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3882:13:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92438,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92392,
                        "src": "3909:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92439,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92289,
                        "src": "3930:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92428,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "3770:19:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 92430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3790:27:376",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "3770:47:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 92440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3770:188:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92441,
                  "nodeType": "ExpressionStatement",
                  "src": "3770:188:376"
                },
                {
                  "assignments": [
                    92443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92443,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "3976:12:376",
                      "nodeType": "VariableDeclaration",
                      "scope": 92464,
                      "src": "3968:20:376",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3968:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92455,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 92454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 92450,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4030:4:376",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTStake_$92653",
                                "typeString": "contract NFTStake"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTStake_$92653",
                                "typeString": "contract NFTStake"
                              }
                            ],
                            "id": 92449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4022:7:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 92448,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4022:7:376",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 92451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4022:13:376",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 92445,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92407,
                              "src": "3998:12:376",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 92444,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14015,
                            "src": "3991:6:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$14015_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 92446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3991:20:376",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$14015",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 92447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4012:9:376",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13960,
                        "src": "3991:30:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 92452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3991:45:376",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 92453,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92417,
                      "src": "4039:13:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3991:61:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3968:84:376"
                },
                {
                  "expression": {
                    "id": 92458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92456,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92295,
                      "src": "4063:18:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 92457,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92443,
                      "src": "4085:12:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4063:34:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92459,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:34:376"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 92461,
                        "name": "actualAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92443,
                        "src": "4142:12:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92460,
                      "name": "RewardTokensDepositedByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77785,
                      "src": "4113:28:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:42:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92463,
                  "nodeType": "EmitStatement",
                  "src": "4108:47:376"
                }
              ]
            },
            "baseFunctions": [
              77791
            ],
            "documentation": {
              "id": 92390,
              "nodeType": "StructuredDocumentation",
              "src": "3367:38:376",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 92395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92394,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3473:12:376"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154330,
                  "src": "3473:12:376"
                },
                "nodeType": "ModifierInvocation",
                "src": "3473:12:376"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "3419:19:376",
            "parameters": {
              "id": 92393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92392,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3447:7:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92465,
                  "src": "3439:15:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3439:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3438:17:376"
            },
            "returnParameters": {
              "id": 92396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:376"
            },
            "scope": 92653,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92510,
            "nodeType": "FunctionDefinition",
            "src": "4222:547:376",
            "nodes": [],
            "body": {
              "id": 92509,
              "nodeType": "Block",
              "src": "4278:491:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92473,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21787,
                            "src": "4304:18:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 92474,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                92652
                              ],
                              "referencedDeclaration": 92652,
                              "src": "4324:10:376",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 92475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4324:12:376",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 92472,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21818,
                          "src": "4296:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 92476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4296:41:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 92477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4339:16:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 92471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4288:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4288:68:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92479,
                  "nodeType": "ExpressionStatement",
                  "src": "4288:68:376"
                },
                {
                  "expression": {
                    "id": 92489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92480,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92295,
                      "src": "4426:18:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92481,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92468,
                          "src": "4447:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 92482,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92295,
                          "src": "4457:18:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4447:28:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92485,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92295,
                          "src": "4482:18:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 92486,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92468,
                          "src": "4503:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4482:28:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 92488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4447:63:376",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 92484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4478:1:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4426:84:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92490,
                  "nodeType": "ExpressionStatement",
                  "src": "4426:84:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92494,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92292,
                        "src": "4582:11:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 92497,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4615:4:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 92496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4607:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92495,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4607:7:376",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4607:13:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 92499,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            92652
                          ],
                          "referencedDeclaration": 92652,
                          "src": "4634:10:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 92500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4634:12:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92501,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92468,
                        "src": "4660:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92502,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92289,
                        "src": "4681:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92491,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4521:19:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 92493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4541:27:376",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "4521:47:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 92503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:188:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92504,
                  "nodeType": "ExpressionStatement",
                  "src": "4521:188:376"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 92506,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92468,
                        "src": "4754:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92505,
                      "name": "RewardTokensWithdrawnByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77780,
                      "src": "4725:28:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4725:37:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92508,
                  "nodeType": "EmitStatement",
                  "src": "4720:42:376"
                }
              ]
            },
            "baseFunctions": [
              77797
            ],
            "documentation": {
              "id": 92466,
              "nodeType": "StructuredDocumentation",
              "src": "4168:49:376",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawRewardTokens",
            "nameLocation": "4231:20:376",
            "parameters": {
              "id": 92469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92468,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4260:7:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92510,
                  "src": "4252:15:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4252:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4251:17:376"
            },
            "returnParameters": {
              "id": 92470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4278:0:376"
            },
            "scope": 92653,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92520,
            "nodeType": "FunctionDefinition",
            "src": "4845:116:376",
            "nodes": [],
            "body": {
              "id": 92519,
              "nodeType": "Block",
              "src": "4919:42:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92517,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92295,
                    "src": "4936:18:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 92516,
                  "id": 92518,
                  "nodeType": "Return",
                  "src": "4929:25:376"
                }
              ]
            },
            "baseFunctions": [
              31748
            ],
            "documentation": {
              "id": 92511,
              "nodeType": "StructuredDocumentation",
              "src": "4775:65:376",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "4854:21:376",
            "overrides": {
              "id": 92513,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4892:8:376"
            },
            "parameters": {
              "id": 92512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4875:2:376"
            },
            "returnParameters": {
              "id": 92516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92520,
                  "src": "4910:7:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4910:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4909:9:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92546,
            "nodeType": "FunctionDefinition",
            "src": "5151:215:376",
            "nodes": [],
            "body": {
              "id": 92545,
              "nodeType": "Block",
              "src": "5260:106:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 92537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92535,
                          "name": "isStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30779,
                          "src": "5278:9:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 92536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5291:1:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5278:14:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446972656374207472616e73666572",
                        "id": 92538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5294:17:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        },
                        "value": "Direct transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        }
                      ],
                      "id": 92534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5270:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:42:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92540,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:42:376"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 92541,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5329:4:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTStake_$92653",
                          "typeString": "contract NFTStake"
                        }
                      },
                      "id": 92542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5334:16:376",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92546,
                      "src": "5329:21:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 92543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "5351:8:376",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "5329:30:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 92533,
                  "id": 92544,
                  "nodeType": "Return",
                  "src": "5322:37:376"
                }
              ]
            },
            "baseFunctions": [
              159183
            ],
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5160:16:376",
            "overrides": {
              "id": 92530,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5234:8:376"
            },
            "parameters": {
              "id": 92529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92546,
                  "src": "5177:7:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5177:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92546,
                  "src": "5186:7:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92546,
                  "src": "5195:7:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5195:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92546,
                  "src": "5204:14:376",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 92527,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5204:5:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:43:376"
            },
            "returnParameters": {
              "id": 92533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92546,
                  "src": "5252:6:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 92531,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5252:6:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5251:8:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 92567,
            "nodeType": "FunctionDefinition",
            "src": "5372:206:376",
            "nodes": [],
            "body": {
              "id": 92566,
              "nodeType": "Block",
              "src": "5455:123:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 92564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 92559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 92554,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92548,
                        "src": "5472:11:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 92556,
                              "name": "IERC721ReceiverUpgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159184,
                              "src": "5492:26:376",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$159184_$",
                                "typeString": "type(contract IERC721ReceiverUpgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$159184_$",
                                "typeString": "type(contract IERC721ReceiverUpgradeable)"
                              }
                            ],
                            "id": 92555,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5487:4:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 92557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:32:376",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721ReceiverUpgradeable_$159184",
                            "typeString": "type(contract IERC721ReceiverUpgradeable)"
                          }
                        },
                        "id": 92558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5520:11:376",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5487:44:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5472:59:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92562,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92548,
                          "src": "5559:11:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 92560,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5535:5:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_NFTStake_$92653_$",
                            "typeString": "type(contract super NFTStake)"
                          }
                        },
                        "id": 92561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5541:17:376",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 162686,
                        "src": "5535:23:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 92563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5535:36:376",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5472:99:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 92553,
                  "id": 92565,
                  "nodeType": "Return",
                  "src": "5465:106:376"
                }
              ]
            },
            "baseFunctions": [
              162686
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5381:17:376",
            "overrides": {
              "id": 92550,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5431:8:376"
            },
            "parameters": {
              "id": 92549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92548,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5406:11:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92567,
                  "src": "5399:18:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 92547,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5399:6:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5398:20:376"
            },
            "returnParameters": {
              "id": 92553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92567,
                  "src": "5449:4:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5449:4:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5448:6:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92601,
            "nodeType": "FunctionDefinition",
            "src": "5829:393:376",
            "nodes": [],
            "body": {
              "id": 92600,
              "nodeType": "Block",
              "src": "5904:318:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92577,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92572,
                          "src": "5922:8:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 92578,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92295,
                          "src": "5934:18:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5922:30:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 92580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5954:26:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 92576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5914:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5914:67:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92582,
                  "nodeType": "ExpressionStatement",
                  "src": "5914:67:376"
                },
                {
                  "expression": {
                    "id": 92585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92583,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92295,
                      "src": "5991:18:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 92584,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92572,
                      "src": "6013:8:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5991:30:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92586,
                  "nodeType": "ExpressionStatement",
                  "src": "5991:30:376"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92590,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92292,
                        "src": "6092:11:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 92593,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6125:4:376",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$92653",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 92592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6117:7:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92591,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6117:7:376",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6117:13:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92595,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92570,
                        "src": "6144:7:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92596,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92572,
                        "src": "6165:8:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 92597,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92289,
                        "src": "6187:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92587,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "6031:19:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 92589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6051:27:376",
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65066,
                      "src": "6031:47:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 92598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:184:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92599,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:184:376"
                }
              ]
            },
            "baseFunctions": [
              31756
            ],
            "documentation": {
              "id": 92568,
              "nodeType": "StructuredDocumentation",
              "src": "5773:51:376",
              "text": "@dev Mint/Transfer ERC20 rewards to the staker."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "5838:12:376",
            "overrides": {
              "id": 92574,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5895:8:376"
            },
            "parameters": {
              "id": 92573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92570,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "5859:7:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92601,
                  "src": "5851:15:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5851:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92572,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "5876:8:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92601,
                  "src": "5868:16:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5868:7:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5850:35:376"
            },
            "returnParameters": {
              "id": 92575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5904:0:376"
            },
            "scope": 92653,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92615,
            "nodeType": "FunctionDefinition",
            "src": "6512:137:376",
            "nodes": [],
            "body": {
              "id": 92614,
              "nodeType": "Block",
              "src": "6584:65:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92609,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6609:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 92610,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            92652
                          ],
                          "referencedDeclaration": 92652,
                          "src": "6629:10:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 92611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6629:12:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92608,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6601:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 92612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:41:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 92607,
                  "id": 92613,
                  "nodeType": "Return",
                  "src": "6594:48:376"
                }
              ]
            },
            "baseFunctions": [
              31762
            ],
            "documentation": {
              "id": 92602,
              "nodeType": "StructuredDocumentation",
              "src": "6411:96:376",
              "text": "@dev Returns whether staking related restrictions can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6521:22:376",
            "overrides": {
              "id": 92604,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6560:8:376"
            },
            "parameters": {
              "id": 92603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6543:2:376"
            },
            "returnParameters": {
              "id": 92607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92615,
                  "src": "6578:4:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6578:4:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6577:6:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92629,
            "nodeType": "FunctionDefinition",
            "src": "6744:133:376",
            "nodes": [],
            "body": {
              "id": 92628,
              "nodeType": "Block",
              "src": "6812:65:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92623,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21787,
                        "src": "6837:18:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 92624,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            92652
                          ],
                          "referencedDeclaration": 92652,
                          "src": "6857:10:376",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 92625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6857:12:376",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92622,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21818,
                      "src": "6829:7:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 92626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6829:41:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 92621,
                  "id": 92627,
                  "nodeType": "Return",
                  "src": "6822:48:376"
                }
              ]
            },
            "baseFunctions": [
              18092
            ],
            "documentation": {
              "id": 92616,
              "nodeType": "StructuredDocumentation",
              "src": "6655:84:376",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6753:18:376",
            "overrides": {
              "id": 92618,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6788:8:376"
            },
            "parameters": {
              "id": 92617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6771:2:376"
            },
            "returnParameters": {
              "id": 92621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92629,
                  "src": "6806:4:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92619,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6806:4:376",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6805:6:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92639,
            "nodeType": "FunctionDefinition",
            "src": "7065:112:376",
            "nodes": [],
            "body": {
              "id": 92638,
              "nodeType": "Block",
              "src": "7141:36:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92635,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        92652
                      ],
                      "referencedDeclaration": 92652,
                      "src": "7158:10:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 92636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:12:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 92634,
                  "id": 92637,
                  "nodeType": "Return",
                  "src": "7151:19:376"
                }
              ]
            },
            "baseFunctions": [
              31742
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stakeMsgSender",
            "nameLocation": "7074:15:376",
            "overrides": {
              "id": 92631,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7114:8:376"
            },
            "parameters": {
              "id": 92630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7089:2:376"
            },
            "returnParameters": {
              "id": 92634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92639,
                  "src": "7132:7:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7132:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7131:9:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 92652,
            "nodeType": "FunctionDefinition",
            "src": "7183:222:376",
            "nodes": [],
            "body": {
              "id": 92651,
              "nodeType": "Block",
              "src": "7343:62:376",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 92647,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46402,
                        "src": "7360:25:376",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$46402_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 92648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7386:10:376",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46370,
                      "src": "7360:36:376",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 92649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7360:38:376",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 92646,
                  "id": 92650,
                  "nodeType": "Return",
                  "src": "7353:45:376"
                }
              ]
            },
            "baseFunctions": [
              21205,
              46370
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "7192:10:376",
            "overrides": {
              "id": 92643,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 92641,
                  "name": "ERC2771ContextUpgradeable",
                  "nameLocations": [
                    "7268:25:376"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46402,
                  "src": "7268:25:376"
                },
                {
                  "id": 92642,
                  "name": "Multicall",
                  "nameLocations": [
                    "7295:9:376"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21206,
                  "src": "7295:9:376"
                }
              ],
              "src": "7259:46:376"
            },
            "parameters": {
              "id": 92640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7202:2:376"
            },
            "returnParameters": {
              "id": 92646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92645,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7331:6:376",
                  "nodeType": "VariableDeclaration",
                  "scope": 92652,
                  "src": "7323:14:376",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7323:7:376",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7322:16:376"
            },
            "scope": 92653,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 92260,
              "name": "Initializable",
              "nameLocations": [
                "1446:13:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154159,
              "src": "1446:13:376"
            },
            "id": 92261,
            "nodeType": "InheritanceSpecifier",
            "src": "1446:13:376"
          },
          {
            "baseName": {
              "id": 92262,
              "name": "ContractMetadata",
              "nameLocations": [
                "1465:16:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18093,
              "src": "1465:16:376"
            },
            "id": 92263,
            "nodeType": "InheritanceSpecifier",
            "src": "1465:16:376"
          },
          {
            "baseName": {
              "id": 92264,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "1487:21:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "1487:21:376"
            },
            "id": 92265,
            "nodeType": "InheritanceSpecifier",
            "src": "1487:21:376"
          },
          {
            "baseName": {
              "id": 92266,
              "name": "ERC2771ContextUpgradeable",
              "nameLocations": [
                "1514:25:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46402,
              "src": "1514:25:376"
            },
            "id": 92267,
            "nodeType": "InheritanceSpecifier",
            "src": "1514:25:376"
          },
          {
            "baseName": {
              "id": 92268,
              "name": "Multicall",
              "nameLocations": [
                "1545:9:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21206,
              "src": "1545:9:376"
            },
            "id": 92269,
            "nodeType": "InheritanceSpecifier",
            "src": "1545:9:376"
          },
          {
            "baseName": {
              "id": 92270,
              "name": "Staking721Upgradeable",
              "nameLocations": [
                "1560:21:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31763,
              "src": "1560:21:376"
            },
            "id": 92271,
            "nodeType": "InheritanceSpecifier",
            "src": "1560:21:376"
          },
          {
            "baseName": {
              "id": 92272,
              "name": "ERC165Upgradeable",
              "nameLocations": [
                "1587:17:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 162692,
              "src": "1587:17:376"
            },
            "id": 92273,
            "nodeType": "InheritanceSpecifier",
            "src": "1587:17:376"
          },
          {
            "baseName": {
              "id": 92274,
              "name": "IERC721ReceiverUpgradeable",
              "nameLocations": [
                "1610:26:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 159184,
              "src": "1610:26:376"
            },
            "id": 92275,
            "nodeType": "InheritanceSpecifier",
            "src": "1610:26:376"
          },
          {
            "baseName": {
              "id": 92276,
              "name": "INFTStake",
              "nameLocations": [
                "1642:9:376"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77798,
              "src": "1642:9:376"
            },
            "id": 92277,
            "nodeType": "InheritanceSpecifier",
            "src": "1642:9:376"
          }
        ],
        "canonicalName": "NFTStake",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          92653,
          77798,
          159184,
          162692,
          162704,
          31763,
          34878,
          154370,
          21206,
          33577,
          46402,
          161692,
          22411,
          22111,
          33932,
          33907,
          18093,
          154159,
          33084
        ],
        "name": "NFTStake",
        "nameLocation": "1430:8:376",
        "scope": 92654,
        "usedErrors": [],
        "usedEvents": [
          33083,
          33846,
          33855,
          33864,
          34799,
          34807,
          34814,
          34821,
          34828,
          77780,
          77785,
          154005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 376
}