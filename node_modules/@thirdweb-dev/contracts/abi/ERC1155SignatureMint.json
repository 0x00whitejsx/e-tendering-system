{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "867:3966:4:-:0;;;1132:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:240;;;1356:13:4;1371:5;1378:7;1387:17;1406:11;2195:5:0;2202:7;1090:5:20;1083:4;:12;;;;;;:::i;:::-;-1:-1:-1;1105:6:20;:16;1114:7;1105:6;:16;:::i;:::-;;1017:111;;2221:26:0::1;2233:13;2221:11;;;:26;;:::i;:::-;2257:56;2282:17:::0;-1:-1:-1;;;;;2257:56:0;::::1;:24;:56::i;:::-;-1:-1:-1::0;;2541:22:240;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:240;;2651:117;3633:73;;;5534:25:821;;;5575:18;;;5568:34;;;;-1:-1:-1;5618:18:821;;5611:34;;;;5661:18;;;;5654:34;;;;3700:4:240;5704:19:821;;;5697:61;;;3633:73:240;;;;;;;;;;5506:19:821;;;;3633:73:240;;;3623:84;;;;;;;2896:85;;2991:28;;;;-1:-1:-1;;3029:21:240;;-1:-1:-1;1429:49:4::1;1456:21:::0;1429:26:::1;:49::i;:::-;1132:353:::0;;;;;;867:3966;;1421:172:70;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;4951:2:821;3549:25:77;;;4933:21:821;4990:2;4970:18;;;4963:30;-1:-1:-1;;;5009:18:821;;;5002:45;5064:18;;3549:25:77;;;;;;;;3509:76;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;5239:25:821;;;3689:46:77;;5227:2:821;5212:18;3689:46:77;;;;;;;3408:334;;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;5971:2:821;1626:27:74;;;5953:21:821;6010:2;5990:18;;;5983:30;-1:-1:-1;;;6029:18:821;;;6022:47;6086:18;;1626:27:74;5769:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;14:177:821:-;93:13;;-1:-1:-1;;;;;135:31:821;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:844;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:821;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:821;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;914:3;907:4;902:2;894:6;890:15;886:26;883:35;880:55;;;931:1;928;921:12;880:55;953:1;944:10;;963:133;977:2;974:1;971:9;963:133;;;1065:14;;;1061:23;;1055:30;1034:14;;;1030:23;;1023:63;988:10;;;;963:133;;;1140:1;1133:4;1128:2;1120:6;1116:15;1112:26;1105:37;1160:6;1151:15;;;;;;328:844;;;;:::o;1177:987::-;1312:6;1320;1328;1336;1344;1352;1405:3;1393:9;1384:7;1380:23;1376:33;1373:53;;;1422:1;1419;1412:12;1373:53;1445:40;1475:9;1445:40;:::i;:::-;1529:2;1514:18;;1508:25;1435:50;;-1:-1:-1;;;;;;1582:14:821;;;1579:34;;;1609:1;1606;1599:12;1579:34;1632:61;1685:7;1676:6;1665:9;1661:22;1632:61;:::i;:::-;1622:71;;1739:2;1728:9;1724:18;1718:25;1702:41;;1768:2;1758:8;1755:16;1752:36;;;1784:1;1781;1774:12;1752:36;;1807:63;1862:7;1851:8;1840:9;1836:24;1807:63;:::i;:::-;1797:73;;;1889:49;1934:2;1923:9;1919:18;1889:49;:::i;:::-;1981:3;1966:19;;1960:26;1879:59;;-1:-1:-1;;;;;;2015:31:821;;2005:42;;1995:70;;2061:1;2058;2051:12;1995:70;2084:5;-1:-1:-1;2108:50:821;2153:3;2138:19;;2108:50;:::i;:::-;2098:60;;1177:987;;;;;;;;:::o;2169:380::-;2248:1;2244:12;;;;2291;;;2312:61;;2366:4;2358:6;2354:17;2344:27;;2312:61;2419:2;2411:6;2408:14;2388:18;2385:38;2382:161;;2465:10;2460:3;2456:20;2453:1;2446:31;2500:4;2497:1;2490:15;2528:4;2525:1;2518:15;2382:161;;2169:380;;;:::o;2680:543::-;2782:2;2777:3;2774:11;2771:446;;;2818:1;2842:5;2839:1;2832:16;2886:4;2883:1;2873:18;2956:2;2944:10;2940:19;2937:1;2933:27;2927:4;2923:38;2992:4;2980:10;2977:20;2974:47;;;-1:-1:-1;3015:4:821;2974:47;3070:2;3065:3;3061:12;3058:1;3054:20;3048:4;3044:31;3034:41;;3125:82;3143:2;3136:5;3133:13;3125:82;;;3188:17;;;3169:1;3158:13;3125:82;;;3129:3;;;2771:446;2680:543;;;:::o;3399:1345::-;3519:10;;-1:-1:-1;;;;;3541:30:821;;3538:56;;;3574:18;;:::i;:::-;3603:97;3693:6;3653:38;3685:4;3679:11;3653:38;:::i;:::-;3647:4;3603:97;:::i;:::-;3755:4;;3812:2;3801:14;;3829:1;3824:663;;;;4531:1;4548:6;4545:89;;;-1:-1:-1;4600:19:821;;;4594:26;4545:89;-1:-1:-1;;3356:1:821;3352:11;;;3348:24;3344:29;3334:40;3380:1;3376:11;;;3331:57;4647:81;;3794:944;;3824:663;2627:1;2620:14;;;2664:4;2651:18;;-1:-1:-1;;3860:20:821;;;3978:236;3992:7;3989:1;3986:14;3978:236;;;4081:19;;;4075:26;4060:42;;4173:27;;;;4141:1;4129:14;;;;4008:19;;3978:236;;;3982:3;4242:6;4233:7;4230:19;4227:201;;;4303:19;;;4297:26;-1:-1:-1;;4386:1:821;4382:14;;;4398:3;4378:24;4374:37;4370:42;4355:58;4340:74;;4227:201;-1:-1:-1;;;;;4474:1:821;4458:14;;;4454:22;4441:36;;-1:-1:-1;3399:1345:821:o;5769:341::-;867:3966:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "867:3966:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:64:20;;;;;;;;;;-1:-1:-1;645:64:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:821;;;585:2;570:18;645:64:20;;;;;;;;8291:449:0;;;;;;;;;;-1:-1:-1;8291:449:0;;;;;:::i;:::-;;:::i;:::-;;;1184:14:821;;1177:22;1159:41;;1147:2;1132:18;8291:449:0;1019:187:821;418:18:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:74:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2240:32:821;;;2222:51;;2210:2;2195:18;676:104:74;2076:203:821;2715:359:0;;;;;;;;;;-1:-1:-1;2715:359:0;;;;;:::i;:::-;;:::i;1133:173:70:-;;;;;;;;;;-1:-1:-1;1133:173:70;;;;;:::i;:::-;;:::i;:::-;;2029:203:54;;;;;;;;;;-1:-1:-1;2029:203:54;;;;;:::i;:::-;;:::i;1421:325:77:-;;;;;;;;;;-1:-1:-1;1421:325:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3066:360:20:-;;;;;;;;;;-1:-1:-1;3066:360:20;;;;;:::i;:::-;;:::i;8999:109:0:-;;;;;;;;;;-1:-1:-1;9083:18:0;;8999:109;;1986:381:77;;;;;;;;;;-1:-1:-1;1986:381:77;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6199:32:821;;;6181:51;;6280:6;6268:19;;;6263:2;6248:18;;6241:47;6154:18;1986:381:77;6009:285:821;1788:460:20;;;;;;;;;;-1:-1:-1;1788:460:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3065:256:77:-;;;;;;;;;;-1:-1:-1;3065:256:77;;;;;:::i;:::-;;:::i;1711:96:54:-;;;;;;;;;;-1:-1:-1;1785:8:54;:15;1711:96;;7465:534:0;;;;;;;;;;-1:-1:-1;7465:534:0;;;;;:::i;:::-;;:::i;1189:228:74:-;;;;;;;;;;-1:-1:-1;1189:228:74;;;;;:::i;:::-;;:::i;954:43:54:-;;;;;;;;;;-1:-1:-1;954:43:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;871:86:70;;;;;;;;;;;;;:::i;1003:188:56:-;;;;;;;;;;-1:-1:-1;1003:188:56;;;;;:::i;:::-;;:::i;5486:1054:0:-;;;;;;;;;;-1:-1:-1;5486:1054:0;;;;;:::i;:::-;;:::i;442:20:20:-;;;;;;;;;;;;;:::i;1923:1328:4:-;;;;;;:::i;:::-;;:::i;4259:258:77:-;;;;;;;;;;-1:-1:-1;4259:258:77;;;;;:::i;:::-;;:::i;2435:291:20:-;;;;;;;;;;-1:-1:-1;2435:291:20;;;;;:::i;:::-;;:::i;696:567:65:-;;;;;;;;;;-1:-1:-1;696:567:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4005:601:0:-;;;;;;;;;;-1:-1:-1;4005:601:0;;;;;:::i;:::-;;:::i;962:279:81:-;;;;;;;;;;-1:-1:-1;962:279:81;;;;;:::i;:::-;;:::i;:::-;;;;13899:14:821;;13892:22;13874:41;;-1:-1:-1;;;;;13951:32:821;;;13946:2;13931:18;;13924:60;13847:18;962:279:81;13706:284:821;2477:144:77;;;;;;;;;;-1:-1:-1;2577:16:77;;-1:-1:-1;;;;;2577:16:77;;;-1:-1:-1;;;2602:10:77;;;;2477:144;;1782:46:0;;;;;;;;;;-1:-1:-1;1782:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;565:34:56;;;;;;;;;;;;;:::i;716:68:20:-;;;;;;;;;;-1:-1:-1;716:68:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:328;;;;;;;;;;-1:-1:-1;2732:328:20;;;;;:::i;:::-;;:::i;6825:346:0:-;;;;;;;;;;-1:-1:-1;6825:346:0;;;;;:::i;:::-;;:::i;8291:449::-;8394:4;-1:-1:-1;;;;;;;;;8429:25:0;;;;:100;;-1:-1:-1;;;;;;;;;;8504:25:0;;;8429:100;:176;;;-1:-1:-1;;;;;;;;;;8580:25:0;;;8429:176;:279;;;-1:-1:-1;;;;;;;8667:41:0;;-1:-1:-1;;;8667:41:0;8429:279;8410:298;8291:449;-1:-1:-1;;8291:449:0:o;418:18:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:104:74:-;764:9;;-1:-1:-1;;;;;764:9:74;;676:104::o;2715:359:0:-;2809:25;2837:14;;;:4;:14;;;;;2809:42;;2784:13;;2809:25;2837:14;2809:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:1;2871:11;2865:25;:29;2861:78;;;2917:11;2715:359;-1:-1:-1;;2715:359:0:o;2861:78::-;2949:22;2974:21;2986:8;2974:11;:21::i;:::-;2949:46;;3036:8;3046:19;:8;:17;:19::i;:::-;3019:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3005:62;;;;2715:359;;;:::o;1133:173:70:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:70;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2029:203:54:-;2093:7;2126:17;1785:8;:15;;1711:96;2126:17;2116:6;:27;2112:81;;2159:23;;-1:-1:-1;;;2159:23:54;;16629:2:821;2159:23:54;;;16611:21:821;16668:2;16648:18;;;16641:30;-1:-1:-1;;;16687:18:821;;;16680:43;16740:18;;2159:23:54;16427:337:821;2112:81:54;2209:8;2218:6;2209:16;;;;;;;;:::i;:::-;;;;;;;;;2202:23;;2029:203;;;:::o;1421:325:77:-;1540:16;1558:21;1592:17;1611:11;1626:31;1649:7;1626:22;:31::i;:::-;1591:66;;-1:-1:-1;1591:66:77;;-1:-1:-1;1591:66:77;;;-1:-1:-1;1733:6:77;1714:15;1591:66;1714:9;:15;:::i;:::-;1713:26;;;;:::i;:::-;1697:42;;1581:165;;1421:325;;;;;:::o;3066:360:20:-;-1:-1:-1;;;;;3278:18:20;;3286:10;3278:18;;:56;;-1:-1:-1;;;;;;3300:22:20;;;;;;:16;:22;;;;;;;;3323:10;3300:34;;;;;;;;;;3278:56;3270:87;;;;-1:-1:-1;;;3270:87:20;;;;;;;:::i;:::-;3367:52;3390:4;3396:2;3400:3;3405:7;3414:4;3367:22;:52::i;:::-;3066:360;;;;;:::o;1986:381:77:-;2066:7;2130:29;;;:19;:29;;;;;;;;2093:66;;;;;;;;;;-1:-1:-1;;;;;2093:66:77;;;;;;;;;;;;;;;;2066:7;;2189:39;:171;;2305:25;;2339:19;;;;2189:171;;;2248:16;;-1:-1:-1;;;;;2248:16:77;;;-1:-1:-1;;;2273:10:77;;;;2189:171;2170:190;;;;;1986:381;;;:::o;1788:460:20:-;1921:16;1976:3;:10;1957:8;:15;:29;1949:57;;;;-1:-1:-1;;;1949:57:20;;;;;;;:::i;:::-;2017:30;2064:8;:15;-1:-1:-1;;;;;2050:30:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2050:30:20;;2017:63;;2096:9;2091:120;2115:8;:15;2111:1;:19;2091:120;;;2170:9;:22;2180:8;2189:1;2180:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2170:22:20;-1:-1:-1;;;;;2170:22:20;;;;;;;;;;;;:30;2193:3;2197:1;2193:6;;;;;;;;:::i;:::-;;;;;;;2170:30;;;;;;;;;;;;2151:13;2165:1;2151:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2132:3;;2091:120;;;-1:-1:-1;2228:13:20;1788:460;-1:-1:-1;;;1788:460:20:o;3065:256:77:-;3177:20;:18;:20::i;:::-;3172:76;;3213:24;;-1:-1:-1;;;3213:24:77;;;;;;;:::i;3172:76::-;3258:56;3283:17;3302:11;3258:24;:56::i;:::-;3065:256;;:::o;7465:534:0:-;7599:10;-1:-1:-1;;;;;7628:16:0;;;;;:52;;-1:-1:-1;;;;;;7648:24:0;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;7628:52;7620:82;;;;-1:-1:-1;;;7620:82:0;;;;;;;:::i;:::-;7740:8;:15;7720:9;:16;:35;7712:63;;;;-1:-1:-1;;;7712:63:0;;18702:2:821;7712:63:0;;;18684:21:821;18741:2;18721:18;;;18714:30;-1:-1:-1;;;18760:18:821;;;18753:45;18815:18;;7712:63:0;18500:339:821;7712:63:0;7791:9;7786:157;7810:9;:16;7806:1;:20;7786:157;;;7893:8;7902:1;7893:11;;;;;;;;:::i;:::-;;;;;;;7858:9;:17;7868:6;-1:-1:-1;;;;;7858:17:0;-1:-1:-1;;;;;7858:17:0;;;;;;;;;;;;:31;7876:9;7886:1;7876:12;;;;;;;;:::i;:::-;;;;;;;7858:31;;;;;;;;;;;;:46;;7850:82;;;;-1:-1:-1;;;7850:82:0;;;;;;;:::i;:::-;7828:6;7833:1;7828:6;;:::i;:::-;;;7786:157;;;;7953:39;7964:6;7972:9;7983:8;7953:10;:39::i;:::-;7572:427;7465:534;;;:::o;1189:228:74:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:74;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;871:86:70:-;944:6;;-1:-1:-1;;;;;944:6:70;;871:86::o;1003:188:56:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:56;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5486:1054:0:-;5670:10;:8;:10::i;:::-;5662:46;;;;-1:-1:-1;;;5662:46:0;;;;;;;:::i;:::-;5744:1;5726:8;:15;:19;5718:52;;;;-1:-1:-1;;;5718:52:0;;;;;;;:::i;:::-;5808:8;:15;5788:9;:16;:35;5780:64;;;;-1:-1:-1;;;5780:64:0;;20229:2:821;5780:64:0;;;20211:21:821;20268:2;20248:18;;;20241:30;-1:-1:-1;;;20287:18:821;;;20280:46;20343:18;;5780:64:0;20027:340:821;5780:64:0;5855:20;5878:19;9083:18;;;8999:109;5878:19;5855:42;-1:-1:-1;5855:42:0;5907:25;;5989:333;6013:9;:16;6009:1;:20;5989:333;;;-1:-1:-1;;6057:9:0;6067:1;6057:12;;;;;;;;:::i;:::-;;;;;;;:33;6053:259;;6125:12;6110:9;6120:1;6110:12;;;;;;;;:::i;:::-;;;;;;;;;;:27;6156:17;6172:1;6156:17;;:::i;:::-;;-1:-1:-1;6191:17:0;6207:1;6191:17;;:::i;:::-;;;6053:259;;;6270:12;6255:9;6265:1;6255:12;;;;;;;;:::i;:::-;;;;;;;:27;6247:50;;;;-1:-1:-1;;;6247:50:0;;;;;;;:::i;:::-;6031:6;6036:1;6031:6;;:::i;:::-;;;5989:333;;;-1:-1:-1;6336:16:0;;6332:108;;6368:61;6387:17;6406:12;6420:8;6368:18;:61::i;:::-;;;6332:108;6471:12;6450:18;:33;;;;6493:40;6504:3;6509:9;6520:8;6493:40;;;;;;;;;;;;:10;:40::i;:::-;5652:888;;;5486:1054;;;;:::o;442:20:20:-;;;;;;;:::i;1923:1328:4:-;2069:14;2119:1;2103:4;:13;;;:17;2095:50;;;;-1:-1:-1;;;2095:50:4;;;;;;;:::i;:::-;2156:21;2187:20;2210:19;9083:18:0;;;8999:109;2210:19:4;2187:42;;-1:-1:-1;;2244:4:4;:12;;;:33;2240:252;;2309:12;2293:28;;2357:1;2335:18;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;2240:252:4;;-1:-1:-1;2240:252:4;;2412:12;2397:4;:12;;;:27;2389:50;;;;-1:-1:-1;;;2389:50:4;;;;;;;:::i;:::-;2469:4;:12;;;2453:28;;2240:252;2550:33;2566:4;2572:10;;2550:15;:33::i;:::-;2541:42;-1:-1:-1;2594:16:4;2613:7;;;;:4;:7;:::i;:::-;2594:26;-1:-1:-1;2656:97:4;2677:25;;;;;;;;:::i;:::-;2704:13;;;;2719;;;;;;;;:::i;:::-;2734:4;:18;;;2656:20;:97::i;:::-;2842:1;2809:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2809:35:4;;2805:146;;2860:80;2886:13;2901:21;;;;;;;;:::i;:::-;2924:4;:15;;;2860:25;:80::i;:::-;-1:-1:-1;;2984:4:4;:12;;;:33;2980:101;;3033:37;3046:13;3061:8;;;;:4;:8;:::i;:::-;3033:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3033:12:4;;-1:-1:-1;;;3033:37:4:i;:::-;3115:49;3121:8;3131:13;3146:4;:13;;;3115:49;;;;;;;;;;;;:5;:49::i;:::-;3224:13;3214:8;-1:-1:-1;;;;;3180:64:4;3206:6;-1:-1:-1;;;;;3180:64:4;;3239:4;3180:64;;;;;;:::i;:::-;;;;;;;;2085:1166;;;1923:1328;;;;;:::o;4259:258:77:-;4376:20;:18;:20::i;:::-;4371:76;;4412:24;;-1:-1:-1;;;4412:24:77;;;;;;;:::i;4371:76::-;4457:53;4483:8;4493:10;4505:4;4457:25;:53::i;:::-;4259:258;;;:::o;2435:291:20:-;2545:10;-1:-1:-1;;;;;2573:17:20;;;;2565:44;;;;-1:-1:-1;;;2565:44:20;;24140:2:821;2565:44:20;;;24122:21:821;24179:2;24159:18;;;24152:30;-1:-1:-1;;;24198:18:821;;;24191:44;24252:18;;2565:44:20;23938:338:821;2565:44:20;-1:-1:-1;;;;;2619:23:20;;;;;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;2619:44:20;;;;;;;;;;2678:41;;1159::821;;;2678::20;;1132:18:821;2678:41:20;;;;;;;;2519:207;2435:291;;:::o;696:567:65:-;756:22;812:4;-1:-1:-1;;;;;800:24:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:65;-1:-1:-1;1415:10:65;834:14;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:65;;-1:-1:-1;;;1156:52:65:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;922:311;;;;1242:14;;696:567;;;;:::o;4005:601:0:-;4127:10;:8;:10::i;:::-;4119:46;;;;-1:-1:-1;;;4119:46:0;;;;;;;:::i;:::-;4176:21;4207:20;4230:19;9083:18;;;8999:109;4230:19;4207:42;;-1:-1:-1;;4264:8:0;:29;4260:291;;4325:12;4309:28;;4373:1;4351:18;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;4388:37:0;;-1:-1:-1;4401:12:0;4415:9;4388:12;:37::i;:::-;4260:291;;;4475:12;4464:8;:23;4456:46;;;;-1:-1:-1;;;4456:46:0;;;;;;;:::i;:::-;4532:8;4516:24;;4260:291;4561:38;4567:3;4572:13;4587:7;4561:38;;;;;;;;;;;;:5;:38::i;:::-;4109:497;;4005:601;;;;:::o;962:279:81:-;1084:12;1098:14;1133:33;1149:4;1155:10;;1133:15;:33::i;:::-;1194:8;;;;1187:16;;;;:6;:16;;;;;;1124:42;;-1:-1:-1;1187:16:81;;1186:17;:48;;;;;1207:27;1227:6;1207:19;:27::i;:::-;1176:58;;962:279;;;;;;:::o;565:34:56:-;;;;;;;:::i;2732:328:20:-;-1:-1:-1;;;;;2919:18:20;;2927:10;2919:18;;:56;;-1:-1:-1;;;;;;2941:22:20;;;;;;:16;:22;;;;;;;;2964:10;2941:34;;;;;;;;;;2919:56;2911:87;;;;-1:-1:-1;;;2911:87:20;;;;;;;:::i;:::-;3008:45;3026:4;3032:2;3036;3040:6;3048:4;3008:17;:45::i;6825:346:0:-;6934:10;-1:-1:-1;;;;;6963:16:0;;;;;:52;;-1:-1:-1;;;;;;6983:24:0;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6963:52;6955:82;;;;-1:-1:-1;;;6955:82:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7055:17:0;;;;;;:9;:17;;;;;;;;:27;;;;;;;;;:38;-1:-1:-1;7055:38:0;7047:74;;;;-1:-1:-1;;;7047:74:0;;;;;;;:::i;:::-;7132:32;7138:6;7146:8;7156:7;7132:5;:32::i;2905:390:54:-;2967:13;2992:25;3020:17;1785:8;:15;;1711:96;3020:17;2992:45;;3047:24;3074:8;3047:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:9;3093:161;3117:17;3113:1;:21;3093:161;;;3173:7;3181:1;3173:10;;;;;;;;:::i;:::-;;;;;;;3162:8;:21;3158:86;;;3210:7;:19;3218:7;3226:1;3218:10;;;;;;;;:::i;:::-;;;;;;;3210:19;;;;;;;;;;;3203:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:390;;;:::o;3158:86::-;3136:6;3141:1;3136:6;;:::i;:::-;;;3093:161;;;-1:-1:-1;3263:25:54;;-1:-1:-1;;;3263:25:54;;25366:2:821;3263:25:54;;;25348:21:821;25405:2;25385:18;;;25378:30;-1:-1:-1;;;25424:18:821;;;25417:45;25479:18;;3263:25:54;25164:339:821;303:703:298;359:13;576:5;585:1;576:10;572:51;;-1:-1:-1;;602:10:298;;;;;;;;;;;;-1:-1:-1;;;602:10:298;;;;;303:703::o;572:51::-;647:5;632:12;686:75;693:9;;686:75;;718:8;;;;:::i;:::-;;-1:-1:-1;740:10:298;;-1:-1:-1;748:2:298;740:10;;:::i;:::-;;;686:75;;;770:19;802:6;-1:-1:-1;;;;;792:17:298;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;792:17:298;;770:39;;819:150;826:10;;819:150;;852:11;862:1;852:11;;:::i;:::-;;-1:-1:-1;920:10:298;928:2;920:5;:10;:::i;:::-;907:24;;:2;:24;:::i;:::-;894:39;;877:6;884;877:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;877:56:298;;;;;;;;-1:-1:-1;947:11:298;956:2;947:11;;:::i;:::-;;;819:150;;;992:6;303:703;-1:-1:-1;;;;303:703:298:o;10029:115:0:-;10093:4;10130:7;:5;:7::i;:::-;-1:-1:-1;;;;;10116:21:0;:10;-1:-1:-1;;;;;10116:21:0;;10109:28;;10029:115;:::o;1421:172:70:-;1501:6;;;-1:-1:-1;;;;;1517:18:70;;;-1:-1:-1;;;;;;1517:18:70;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;4364:967:20:-;4584:7;:14;4570:3;:10;:28;4562:56;;;;-1:-1:-1;;;4562:56:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;4636:16:20;;4628:41;;;;-1:-1:-1;;;4628:41:20;;;;;;;:::i;:::-;4699:10;4720:60;4699:10;4751:4;4757:2;4761:3;4766:7;4775:4;4720:20;:60::i;:::-;4796:9;4791:385;4815:3;:10;4811:1;:14;4791:385;;;4846:10;4859:3;4863:1;4859:6;;;;;;;;:::i;:::-;;;;;;;4846:19;;4879:14;4896:7;4904:1;4896:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4943:15:20;;4921:19;4943:15;;;:9;:15;;;;;;:19;;;;;;;;;;;4896:10;;-1:-1:-1;4984:21:20;;;;4976:50;;;;-1:-1:-1;;;4976:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;5068:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;5090:20;;;5068:42;;5138:13;;;;;;;;;;;:17;;;;;;;;:27;;5104:6;;5068:15;5138:27;;5104:6;;5138:27;:::i;:::-;;;;-1:-1:-1;;4827:3:20;;;;;-1:-1:-1;4791:385:20;;-1:-1:-1;;4791:385:20;;;5221:2;-1:-1:-1;;;;;5191:47:20;5215:4;-1:-1:-1;;;;;5191:47:20;5205:8;-1:-1:-1;;;;;5191:47:20;-1:-1:-1;;;;;;;;;;;5225:3:20;5230:7;5191:47;;;;;;;:::i;:::-;;;;;;;;5249:75;5285:8;5295:4;5301:2;5305:3;5310:7;5319:4;5249:35;:75::i;3408:334:77:-;3527:6;3513:11;:20;3509:76;;;3549:25;;-1:-1:-1;;;3549:25:77;;;;;;;:::i;3509:76::-;3595:16;:36;;-1:-1:-1;;;;;3595:36:77;;-1:-1:-1;;;;;;3641:32:77;;;;;-1:-1:-1;;;3641:32:77;;;;;;;;3689:46;;597:25:821;;;3689:46:77;;585:2:821;570:18;3689:46:77;;;;;;;3408:334;;:::o;7194:769:20:-;-1:-1:-1;;;;;7311:18:20;;7303:45;;;;-1:-1:-1;;;7303:45:20;;;;;;;:::i;:::-;7380:7;:14;7366:3;:10;:28;7358:56;;;;-1:-1:-1;;;7358:56:20;;;;;;;:::i;:::-;7425:16;7444:10;7425:29;;7465:66;7486:8;7496:4;7510:1;7514:3;7519:7;7465:66;;;;;;;;;;;;:20;:66::i;:::-;7547:9;7542:344;7566:3;:10;7562:1;:14;7542:344;;;7597:10;7610:3;7614:1;7610:6;;;;;;;;:::i;:::-;;;;;;;7597:19;;7630:14;7647:7;7655:1;7647:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7694:15:20;;7672:19;7694:15;;;:9;:15;;;;;;:19;;;;;;;;;;;7647:10;;-1:-1:-1;7735:21:20;;;;7727:50;;;;-1:-1:-1;;;7727:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;7819:15:20;;;;;;:9;:15;;;;;;;;:19;;;;;;;;;;7841:20;;7819:42;;7578:3;;7542:344;;;;7939:1;-1:-1:-1;;;;;7901:55:20;7925:4;-1:-1:-1;;;;;7901:55:20;7915:8;-1:-1:-1;;;;;7901:55:20;-1:-1:-1;;;;;;;;;;;7943:3:20;7948:7;7901:55;;;;;;;:::i;:::-;;;;;;;;7293:670;7194:769;;;:::o;1499:265:74:-;-1:-1:-1;;;;;1582:28:74;;1578:86;;1626:27;;-1:-1:-1;;;1626:27:74;;27943:2:821;1626:27:74;;;27925:21:821;27982:2;27962:18;;;27955:30;-1:-1:-1;;;28001:18:821;;;27994:47;28058:18;;1626:27:74;27741:341:821;1578:86:74;1673:9;:26;;-1:-1:-1;;;;;;1673:26:74;-1:-1:-1;;;;;1673:26:74;;;;;;;;1714:43;;;;-1:-1:-1;;1714:43:74;1499:265;:::o;1273:185:56:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4591:362:54:-;4741:25;;4805:24;4816:13;4805:8;:24;:::i;:::-;4877:8;:22;;;;;;;;;;;;;-1:-1:-1;4910:16:54;;;:7;4877:22;4910:16;;;;4795:34;;-1:-1:-1;4795:34:54;;-1:-1:-1;4910:36:54;4929:17;4910:16;:36;:::i;:::-;;4591:362;;;;;;:::o;5958:667:20:-;-1:-1:-1;;;;;6130:16:20;;6122:41;;;;-1:-1:-1;;;6122:41:20;;;;;;;:::i;:::-;6195:7;:14;6181:3;:10;:28;6173:56;;;;-1:-1:-1;;;6173:56:20;;;;;;;:::i;:::-;6259:10;6280:66;6259:10;6240:16;6323:2;6327:3;6332:7;6341:4;6280:20;:66::i;:::-;6362:9;6357:101;6381:3;:10;6377:1;:14;6357:101;;;6437:7;6445:1;6437:10;;;;;;;;:::i;:::-;;;;;;;6412:9;:13;6422:2;-1:-1:-1;;;;;6412:13:20;-1:-1:-1;;;;;6412:13:20;;;;;;;;;;;;:21;6426:3;6430:1;6426:6;;;;;;;;:::i;:::-;;;;;;;6412:21;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;6393:3:20;;6357:101;;;;6509:2;-1:-1:-1;;;;;6473:53:20;6505:1;-1:-1:-1;;;;;6473:53:20;6487:8;-1:-1:-1;;;;;6473:53:20;-1:-1:-1;;;;;;;;;;;6513:3:20;6518:7;6473:53;;;;;;;:::i;:::-;;;;;;;;6537:81;6573:8;6591:1;6595:2;6599:3;6604:7;6613:4;6537:35;:81::i;1488:550:81:-;1585:14;1611:12;1653:24;1660:4;1666:10;;1653:6;:24::i;:::-;1633:44;-1:-1:-1;1633:44:81;-1:-1:-1;1633:44:81;1688:35;;;;-1:-1:-1;;;1688:35:81;;30872:2:821;1688:35:81;;;30854:21:821;30911:2;30891:18;;;30884:30;-1:-1:-1;;;30930:18:821;;;30923:45;30985:18;;1688:35:81;30670:339:821;1688:35:81;1785:15;1754:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1754:46:81;;;:94;;;;-1:-1:-1;1823:25:81;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1804:44:81;:15;:44;;1754:94;1733:156;;;;-1:-1:-1;;;1733:156:81;;31407:2:821;1733:156:81;;;31389:21:821;31446:2;31426:18;;;31419:30;-1:-1:-1;;;31465:18:821;;;31458:45;31520:18;;1733:156:81;31205:339:821;1733:156:81;1926:1;1907:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1907:21:81;;1899:53;;;;-1:-1:-1;;;1899:53:81;;31751:2:821;1899:53:81;;;31733:21:821;31790:2;31770:18;;;31763:30;-1:-1:-1;;;31809:18:821;;;31802:49;31868:18;;1899:53:81;31549:343:821;1899:53:81;1986:1;1970:4;:13;;;:17;1962:35;;;;-1:-1:-1;;;1962:35:81;;32099:2:821;1962:35:81;;;32081:21:821;32138:1;32118:18;;;32111:29;-1:-1:-1;;;32156:18:821;;;32149:35;32201:18;;1962:35:81;31897:328:821;1962:35:81;-1:-1:-1;2015:8:81;;;;;2008:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2008:23:81;2027:4;2008:23;;;-1:-1:-1;1488:550:81;;;-1:-1:-1;1488:550:81:o;3980:851:4:-;4179:14;4197:1;4179:19;4175:103;;4222:9;:14;4214:33;;;;-1:-1:-1;;;4214:33:4;;32432:2:821;4214:33:4;;;32414:21:821;32471:1;32451:18;;;32444:29;-1:-1:-1;;;32489:18:821;;;32482:36;32535:18;;4214:33:4;32230:329:821;4214:33:4;4261:7;;4175:103;4288:18;4309:33;4328:14;4309:16;:33;:::i;:::-;4288:54;-1:-1:-1;4353:18:4;-1:-1:-1;;;;;;;4385:45:4;;;4381:176;;-1:-1:-1;4462:9:4;:23;;4381:176;;;-1:-1:-1;4532:9:4;:14;4381:176;4574:13;4566:43;;;;-1:-1:-1;;;4566:43:4;;32766:2:821;4566:43:4;;;32748:21:821;32805:2;32785:18;;;32778:30;-1:-1:-1;;;32824:18:821;;;32817:47;32881:18;;4566:43:4;32564:341:821;4566:43:4;4620:21;-1:-1:-1;;;;;4644:35:4;;;:84;;4707:21;4644:84;;;4682:22;:20;:22::i;:::-;4620:108;;4738:86;4775:9;4786:10;4798:13;4813:10;4738:36;:86::i;4619:332:77:-;4736:6;4729:4;:13;4725:69;;;4758:25;;-1:-1:-1;;;4758:25:77;;;;;;;:::i;4725:69::-;4836:49;;;;;;;;-1:-1:-1;;;;;4836:49:77;;;;;;;;;;;;;-1:-1:-1;4804:29:77;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4804:81:77;;;;;;;;;;;-1:-1:-1;4804:81:77;;;;;;;4901:43;;597:25:821;;;4836:49:77;;4804:29;;4901:43;;570:18:821;4901:43:77;451:177:821;5337:117:20;5425:13;;;;:4;:13;;;;;:22;5441:6;5425:13;:22;:::i;5460:492::-;-1:-1:-1;;;;;5569:16:20;;5561:41;;;;-1:-1:-1;;;5561:41:20;;;;;;;:::i;:::-;5632:10;5653:102;5632:10;5613:16;5696:2;5700:21;5718:2;5700:17;:21::i;:::-;5723:25;5741:6;5723:17;:25::i;:::-;5750:4;5653:20;:102::i;:::-;-1:-1:-1;;;;;5766:13:20;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5787:6;;5766:13;:27;;5787:6;;5766:27;:::i;:::-;;;;-1:-1:-1;;5808:52:20;;;33084:25:821;;;33140:2;33125:18;;33118:34;;;-1:-1:-1;;;;;5808:52:20;;;;5841:1;;5808:52;;;;-1:-1:-1;;;;;;;;;;;5808:52:20;33057:18:821;5808:52:20;;;;;;;5871:74;5902:8;5920:1;5924:2;5928;5932:6;5940:4;5871:30;:74::i;6671:198:289:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6778:84;6671:198;-1:-1:-1;;;6671:198:289:o;2112:204:81:-;2214:7;2240:69;2298:10;;2240:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2240:49:81;;-1:-1:-1;2267:20:81;;-1:-1:-1;2282:4:81;;-1:-1:-1;2267:14:81;:20::i;:::-;2257:31;;;;;;2240:16;:49::i;:::-;:57;;:69::i;3525:134:4:-;3611:4;3645:7;:5;:7::i;:::-;-1:-1:-1;;;;;3634:18:4;:7;-1:-1:-1;;;;;3634:18:4;;3627:25;;3525:134;;;:::o;3614:744:20:-;-1:-1:-1;;;;;3795:16:20;;3787:41;;;;-1:-1:-1;;;3787:41:20;;;;;;;:::i;:::-;3858:10;3879:96;3858:10;3910:4;3916:2;3920:21;3938:2;3920:17;:21::i;3879:96::-;-1:-1:-1;;;;;4008:15:20;;3986:19;4008:15;;;:9;:15;;;;;;;;:19;;;;;;;;;4045:21;;;;4037:50;;;;-1:-1:-1;;;4037:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;4121:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;4143:20;;;4121:42;;4183:13;;;;;;;;;;;:17;;;;;;;;:27;;4157:6;;4121:15;4183:27;;4157:6;;4183:27;:::i;:::-;;;;-1:-1:-1;;4226:46:20;;;33084:25:821;;;33140:2;33125:18;;33118:34;;;-1:-1:-1;;;;;4226:46:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4226:46:20;33057:18:821;4226:46:20;;;;;;;4283:68;4314:8;4324:4;4330:2;4334;4338:6;4346:4;4283:30;:68::i;6631:557::-;-1:-1:-1;;;;;6723:18:20;;6715:45;;;;-1:-1:-1;;;6715:45:20;;;;;;;:::i;:::-;6790:10;6811:102;6790:10;6842:4;6771:16;6860:21;6878:2;6860:17;:21::i;:::-;6883:25;6901:6;6883:17;:25::i;:::-;6811:102;;;;;;;;;;;;:20;:102::i;:::-;-1:-1:-1;;;;;6946:15:20;;6924:19;6946:15;;;:9;:15;;;;;;;;:19;;;;;;;;;6983:21;;;;6975:50;;;;-1:-1:-1;;;6975:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;7059:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;7081:20;;;7059:42;;7127:54;;33084:25:821;;;33125:18;;;33118:34;;;7059:15:20;;7127:54;;;-1:-1:-1;;;;;;;;;;;7127:54:20;33057:18:821;7127:54:20;;;;;;;6705:483;;6631:557;;;:::o;10844:632:0:-;-1:-1:-1;;;;;11156:18:0;;11152:155;;11195:9;11190:107;11214:3;:10;11210:1;:14;11190:107;;;11272:7;11280:1;11272:10;;;;;;;;:::i;:::-;;;;;;;11249:11;:19;11261:3;11265:1;11261:6;;;;;;;;:::i;:::-;;;;;;;11249:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;11226:3:0;;11190:107;;;;11152:155;-1:-1:-1;;;;;11321:16:0;;11317:153;;11358:9;11353:107;11377:3;:10;11373:1;:14;11353:107;;;11435:7;11443:1;11435:10;;;;;;;;:::i;:::-;;;;;;;11412:11;:19;11424:3;11428:1;11424:6;;;;;;;;:::i;:::-;;;;;;;11412:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;11389:3:0;;11353:107;;8862:734:20;-1:-1:-1;;;;;9094:14:20;;;:18;9090:500;;9132:79;;-1:-1:-1;;;9132:79:20;;-1:-1:-1;;;;;9132:43:20;;;;;:79;;9176:8;;9186:4;;9192:3;;9197:7;;9206:4;;9132:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9132:79:20;;;;;;;;-1:-1:-1;;9132:79:20;;;;;;;;;;;;:::i;:::-;;;9128:452;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9492:6;9485:14;;-1:-1:-1;;;9485:14:20;;;;;;;;:::i;9128:452::-;;;9539:26;;-1:-1:-1;;;9539:26:20;;35311:2:821;9539:26:20;;;35293:21:821;35350:2;35330:18;;;35323:30;-1:-1:-1;;;35369:18:821;;;35362:46;35425:18;;9539:26:20;35109:340:821;9128:452:20;-1:-1:-1;;;;;;9290:60:20;;-1:-1:-1;;;9290:60:20;9286:132;;9374:25;;-1:-1:-1;;;9374:25:20;;;;;;;:::i;534:347:292:-;643:49;;675:7;643:49;-1:-1:-1;;;;;;;706:25:292;;;702:173;;747:37;771:3;776:7;747:23;:37::i;702:173::-;815:49;833:9;844:5;851:3;856:7;815:17;:49::i;9602:193:20:-;9721:16;;;9735:1;9721:16;;;;;;;;;9668;;9696:22;;9721:16;;;;;;;;;;;;-1:-1:-1;9721:16:20;9696:41;;9758:7;9747:5;9753:1;9747:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;9783:5;9602:193;-1:-1:-1;;9602:193:20:o;8189:667::-;-1:-1:-1;;;;;8396:14:20;;;:18;8392:458;;8434:72;;-1:-1:-1;;;8434:72:20;;-1:-1:-1;;;;;8434:38:20;;;;;:72;;8473:8;;8483:4;;8489:2;;8493:6;;8501:4;;8434:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8434:72:20;;;;;;;;-1:-1:-1;;8434:72:20;;;;;;;;;;;;:::i;:::-;;;8430:410;;;;:::i;:::-;-1:-1:-1;;;;;;8555:55:20;;-1:-1:-1;;;8555:55:20;8551:127;;8634:25;;-1:-1:-1;;;8634:25:20;;;;;;;:::i;7055:325:289:-;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:289;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:289:o;2388:746:81:-;2462:12;358:286;2597:7;;;;:4;:7;:::i;:::-;2626:21;;;;;;;;:::i;:::-;2669:15;;;;2706:25;;;;;;;;:::i;:::-;2753:12;;;;2803:8;;;;2753:4;2803:8;:::i;:::-;2787:26;;;;;;;:::i;:::-;;;;;;;;;;2535:296;;;37247:25:821;;;;-1:-1:-1;;;;;37346:15:821;;;37326:18;;;37319:43;37398:15;;;37378:18;;;37371:43;37430:18;;;37423:34;;;;37494:15;;;37473:19;;;37466:44;37526:19;;;37519:35;;;;37570:19;;;37563:35;;;;37219:19;;2535:296:81;;;-1:-1:-1;;2535:296:81;;;;;;;;;2881:13;;;;2916:18;;;;2956:13;;;;;;;;:::i;:::-;2991:27;;;;;;;;:::i;:::-;3040:25;;;;;;;;:::i;:::-;2849:264;;;;;;37896:25:821;;;;37937:18;;37930:34;;;;-1:-1:-1;;;;;38000:32:821;;;37980:18;;;37973:60;-1:-1:-1;;;;;38107:15:821;;;38087:18;;;38080:43;38160:15;38139:19;;;38132:44;3087:8:81;;;;38192:19:821;;;38185:35;37868:19;;2849:264:81;;;-1:-1:-1;;2849:264:81;;;;;;;;;;2505:622;;;2849:264;2505:622;;:::i;:::-;;;;;;;;;;;;;2486:641;;2388:746;;;:::o;4339:165:240:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8549:4:239;8543:11;-1:-1:-1;;;8567:23:239;;8619:4;8610:14;;8603:39;;;;8671:4;8662:14;;8655:34;8725:4;8710:20;;;8349:397;3674:227;3752:7;3772:17;3791:18;3813:27;3824:4;3830:9;3813:10;:27::i;:::-;3771:69;;;;3850:18;3862:5;3850:11;:18::i;2482:292:292:-;2664:12;2682:2;-1:-1:-1;;;;;2682:7:292;2698:5;2682:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:46;;;2727:7;2719:48;;;;-1:-1:-1;;;2719:48:292;;39140:2:821;2719:48:292;;;39122:21:821;39179:2;39159:18;;;39152:30;-1:-1:-1;;;39198:18:821;;;39191:58;39266:18;;2719:48:292;38938:352:821;2061:358:292;2184:3;-1:-1:-1;;;;;2175:12:292;:5;-1:-1:-1;;;;;2175:12:292;;2171:49;2203:7;2171:49;2251:4;-1:-1:-1;;;;;2234:22:292;;;2230:183;;2272:44;-1:-1:-1;;;;;2272:30:292;;2303:3;2308:7;2272:30;:44::i;2230:183::-;2347:55;-1:-1:-1;;;;;2347:34:292;;2382:5;2389:3;2394:7;2347:34;:55::i;7668:628:289:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:289;;;8110:60;;;;-1:-1:-1;;;8110:60:289;;39497:2:821;8110:60:289;;;39479:21:821;39536:2;39516:18;;;39509:30;39575:31;39555:18;;;39548:59;39624:18;;8110:60:289;39295:353:821;8110:60:289;-1:-1:-1;8205:10:289;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;3143:308:240:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:240;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:240;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:240;;;3392:10;3633:73;;;;41540:25:821;;;;3404:12:240;41581:18:821;;;41574:34;3418:15:240;41624:18:821;;;41617:34;3677:13:240;41667:18:821;;;41660:34;3700:4:240;41710:19:821;;;;41703:61;;;;3633:73:240;;;;;;;;;;41512:19:821;;;;3633:73:240;;;3623:84;;;;;;3143:308::o;3215:230::-;3143:308;:::o;2158:730:239:-;2239:7;2248:12;2276:9;:16;2296:2;2276:22;2272:610;;2612:4;2597:20;;2591:27;2661:4;2646:20;;2640:27;2718:4;2703:20;;2697:27;2314:9;2689:36;2759:25;2770:4;2689:36;2591:27;2640;2759:10;:25::i;:::-;2752:32;;;;;;;;;2272:610;-1:-1:-1;2831:1:239;;-1:-1:-1;2835:35:239;2272:610;2158:730;;;;;:::o;583:511::-;660:20;651:5;:29;;;;;;;;:::i;:::-;;647:441;;583:511;:::o;647:441::-;756:29;747:5;:38;;;;;;;;:::i;:::-;;743:345;;801:34;;-1:-1:-1;;;801:34:239;;39987:2:821;801:34:239;;;39969:21:821;40026:2;40006:18;;;39999:30;-1:-1:-1;;;40045:18:821;;;40038:54;40109:18;;801:34:239;39785:348:821;743:345:239;865:35;856:5;:44;;;;;;;;:::i;:::-;;852:236;;916:41;;-1:-1:-1;;;916:41:239;;40340:2:821;916:41:239;;;40322:21:821;40379:2;40359:18;;;40352:30;40418:33;40398:18;;;40391:61;40469:18;;916:41:239;40138:355:821;852:236:239;987:30;978:5;:39;;;;;;;;:::i;:::-;;974:114;;1033:44;;-1:-1:-1;;;1033:44:239;;40700:2:821;1033:44:239;;;40682:21:821;40739:2;40719:18;;;40712:30;40778:34;40758:18;;;40751:62;-1:-1:-1;;;40829:18:821;;;40822:32;40871:19;;1033:44:239;40498:398:821;759:175:228;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:228;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:228;-1:-1:-1;;;;;;868:58:228;;;;;;;;;;841:19;:86::i;940:203::-;1067:68;;-1:-1:-1;;;;;41159:15:821;;;1067:68:228;;;41141:34:821;41211:15;;41191:18;;;41184:43;41243:18;;;41236:34;;;1040:96:228;;1060:5;;-1:-1:-1;;;1090:27:228;41076:18:821;;1067:68:228;40901:375:821;8818:540:289;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;5022:1456:239;5110:7;;-1:-1:-1;;;;;6021:79:239;;6017:161;;;-1:-1:-1;6132:1:239;;-1:-1:-1;6136:30:239;6116:51;;6017:161;6289:24;;;6272:14;6289:24;;;;;;;;;42002:25:821;;;42075:4;42063:17;;42043:18;;;42036:45;;;;42097:18;;;42090:34;;;42140:18;;;42133:34;;;6289:24:239;;41974:19:821;;6289:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6289:24:239;;-1:-1:-1;;6289:24:239;;;-1:-1:-1;;;;;;;6327:20:239;;6323:101;;6379:1;6383:29;6363:50;;;;;;;6323:101;6442:6;-1:-1:-1;6450:20:239;;-1:-1:-1;5022:1456:239;;;;;;;;:::o;3107:706:228:-;3526:23;3552:69;3580:4;3552:69;;;;;;;;;;;;;;;;;3560:5;-1:-1:-1;;;;;3552:27:228;;;:69;;;;;:::i;:::-;3635:17;;3526:95;;-1:-1:-1;3635:21:228;3631:176;;3730:10;3719:30;;;;;;;;;;;;:::i;:::-;3711:85;;;;-1:-1:-1;;;3711:85:228;;42630:2:821;3711:85:228;;;42612:21:821;42669:2;42649:18;;;42642:30;42708:34;42688:18;;;42681:62;-1:-1:-1;;;42759:18:821;;;42752:40;42809:19;;3711:85:228;42428:406:821;4108:223:530;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:530;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:530:o;14:173:821:-;82:20;;-1:-1:-1;;;;;131:31:821;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:821:o;633:131::-;-1:-1:-1;;;;;;707:32:821;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:250::-;1296:1;1306:113;1320:6;1317:1;1314:13;1306:113;;;1396:11;;;1390:18;1377:11;;;1370:39;1342:2;1335:10;1306:113;;;-1:-1:-1;;1453:1:821;1435:16;;1428:27;1211:250::o;1466:271::-;1508:3;1546:5;1540:12;1573:6;1568:3;1561:19;1589:76;1658:6;1651:4;1646:3;1642:14;1635:4;1628:5;1624:16;1589:76;:::i;:::-;1719:2;1698:15;-1:-1:-1;;1694:29:821;1685:39;;;;1726:4;1681:50;;1466:271;-1:-1:-1;;1466:271:821:o;1742:220::-;1891:2;1880:9;1873:21;1854:4;1911:45;1952:2;1941:9;1937:18;1929:6;1911:45;:::i;1967:104::-;-1:-1:-1;;;;;2033:31:821;2021:44;;1967:104::o;2284:180::-;2343:6;2396:2;2384:9;2375:7;2371:23;2367:32;2364:52;;;2412:1;2409;2402:12;2364:52;-1:-1:-1;2435:23:821;;2284:180;-1:-1:-1;2284:180:821:o;2469:186::-;2528:6;2581:2;2569:9;2560:7;2556:23;2552:32;2549:52;;;2597:1;2594;2587:12;2549:52;2620:29;2639:9;2620:29;:::i;2660:248::-;2728:6;2736;2789:2;2777:9;2768:7;2764:23;2760:32;2757:52;;;2805:1;2802;2795:12;2757:52;-1:-1:-1;;2828:23:821;;;2898:2;2883:18;;;2870:32;;-1:-1:-1;2660:248:821:o;2913:274::-;-1:-1:-1;;;;;3105:32:821;;;;3087:51;;3169:2;3154:18;;3147:34;3075:2;3060:18;;2913:274::o;3192:127::-;3253:10;3248:3;3244:20;3241:1;3234:31;3284:4;3281:1;3274:15;3308:4;3305:1;3298:15;3324:249;3434:2;3415:13;;-1:-1:-1;;3411:27:821;3399:40;;-1:-1:-1;;;;;3454:34:821;;3490:22;;;3451:62;3448:88;;;3516:18;;:::i;:::-;3552:2;3545:22;-1:-1:-1;;3324:249:821:o;3578:183::-;3638:4;-1:-1:-1;;;;;3663:6:821;3660:30;3657:56;;;3693:18;;:::i;:::-;-1:-1:-1;3738:1:821;3734:14;3750:4;3730:25;;3578:183::o;3766:730::-;3820:5;3873:3;3866:4;3858:6;3854:17;3850:27;3840:55;;3891:1;3888;3881:12;3840:55;3927:6;3914:20;3953:4;3976:43;4016:2;3976:43;:::i;:::-;4048:2;4042:9;4060:31;4088:2;4080:6;4060:31;:::i;:::-;4111:6;4100:17;;4141:2;4133:6;4126:18;4172:4;4164:6;4160:17;4153:24;;4229:4;4223:2;4220:1;4216:10;4208:6;4204:23;4200:34;4186:48;;4257:3;4249:6;4246:15;4243:35;;;4274:1;4271;4264:12;4243:35;4310:4;4302:6;4298:17;4324:142;4340:6;4335:3;4332:15;4324:142;;;4406:17;;4394:30;;4444:12;;;;4357;;4324:142;;;-1:-1:-1;4484:6:821;3766:730;-1:-1:-1;;;;;;3766:730:821:o;4501:555::-;4543:5;4596:3;4589:4;4581:6;4577:17;4573:27;4563:55;;4614:1;4611;4604:12;4563:55;4650:6;4637:20;-1:-1:-1;;;;;4672:2:821;4669:26;4666:52;;;4698:18;;:::i;:::-;4747:2;4741:9;4759:67;4814:2;4795:13;;-1:-1:-1;;4791:27:821;4820:4;4787:38;4741:9;4759:67;:::i;:::-;4850:2;4842:6;4835:18;4896:3;4889:4;4884:2;4876:6;4872:15;4868:26;4865:35;4862:55;;;4913:1;4910;4903:12;4862:55;4977:2;4970:4;4962:6;4958:17;4951:4;4943:6;4939:17;4926:54;5024:1;5000:15;;;5017:4;4996:26;4989:37;;;;5004:6;4501:555;-1:-1:-1;;;4501:555:821:o;5061:943::-;5215:6;5223;5231;5239;5247;5300:3;5288:9;5279:7;5275:23;5271:33;5268:53;;;5317:1;5314;5307:12;5268:53;5340:29;5359:9;5340:29;:::i;:::-;5330:39;;5388:38;5422:2;5411:9;5407:18;5388:38;:::i;:::-;5378:48;;5477:2;5466:9;5462:18;5449:32;-1:-1:-1;;;;;5541:2:821;5533:6;5530:14;5527:34;;;5557:1;5554;5547:12;5527:34;5580:61;5633:7;5624:6;5613:9;5609:22;5580:61;:::i;:::-;5570:71;;5694:2;5683:9;5679:18;5666:32;5650:48;;5723:2;5713:8;5710:16;5707:36;;;5739:1;5736;5729:12;5707:36;5762:63;5817:7;5806:8;5795:9;5791:24;5762:63;:::i;:::-;5752:73;;5878:3;5867:9;5863:19;5850:33;5834:49;;5908:2;5898:8;5895:16;5892:36;;;5924:1;5921;5914:12;5892:36;;5947:51;5990:7;5979:8;5968:9;5964:24;5947:51;:::i;:::-;5937:61;;;5061:943;;;;;;;;:::o;6299:1208::-;6417:6;6425;6478:2;6466:9;6457:7;6453:23;6449:32;6446:52;;;6494:1;6491;6484:12;6446:52;6534:9;6521:23;-1:-1:-1;;;;;6604:2:821;6596:6;6593:14;6590:34;;;6620:1;6617;6610:12;6590:34;6658:6;6647:9;6643:22;6633:32;;6703:7;6696:4;6692:2;6688:13;6684:27;6674:55;;6725:1;6722;6715:12;6674:55;6761:2;6748:16;6783:4;6806:43;6846:2;6806:43;:::i;:::-;6878:2;6872:9;6890:31;6918:2;6910:6;6890:31;:::i;:::-;6956:18;;;7044:1;7040:10;;;;7032:19;;7028:28;;;6990:15;;;;-1:-1:-1;7068:19:821;;;7065:39;;;7100:1;7097;7090:12;7065:39;7124:11;;;;7144:148;7160:6;7155:3;7152:15;7144:148;;;7226:23;7245:3;7226:23;:::i;:::-;7214:36;;7177:12;;;;7270;;;;7144:148;;;7311:6;-1:-1:-1;;7355:18:821;;7342:32;;-1:-1:-1;;7386:16:821;;;7383:36;;;7415:1;7412;7405:12;7383:36;;7438:63;7493:7;7482:8;7471:9;7467:24;7438:63;:::i;:::-;7428:73;;;6299:1208;;;;;:::o;7512:439::-;7565:3;7603:5;7597:12;7630:6;7625:3;7618:19;7656:4;7685;7680:3;7676:14;7669:21;;7724:4;7717:5;7713:16;7747:1;7757:169;7771:6;7768:1;7765:13;7757:169;;;7832:13;;7820:26;;7866:12;;;;7901:15;;;;7793:1;7786:9;7757:169;;;-1:-1:-1;7942:3:821;;7512:439;-1:-1:-1;;;;;7512:439:821:o;7956:261::-;8135:2;8124:9;8117:21;8098:4;8155:56;8207:2;8196:9;8192:18;8184:6;8155:56;:::i;8222:669::-;8349:6;8357;8365;8418:2;8406:9;8397:7;8393:23;8389:32;8386:52;;;8434:1;8431;8424:12;8386:52;8457:29;8476:9;8457:29;:::i;:::-;8447:39;;8537:2;8526:9;8522:18;8509:32;-1:-1:-1;;;;;8601:2:821;8593:6;8590:14;8587:34;;;8617:1;8614;8607:12;8587:34;8640:61;8693:7;8684:6;8673:9;8669:22;8640:61;:::i;:::-;8630:71;;8754:2;8743:9;8739:18;8726:32;8710:48;;8783:2;8773:8;8770:16;8767:36;;;8799:1;8796;8789:12;8767:36;;8822:63;8877:7;8866:8;8855:9;8851:24;8822:63;:::i;:::-;8812:73;;;8222:669;;;;;:::o;8896:321::-;8965:6;9018:2;9006:9;8997:7;8993:23;8989:32;8986:52;;;9034:1;9031;9024:12;8986:52;9074:9;9061:23;-1:-1:-1;;;;;9099:6:821;9096:30;9093:50;;;9139:1;9136;9129:12;9093:50;9162:49;9203:7;9194:6;9183:9;9179:22;9162:49;:::i;9222:869::-;9368:6;9376;9384;9392;9445:3;9433:9;9424:7;9420:23;9416:33;9413:53;;;9462:1;9459;9452:12;9413:53;9485:29;9504:9;9485:29;:::i;:::-;9475:39;;9565:2;9554:9;9550:18;9537:32;-1:-1:-1;;;;;9629:2:821;9621:6;9618:14;9615:34;;;9645:1;9642;9635:12;9615:34;9668:61;9721:7;9712:6;9701:9;9697:22;9668:61;:::i;:::-;9658:71;;9782:2;9771:9;9767:18;9754:32;9738:48;;9811:2;9801:8;9798:16;9795:36;;;9827:1;9824;9817:12;9795:36;9850:63;9905:7;9894:8;9883:9;9879:24;9850:63;:::i;:::-;9840:73;;9966:2;9955:9;9951:18;9938:32;9922:48;;9995:2;9985:8;9982:16;9979:36;;;10011:1;10008;10001:12;9979:36;;10034:51;10077:7;10066:8;10055:9;10051:24;10034:51;:::i;:::-;10024:61;;;9222:869;;;;;;;:::o;10096:861::-;10207:6;10215;10223;10276:2;10264:9;10255:7;10251:23;10247:32;10244:52;;;10292:1;10289;10282:12;10244:52;10332:9;10319:23;-1:-1:-1;;;;;10402:2:821;10394:6;10391:14;10388:34;;;10418:1;10415;10408:12;10388:34;10441:22;;;;10497:3;10479:16;;;10475:26;10472:46;;;10514:1;10511;10504:12;10472:46;10537:2;;-1:-1:-1;10592:2:821;10577:18;;10564:32;;10608:16;;;10605:36;;;10637:1;10634;10627:12;10605:36;10675:8;10664:9;10660:24;10650:34;;10722:7;10715:4;10711:2;10707:13;10703:27;10693:55;;10744:1;10741;10734:12;10693:55;10784:2;10771:16;10810:2;10802:6;10799:14;10796:34;;;10826:1;10823;10816:12;10796:34;10871:7;10866:2;10857:6;10853:2;10849:15;10845:24;10842:37;10839:57;;;10892:1;10889;10882:12;10839:57;10923:2;10919;10915:11;10905:21;;10945:6;10935:16;;;;;10096:861;;;;;:::o;10962:322::-;11039:6;11047;11055;11108:2;11096:9;11087:7;11083:23;11079:32;11076:52;;;11124:1;11121;11114:12;11076:52;11160:9;11147:23;11137:33;;11189:38;11223:2;11212:9;11208:18;11189:38;:::i;:::-;11179:48;;11274:2;11263:9;11259:18;11246:32;11236:42;;10962:322;;;;;:::o;11289:118::-;11375:5;11368:13;11361:21;11354:5;11351:32;11341:60;;11397:1;11394;11387:12;11412:315;11477:6;11485;11538:2;11526:9;11517:7;11513:23;11509:32;11506:52;;;11554:1;11551;11544:12;11506:52;11577:29;11596:9;11577:29;:::i;:::-;11567:39;;11656:2;11645:9;11641:18;11628:32;11669:28;11691:5;11669:28;:::i;:::-;11716:5;11706:15;;;11412:315;;;;;:::o;11732:626::-;11829:6;11837;11890:2;11878:9;11869:7;11865:23;11861:32;11858:52;;;11906:1;11903;11896:12;11858:52;11946:9;11933:23;-1:-1:-1;;;;;12016:2:821;12008:6;12005:14;12002:34;;;12032:1;12029;12022:12;12002:34;12070:6;12059:9;12055:22;12045:32;;12115:7;12108:4;12104:2;12100:13;12096:27;12086:55;;12137:1;12134;12127:12;12086:55;12177:2;12164:16;12203:2;12195:6;12192:14;12189:34;;;12219:1;12216;12209:12;12189:34;12272:7;12267:2;12257:6;12254:1;12250:14;12246:2;12242:23;12238:32;12235:45;12232:65;;;12293:1;12290;12283:12;12232:65;12324:2;12316:11;;;;;12346:6;;-1:-1:-1;11732:626:821;;-1:-1:-1;;;;11732:626:821:o;12363:801::-;12523:4;12552:2;12592;12581:9;12577:18;12622:2;12611:9;12604:21;12645:6;12680;12674:13;12711:6;12703;12696:22;12749:2;12738:9;12734:18;12727:25;;12811:2;12801:6;12798:1;12794:14;12783:9;12779:30;12775:39;12761:53;;12849:2;12841:6;12837:15;12870:1;12880:255;12894:6;12891:1;12888:13;12880:255;;;12987:2;12983:7;12971:9;12963:6;12959:22;12955:36;12950:3;12943:49;13015:40;13048:6;13039;13033:13;13015:40;:::i;:::-;13005:50;-1:-1:-1;13113:12:821;;;;13078:15;;;;12916:1;12909:9;12880:255;;;-1:-1:-1;13152:6:821;;12363:801;-1:-1:-1;;;;;;;12363:801:821:o;13169:532::-;13265:6;13273;13281;13289;13342:3;13330:9;13321:7;13317:23;13313:33;13310:53;;;13359:1;13356;13349:12;13310:53;13382:29;13401:9;13382:29;:::i;:::-;13372:39;;13458:2;13447:9;13443:18;13430:32;13420:42;;13513:2;13502:9;13498:18;13485:32;-1:-1:-1;;;;;13532:6:821;13529:30;13526:50;;;13572:1;13569;13562:12;13526:50;13595:49;13636:7;13627:6;13616:9;13612:22;13595:49;:::i;:::-;13169:532;;;;-1:-1:-1;13585:59:821;;13691:2;13676:18;13663:32;;-1:-1:-1;;;13169:532:821:o;13995:260::-;14063:6;14071;14124:2;14112:9;14103:7;14099:23;14095:32;14092:52;;;14140:1;14137;14130:12;14092:52;14163:29;14182:9;14163:29;:::i;:::-;14153:39;;14211:38;14245:2;14234:9;14230:18;14211:38;:::i;:::-;14201:48;;13995:260;;;;;:::o;14260:606::-;14364:6;14372;14380;14388;14396;14449:3;14437:9;14428:7;14424:23;14420:33;14417:53;;;14466:1;14463;14456:12;14417:53;14489:29;14508:9;14489:29;:::i;:::-;14479:39;;14537:38;14571:2;14560:9;14556:18;14537:38;:::i;:::-;14527:48;;14622:2;14611:9;14607:18;14594:32;14584:42;;14673:2;14662:9;14658:18;14645:32;14635:42;;14728:3;14717:9;14713:19;14700:33;-1:-1:-1;;;;;14748:6:821;14745:30;14742:50;;;14788:1;14785;14778:12;14742:50;14811:49;14852:7;14843:6;14832:9;14828:22;14811:49;:::i;14871:322::-;14948:6;14956;14964;15017:2;15005:9;14996:7;14992:23;14988:32;14985:52;;;15033:1;15030;15023:12;14985:52;15056:29;15075:9;15056:29;:::i;:::-;15046:39;15132:2;15117:18;;15104:32;;-1:-1:-1;15183:2:821;15168:18;;;15155:32;;14871:322;-1:-1:-1;;;14871:322:821:o;15198:380::-;15277:1;15273:12;;;;15320;;;15341:61;;15395:4;15387:6;15383:17;15373:27;;15341:61;15448:2;15440:6;15437:14;15417:18;15414:38;15411:161;;15494:10;15489:3;15485:20;15482:1;15475:31;15529:4;15526:1;15519:15;15557:4;15554:1;15547:15;15411:161;;15198:380;;;:::o;15583:496::-;15762:3;15800:6;15794:13;15816:66;15875:6;15870:3;15863:4;15855:6;15851:17;15816:66;:::i;:::-;15945:13;;15904:16;;;;15967:70;15945:13;15904:16;16014:4;16002:17;;15967:70;:::i;:::-;16053:20;;15583:496;-1:-1:-1;;;;15583:496:821:o;16084:338::-;16286:2;16268:21;;;16325:2;16305:18;;;16298:30;-1:-1:-1;;;16359:2:821;16344:18;;16337:44;16413:2;16398:18;;16084:338::o;16769:127::-;16830:10;16825:3;16821:20;16818:1;16811:31;16861:4;16858:1;16851:15;16885:4;16882:1;16875:15;16901:127;16962:10;16957:3;16953:20;16950:1;16943:31;16993:4;16990:1;16983:15;17017:4;17014:1;17007:15;17033:168;17106:9;;;17137;;17154:15;;;17148:22;;17134:37;17124:71;;17175:18;;:::i;17206:127::-;17267:10;17262:3;17258:20;17255:1;17248:31;17298:4;17295:1;17288:15;17322:4;17319:1;17312:15;17338:120;17378:1;17404;17394:35;;17409:18;;:::i;:::-;-1:-1:-1;17443:9:821;;17338:120::o;17463:342::-;17665:2;17647:21;;;17704:2;17684:18;;;17677:30;-1:-1:-1;;;17738:2:821;17723:18;;17716:48;17796:2;17781:18;;17463:342::o;17810:339::-;18012:2;17994:21;;;18051:2;18031:18;;;18024:30;-1:-1:-1;;;18085:2:821;18070:18;;18063:45;18140:2;18125:18;;17810:339::o;18154:341::-;18356:2;18338:21;;;18395:2;18375:18;;;18368:30;-1:-1:-1;;;18429:2:821;18414:18;;18407:47;18486:2;18471:18;;18154:341::o;18844:347::-;19046:2;19028:21;;;19085:2;19065:18;;;19058:30;-1:-1:-1;;;19119:2:821;19104:18;;19097:53;19182:2;19167:18;;18844:347::o;19196:125::-;19261:9;;;19282:10;;;19279:36;;;19295:18;;:::i;19326:347::-;19528:2;19510:21;;;19567:2;19547:18;;;19540:30;-1:-1:-1;;;19601:2:821;19586:18;;19579:53;19664:2;19649:18;;19326:347::o;19678:344::-;19880:2;19862:21;;;19919:2;19899:18;;;19892:30;-1:-1:-1;;;19953:2:821;19938:18;;19931:50;20013:2;19998:18;;19678:344::o;20372:334::-;20574:2;20556:21;;;20613:2;20593:18;;;20586:30;-1:-1:-1;;;20647:2:821;20632:18;;20625:40;20697:2;20682:18;;20372:334::o;20711:522::-;20789:4;20795:6;20855:11;20842:25;20949:2;20945:7;20934:8;20918:14;20914:29;20910:43;20890:18;20886:68;20876:96;;20968:1;20965;20958:12;20876:96;20995:33;;21047:20;;;-1:-1:-1;;;;;;21079:30:821;;21076:50;;;21122:1;21119;21112:12;21076:50;21155:4;21143:17;;-1:-1:-1;21186:14:821;21182:27;;;21172:38;;21169:58;;;21223:1;21220;21213:12;21238:501;21297:5;21304:6;21364:3;21351:17;21450:2;21446:7;21435:8;21419:14;21415:29;21411:43;21391:18;21387:68;21377:96;;21469:1;21466;21459:12;21377:96;21497:33;;21601:4;21588:18;;;-1:-1:-1;21549:21:821;;-1:-1:-1;;;;;;21618:30:821;;21615:50;;;21661:1;21658;21651:12;21615:50;21708:6;21692:14;21688:27;21681:5;21677:39;21674:59;;;21729:1;21726;21719:12;21744:267;21833:6;21828:3;21821:19;21885:6;21878:5;21871:4;21866:3;21862:14;21849:43;-1:-1:-1;21937:1:821;21912:16;;;21930:4;21908:27;;;21901:38;;;;21993:2;21972:15;;;-1:-1:-1;;21968:29:821;21959:39;;;21955:50;;21744:267::o;22016:173::-;22084:20;;-1:-1:-1;;;;;22133:31:821;;22123:42;;22113:70;;22179:1;22176;22169:12;22303:1630;22494:2;22483:9;22476:21;22506:66;22568:2;22557:9;22553:18;22525:26;22544:6;22525:26;:::i;:::-;22506:66;:::i;:::-;22457:4;22601:35;22632:2;22624:6;22620:15;22601:35;:::i;:::-;22645:52;22693:2;22682:9;22678:18;22664:12;22645:52;:::i;:::-;;22758:2;22750:6;22746:15;22733:29;22728:2;22717:9;22713:18;22706:57;22794:35;22825:2;22817:6;22813:15;22794:35;:::i;:::-;22838:55;22888:3;22877:9;22873:19;22857:14;22838:55;:::i;:::-;;22955:3;22947:6;22943:16;22930:30;22924:3;22913:9;22909:19;22902:59;23006:57;23058:3;23050:6;23046:16;23038:6;23006:57;:::i;:::-;23082:6;23125:2;23119:3;23108:9;23104:19;23097:31;23151:77;23223:3;23212:9;23208:19;23194:12;23178:14;23151:77;:::i;:::-;23137:91;;23290:3;23282:6;23278:16;23265:30;23259:3;23248:9;23244:19;23237:59;23315:3;23305:13;;23379:3;23371:6;23367:16;23354:30;23349:2;23338:9;23334:18;23327:58;23416:35;23447:2;23439:6;23435:15;23416:35;:::i;:::-;23394:57;;23470:3;23482:54;23532:2;23521:9;23517:18;23501:14;23482:54;:::i;:::-;23567:35;23598:2;23590:6;23586:15;23567:35;:::i;:::-;23545:57;;;23621:3;23633:54;23683:2;23672:9;23668:18;23652:14;-1:-1:-1;;;;;22260:31:821;22248:44;;22194:104;23633:54;23718:35;23749:2;23741:6;23737:15;23718:35;:::i;:::-;23696:57;;;23772:3;23784:54;23834:2;23823:9;23819:18;23803:14;-1:-1:-1;;;;;22260:31:821;22248:44;;22194:104;23784:54;23887:15;;;;23874:29;23854:18;;;;23847:57;;;;-1:-1:-1;23921:6:821;22303:1630;-1:-1:-1;22303:1630:821:o;24807:352::-;25018:6;25010;25005:3;24992:33;25113:2;25084:15;;;;-1:-1:-1;;;;;;25080:45:821;25044:16;;25069:57;;;25150:2;25142:11;;24807:352;-1:-1:-1;24807:352:821:o;25508:135::-;25547:3;25568:17;;;25565:43;;25588:18;;:::i;:::-;-1:-1:-1;25635:1:821;25624:13;;25508:135::o;25648:128::-;25715:9;;;25736:11;;;25733:37;;;25750:18;;:::i;25781:112::-;25813:1;25839;25829:35;;25844:18;;:::i;:::-;-1:-1:-1;25878:9:821;;25781:112::o;25898:336::-;26100:2;26082:21;;;26139:2;26119:18;;;26112:30;-1:-1:-1;;;26173:2:821;26158:18;;26151:42;26225:2;26210:18;;25898:336::o;26239:340::-;26441:2;26423:21;;;26480:2;26460:18;;;26453:30;-1:-1:-1;;;26514:2:821;26499:18;;26492:46;26570:2;26555:18;;26239:340::o;26584:465::-;26841:2;26830:9;26823:21;26804:4;26867:56;26919:2;26908:9;26904:18;26896:6;26867:56;:::i;:::-;26971:9;26963:6;26959:22;26954:2;26943:9;26939:18;26932:50;26999:44;27036:6;27028;26999:44;:::i;:::-;26991:52;26584:465;-1:-1:-1;;;;;26584:465:821:o;27054:339::-;27256:2;27238:21;;;27295:2;27275:18;;;27268:30;-1:-1:-1;;;27329:2:821;27314:18;;27307:45;27384:2;27369:18;;27054:339::o;27398:338::-;27600:2;27582:21;;;27639:2;27619:18;;;27612:30;-1:-1:-1;;;27673:2:821;27658:18;;27651:44;27727:2;27712:18;;27398:338::o;28213:543::-;28315:2;28310:3;28307:11;28304:446;;;28351:1;28375:5;28372:1;28365:16;28419:4;28416:1;28406:18;28489:2;28477:10;28473:19;28470:1;28466:27;28460:4;28456:38;28525:4;28513:10;28510:20;28507:47;;;-1:-1:-1;28548:4:821;28507:47;28603:2;28598:3;28594:12;28591:1;28587:20;28581:4;28577:31;28567:41;;28658:82;28676:2;28669:5;28666:13;28658:82;;;28721:17;;;28702:1;28691:13;28658:82;;28932:1345;29058:3;29052:10;-1:-1:-1;;;;;29077:6:821;29074:30;29071:56;;;29107:18;;:::i;:::-;29136:97;29226:6;29186:38;29218:4;29212:11;29186:38;:::i;:::-;29180:4;29136:97;:::i;:::-;29288:4;;29345:2;29334:14;;29362:1;29357:663;;;;30064:1;30081:6;30078:89;;;-1:-1:-1;30133:19:821;;;30127:26;30078:89;-1:-1:-1;;28889:1:821;28885:11;;;28881:24;28877:29;28867:40;28913:1;28909:11;;;28864:57;30180:81;;29327:944;;29357:663;28160:1;28153:14;;;28197:4;28184:18;;-1:-1:-1;;29393:20:821;;;29511:236;29525:7;29522:1;29519:14;29511:236;;;29614:19;;;29608:26;29593:42;;29706:27;;;;29674:1;29662:14;;;;29541:19;;29511:236;;;29515:3;29775:6;29766:7;29763:19;29760:201;;;29836:19;;;29830:26;-1:-1:-1;;29919:1:821;29915:14;;;29931:3;29911:24;29907:37;29903:42;29888:58;29873:74;;29760:201;-1:-1:-1;;;;;30007:1:821;29991:14;;;29987:22;29974:36;;-1:-1:-1;28932:1345:821:o;30282:383::-;30479:2;30468:9;30461:21;30442:4;30505:45;30546:2;30535:9;30531:18;30523:6;30505:45;:::i;:::-;30598:9;30590:6;30586:22;30581:2;30570:9;30566:18;30559:50;30626:33;30652:6;30644;30626:33;:::i;31014:186::-;31073:6;31126:2;31114:9;31105:7;31101:23;31097:32;31094:52;;;31142:1;31139;31132:12;31094:52;31165:29;31184:9;31165:29;:::i;33163:827::-;-1:-1:-1;;;;;33560:15:821;;;33542:34;;33612:15;;33607:2;33592:18;;33585:43;33522:3;33659:2;33644:18;;33637:31;;;33485:4;;33691:57;;33728:19;;33720:6;33691:57;:::i;:::-;33796:9;33788:6;33784:22;33779:2;33768:9;33764:18;33757:50;33830:44;33867:6;33859;33830:44;:::i;:::-;33816:58;;33923:9;33915:6;33911:22;33905:3;33894:9;33890:19;33883:51;33951:33;33977:6;33969;33951:33;:::i;:::-;33943:41;33163:827;-1:-1:-1;;;;;;;;33163:827:821:o;33995:249::-;34064:6;34117:2;34105:9;34096:7;34092:23;34088:32;34085:52;;;34133:1;34130;34123:12;34085:52;34165:9;34159:16;34184:30;34208:5;34184:30;:::i;34249:179::-;34284:3;34326:1;34308:16;34305:23;34302:120;;;34372:1;34369;34366;34351:23;-1:-1:-1;34409:1:821;34403:8;34398:3;34394:18;34249:179;:::o;34433:671::-;34472:3;34514:4;34496:16;34493:26;34490:39;;;34433:671;:::o;34490:39::-;34556:2;34550:9;-1:-1:-1;;34621:16:821;34617:25;;34614:1;34550:9;34593:50;34672:4;34666:11;34696:16;-1:-1:-1;;;;;34802:2:821;34795:4;34787:6;34783:17;34780:25;34775:2;34767:6;34764:14;34761:45;34758:58;;;34809:5;;;;;34433:671;:::o;34758:58::-;34846:6;34840:4;34836:17;34825:28;;34882:3;34876:10;34909:2;34901:6;34898:14;34895:27;;;34915:5;;;;;;34433:671;:::o;34895:27::-;34999:2;34980:16;34974:4;34970:27;34966:36;34959:4;34950:6;34945:3;34941:16;34937:27;34934:69;34931:82;;;35006:5;;;;;;34433:671;:::o;34931:82::-;35022:57;35073:4;35064:6;35056;35052:19;35048:30;35042:4;35022:57;:::i;:::-;-1:-1:-1;35095:3:821;;34433:671;-1:-1:-1;;;;;34433:671:821:o;35454:339::-;35656:2;35638:21;;;35695:2;35675:18;;;35668:30;-1:-1:-1;;;35729:2:821;35714:18;;35707:45;35784:2;35769:18;;35454:339::o;35798:561::-;-1:-1:-1;;;;;36095:15:821;;;36077:34;;36147:15;;36142:2;36127:18;;36120:43;36194:2;36179:18;;36172:34;;;36237:2;36222:18;;36215:34;;;36057:3;36280;36265:19;;36258:32;;;36020:4;;36307:46;;36333:19;;36325:6;36307:46;:::i;36364:287::-;36493:3;36531:6;36525:13;36547:66;36606:6;36601:3;36594:4;36586:6;36582:17;36547:66;:::i;:::-;36629:16;;;;;36364:287;-1:-1:-1;;36364:287:821:o;36656:271::-;36839:6;36831;36826:3;36813:33;36795:3;36865:16;;36890:13;;;36865:16;36656:271;-1:-1:-1;36656:271:821:o;39653:127::-;39714:10;39709:3;39705:20;39702:1;39695:31;39745:4;39742:1;39735:15;39769:4;39766:1;39759:15;42178:245;42245:6;42298:2;42286:9;42277:7;42273:23;42269:32;42266:52;;;42314:1;42311;42304:12;42266:52;42346:9;42340:16;42365:28;42387:5;42365:28;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "50547": [
        {
          "start": 11507,
          "length": 32
        }
      ],
      "50549": [
        {
          "start": 11465,
          "length": 32
        }
      ],
      "50551": [
        {
          "start": 11423,
          "length": 32
        }
      ],
      "50553": [
        {
          "start": 11590,
          "length": 32
        }
      ],
      "50555": [
        {
          "start": 11627,
          "length": 32
        }
      ],
      "50557": [
        {
          "start": 11548,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchFrozen(uint256)": "83040532",
    "batchMintTo(address,uint256[],uint256[],string)": "949c09f7",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "contractURI()": "e8a3d485",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintTo(address,uint256,string,uint256)": "b03f4528",
    "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "98a6e993",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "b17cd86f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when approval for a second party/operator address to manage all tokens for an owner address is enabled or disabled (absense of an event assumes disabled).\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokensMintedWithSignature(address,address,uint256,(address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32))\":{\"details\":\"Emitted when tokens are minted.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \\\"Safe Transfer Rules\\\" section of the standard). The `_operator` argument MUST be msg.sender. The `_from` argument MUST be the address of the holder whose balance is decreased. The `_to` argument MUST be the address of the recipient whose balance is increased. The `_ids` argument MUST be the list of tokens being transferred. The `_values` argument MUST be the list of number of tokens (matching the list and order of tokens specified in _ids) the holder balance is decreased by and match what the recipient balance is increased by. When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address). When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \\\"Safe Transfer Rules\\\" section of the standard). The `_operator` argument MUST be msg.sender. The `_from` argument MUST be the address of the holder whose balance is decreased. The `_to` argument MUST be the address of the recipient whose balance is increased. The `_id` argument MUST be the token type being transferred. The `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by. When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address). When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\"},\"URI(string,uint256)\":{\"details\":\"MUST emit when the URI is updated for a token ID. URIs are defined in RFC 3986. The URI MUST point a JSON file that conforms to the \\\"ERC-1155 Metadata URI JSON Schema\\\".\"}},\"kind\":\"dev\",\"methods\":{\"batchMintTo(address,uint256[],uint256[],string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   If `_tokenIds[i] == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                   `tokenIds[i] < nextTokenIdToMint`, then additional supply of an existing NFT is minted.                   The metadata for each new NFT is stored at `baseURI/{tokenID of NFT}`\",\"params\":{\"_amounts\":\"The amounts of each NFT to mint.\",\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_to\":\"The recipient of the NFT to mint.\",\"_tokenIds\":\"The tokenIds of the NFTs to mint.\"}},\"burn(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the NFT to burn.\",\"_owner\":\"The owner of the NFT to burn.\",\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"burnBatch(address,uint256[],uint256[])\":{\"params\":{\"_amounts\":\"The amounts of the NFTs to burn.\",\"_owner\":\"The owner of the NFTs to burn.\",\"_tokenIds\":\"The tokenIds of the NFTs to burn.\"}},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"mintTo(address,uint256,string,uint256)\":{\"details\":\"- The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   - If `_tokenId == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                     `tokenId < nextTokenIdToMint`, then additional supply of an existing NFT is being minted.\",\"params\":{\"_amount\":\"The amount of the same NFT to mint.\",\"_to\":\"The recipient of the NFTs to mint.\",\"_tokenId\":\"The tokenId of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFTs minted (if a new NFT is being minted).\"}},\"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"uri(uint256)\":{\"params\":{\"_tokenId\":\"The tokenId of the token for which a URI should be returned.\"},\"returns\":{\"_0\":\"The metadata URI for the given tokenId.\"}},\"verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"}},\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"batchMintTo(address,uint256[],uint256[],string)\":{\"notice\":\"Lets an authorized address mint multiple NEW NFTs at once to a recipient.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenId.\"},\"burnBatch(address,uint256[],uint256[])\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenIds.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"mintTo(address,uint256,string,uint256)\":{\"notice\":\"Lets an authorized address mint NFTs to a recipient.\"},\"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalSupply(uint256)\":{\"notice\":\"Returns the total supply of NFTs of a given tokenId\"},\"uri(uint256)\":{\"notice\":\"Returns the metadata URI for the given tokenId.\"}},\"notice\":\"BASE:      ERC1155Base      EXTENSION: SignatureMintERC1155  The `ERC1155SignatureMint` contract uses the `ERC1155Base` contract, along with the `SignatureMintERC1155` extension.  The 'signature minting' mechanism in the `SignatureMintERC1155` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC1155SignatureMint.sol\":\"ERC1155SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC1155Base.sol\":{\"keccak256\":\"0x6015c158a48a89af5cc29d93213adeae059b45dc5fd0a0b041a892c207c3445b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3ab08781943770b112a5e4240e338a8687e0f934f5a6bf8e8ab4f89892addabb\",\"dweb:/ipfs/QmP1dEVxwj8qxdiifdn5Y3LampceJiotoREXT9GNHy85Gb\"]},\"contracts/base/ERC1155SignatureMint.sol\":{\"keccak256\":\"0x3734074c8e76f161d04365007f9d0d9ce423931a4644e1babcd775793625f229\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eff17728b182a4b7bc0a727787ea7722b5da6368e1902d7889c40c68aa20b149\",\"dweb:/ipfs/QmZoFFWHrX6pRF7akqhXbWwnRWwc3jg2o7vE44WXrKsTuj\"]},\"contracts/eip/ERC1155.sol\":{\"keccak256\":\"0xbac4d98722f937b876908b0baf24ff2854e65da244412db4622064d87c63a752\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://66af1bbb9833ad15656d41faafaf835fb98dec1a87554b143a3bb0e0eabe2fb3\",\"dweb:/ipfs/QmQUSxBYCT5VDvx4V5b4DX8gZyGgqSC42TKwYcd6CBZ2jf\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5\",\"dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF\"]},\"contracts/eip/interface/IERC1155Metadata.sol\":{\"keccak256\":\"0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43\",\"dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8\",\"dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6\",\"dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365\",\"dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8\",\"dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95\",\"dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox\"]},\"contracts/extension/SignatureMintERC1155.sol\":{\"keccak256\":\"0x5dfd5afc6df3e1b10ac307dba466f845e143a9707cde943bf565c8a9ed3b39e1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9de5ddebb6c69ef529919807c2c3441bd4aa55edd60f040b2281921cac8bfe1a\",\"dweb:/ipfs/QmVup7rVqFCYrJLaaf95fbAn67jRb82kFF2cyZNXAorQwc\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e\",\"dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd\"]},\"contracts/extension/interface/ISignatureMintERC1155.sol\":{\"keccak256\":\"0x2309b3108a53119d28cb1791e1193c675ce8f5c9bb88229a93bfdb4551de55f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3aa2f4c0fb09cff11f069e7ed87c0e508d1a71c39c7e0aa46c3e8aba3558f0bf\",\"dweb:/ipfs/QmPSmXEmYwbTULym7TEEFFrfwJKfCAPiscQDSZ4HrQF73D\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb\",\"dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe\",\"dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006\",\"dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "_values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchMintTo(address,uint256[],uint256[],string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   If `_tokenIds[i] == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                   `tokenIds[i] < nextTokenIdToMint`, then additional supply of an existing NFT is minted.                   The metadata for each new NFT is stored at `baseURI/{tokenID of NFT}`",
            "params": {
              "_amounts": "The amounts of each NFT to mint.",
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_to": "The recipient of the NFT to mint.",
              "_tokenIds": "The tokenIds of the NFTs to mint."
            }
          },
          "burn(address,uint256,uint256)": {
            "params": {
              "_amount": "The amount of the NFT to burn.",
              "_owner": "The owner of the NFT to burn.",
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "burnBatch(address,uint256[],uint256[])": {
            "params": {
              "_amounts": "The amounts of the NFTs to burn.",
              "_owner": "The owner of the NFTs to burn.",
              "_tokenIds": "The tokenIds of the NFTs to burn."
            }
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "mintTo(address,uint256,string,uint256)": {
            "details": "- The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   - If `_tokenId == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                     `tokenId < nextTokenIdToMint`, then additional supply of an existing NFT is being minted.",
            "params": {
              "_amount": "The amount of the same NFT to mint.",
              "_to": "The recipient of the NFTs to mint.",
              "_tokenId": "The tokenId of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFTs minted (if a new NFT is being minted)."
            }
          },
          "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "uri(uint256)": {
            "params": {
              "_tokenId": "The tokenId of the token for which a URI should be returned."
            },
            "returns": {
              "_0": "The metadata URI for the given tokenId."
            }
          },
          "verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "Get the balance of an account's Tokens."
          },
          "batchMintTo(address,uint256[],uint256[],string)": {
            "notice": "Lets an authorized address mint multiple NEW NFTs at once to a recipient."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenId."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenIds."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Queries the approval status of an operator for a given owner."
          },
          "mintTo(address,uint256,string,uint256)": {
            "notice": "Lets an authorized address mint NFTs to a recipient."
          },
          "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalSupply(uint256)": {
            "notice": "Returns the total supply of NFTs of a given tokenId"
          },
          "uri(uint256)": {
            "notice": "Returns the metadata URI for the given tokenId."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "lib/sstore2/=lib/dynamic-contracts/lib/sstore2/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC1155SignatureMint.sol": "ERC1155SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC1155Base.sol": {
        "keccak256": "0x6015c158a48a89af5cc29d93213adeae059b45dc5fd0a0b041a892c207c3445b",
        "urls": [
          "bzz-raw://3ab08781943770b112a5e4240e338a8687e0f934f5a6bf8e8ab4f89892addabb",
          "dweb:/ipfs/QmP1dEVxwj8qxdiifdn5Y3LampceJiotoREXT9GNHy85Gb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC1155SignatureMint.sol": {
        "keccak256": "0x3734074c8e76f161d04365007f9d0d9ce423931a4644e1babcd775793625f229",
        "urls": [
          "bzz-raw://eff17728b182a4b7bc0a727787ea7722b5da6368e1902d7889c40c68aa20b149",
          "dweb:/ipfs/QmZoFFWHrX6pRF7akqhXbWwnRWwc3jg2o7vE44WXrKsTuj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC1155.sol": {
        "keccak256": "0xbac4d98722f937b876908b0baf24ff2854e65da244412db4622064d87c63a752",
        "urls": [
          "bzz-raw://66af1bbb9833ad15656d41faafaf835fb98dec1a87554b143a3bb0e0eabe2fb3",
          "dweb:/ipfs/QmQUSxBYCT5VDvx4V5b4DX8gZyGgqSC42TKwYcd6CBZ2jf"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x19b9bee642c1b8e21c412a90fd08784dad7f567651edbe72bebf70d16551a2f4",
        "urls": [
          "bzz-raw://9c3f49fddb363032b69842d35cfc2aa72c8a36f3db2bed1e9bad3fc486b96df5",
          "dweb:/ipfs/QmQ5tn1fboZBmXWDXRfBMGJqYS9FtaQC8NYHaCiJapaJLF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Metadata.sol": {
        "keccak256": "0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e",
        "urls": [
          "bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43",
          "dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x458d6ffd4d79153b9bfca794efa8169bbb942b47723153e6d2b0051e2cd9dcf1",
        "urls": [
          "bzz-raw://a08cdc1bfc92ed80fc6686fb51a018b896ee862ac9fa1a1599b3fa0198760ce8",
          "dweb:/ipfs/QmTxqXNnbht1GfzkTAKpQnpZdEADS9YXZdE8Cdr6cSJrNP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x6a1ea21755c29a9f74e21176486902eb943f2f3aaa465b351b0c1b7c5794f5aa",
        "urls": [
          "bzz-raw://08d1accd523ed037c07d097fa2121597b00f02f0a0a5a5669a24a0924e4c01f6",
          "dweb:/ipfs/Qmem3H95uDQuACtgLC14PRWezwmvrwdjBKB4iY7Kz9LGiT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345",
        "urls": [
          "bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365",
          "dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x18c6ef2ca61c26a6885529abf17cbb668fa8cbc21d49337dfb778b9431fc58eb",
        "urls": [
          "bzz-raw://46beec7099679394ef4e35541056cc3049570f26fb7c30ac1811096ad4a7dab8",
          "dweb:/ipfs/QmTdLQbxxvVpdJk8bgAjATKP9tW1qvSwzmdsyXv3EBZiEE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0x7a457b73e71b0b4480755114393b08378dc882c81fda918273d9b71213d92501",
        "urls": [
          "bzz-raw://4853b4dc9ce8de80377c578e8a71e31f15c5d2b3def58b271f95fa87b613ef95",
          "dweb:/ipfs/QmPuuq7PLqLRWV4hNbN9dMqT2sGowyXZr6FPyBLGJ6Zhox"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC1155.sol": {
        "keccak256": "0x5dfd5afc6df3e1b10ac307dba466f845e143a9707cde943bf565c8a9ed3b39e1",
        "urls": [
          "bzz-raw://9de5ddebb6c69ef529919807c2c3441bd4aa55edd60f040b2281921cac8bfe1a",
          "dweb:/ipfs/QmVup7rVqFCYrJLaaf95fbAn67jRb82kFF2cyZNXAorQwc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x06f66ba14674e2396219fb361486d43e6059933114a54c26b6e01dc3bf794f0d",
        "urls": [
          "bzz-raw://ad01c637bda34a7c8e75d9e0b7412f5817bfc547754eb49e990406294de9531e",
          "dweb:/ipfs/QmRBqte5ir3T9Rew3YXn5v6otp7LMq48H4MxRhuQ4nyqqd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC1155.sol": {
        "keccak256": "0x2309b3108a53119d28cb1791e1193c675ce8f5c9bb88229a93bfdb4551de55f8",
        "urls": [
          "bzz-raw://3aa2f4c0fb09cff11f069e7ed87c0e508d1a71c39c7e0aa46c3e8aba3558f0bf",
          "dweb:/ipfs/QmPSmXEmYwbTULym7TEEFFrfwJKfCAPiscQDSZ4HrQF73D"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xda67ad8d28cb66bbef1831a14d3506e3d0ac8c8446990a63474f4e56037f1a58",
        "urls": [
          "bzz-raw://cda94d0193ca3e3cf4ac4d561c0c668dffc3e9b2c55c5454e9b03a12fd7141fb",
          "dweb:/ipfs/Qmbaw5cPuCmqE7hy8CpM3ibFC77TMWnH4jGDcWduvdNZaA"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b",
        "urls": [
          "bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe",
          "dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x98c7ce207342926b3145a95c1f0781dec816ac831fc35256dd2a8787b8f161ac",
        "urls": [
          "bzz-raw://0b42e9253d38d4051a817dd3387c388daea5e99e378a7e0f07fbe98d2bf4e006",
          "dweb:/ipfs/QmQ1ZHDwYrAMtYe39HeCFSZbuvDAsVJAEozUCk3xSWLHZ1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC1155SignatureMint.sol",
    "id": 2286,
    "exportedSymbols": {
      "Address": [
        64760
      ],
      "BatchMintMetadata": [
        17840
      ],
      "ContractMetadata": [
        18093
      ],
      "CurrencyTransferLib": [
        65175
      ],
      "ECDSA": [
        50541
      ],
      "EIP712": [
        50695
      ],
      "ERC1155": [
        7899
      ],
      "ERC1155Base": [
        603
      ],
      "ERC1155SignatureMint": [
        2285
      ],
      "IContractMetadata": [
        33084
      ],
      "IERC165": [
        13945
      ],
      "IERC2981": [
        14089
      ],
      "IMulticall": [
        33577
      ],
      "IOwnable": [
        33834
      ],
      "IPrimarySale": [
        33997
      ],
      "IRoyalty": [
        34061
      ],
      "ISignatureMintERC1155": [
        34441
      ],
      "Multicall": [
        21206
      ],
      "Ownable": [
        21764
      ],
      "PrimarySale": [
        22703
      ],
      "Royalty": [
        23031
      ],
      "SignatureMintERC1155": [
        23717
      ],
      "Strings": [
        66084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4795:4",
    "nodes": [
      {
        "id": 1999,
        "nodeType": "PragmaDirective",
        "src": "39:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2000,
        "nodeType": "ImportDirective",
        "src": "86:27:4",
        "nodes": [],
        "absolutePath": "contracts/base/ERC1155Base.sol",
        "file": "./ERC1155Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2286,
        "sourceUnit": 604,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2001,
        "nodeType": "ImportDirective",
        "src": "115:38:4",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2286,
        "sourceUnit": 22704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2002,
        "nodeType": "ImportDirective",
        "src": "154:47:4",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC1155.sol",
        "file": "../extension/SignatureMintERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2286,
        "sourceUnit": 23718,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2004,
        "nodeType": "ImportDirective",
        "src": "203:69:4",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2286,
        "sourceUnit": 65176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2003,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65175,
              "src": "212:19:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2285,
        "nodeType": "ContractDefinition",
        "src": "867:3966:4",
        "nodes": [
          {
            "id": 2038,
            "nodeType": "FunctionDefinition",
            "src": "1132:353:4",
            "nodes": [],
            "body": {
              "id": 2037,
              "nodeType": "Block",
              "src": "1419:66:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2034,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "1456:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2033,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22696,
                      "src": "1429:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2036,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:49:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2026,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2013,
                    "src": "1356:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2027,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2015,
                    "src": "1371:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2028,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2017,
                    "src": "1378:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2029,
                    "name": "_royaltyRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2019,
                    "src": "1387:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2030,
                    "name": "_royaltyBps",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2021,
                    "src": "1406:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  }
                ],
                "id": 2031,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2025,
                  "name": "ERC1155Base",
                  "nameLocations": [
                    "1344:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 603,
                  "src": "1344:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1344:74:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1161:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "1153:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1198:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "1184:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1227:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "1213:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1252:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "1244:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1287:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "1279:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1316:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "1308:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1143:200:4"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1419:0:4"
            },
            "scope": 2285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2170,
            "nodeType": "FunctionDefinition",
            "src": "1923:1328:4",
            "nodes": [],
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "2085:1166:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2051,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2042,
                            "src": "2103:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                              "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                            }
                          },
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2108:8:4",
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34393,
                          "src": "2103:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2119:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2103:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2122:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 2050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2095:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:50:4"
                },
                {
                  "assignments": [
                    2059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2059,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "2164:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2169,
                      "src": "2156:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2156:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2060,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2156:21:4"
                },
                {
                  "assignments": [
                    2062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2062,
                      "mutability": "mutable",
                      "name": "nextIdToMint",
                      "nameLocation": "2195:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2169,
                      "src": "2187:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2061,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2187:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2065,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2063,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "2210:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2187:42:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2066,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2042,
                        "src": "2244:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 2067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2249:7:4",
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34389,
                      "src": "2244:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2265:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2069,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2265:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 2068,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2260:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2260:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2274:3:4",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2260:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2244:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2096,
                    "nodeType": "Block",
                    "src": "2375:117:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2084,
                                  "name": "_req",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2042,
                                  "src": "2397:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                                    "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                  }
                                },
                                "id": 2085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2402:7:4",
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34389,
                                "src": "2397:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2086,
                                "name": "nextIdToMint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2062,
                                "src": "2412:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2397:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964206964",
                              "id": 2088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2426:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                                "typeString": "literal_string \"invalid id\""
                              },
                              "value": "invalid id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                                "typeString": "literal_string \"invalid id\""
                              }
                            ],
                            "id": 2083,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2389:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2389:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2090,
                        "nodeType": "ExpressionStatement",
                        "src": "2389:50:4"
                      },
                      {
                        "expression": {
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2091,
                            "name": "tokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2059,
                            "src": "2453:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2092,
                              "name": "_req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "2469:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                                "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                              }
                            },
                            "id": 2093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2474:7:4",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34389,
                            "src": "2469:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2453:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2095,
                        "nodeType": "ExpressionStatement",
                        "src": "2453:28:4"
                      }
                    ]
                  },
                  "id": 2097,
                  "nodeType": "IfStatement",
                  "src": "2240:252:4",
                  "trueBody": {
                    "id": 2082,
                    "nodeType": "Block",
                    "src": "2279:90:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2074,
                            "name": "tokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2059,
                            "src": "2293:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2075,
                            "name": "nextIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "2309:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2293:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2077,
                        "nodeType": "ExpressionStatement",
                        "src": "2293:28:4"
                      },
                      {
                        "expression": {
                          "id": 2080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2078,
                            "name": "nextTokenIdToMint_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "2335:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2357:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2335:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2081,
                        "nodeType": "ExpressionStatement",
                        "src": "2335:23:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2098,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "2541:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2100,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "2566:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        {
                          "id": 2101,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2044,
                          "src": "2572:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 2099,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23642,
                        "src": "2550:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$34404_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC1155.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 2102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2550:33:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2541:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2104,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:42:4"
                },
                {
                  "assignments": [
                    2106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2106,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2602:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2169,
                      "src": "2594:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2594:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2109,
                  "initialValue": {
                    "expression": {
                      "id": 2107,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2042,
                      "src": "2613:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                        "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2618:2:4",
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34381,
                    "src": "2613:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2594:26:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2111,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "2677:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2682:20:4",
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34387,
                        "src": "2677:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2113,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "2704:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2709:8:4",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34393,
                        "src": "2704:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2115,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "2719:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2724:8:4",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34397,
                        "src": "2719:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2117,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "2734:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2739:13:4",
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34395,
                        "src": "2734:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2110,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "2656:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2656:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:97:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2121,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2042,
                        "src": "2809:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2814:16:4",
                      "memberName": "royaltyRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34383,
                      "src": "2809:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2842:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2834:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2834:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2834:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2809:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2137,
                  "nodeType": "IfStatement",
                  "src": "2805:146:4",
                  "trueBody": {
                    "id": 2136,
                    "nodeType": "Block",
                    "src": "2846:105:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2129,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2059,
                              "src": "2886:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2130,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "2901:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 2131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2906:16:4",
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34383,
                              "src": "2901:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2132,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "2924:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 2133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2929:10:4",
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34385,
                              "src": "2924:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2128,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23024,
                            "src": "2860:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 2134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2860:80:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2135,
                        "nodeType": "ExpressionStatement",
                        "src": "2860:80:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2138,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2042,
                        "src": "2984:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 2139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2989:7:4",
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34389,
                      "src": "2984:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3005:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2141,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3005:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 2140,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "3000:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3000:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3014:3:4",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "3000:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2984:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2153,
                  "nodeType": "IfStatement",
                  "src": "2980:101:4",
                  "trueBody": {
                    "id": 2152,
                    "nodeType": "Block",
                    "src": "3019:62:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2147,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2059,
                              "src": "3046:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2148,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "3061:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 2149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3066:3:4",
                              "memberName": "uri",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34391,
                              "src": "3061:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 2146,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7360,
                            "src": "3033:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3033:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2151,
                        "nodeType": "ExpressionStatement",
                        "src": "3033:37:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2155,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "3121:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2156,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "3131:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2157,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "3146:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3151:8:4",
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34393,
                        "src": "3146:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3161:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2154,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7434,
                      "src": "3115:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2161,
                  "nodeType": "ExpressionStatement",
                  "src": "3115:49:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2163,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "3206:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2164,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "3214:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2165,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "3224:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2166,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2042,
                        "src": "3239:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      ],
                      "id": 2162,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34416,
                      "src": "3180:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$34404_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC1155.MintRequest memory)"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3180:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2168,
                  "nodeType": "EmitStatement",
                  "src": "3175:69:4"
                }
              ]
            },
            "baseFunctions": [
              34440
            ],
            "documentation": {
              "id": 2039,
              "nodeType": "StructuredDocumentation",
              "src": "1678:240:4",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "98a6e993",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1932:17:4",
            "overrides": {
              "id": 2046,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2051:8:4"
            },
            "parameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1980:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1959:25:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$34404_calldata_ptr",
                    "typeString": "struct ISignatureMintERC1155.MintRequest"
                  },
                  "typeName": {
                    "id": 2041,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2040,
                      "name": "MintRequest",
                      "nameLocations": [
                        "1959:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34404,
                      "src": "1959:11:4"
                    },
                    "referencedDeclaration": 34404,
                    "src": "1959:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$34404_storage_ptr",
                      "typeString": "struct ISignatureMintERC1155.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2009:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1994:25:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1949:76:4"
            },
            "returnParameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2077:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "2069:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2068:16:4"
            },
            "scope": 2285,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2185,
            "nodeType": "FunctionDefinition",
            "src": "3525:134:4",
            "nodes": [],
            "body": {
              "id": 2184,
              "nodeType": "Block",
              "src": "3617:42:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2179,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2173,
                      "src": "3634:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2180,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3645:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3645:7:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3634:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2178,
                  "id": 2183,
                  "nodeType": "Return",
                  "src": "3627:25:4"
                }
              ]
            },
            "baseFunctions": [
              23572
            ],
            "documentation": {
              "id": 2171,
              "nodeType": "StructuredDocumentation",
              "src": "3443:77:4",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3534:19:4",
            "overrides": {
              "id": 2175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3593:8:4"
            },
            "parameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3562:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "3554:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3553:17:4"
            },
            "returnParameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "3611:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3611:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3610:6:4"
            },
            "scope": 2285,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2199,
            "nodeType": "FunctionDefinition",
            "src": "3760:130:4",
            "nodes": [],
            "body": {
              "id": 2198,
              "nodeType": "Block",
              "src": "3845:45:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2192,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3862:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3866:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3862:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2194,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21716,
                        "src": "3876:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3876:7:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3862:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2191,
                  "id": 2197,
                  "nodeType": "Return",
                  "src": "3855:28:4"
                }
              ]
            },
            "baseFunctions": [
              22702
            ],
            "documentation": {
              "id": 2186,
              "nodeType": "StructuredDocumentation",
              "src": "3665:90:4",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3769:27:4",
            "overrides": {
              "id": 2188,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3821:8:4"
            },
            "parameters": {
              "id": 2187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3796:2:4"
            },
            "returnParameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2199,
                  "src": "3839:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3839:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3838:6:4"
            },
            "scope": 2285,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2284,
            "nodeType": "FunctionDefinition",
            "src": "3980:851:4",
            "nodes": [],
            "body": {
              "id": 2283,
              "nodeType": "Block",
              "src": "4165:666:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2211,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "4179:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4197:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4179:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2224,
                  "nodeType": "IfStatement",
                  "src": "4175:103:4",
                  "trueBody": {
                    "id": 2223,
                    "nodeType": "Block",
                    "src": "4200:78:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2215,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4222:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4226:5:4",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "4222:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4235:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4222:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 2219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4238:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 2214,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4214:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4214:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2221,
                        "nodeType": "ExpressionStatement",
                        "src": "4214:33:4"
                      },
                      {
                        "functionReturnParameters": 2210,
                        "id": 2222,
                        "nodeType": "Return",
                        "src": "4261:7:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2226,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "4296:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "4288:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4288:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2230,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2227,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "4309:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2228,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "4328:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4309:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4288:54:4"
                },
                {
                  "assignments": [
                    2232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2232,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "4358:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "4353:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2231,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4353:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2233,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4353:18:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2234,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "4385:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2235,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4398:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 2236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4418:12:4",
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64943,
                      "src": "4398:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4385:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2253,
                    "nodeType": "Block",
                    "src": "4502:55:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2246,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "4516:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2247,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4532:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4536:5:4",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4532:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4545:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4532:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4516:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "4516:30:4"
                      }
                    ]
                  },
                  "id": 2254,
                  "nodeType": "IfStatement",
                  "src": "4381:176:4",
                  "trueBody": {
                    "id": 2245,
                    "nodeType": "Block",
                    "src": "4432:64:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2238,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "4446:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2239,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4462:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4466:5:4",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4462:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2241,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2226,
                              "src": "4475:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4462:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4446:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2244,
                        "nodeType": "ExpressionStatement",
                        "src": "4446:39:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2256,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "4574:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 2255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4566:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:43:4"
                },
                {
                  "assignments": [
                    2261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2261,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "4628:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2283,
                      "src": "4620:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2260,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4620:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2272,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2262,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2202,
                        "src": "4644:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4677:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4669:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4669:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4669:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4644:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2270,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "4707:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4644:84:4",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2268,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22648,
                        "src": "4682:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4682:22:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4620:108:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2276,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2206,
                        "src": "4775:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4786:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4790:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4786:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2279,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "4798:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2280,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "4813:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2273,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65175,
                        "src": "4738:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$65175_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 2275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4758:16:4",
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64980,
                      "src": "4738:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:86:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:86:4"
                }
              ]
            },
            "documentation": {
              "id": 2200,
              "nodeType": "StructuredDocumentation",
              "src": "3896:79:4",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3989:20:4",
            "parameters": {
              "id": 2209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2202,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "4027:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "4019:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "4066:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "4058:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4058:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2206,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4100:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "4092:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4092:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "4127:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2284,
                  "src": "4119:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4009:138:4"
            },
            "returnParameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:4"
            },
            "scope": 2285,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2006,
              "name": "ERC1155Base",
              "nameLocations": [
                "900:11:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 603,
              "src": "900:11:4"
            },
            "id": 2007,
            "nodeType": "InheritanceSpecifier",
            "src": "900:11:4"
          },
          {
            "baseName": {
              "id": 2008,
              "name": "PrimarySale",
              "nameLocations": [
                "913:11:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22703,
              "src": "913:11:4"
            },
            "id": 2009,
            "nodeType": "InheritanceSpecifier",
            "src": "913:11:4"
          },
          {
            "baseName": {
              "id": 2010,
              "name": "SignatureMintERC1155",
              "nameLocations": [
                "926:20:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23717,
              "src": "926:20:4"
            },
            "id": 2011,
            "nodeType": "InheritanceSpecifier",
            "src": "926:20:4"
          }
        ],
        "canonicalName": "ERC1155SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2005,
          "nodeType": "StructuredDocumentation",
          "src": "274:591:4",
          "text": "      BASE:      ERC1155Base\n      EXTENSION: SignatureMintERC1155\n  The `ERC1155SignatureMint` contract uses the `ERC1155Base` contract, along with the `SignatureMintERC1155` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC1155` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2285,
          23717,
          34441,
          50695,
          22703,
          33997,
          603,
          17840,
          21206,
          33577,
          23031,
          34061,
          14089,
          13945,
          21764,
          33834,
          18093,
          33084,
          7899,
          13880,
          13858
        ],
        "name": "ERC1155SignatureMint",
        "nameLocation": "876:20:4",
        "scope": 2286,
        "usedErrors": [],
        "usedEvents": [
          13755,
          13770,
          13779,
          13786,
          17530,
          17537,
          33083,
          33833,
          33996,
          34051,
          34060,
          34416
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 4
}